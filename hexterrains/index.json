{
  "DataLayers.html": {
    "href": "DataLayers.html",
    "title": "| Hex Terrains",
    "summary": "Hex Terrains Framework - Instruction Part 1: Understanding Data Layers and Terrain Layers What Are Data Layers? A data layer is the foundational structure of the Hex Terrains framework. It represents a grid of values mapped to the terrain's hexagonal cells. Each data layer handles a specific type of data (e.g., height, biome index, cell item, or color) and is designed to be efficient, modular, and job-safe for use in Unity's ECS and Burst system. Data layers provide: Efficient memory layout using native collections Dirty chunk tracking for minimal updates Job-safe API to safely read and write data in parallel Support for multiple terrain surfaces (e.g., ground, water) Reading and Writing Data To use data layers safely within Unity Jobs, the API provides a standardized mechanism to manage read/write access: JobHandle readHandle = dataLayer.PrepareToRead(); JobHandle writeHandle = dataLayer.PrepareToWrite(); These functions return job handles representing the current state of the data. Jobs that read or write the data should be scheduled with these handles as dependencies. Once a job is scheduled, its handle must be registered with the data layer: dataLayer.AddReadDependency(jobHandle); dataLayer.AddWriteDependency(jobHandle); This ensures that other jobs respect the read/write timing and Unity's job safety rules are upheld. If you need to synchronously access data, use: dataLayer.OpenToRead(); dataLayer.OpenToWrite(); These calls complete all outstanding dependencies, allowing immediate access to data. What Are Terrain Layers? A terrain layer is a higher-level structure that contains multiple data layers for a single surface type (e.g., ground or water). For example: Ground Surface might include: HeightMapDataLayer BiomeMapDataLayer CellMetricsDataLayer Each terrain layer encapsulates the logic and access patterns for its component data layers. The terrain entity contains references to these terrain layers, and systems iterate over them to perform updates, rendering, or logic. System Workflow Example A typical system that processes a data layer: Prepare to read/write from the data layer: var readHandle = heightMap.PrepareToRead(); Schedule a job that uses the data: var job = new RecalculateCellMetricsJob { HeightMap = heightMap.Data, Metrics = cellMetrics.Data }; JobHandle handle = job.Schedule(readHandle); Register job handle: heightMap.AddReadDependency(handle); cellMetrics.AddWriteDependency(handle); Or complete before accessing directly: heightMap.OpenToRead(); float height = heightMap.GetValue(cellIndex); Chunk Dirty Grids and Merging Some data layers — particularly those derived from ChunkedDataLayer — split the terrain into chunks (a fixed-size region of cells, e.g., 16×16). These layers use a ChunkDirtyGrid to efficiently track which parts of the terrain have changed. Each boolean in the grid corresponds to a terrain chunk, and a value of true means that chunk is \"dirty\" (i.e., it must be updated). This mechanism allows systems to process only the affected chunks, avoiding redundant computation and significantly boosting performance on large terrains. The base class ChunkedDataLayer provides: ChunkSize: the dimensions (in cells) of each chunk CellsGridSize: the total dimensions of the terrain in cells SetCellDirty(index): marks the chunk containing the specified cell as dirty SetAllChunksDirty(): marks all chunks as dirty ChunkDirtyGrid: an internal bool array tracking dirty state per chunk Merging Dirty Grids from Dependencies In some cases, a data layer depends on multiple other data layers. For instance, cell metrics might need to be recalculated if either biomes or heightmap changes. In such situations, dirty chunk states from multiple data layers need to be merged. To handle this, ChunkedDataLayer includes several overloads of: MergeChunkDirtyGrids(sourceDirty1, sourceDirty2, ...); These functions return a job handle for job that merges chunks dirty grids. This job marks a chunk as dirty if any of the source grids had that chunk marked as dirty. This enables dependent layers to react precisely to changes in their inputs, ensuring minimal processing while preserving correctness. Example: Conditional Recalculation var mergeDirtyChunksHandle = ChunkedDataLayer.MergeChunkDirtyGrids( heightMap.ChunkDirtyGrid, biomeMap.ChunkDirtyGrid, combined_write_dependency_for_all_affected_layers); // complete the jobs that work with chunks mergeDirtyChunksHandle.Complete(); foreach (var chunkIndex in terrain.AllChunks) { if (!mergedDirtyGrid[chunkIndex]) continue; // Schedule job to recalculate metrics for this chunk } This pattern avoids unnecessary updates, enabling a highly data-oriented and performance-scalable design. This architecture ensures a reactive, modular, and scalable update cycle that plays well with DOTS and allows systems to operate in parallel safely. Next section: Creating and Extending Data Layers, Using Terrain Layers in Your Project."
  },
  "GettingStarted.html": {
    "href": "GettingStarted.html",
    "title": "Getting Started | Hex Terrains",
    "summary": "Getting Started Install package from asset store. Open Package Manager window (Window -> Package Manager) Select the Fwt.HexTerrains package In right section of the window find tabs \"Description\", \"Version History\", \"Dependencies\", \"Samples\". Select \"Samples\" Import HexTerrains Demo core sample Additionally import one of two following samples depending on your render pipeline: \"HexTerrains Demo URP assets\" or \"HexTerrains Demo HDRP assets\" After sample projects are imported into your project, navigate to folder \"Assets/Samples/HexTerrains/HexTerrains_URP\" or \"Assets/Samples/HexTerrains/HexTerrains_HDRP\" depending on your render pipeline. From there navigate to \"Scenes\" folder and open Showcase scene Press \"Play\" button Enjoy"
  },
  "Packages/Fwt.Core.Ecs/README.html": {
    "href": "Packages/Fwt.Core.Ecs/README.html",
    "title": "Introduction | Hex Terrains",
    "summary": "Introduction TODO: Give a short introduction of your project. Let this section explain the objectives or the motivation behind this project. Getting Started TODO: Guide users through getting your code up and running on their own system. In this section you can talk about: Installation process Software dependencies Latest releases API references Build and Test TODO: Describe and show how to build your code and run the tests. Contribute TODO: Explain how other users and developers can contribute to make your code better. If you want to learn more about creating good readme files then refer the following guidelines. You can also seek inspiration from the below readme files: ASP.NET Core Visual Studio Code Chakra Core"
  },
  "Packages/Fwt.Core/README.html": {
    "href": "Packages/Fwt.Core/README.html",
    "title": "Introduction | Hex Terrains",
    "summary": "Introduction TODO: Give a short introduction of your project. Let this section explain the objectives or the motivation behind this project. Getting Started TODO: Guide users through getting your code up and running on their own system. In this section you can talk about: Installation process Software dependencies Latest releases API references Build and Test TODO: Describe and show how to build your code and run the tests. Contribute TODO: Explain how other users and developers can contribute to make your code better. If you want to learn more about creating good readme files then refer the following guidelines. You can also seek inspiration from the below readme files: ASP.NET Core Visual Studio Code Chakra Core"
  },
  "Packages/Fwt.HexTerrains/README.html": {
    "href": "Packages/Fwt.HexTerrains/README.html",
    "title": "Introduction | Hex Terrains",
    "summary": "Introduction Fast and flexible Hexagonal Terrains framework for Unity3d (DOTS). Getting Started Install package from asset store. Open Package Manager window (Window -> Package Manager) Select the Fwt.HexTerrains package In right section of the window find tabs \"Description\", \"Version History\", \"Dependencies\", \"Samples\". Select \"Samples\" Import HexTerrains Demo core sample Additionally import one of two following samples depending on your render pipeline: \"HexTerrains Demo URP assets\" or \"HexTerrains Demo HDRP assets\" After sample projects are imported into your project, navigate to folder \"Assets/Samples/HexTerrains/HexTerrains_URP\" or \"Assets/Samples/HexTerrains/HexTerrains_HDRP\" depending on your render pipeline. From there navigate to \"Scenes\" folder and open Showcase scene Press \"Play\" button Enjoy Build and Test TODO: Describe and show how to build your code and run the tests. Contribute TODO: Explain how other users and developers can contribute to make your code better."
  },
  "Packages/Fwt.UIToolkit/README.html": {
    "href": "Packages/Fwt.UIToolkit/README.html",
    "title": "Introduction | Hex Terrains",
    "summary": "Introduction TODO: Give a short introduction of your project. Let this section explain the objectives or the motivation behind this project. Getting Started TODO: Guide users through getting your code up and running on their own system. In this section you can talk about: Installation process Software dependencies Latest releases API references Build and Test TODO: Describe and show how to build your code and run the tests. Contribute TODO: Explain how other users and developers can contribute to make your code better. If you want to learn more about creating good readme files then refer the following guidelines. You can also seek inspiration from the below readme files: ASP.NET Core Visual Studio Code Chakra Core"
  },
  "README.html": {
    "href": "README.html",
    "title": "Introduction | Hex Terrains",
    "summary": "Introduction Fast and flexible Hexagonal Terrains framework for Unity3d (DOTS). Getting Started Install package from asset store. Open Package Manager window (Window -> Package Manager) Select the Fwt.HexTerrains package In right section of the window find tabs \"Description\", \"Version History\", \"Dependencies\", \"Samples\". Select \"Samples\" Import HexTerrains Demo core sample Additionally import one of two following samples depending on your render pipeline: \"HexTerrains Demo URP assets\" or \"HexTerrains Demo HDRP assets\" After sample projects are imported into your project, navigate to folder \"Assets/Samples/HexTerrains/HexTerrains_URP\" or \"Assets/Samples/HexTerrains/HexTerrains_HDRP\" depending on your render pipeline. From there navigate to \"Scenes\" folder and open Showcase scene Press \"Play\" button Enjoy"
  },
  "TerrainLayers.html": {
    "href": "TerrainLayers.html",
    "title": "| Hex Terrains",
    "summary": "Hex Terrains Framework - Instruction Part 2: Main Terrain Layers Overview Introduction The Hex Terrains framework organizes its logic and simulation data into terrain layers. Each terrain layer is composed of one or more data layers that store and manage information about the terrain, such as elevation, biome types, or cell-specific content like props and buildings. These layers are modular, job-friendly, and optimized for performance in Unity DOTS. Below is an overview of the most important terrain layer types and their key responsibilities. 1. HexSurfaceData Represents a surface such as ground or water. Includes the following data layers: HeightMapDataLayer: byte per cell for height BiomeMapDataLayer: byte per cell for biome index CellMetricsMap: per-cell struct with spatial and environmental metadata ColorMap: color per cell used for visualization Features: Associated with a HexSurfaceRenderData that stores mesh and mesh source data for each terrain chunk. Contains a biome color palette, a NativeArray<Color32>, used to translate biome indices into displayable colors for minimaps and materials. Colors are rendered into a texture via the color map, making this layer critical for both visualization and simulation. 2. HexAreaData Used to represent conceptual groupings like countries or provinces. Includes the following data layers: AreaDataLayer: byte per cell storing area index ColorMap: visual representation of area boundaries Features: Includes a color palette (byte index -> Color32) to paint regions. Supports multiple view modes, allowing toggling between different abstract overlays like political zones or administrative regions. Implements dirty flags per chunk to ensure only changed areas are updated. 3. CellItemsData Used to represent lightweight visual cell objects like forests, props, or decorations. Includes the following data layers: CellItemDataLayer: struct with Index and State per cell ItemsColorMap: per-cell color for rendering and minimap CellTransforms: used for position and orientation on terrain Features: A palette of CellItemConfig is used to define render settings per index/state. Rendering is handled using RenderEntitiesConfig via Graphics.DrawMeshInstanced, making this extremely performant. Internal MultiHashMap manages batched render calls per unique configuration. 4. CellEntitiesData Used to represent entity-based cell contents such as buildings or units. Includes the following data layers: CellEntityDataLayer: index/state pair per cell CellEntityViews: actual entities instantiated in the scene EntitiesColorMap: per-cell color used for visualization CellTransforms: used to track terrain-relative position Features: Uses a palette of HexCellEntityConfig that maps each index/state pair to a prefab. On update, entities are created/destroyed to match the cell data. View transforms are kept in sync with terrain height. High-performance usage of EntityCommandBuffer and JobHandle to manage entity lifecycle. 5. ChunksGridData Special terrain layer that tracks data per chunk (not per cell). Includes the following data layers: ChunkVisibilityDataLayer: tracks if and where a chunk is visible (e.g., via looping camera) ChunkMetricsDataLayer: holds calculated spatial metrics for each chunk Features: Visibility is used to filter calculations across all other terrain layers. Supports wrap-around logic for cylindrical terrain navigation (e.g., Civ-style map looping). Key part of the chunking system that drives partial updates and rendering culling. 6. HexSurfaceRenderData Stores rendering structures for a HexSurfaceData. Includes: HexMeshDataLayer: one mesh per chunk HexMeshSourceDataLayer: job-friendly mesh source (vertices, triangles, UVs) Features: Built entirely in jobs. Source data is filled in parallel jobs, then uploaded to Unity Meshes for rendering. Each surface (e.g., water and ground) has its own render data. Merging Chunk Dirty Flags Some data layers track dirty flags per chunk using an internal grid. This is especially true for all chunked layers like ChunkedDataLayer and its descendants. To optimize job execution: Only dirty chunks are processed. MergeChunkDirtyGrids() merges dirty flags from dependencies. The result allows a dependent layer to update only where source layers have changed. This mechanism ensures that the cost of processing is proportional to actual changes, leading to efficient and scalable terrain updates. Summary Each terrain layer in the Hex Terrains framework is designed with modularity, performance, and flexibility in mind. Whether you are rendering a visual mesh, instantiating dynamic entities, or calculating simulation metrics, the layered architecture ensures that each concern is handled cleanly and efficiently. These layers integrate tightly with the ECS job system, allowing massive terrains to be updated and rendered with minimal CPU/GPU cost. Next section: Working with User Tools, View Modes, and UI Integration."
  },
  "api/Fwt.Core.BinaryReaderExtensions.html": {
    "href": "api/Fwt.Core.BinaryReaderExtensions.html",
    "title": "Class BinaryReaderExtensions | Hex Terrains",
    "summary": "Class BinaryReaderExtensions Inheritance object BinaryReaderExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.Core Assembly: fwt.core.dll Syntax public static class BinaryReaderExtensions Methods ReadBool2(BinaryReader) Declaration public static bool2 ReadBool2(this BinaryReader reader) Parameters Type Name Description BinaryReader reader Returns Type Description bool2 ReadBool3(BinaryReader) Declaration public static bool3 ReadBool3(this BinaryReader reader) Parameters Type Name Description BinaryReader reader Returns Type Description bool3 ReadBool4(BinaryReader) Declaration public static bool4 ReadBool4(this BinaryReader reader) Parameters Type Name Description BinaryReader reader Returns Type Description bool4 ReadFloat2(BinaryReader) Declaration public static float2 ReadFloat2(this BinaryReader reader) Parameters Type Name Description BinaryReader reader Returns Type Description float2 ReadFloat3(BinaryReader) Declaration public static float3 ReadFloat3(this BinaryReader reader) Parameters Type Name Description BinaryReader reader Returns Type Description float3 ReadFloat4(BinaryReader) Declaration public static float4 ReadFloat4(this BinaryReader reader) Parameters Type Name Description BinaryReader reader Returns Type Description float4 ReadInt2(BinaryReader) Declaration public static int2 ReadInt2(this BinaryReader reader) Parameters Type Name Description BinaryReader reader Returns Type Description int2 ReadInt3(BinaryReader) Declaration public static int3 ReadInt3(this BinaryReader reader) Parameters Type Name Description BinaryReader reader Returns Type Description int3 ReadInt4(BinaryReader) Declaration public static int4 ReadInt4(this BinaryReader reader) Parameters Type Name Description BinaryReader reader Returns Type Description int4 ReadToNativeList(BinaryReader, NativeList<bool>) Declaration public static bool ReadToNativeList(this BinaryReader reader, NativeList<bool> list) Parameters Type Name Description BinaryReader reader NativeList<bool> list Returns Type Description bool ReadToNativeList(BinaryReader, NativeList<byte>) Declaration public static bool ReadToNativeList(this BinaryReader reader, NativeList<byte> list) Parameters Type Name Description BinaryReader reader NativeList<byte> list Returns Type Description bool ReadToNativeList(BinaryReader, NativeList<decimal>) Declaration public static bool ReadToNativeList(this BinaryReader reader, NativeList<decimal> list) Parameters Type Name Description BinaryReader reader NativeList<decimal> list Returns Type Description bool ReadToNativeList(BinaryReader, NativeList<double>) Declaration public static bool ReadToNativeList(this BinaryReader reader, NativeList<double> list) Parameters Type Name Description BinaryReader reader NativeList<double> list Returns Type Description bool ReadToNativeList(BinaryReader, NativeList<short>) Declaration public static bool ReadToNativeList(this BinaryReader reader, NativeList<short> list) Parameters Type Name Description BinaryReader reader NativeList<short> list Returns Type Description bool ReadToNativeList(BinaryReader, NativeList<int>) Declaration public static bool ReadToNativeList(this BinaryReader reader, NativeList<int> list) Parameters Type Name Description BinaryReader reader NativeList<int> list Returns Type Description bool ReadToNativeList(BinaryReader, NativeList<long>) Declaration public static bool ReadToNativeList(this BinaryReader reader, NativeList<long> list) Parameters Type Name Description BinaryReader reader NativeList<long> list Returns Type Description bool ReadToNativeList(BinaryReader, NativeList<float>) Declaration public static bool ReadToNativeList(this BinaryReader reader, NativeList<float> list) Parameters Type Name Description BinaryReader reader NativeList<float> list Returns Type Description bool ReadToNativeList(BinaryReader, NativeList<ushort>) Declaration public static bool ReadToNativeList(this BinaryReader reader, NativeList<ushort> list) Parameters Type Name Description BinaryReader reader NativeList<ushort> list Returns Type Description bool ReadToNativeList(BinaryReader, NativeList<uint>) Declaration public static bool ReadToNativeList(this BinaryReader reader, NativeList<uint> list) Parameters Type Name Description BinaryReader reader NativeList<uint> list Returns Type Description bool ReadToNativeList(BinaryReader, NativeList<ulong>) Declaration public static bool ReadToNativeList(this BinaryReader reader, NativeList<ulong> list) Parameters Type Name Description BinaryReader reader NativeList<ulong> list Returns Type Description bool ReadToNativeList(BinaryReader, NativeList<bool2>) Declaration public static bool ReadToNativeList(this BinaryReader reader, NativeList<bool2> list) Parameters Type Name Description BinaryReader reader NativeList<bool2> list Returns Type Description bool ReadToNativeList(BinaryReader, NativeList<bool3>) Declaration public static bool ReadToNativeList(this BinaryReader reader, NativeList<bool3> list) Parameters Type Name Description BinaryReader reader NativeList<bool3> list Returns Type Description bool ReadToNativeList(BinaryReader, NativeList<bool4>) Declaration public static bool ReadToNativeList(this BinaryReader reader, NativeList<bool4> list) Parameters Type Name Description BinaryReader reader NativeList<bool4> list Returns Type Description bool ReadToNativeList(BinaryReader, NativeList<float2>) Declaration public static bool ReadToNativeList(this BinaryReader reader, NativeList<float2> list) Parameters Type Name Description BinaryReader reader NativeList<float2> list Returns Type Description bool ReadToNativeList(BinaryReader, NativeList<float3>) Declaration public static bool ReadToNativeList(this BinaryReader reader, NativeList<float3> list) Parameters Type Name Description BinaryReader reader NativeList<float3> list Returns Type Description bool ReadToNativeList(BinaryReader, NativeList<float4>) Declaration public static bool ReadToNativeList(this BinaryReader reader, NativeList<float4> list) Parameters Type Name Description BinaryReader reader NativeList<float4> list Returns Type Description bool ReadToNativeList(BinaryReader, NativeList<int2>) Declaration public static bool ReadToNativeList(this BinaryReader reader, NativeList<int2> list) Parameters Type Name Description BinaryReader reader NativeList<int2> list Returns Type Description bool ReadToNativeList(BinaryReader, NativeList<int3>) Declaration public static bool ReadToNativeList(this BinaryReader reader, NativeList<int3> list) Parameters Type Name Description BinaryReader reader NativeList<int3> list Returns Type Description bool ReadToNativeList(BinaryReader, NativeList<int4>) Declaration public static bool ReadToNativeList(this BinaryReader reader, NativeList<int4> list) Parameters Type Name Description BinaryReader reader NativeList<int4> list Returns Type Description bool ReadToNativeList(BinaryReader, NativeList<uint2>) Declaration public static bool ReadToNativeList(this BinaryReader reader, NativeList<uint2> list) Parameters Type Name Description BinaryReader reader NativeList<uint2> list Returns Type Description bool ReadToNativeList(BinaryReader, NativeList<uint3>) Declaration public static bool ReadToNativeList(this BinaryReader reader, NativeList<uint3> list) Parameters Type Name Description BinaryReader reader NativeList<uint3> list Returns Type Description bool ReadToNativeList(BinaryReader, NativeList<uint4>) Declaration public static bool ReadToNativeList(this BinaryReader reader, NativeList<uint4> list) Parameters Type Name Description BinaryReader reader NativeList<uint4> list Returns Type Description bool ReadUInt2(BinaryReader) Declaration public static uint2 ReadUInt2(this BinaryReader reader) Parameters Type Name Description BinaryReader reader Returns Type Description uint2 ReadUInt3(BinaryReader) Declaration public static uint3 ReadUInt3(this BinaryReader reader) Parameters Type Name Description BinaryReader reader Returns Type Description uint3 ReadUInt4(BinaryReader) Declaration public static uint4 ReadUInt4(this BinaryReader reader) Parameters Type Name Description BinaryReader reader Returns Type Description uint4"
  },
  "api/Fwt.Core.BinaryWriterExtensions.html": {
    "href": "api/Fwt.Core.BinaryWriterExtensions.html",
    "title": "Class BinaryWriterExtensions | Hex Terrains",
    "summary": "Class BinaryWriterExtensions Inheritance object BinaryWriterExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.Core Assembly: fwt.core.dll Syntax public static class BinaryWriterExtensions Methods Write(BinaryWriter, object) Declaration public static bool Write(this BinaryWriter writer, object value) Parameters Type Name Description BinaryWriter writer object value Returns Type Description bool Write(BinaryWriter, bool2) Declaration public static void Write(this BinaryWriter writer, bool2 value) Parameters Type Name Description BinaryWriter writer bool2 value Write(BinaryWriter, bool3) Declaration public static void Write(this BinaryWriter writer, bool3 value) Parameters Type Name Description BinaryWriter writer bool3 value Write(BinaryWriter, bool4) Declaration public static void Write(this BinaryWriter writer, bool4 value) Parameters Type Name Description BinaryWriter writer bool4 value Write(BinaryWriter, float2) Declaration public static void Write(this BinaryWriter writer, float2 value) Parameters Type Name Description BinaryWriter writer float2 value Write(BinaryWriter, float3) Declaration public static void Write(this BinaryWriter writer, float3 value) Parameters Type Name Description BinaryWriter writer float3 value Write(BinaryWriter, float4) Declaration public static void Write(this BinaryWriter writer, float4 value) Parameters Type Name Description BinaryWriter writer float4 value Write(BinaryWriter, int2) Declaration public static void Write(this BinaryWriter writer, int2 value) Parameters Type Name Description BinaryWriter writer int2 value Write(BinaryWriter, int3) Declaration public static void Write(this BinaryWriter writer, int3 value) Parameters Type Name Description BinaryWriter writer int3 value Write(BinaryWriter, int4) Declaration public static void Write(this BinaryWriter writer, int4 value) Parameters Type Name Description BinaryWriter writer int4 value Write(BinaryWriter, quaternion) Declaration public static void Write(this BinaryWriter writer, quaternion value) Parameters Type Name Description BinaryWriter writer quaternion value WriteNativeArray(BinaryWriter, NativeArray<bool>) Declaration public static bool WriteNativeArray(this BinaryWriter writer, NativeArray<bool> array) Parameters Type Name Description BinaryWriter writer NativeArray<bool> array Returns Type Description bool WriteNativeArray(BinaryWriter, NativeArray<byte>) Declaration public static bool WriteNativeArray(this BinaryWriter writer, NativeArray<byte> array) Parameters Type Name Description BinaryWriter writer NativeArray<byte> array Returns Type Description bool WriteNativeArray(BinaryWriter, NativeArray<decimal>) Declaration public static bool WriteNativeArray(this BinaryWriter writer, NativeArray<decimal> array) Parameters Type Name Description BinaryWriter writer NativeArray<decimal> array Returns Type Description bool WriteNativeArray(BinaryWriter, NativeArray<double>) Declaration public static bool WriteNativeArray(this BinaryWriter writer, NativeArray<double> array) Parameters Type Name Description BinaryWriter writer NativeArray<double> array Returns Type Description bool WriteNativeArray(BinaryWriter, NativeArray<short>) Declaration public static bool WriteNativeArray(this BinaryWriter writer, NativeArray<short> array) Parameters Type Name Description BinaryWriter writer NativeArray<short> array Returns Type Description bool WriteNativeArray(BinaryWriter, NativeArray<int>) Declaration public static bool WriteNativeArray(this BinaryWriter writer, NativeArray<int> array) Parameters Type Name Description BinaryWriter writer NativeArray<int> array Returns Type Description bool WriteNativeArray(BinaryWriter, NativeArray<long>) Declaration public static bool WriteNativeArray(this BinaryWriter writer, NativeArray<long> array) Parameters Type Name Description BinaryWriter writer NativeArray<long> array Returns Type Description bool WriteNativeArray(BinaryWriter, NativeArray<float>) Declaration public static bool WriteNativeArray(this BinaryWriter writer, NativeArray<float> array) Parameters Type Name Description BinaryWriter writer NativeArray<float> array Returns Type Description bool WriteNativeArray(BinaryWriter, NativeArray<ushort>) Declaration public static bool WriteNativeArray(this BinaryWriter writer, NativeArray<ushort> array) Parameters Type Name Description BinaryWriter writer NativeArray<ushort> array Returns Type Description bool WriteNativeArray(BinaryWriter, NativeArray<uint>) Declaration public static bool WriteNativeArray(this BinaryWriter writer, NativeArray<uint> array) Parameters Type Name Description BinaryWriter writer NativeArray<uint> array Returns Type Description bool WriteNativeArray(BinaryWriter, NativeArray<ulong>) Declaration public static bool WriteNativeArray(this BinaryWriter writer, NativeArray<ulong> array) Parameters Type Name Description BinaryWriter writer NativeArray<ulong> array Returns Type Description bool WriteNativeArray(BinaryWriter, NativeArray<bool2>) Declaration public static bool WriteNativeArray(this BinaryWriter writer, NativeArray<bool2> array) Parameters Type Name Description BinaryWriter writer NativeArray<bool2> array Returns Type Description bool WriteNativeArray(BinaryWriter, NativeArray<bool3>) Declaration public static bool WriteNativeArray(this BinaryWriter writer, NativeArray<bool3> array) Parameters Type Name Description BinaryWriter writer NativeArray<bool3> array Returns Type Description bool WriteNativeArray(BinaryWriter, NativeArray<bool4>) Declaration public static bool WriteNativeArray(this BinaryWriter writer, NativeArray<bool4> array) Parameters Type Name Description BinaryWriter writer NativeArray<bool4> array Returns Type Description bool WriteNativeArray(BinaryWriter, NativeArray<float2>) Declaration public static bool WriteNativeArray(this BinaryWriter writer, NativeArray<float2> array) Parameters Type Name Description BinaryWriter writer NativeArray<float2> array Returns Type Description bool WriteNativeArray(BinaryWriter, NativeArray<float3>) Declaration public static bool WriteNativeArray(this BinaryWriter writer, NativeArray<float3> array) Parameters Type Name Description BinaryWriter writer NativeArray<float3> array Returns Type Description bool WriteNativeArray(BinaryWriter, NativeArray<float4>) Declaration public static bool WriteNativeArray(this BinaryWriter writer, NativeArray<float4> array) Parameters Type Name Description BinaryWriter writer NativeArray<float4> array Returns Type Description bool WriteNativeArray(BinaryWriter, NativeArray<int2>) Declaration public static bool WriteNativeArray(this BinaryWriter writer, NativeArray<int2> array) Parameters Type Name Description BinaryWriter writer NativeArray<int2> array Returns Type Description bool WriteNativeArray(BinaryWriter, NativeArray<int3>) Declaration public static bool WriteNativeArray(this BinaryWriter writer, NativeArray<int3> array) Parameters Type Name Description BinaryWriter writer NativeArray<int3> array Returns Type Description bool WriteNativeArray(BinaryWriter, NativeArray<int4>) Declaration public static bool WriteNativeArray(this BinaryWriter writer, NativeArray<int4> array) Parameters Type Name Description BinaryWriter writer NativeArray<int4> array Returns Type Description bool WriteNativeArray(BinaryWriter, NativeArray<Color32>) Declaration public static bool WriteNativeArray(this BinaryWriter writer, NativeArray<Color32> array) Parameters Type Name Description BinaryWriter writer NativeArray<Color32> array Returns Type Description bool WriteNativeArray(BinaryWriter, NativeArray<Color>) Declaration public static bool WriteNativeArray(this BinaryWriter writer, NativeArray<Color> array) Parameters Type Name Description BinaryWriter writer NativeArray<Color> array Returns Type Description bool"
  },
  "api/Fwt.Core.CameraViewPortData.html": {
    "href": "api/Fwt.Core.CameraViewPortData.html",
    "title": "Struct CameraViewPortData | Hex Terrains",
    "summary": "Struct CameraViewPortData Struct that is used to cache the Camera data (Transform, IsOrtographic, Size e.g. Field of view or Ortographic size depending on camera settings) Implements IEquatable<CameraViewPortData> Inherited Members ValueType.Equals(object) ValueType.GetHashCode() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.Core Assembly: fwt.core.dll Syntax public struct CameraViewPortData : IEquatable<CameraViewPortData> Fields IsOrthographic Declaration public bool IsOrthographic Field Value Type Description bool Position Declaration public Vector3 Position Field Value Type Description Vector3 Rotation Declaration public Quaternion Rotation Field Value Type Description Quaternion Scale Declaration public Vector3 Scale Field Value Type Description Vector3 Size Declaration public float Size Field Value Type Description float Methods Equals(CameraViewPortData) Declaration public bool Equals(CameraViewPortData other) Parameters Type Name Description CameraViewPortData other Returns Type Description bool FromCamera(Camera) Declaration public static CameraViewPortData FromCamera(Camera camera) Parameters Type Name Description Camera camera Returns Type Description CameraViewPortData ToString() Declaration public override string ToString() Returns Type Description string Overrides ValueType.ToString() Implements IEquatable<T> Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.ChildEntities.ChildEntitiesFeature.html": {
    "href": "api/Fwt.Core.ChildEntities.ChildEntitiesFeature.html",
    "title": "Class ChildEntitiesFeature | Hex Terrains",
    "summary": "Class ChildEntitiesFeature Inheritance object ComponentSystemBase SystemBase ComponentSystemGroup FeatureBase ChildEntitiesFeature Inherited Members FeatureBase.OnCreate() FeatureBase.SetEntityName(Entity, string) FeatureBase.GetOrCreateFeature<TSystem>(World) FeatureBase.GetOrCreateFeature<TSystem, TRootSystem>(World) FeatureBase.CreateChildSystem<TSystem>() FeatureBase.CreateChildSystem<TSystem>(ComponentSystemGroup) FeatureBase.GetSingletonEntityOrDefault<TComponent>() FeatureBase.GetOrCreateSingletonEntity<TComponent>() FeatureBase.CreateSingletonEntity<TComponent>() FeatureBase.GetSingletonEntityName<TComponent>() FeatureBase.FindComponentObject<TObject>() FeatureBase.FindComponentObject<TObject>(ref TObject) FeatureBase.GetOrFindComponentObject<TObject>(ref TObject) FeatureBase.FindComponentObject<TObject>(out Entity, out TObject) FeatureBase.Log(string) FeatureBase.LogWarning(string) FeatureBase.LogError(string) FeatureBase.LogException(Exception) ComponentSystemGroup.EnableSystemSorting ComponentSystemGroup.Created ComponentSystemGroup.ManagedSystems ComponentSystemGroup.GetUnmanagedSystems(Allocator) ComponentSystemGroup.GetAllSystems(Allocator) ComponentSystemGroup.OnDestroy() ComponentSystemGroup.AddSystemToUpdateList(ComponentSystemBase) ComponentSystemGroup.AddSystemToUpdateList(SystemHandle) ComponentSystemGroup.RemoveSystemFromUpdateList(ComponentSystemBase) ComponentSystemGroup.RemoveSystemFromUpdateList(SystemHandle) ComponentSystemGroup.SortSystems() ComponentSystemGroup.FixedRateManager ComponentSystemGroup.RateManager ComponentSystemGroup.SetRateManagerCreateAllocator(IRateManager) ComponentSystemGroup.RateGroupAllocators ComponentSystemGroup.OnUpdate() SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.Core.ChildEntities Assembly: fwt.core.ecs.dll Syntax public class ChildEntitiesFeature : FeatureBase Methods AttachEntities(Entity, Entity, bool) Declaration public bool AttachEntities(Entity child, Entity parent, bool removeChildWithParent) Parameters Type Name Description Entity child Entity parent bool removeChildWithParent Returns Type Description bool AttachEntities(Entity, Entity, bool, DynamicBuffer<ChildEntity>) Declaration public bool AttachEntities(Entity child, Entity parent, bool removeChildWithParent, DynamicBuffer<ChildEntity> childEntities) Parameters Type Name Description Entity child Entity parent bool removeChildWithParent DynamicBuffer<ChildEntity> childEntities Returns Type Description bool AttachEntities(Entity, Entity, bool, EntityCommandBuffer) Declaration public bool AttachEntities(Entity child, Entity parent, bool removeChildWithParent, EntityCommandBuffer commandBuffer) Parameters Type Name Description Entity child Entity parent bool removeChildWithParent EntityCommandBuffer commandBuffer Returns Type Description bool CreateChildSystems() Calls on OnCreate(); Creates child systems for a feature by calling CreateChildSystem() for each needed one Declaration protected override void CreateChildSystems() Overrides FeatureBase.CreateChildSystems() Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.ChildEntities.CleanupChildEntitiesSystem.html": {
    "href": "api/Fwt.Core.ChildEntities.CleanupChildEntitiesSystem.html",
    "title": "Class CleanupChildEntitiesSystem | Hex Terrains",
    "summary": "Class CleanupChildEntitiesSystem Inheritance object ComponentSystemBase SystemBase CleanupChildEntitiesSystem Inherited Members SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.Core.ChildEntities Assembly: fwt.core.ecs.dll Syntax public class CleanupChildEntitiesSystem : SystemBase Methods OnCreateForCompiler() Declaration protected override void OnCreateForCompiler() Overrides Unity.Entities.ComponentSystemBase.OnCreateForCompiler() OnUpdate() Implement OnUpdate() to perform the major work of this system. Declaration protected override void OnUpdate() Overrides Unity.Entities.SystemBase.OnUpdate() Remarks By default, the system invokes `OnUpdate()` once every frame on the main thread. To skip OnUpdate if all of the system's [EntityQueries] are empty, use the [RequireMatchingQueriesForUpdateAttribute]. To limit when OnUpdate is invoked, you can specify components that must exist, or queries that match specific Entities. To do this, call Unity.Entities.ComponentSystemBase.RequireForUpdate<T>() or Unity.Entities.ComponentSystemBase.RequireForUpdate(Unity.Entities.EntityQuery) in the system's OnCreate method. For more information, see [ShouldRunSystem]. The [Entities.ForEach] and [Job.WithCode] constructions provide convenient mechanisms for defining jobs. You can also instantiate and schedule an Unity.Entities.IJobChunk instance; you can use the [C# Job System] or you can perform work on the main thread. If you call Unity.Entities.EntityManager methods that perform structural changes on the main thread, be sure to arrange the system order to minimize the performance impact of the resulting [sync points]. Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.ChildEntities.Data.ChildEntitiesCache.html": {
    "href": "api/Fwt.Core.ChildEntities.Data.ChildEntitiesCache.html",
    "title": "Struct ChildEntitiesCache | Hex Terrains",
    "summary": "Struct ChildEntitiesCache Implements IComponentData IQueryTypeParameter Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.Core.ChildEntities.Data Assembly: fwt.core.ecs.dll Syntax public struct ChildEntitiesCache : IComponentData, IQueryTypeParameter Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.ChildEntities.Data.ChildEntity.html": {
    "href": "api/Fwt.Core.ChildEntities.Data.ChildEntity.html",
    "title": "Struct ChildEntity | Hex Terrains",
    "summary": "Struct ChildEntity Implements ICleanupBufferElementData IBufferElementData IEquatable<ChildEntity> Inherited Members ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.Core.ChildEntities.Data Assembly: fwt.core.ecs.dll Syntax public struct ChildEntity : ICleanupBufferElementData, IBufferElementData, IEquatable<ChildEntity> Fields Entity Declaration public EcsEntity Entity Field Value Type Description EcsEntity IsRemoveChildWithParent Declaration public bool IsRemoveChildWithParent Field Value Type Description bool Methods Equals(ChildEntity) Declaration public bool Equals(ChildEntity other) Parameters Type Name Description ChildEntity other Returns Type Description bool Equals(object) Declaration public override bool Equals(object obj) Parameters Type Name Description object obj Returns Type Description bool Overrides ValueType.Equals(object) GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides ValueType.GetHashCode() Implements Unity.Entities.ICleanupBufferElementData Unity.Entities.IBufferElementData IEquatable<T> Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.ChildEntities.Data.html": {
    "href": "api/Fwt.Core.ChildEntities.Data.html",
    "title": "Namespace Fwt.Core.ChildEntities.Data | Hex Terrains",
    "summary": "Namespace Fwt.Core.ChildEntities.Data Structs ChildEntitiesCache ChildEntity"
  },
  "api/Fwt.Core.ChildEntities.html": {
    "href": "api/Fwt.Core.ChildEntities.html",
    "title": "Namespace Fwt.Core.ChildEntities | Hex Terrains",
    "summary": "Namespace Fwt.Core.ChildEntities Classes ChildEntitiesFeature CleanupChildEntitiesSystem"
  },
  "api/Fwt.Core.Collections.FixedArray1024-1.html": {
    "href": "api/Fwt.Core.Collections.FixedArray1024-1.html",
    "title": "Struct FixedArray1024<TData> | Hex Terrains",
    "summary": "Struct FixedArray1024<TData> A fixed size array of 1024 elements. Implements IEnumerable<TData> IEnumerable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.Core.Collections Assembly: fwt.core.dll Syntax [Serializable] public struct FixedArray1024<TData> : IEnumerable<TData>, IEnumerable Type Parameters Name Description TData Type of items in the array Constructors FixedArray1024(TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData) Declaration public FixedArray1024(TData value_0 = default, TData value_1 = default, TData value_2 = default, TData value_3 = default, TData value_4 = default, TData value_5 = default, TData value_6 = default, TData value_7 = default, TData value_8 = default, TData value_9 = default, TData value_10 = default, TData value_11 = default, TData value_12 = default, TData value_13 = default, TData value_14 = default, TData value_15 = default, TData value_16 = default, TData value_17 = default, TData value_18 = default, TData value_19 = default, TData value_20 = default, TData value_21 = default, TData value_22 = default, TData value_23 = default, TData value_24 = default, TData value_25 = default, TData value_26 = default, TData value_27 = default, TData value_28 = default, TData value_29 = default, TData value_30 = default, TData value_31 = default, TData value_32 = default, TData value_33 = default, TData value_34 = default, TData value_35 = default, TData value_36 = default, TData value_37 = default, TData value_38 = default, TData value_39 = default, TData value_40 = default, TData value_41 = default, TData value_42 = default, TData value_43 = default, TData value_44 = default, TData value_45 = default, TData value_46 = default, TData value_47 = default, TData value_48 = default, TData value_49 = default, TData value_50 = default, TData value_51 = default, TData value_52 = default, TData value_53 = default, TData value_54 = default, TData value_55 = default, TData value_56 = default, TData value_57 = default, TData value_58 = default, TData value_59 = default, TData value_60 = default, TData value_61 = default, TData value_62 = default, TData value_63 = default, TData value_64 = default, TData value_65 = default, TData value_66 = default, TData value_67 = default, TData value_68 = default, TData value_69 = default, TData value_70 = default, TData value_71 = default, TData value_72 = default, TData value_73 = default, TData value_74 = default, TData value_75 = default, TData value_76 = default, TData value_77 = default, TData value_78 = default, TData value_79 = default, TData value_80 = default, TData value_81 = default, TData value_82 = default, TData value_83 = default, TData value_84 = default, TData value_85 = default, TData value_86 = default, TData value_87 = default, TData value_88 = default, TData value_89 = default, TData value_90 = default, TData value_91 = default, TData value_92 = default, TData value_93 = default, TData value_94 = default, TData value_95 = default, TData value_96 = default, TData value_97 = default, TData value_98 = default, TData value_99 = default, TData value_100 = default, TData value_101 = default, TData value_102 = default, TData value_103 = default, TData value_104 = default, TData value_105 = default, TData value_106 = default, TData value_107 = default, TData value_108 = default, TData value_109 = default, TData value_110 = default, TData value_111 = default, TData value_112 = default, TData value_113 = default, TData value_114 = default, TData value_115 = default, TData value_116 = default, TData value_117 = default, TData value_118 = default, TData value_119 = default, TData value_120 = default, TData value_121 = default, TData value_122 = default, TData value_123 = default, TData value_124 = default, TData value_125 = default, TData value_126 = default, TData value_127 = default, TData value_128 = default, TData value_129 = default, TData value_130 = default, TData value_131 = default, TData value_132 = default, TData value_133 = default, TData value_134 = default, TData value_135 = default, TData value_136 = default, TData value_137 = default, TData value_138 = default, TData value_139 = default, TData value_140 = default, TData value_141 = default, TData value_142 = default, TData value_143 = default, TData value_144 = default, TData value_145 = default, TData value_146 = default, TData value_147 = default, TData value_148 = default, TData value_149 = default, TData value_150 = default, TData value_151 = default, TData value_152 = default, TData value_153 = default, TData value_154 = default, TData value_155 = default, TData value_156 = default, TData value_157 = default, TData value_158 = default, TData value_159 = default, TData value_160 = default, TData value_161 = default, TData value_162 = default, TData value_163 = default, TData value_164 = default, TData value_165 = default, TData value_166 = default, TData value_167 = default, TData value_168 = default, TData value_169 = default, TData value_170 = default, TData value_171 = default, TData value_172 = default, TData value_173 = default, TData value_174 = default, TData value_175 = default, TData value_176 = default, TData value_177 = default, TData value_178 = default, TData value_179 = default, TData value_180 = default, TData value_181 = default, TData value_182 = default, TData value_183 = default, TData value_184 = default, TData value_185 = default, TData value_186 = default, TData value_187 = default, TData value_188 = default, TData value_189 = default, TData value_190 = default, TData value_191 = default, TData value_192 = default, TData value_193 = default, TData value_194 = default, TData value_195 = default, TData value_196 = default, TData value_197 = default, TData value_198 = default, TData value_199 = default, TData value_200 = default, TData value_201 = default, TData value_202 = default, TData value_203 = default, TData value_204 = default, TData value_205 = default, TData value_206 = default, TData value_207 = default, TData value_208 = default, TData value_209 = default, TData value_210 = default, TData value_211 = default, TData value_212 = default, TData value_213 = default, TData value_214 = default, TData value_215 = default, TData value_216 = default, TData value_217 = default, TData value_218 = default, TData value_219 = default, TData value_220 = default, TData value_221 = default, TData value_222 = default, TData value_223 = default, TData value_224 = default, TData value_225 = default, TData value_226 = default, TData value_227 = default, TData value_228 = default, TData value_229 = default, TData value_230 = default, TData value_231 = default, TData value_232 = default, TData value_233 = default, TData value_234 = default, TData value_235 = default, TData value_236 = default, TData value_237 = default, TData value_238 = default, TData value_239 = default, TData value_240 = default, TData value_241 = default, TData value_242 = default, TData value_243 = default, TData value_244 = default, TData value_245 = default, TData value_246 = default, TData value_247 = default, TData value_248 = default, TData value_249 = default, TData value_250 = default, TData value_251 = default, TData value_252 = default, TData value_253 = default, TData value_254 = default, TData value_255 = default, TData value_256 = default, TData value_257 = default, TData value_258 = default, TData value_259 = default, TData value_260 = default, TData value_261 = default, TData value_262 = default, TData value_263 = default, TData value_264 = default, TData value_265 = default, TData value_266 = default, TData value_267 = default, TData value_268 = default, TData value_269 = default, TData value_270 = default, TData value_271 = default, TData value_272 = default, TData value_273 = default, TData value_274 = default, TData value_275 = default, TData value_276 = default, TData value_277 = default, TData value_278 = default, TData value_279 = default, TData value_280 = default, TData value_281 = default, TData value_282 = default, TData value_283 = default, TData value_284 = default, TData value_285 = default, TData value_286 = default, TData value_287 = default, TData value_288 = default, TData value_289 = default, TData value_290 = default, TData value_291 = default, TData value_292 = default, TData value_293 = default, TData value_294 = default, TData value_295 = default, TData value_296 = default, TData value_297 = default, TData value_298 = default, TData value_299 = default, TData value_300 = default, TData value_301 = default, TData value_302 = default, TData value_303 = default, TData value_304 = default, TData value_305 = default, TData value_306 = default, TData value_307 = default, TData value_308 = default, TData value_309 = default, TData value_310 = default, TData value_311 = default, TData value_312 = default, TData value_313 = default, TData value_314 = default, TData value_315 = default, TData value_316 = default, TData value_317 = default, TData value_318 = default, TData value_319 = default, TData value_320 = default, TData value_321 = default, TData value_322 = default, TData value_323 = default, TData value_324 = default, TData value_325 = default, TData value_326 = default, TData value_327 = default, TData value_328 = default, TData value_329 = default, TData value_330 = default, TData value_331 = default, TData value_332 = default, TData value_333 = default, TData value_334 = default, TData value_335 = default, TData value_336 = default, TData value_337 = default, TData value_338 = default, TData value_339 = default, TData value_340 = default, TData value_341 = default, TData value_342 = default, TData value_343 = default, TData value_344 = default, TData value_345 = default, TData value_346 = default, TData value_347 = default, TData value_348 = default, TData value_349 = default, TData value_350 = default, TData value_351 = default, TData value_352 = default, TData value_353 = default, TData value_354 = default, TData value_355 = default, TData value_356 = default, TData value_357 = default, TData value_358 = default, TData value_359 = default, TData value_360 = default, TData value_361 = default, TData value_362 = default, TData value_363 = default, TData value_364 = default, TData value_365 = default, TData value_366 = default, TData value_367 = default, TData value_368 = default, TData value_369 = default, TData value_370 = default, TData value_371 = default, TData value_372 = default, TData value_373 = default, TData value_374 = default, TData value_375 = default, TData value_376 = default, TData value_377 = default, TData value_378 = default, TData value_379 = default, TData value_380 = default, TData value_381 = default, TData value_382 = default, TData value_383 = default, TData value_384 = default, TData value_385 = default, TData value_386 = default, TData value_387 = default, TData value_388 = default, TData value_389 = default, TData value_390 = default, TData value_391 = default, TData value_392 = default, TData value_393 = default, TData value_394 = default, TData value_395 = default, TData value_396 = default, TData value_397 = default, TData value_398 = default, TData value_399 = default, TData value_400 = default, TData value_401 = default, TData value_402 = default, TData value_403 = default, TData value_404 = default, TData value_405 = default, TData value_406 = default, TData value_407 = default, TData value_408 = default, TData value_409 = default, TData value_410 = default, TData value_411 = default, TData value_412 = default, TData value_413 = default, TData value_414 = default, TData value_415 = default, TData value_416 = default, TData value_417 = default, TData value_418 = default, TData value_419 = default, TData value_420 = default, TData value_421 = default, TData value_422 = default, TData value_423 = default, TData value_424 = default, TData value_425 = default, TData value_426 = default, TData value_427 = default, TData value_428 = default, TData value_429 = default, TData value_430 = default, TData value_431 = default, TData value_432 = default, TData value_433 = default, TData value_434 = default, TData value_435 = default, TData value_436 = default, TData value_437 = default, TData value_438 = default, TData value_439 = default, TData value_440 = default, TData value_441 = default, TData value_442 = default, TData value_443 = default, TData value_444 = default, TData value_445 = default, TData value_446 = default, TData value_447 = default, TData value_448 = default, TData value_449 = default, TData value_450 = default, TData value_451 = default, TData value_452 = default, TData value_453 = default, TData value_454 = default, TData value_455 = default, TData value_456 = default, TData value_457 = default, TData value_458 = default, TData value_459 = default, TData value_460 = default, TData value_461 = default, TData value_462 = default, TData value_463 = default, TData value_464 = default, TData value_465 = default, TData value_466 = default, TData value_467 = default, TData value_468 = default, TData value_469 = default, TData value_470 = default, TData value_471 = default, TData value_472 = default, TData value_473 = default, TData value_474 = default, TData value_475 = default, TData value_476 = default, TData value_477 = default, TData value_478 = default, TData value_479 = default, TData value_480 = default, TData value_481 = default, TData value_482 = default, TData value_483 = default, TData value_484 = default, TData value_485 = default, TData value_486 = default, TData value_487 = default, TData value_488 = default, TData value_489 = default, TData value_490 = default, TData value_491 = default, TData value_492 = default, TData value_493 = default, TData value_494 = default, TData value_495 = default, TData value_496 = default, TData value_497 = default, TData value_498 = default, TData value_499 = default, TData value_500 = default, TData value_501 = default, TData value_502 = default, TData value_503 = default, TData value_504 = default, TData value_505 = default, TData value_506 = default, TData value_507 = default, TData value_508 = default, TData value_509 = default, TData value_510 = default, TData value_511 = default, TData value_512 = default, TData value_513 = default, TData value_514 = default, TData value_515 = default, TData value_516 = default, TData value_517 = default, TData value_518 = default, TData value_519 = default, TData value_520 = default, TData value_521 = default, TData value_522 = default, TData value_523 = default, TData value_524 = default, TData value_525 = default, TData value_526 = default, TData value_527 = default, TData value_528 = default, TData value_529 = default, TData value_530 = default, TData value_531 = default, TData value_532 = default, TData value_533 = default, TData value_534 = default, TData value_535 = default, TData value_536 = default, TData value_537 = default, TData value_538 = default, TData value_539 = default, TData value_540 = default, TData value_541 = default, TData value_542 = default, TData value_543 = default, TData value_544 = default, TData value_545 = default, TData value_546 = default, TData value_547 = default, TData value_548 = default, TData value_549 = default, TData value_550 = default, TData value_551 = default, TData value_552 = default, TData value_553 = default, TData value_554 = default, TData value_555 = default, TData value_556 = default, TData value_557 = default, TData value_558 = default, TData value_559 = default, TData value_560 = default, TData value_561 = default, TData value_562 = default, TData value_563 = default, TData value_564 = default, TData value_565 = default, TData value_566 = default, TData value_567 = default, TData value_568 = default, TData value_569 = default, TData value_570 = default, TData value_571 = default, TData value_572 = default, TData value_573 = default, TData value_574 = default, TData value_575 = default, TData value_576 = default, TData value_577 = default, TData value_578 = default, TData value_579 = default, TData value_580 = default, TData value_581 = default, TData value_582 = default, TData value_583 = default, TData value_584 = default, TData value_585 = default, TData value_586 = default, TData value_587 = default, TData value_588 = default, TData value_589 = default, TData value_590 = default, TData value_591 = default, TData value_592 = default, TData value_593 = default, TData value_594 = default, TData value_595 = default, TData value_596 = default, TData value_597 = default, TData value_598 = default, TData value_599 = default, TData value_600 = default, TData value_601 = default, TData value_602 = default, TData value_603 = default, TData value_604 = default, TData value_605 = default, TData value_606 = default, TData value_607 = default, TData value_608 = default, TData value_609 = default, TData value_610 = default, TData value_611 = default, TData value_612 = default, TData value_613 = default, TData value_614 = default, TData value_615 = default, TData value_616 = default, TData value_617 = default, TData value_618 = default, TData value_619 = default, TData value_620 = default, TData value_621 = default, TData value_622 = default, TData value_623 = default, TData value_624 = default, TData value_625 = default, TData value_626 = default, TData value_627 = default, TData value_628 = default, TData value_629 = default, TData value_630 = default, TData value_631 = default, TData value_632 = default, TData value_633 = default, TData value_634 = default, TData value_635 = default, TData value_636 = default, TData value_637 = default, TData value_638 = default, TData value_639 = default, TData value_640 = default, TData value_641 = default, TData value_642 = default, TData value_643 = default, TData value_644 = default, TData value_645 = default, TData value_646 = default, TData value_647 = default, TData value_648 = default, TData value_649 = default, TData value_650 = default, TData value_651 = default, TData value_652 = default, TData value_653 = default, TData value_654 = default, TData value_655 = default, TData value_656 = default, TData value_657 = default, TData value_658 = default, TData value_659 = default, TData value_660 = default, TData value_661 = default, TData value_662 = default, TData value_663 = default, TData value_664 = default, TData value_665 = default, TData value_666 = default, TData value_667 = default, TData value_668 = default, TData value_669 = default, TData value_670 = default, TData value_671 = default, TData value_672 = default, TData value_673 = default, TData value_674 = default, TData value_675 = default, TData value_676 = default, TData value_677 = default, TData value_678 = default, TData value_679 = default, TData value_680 = default, TData value_681 = default, TData value_682 = default, TData value_683 = default, TData value_684 = default, TData value_685 = default, TData value_686 = default, TData value_687 = default, TData value_688 = default, TData value_689 = default, TData value_690 = default, TData value_691 = default, TData value_692 = default, TData value_693 = default, TData value_694 = default, TData value_695 = default, TData value_696 = default, TData value_697 = default, TData value_698 = default, TData value_699 = default, TData value_700 = default, TData value_701 = default, TData value_702 = default, TData value_703 = default, TData value_704 = default, TData value_705 = default, TData value_706 = default, TData value_707 = default, TData value_708 = default, TData value_709 = default, TData value_710 = default, TData value_711 = default, TData value_712 = default, TData value_713 = default, TData value_714 = default, TData value_715 = default, TData value_716 = default, TData value_717 = default, TData value_718 = default, TData value_719 = default, TData value_720 = default, TData value_721 = default, TData value_722 = default, TData value_723 = default, TData value_724 = default, TData value_725 = default, TData value_726 = default, TData value_727 = default, TData value_728 = default, TData value_729 = default, TData value_730 = default, TData value_731 = default, TData value_732 = default, TData value_733 = default, TData value_734 = default, TData value_735 = default, TData value_736 = default, TData value_737 = default, TData value_738 = default, TData value_739 = default, TData value_740 = default, TData value_741 = default, TData value_742 = default, TData value_743 = default, TData value_744 = default, TData value_745 = default, TData value_746 = default, TData value_747 = default, TData value_748 = default, TData value_749 = default, TData value_750 = default, TData value_751 = default, TData value_752 = default, TData value_753 = default, TData value_754 = default, TData value_755 = default, TData value_756 = default, TData value_757 = default, TData value_758 = default, TData value_759 = default, TData value_760 = default, TData value_761 = default, TData value_762 = default, TData value_763 = default, TData value_764 = default, TData value_765 = default, TData value_766 = default, TData value_767 = default, TData value_768 = default, TData value_769 = default, TData value_770 = default, TData value_771 = default, TData value_772 = default, TData value_773 = default, TData value_774 = default, TData value_775 = default, TData value_776 = default, TData value_777 = default, TData value_778 = default, TData value_779 = default, TData value_780 = default, TData value_781 = default, TData value_782 = default, TData value_783 = default, TData value_784 = default, TData value_785 = default, TData value_786 = default, TData value_787 = default, TData value_788 = default, TData value_789 = default, TData value_790 = default, TData value_791 = default, TData value_792 = default, TData value_793 = default, TData value_794 = default, TData value_795 = default, TData value_796 = default, TData value_797 = default, TData value_798 = default, TData value_799 = default, TData value_800 = default, TData value_801 = default, TData value_802 = default, TData value_803 = default, TData value_804 = default, TData value_805 = default, TData value_806 = default, TData value_807 = default, TData value_808 = default, TData value_809 = default, TData value_810 = default, TData value_811 = default, TData value_812 = default, TData value_813 = default, TData value_814 = default, TData value_815 = default, TData value_816 = default, TData value_817 = default, TData value_818 = default, TData value_819 = default, TData value_820 = default, TData value_821 = default, TData value_822 = default, TData value_823 = default, TData value_824 = default, TData value_825 = default, TData value_826 = default, TData value_827 = default, TData value_828 = default, TData value_829 = default, TData value_830 = default, TData value_831 = default, TData value_832 = default, TData value_833 = default, TData value_834 = default, TData value_835 = default, TData value_836 = default, TData value_837 = default, TData value_838 = default, TData value_839 = default, TData value_840 = default, TData value_841 = default, TData value_842 = default, TData value_843 = default, TData value_844 = default, TData value_845 = default, TData value_846 = default, TData value_847 = default, TData value_848 = default, TData value_849 = default, TData value_850 = default, TData value_851 = default, TData value_852 = default, TData value_853 = default, TData value_854 = default, TData value_855 = default, TData value_856 = default, TData value_857 = default, TData value_858 = default, TData value_859 = default, TData value_860 = default, TData value_861 = default, TData value_862 = default, TData value_863 = default, TData value_864 = default, TData value_865 = default, TData value_866 = default, TData value_867 = default, TData value_868 = default, TData value_869 = default, TData value_870 = default, TData value_871 = default, TData value_872 = default, TData value_873 = default, TData value_874 = default, TData value_875 = default, TData value_876 = default, TData value_877 = default, TData value_878 = default, TData value_879 = default, TData value_880 = default, TData value_881 = default, TData value_882 = default, TData value_883 = default, TData value_884 = default, TData value_885 = default, TData value_886 = default, TData value_887 = default, TData value_888 = default, TData value_889 = default, TData value_890 = default, TData value_891 = default, TData value_892 = default, TData value_893 = default, TData value_894 = default, TData value_895 = default, TData value_896 = default, TData value_897 = default, TData value_898 = default, TData value_899 = default, TData value_900 = default, TData value_901 = default, TData value_902 = default, TData value_903 = default, TData value_904 = default, TData value_905 = default, TData value_906 = default, TData value_907 = default, TData value_908 = default, TData value_909 = default, TData value_910 = default, TData value_911 = default, TData value_912 = default, TData value_913 = default, TData value_914 = default, TData value_915 = default, TData value_916 = default, TData value_917 = default, TData value_918 = default, TData value_919 = default, TData value_920 = default, TData value_921 = default, TData value_922 = default, TData value_923 = default, TData value_924 = default, TData value_925 = default, TData value_926 = default, TData value_927 = default, TData value_928 = default, TData value_929 = default, TData value_930 = default, TData value_931 = default, TData value_932 = default, TData value_933 = default, TData value_934 = default, TData value_935 = default, TData value_936 = default, TData value_937 = default, TData value_938 = default, TData value_939 = default, TData value_940 = default, TData value_941 = default, TData value_942 = default, TData value_943 = default, TData value_944 = default, TData value_945 = default, TData value_946 = default, TData value_947 = default, TData value_948 = default, TData value_949 = default, TData value_950 = default, TData value_951 = default, TData value_952 = default, TData value_953 = default, TData value_954 = default, TData value_955 = default, TData value_956 = default, TData value_957 = default, TData value_958 = default, TData value_959 = default, TData value_960 = default, TData value_961 = default, TData value_962 = default, TData value_963 = default, TData value_964 = default, TData value_965 = default, TData value_966 = default, TData value_967 = default, TData value_968 = default, TData value_969 = default, TData value_970 = default, TData value_971 = default, TData value_972 = default, TData value_973 = default, TData value_974 = default, TData value_975 = default, TData value_976 = default, TData value_977 = default, TData value_978 = default, TData value_979 = default, TData value_980 = default, TData value_981 = default, TData value_982 = default, TData value_983 = default, TData value_984 = default, TData value_985 = default, TData value_986 = default, TData value_987 = default, TData value_988 = default, TData value_989 = default, TData value_990 = default, TData value_991 = default, TData value_992 = default, TData value_993 = default, TData value_994 = default, TData value_995 = default, TData value_996 = default, TData value_997 = default, TData value_998 = default, TData value_999 = default, TData value_1000 = default, TData value_1001 = default, TData value_1002 = default, TData value_1003 = default, TData value_1004 = default, TData value_1005 = default, TData value_1006 = default, TData value_1007 = default, TData value_1008 = default, TData value_1009 = default, TData value_1010 = default, TData value_1011 = default, TData value_1012 = default, TData value_1013 = default, TData value_1014 = default, TData value_1015 = default, TData value_1016 = default, TData value_1017 = default, TData value_1018 = default, TData value_1019 = default, TData value_1020 = default, TData value_1021 = default, TData value_1022 = default, TData value_1023 = default) Parameters Type Name Description TData value_0 TData value_1 TData value_2 TData value_3 TData value_4 TData value_5 TData value_6 TData value_7 TData value_8 TData value_9 TData value_10 TData value_11 TData value_12 TData value_13 TData value_14 TData value_15 TData value_16 TData value_17 TData value_18 TData value_19 TData value_20 TData value_21 TData value_22 TData value_23 TData value_24 TData value_25 TData value_26 TData value_27 TData value_28 TData value_29 TData value_30 TData value_31 TData value_32 TData value_33 TData value_34 TData value_35 TData value_36 TData value_37 TData value_38 TData value_39 TData value_40 TData value_41 TData value_42 TData value_43 TData value_44 TData value_45 TData value_46 TData value_47 TData value_48 TData value_49 TData value_50 TData value_51 TData value_52 TData value_53 TData value_54 TData value_55 TData value_56 TData value_57 TData value_58 TData value_59 TData value_60 TData value_61 TData value_62 TData value_63 TData value_64 TData value_65 TData value_66 TData value_67 TData value_68 TData value_69 TData value_70 TData value_71 TData value_72 TData value_73 TData value_74 TData value_75 TData value_76 TData value_77 TData value_78 TData value_79 TData value_80 TData value_81 TData value_82 TData value_83 TData value_84 TData value_85 TData value_86 TData value_87 TData value_88 TData value_89 TData value_90 TData value_91 TData value_92 TData value_93 TData value_94 TData value_95 TData value_96 TData value_97 TData value_98 TData value_99 TData value_100 TData value_101 TData value_102 TData value_103 TData value_104 TData value_105 TData value_106 TData value_107 TData value_108 TData value_109 TData value_110 TData value_111 TData value_112 TData value_113 TData value_114 TData value_115 TData value_116 TData value_117 TData value_118 TData value_119 TData value_120 TData value_121 TData value_122 TData value_123 TData value_124 TData value_125 TData value_126 TData value_127 TData value_128 TData value_129 TData value_130 TData value_131 TData value_132 TData value_133 TData value_134 TData value_135 TData value_136 TData value_137 TData value_138 TData value_139 TData value_140 TData value_141 TData value_142 TData value_143 TData value_144 TData value_145 TData value_146 TData value_147 TData value_148 TData value_149 TData value_150 TData value_151 TData value_152 TData value_153 TData value_154 TData value_155 TData value_156 TData value_157 TData value_158 TData value_159 TData value_160 TData value_161 TData value_162 TData value_163 TData value_164 TData value_165 TData value_166 TData value_167 TData value_168 TData value_169 TData value_170 TData value_171 TData value_172 TData value_173 TData value_174 TData value_175 TData value_176 TData value_177 TData value_178 TData value_179 TData value_180 TData value_181 TData value_182 TData value_183 TData value_184 TData value_185 TData value_186 TData value_187 TData value_188 TData value_189 TData value_190 TData value_191 TData value_192 TData value_193 TData value_194 TData value_195 TData value_196 TData value_197 TData value_198 TData value_199 TData value_200 TData value_201 TData value_202 TData value_203 TData value_204 TData value_205 TData value_206 TData value_207 TData value_208 TData value_209 TData value_210 TData value_211 TData value_212 TData value_213 TData value_214 TData value_215 TData value_216 TData value_217 TData value_218 TData value_219 TData value_220 TData value_221 TData value_222 TData value_223 TData value_224 TData value_225 TData value_226 TData value_227 TData value_228 TData value_229 TData value_230 TData value_231 TData value_232 TData value_233 TData value_234 TData value_235 TData value_236 TData value_237 TData value_238 TData value_239 TData value_240 TData value_241 TData value_242 TData value_243 TData value_244 TData value_245 TData value_246 TData value_247 TData value_248 TData value_249 TData value_250 TData value_251 TData value_252 TData value_253 TData value_254 TData value_255 TData value_256 TData value_257 TData value_258 TData value_259 TData value_260 TData value_261 TData value_262 TData value_263 TData value_264 TData value_265 TData value_266 TData value_267 TData value_268 TData value_269 TData value_270 TData value_271 TData value_272 TData value_273 TData value_274 TData value_275 TData value_276 TData value_277 TData value_278 TData value_279 TData value_280 TData value_281 TData value_282 TData value_283 TData value_284 TData value_285 TData value_286 TData value_287 TData value_288 TData value_289 TData value_290 TData value_291 TData value_292 TData value_293 TData value_294 TData value_295 TData value_296 TData value_297 TData value_298 TData value_299 TData value_300 TData value_301 TData value_302 TData value_303 TData value_304 TData value_305 TData value_306 TData value_307 TData value_308 TData value_309 TData value_310 TData value_311 TData value_312 TData value_313 TData value_314 TData value_315 TData value_316 TData value_317 TData value_318 TData value_319 TData value_320 TData value_321 TData value_322 TData value_323 TData value_324 TData value_325 TData value_326 TData value_327 TData value_328 TData value_329 TData value_330 TData value_331 TData value_332 TData value_333 TData value_334 TData value_335 TData value_336 TData value_337 TData value_338 TData value_339 TData value_340 TData value_341 TData value_342 TData value_343 TData value_344 TData value_345 TData value_346 TData value_347 TData value_348 TData value_349 TData value_350 TData value_351 TData value_352 TData value_353 TData value_354 TData value_355 TData value_356 TData value_357 TData value_358 TData value_359 TData value_360 TData value_361 TData value_362 TData value_363 TData value_364 TData value_365 TData value_366 TData value_367 TData value_368 TData value_369 TData value_370 TData value_371 TData value_372 TData value_373 TData value_374 TData value_375 TData value_376 TData value_377 TData value_378 TData value_379 TData value_380 TData value_381 TData value_382 TData value_383 TData value_384 TData value_385 TData value_386 TData value_387 TData value_388 TData value_389 TData value_390 TData value_391 TData value_392 TData value_393 TData value_394 TData value_395 TData value_396 TData value_397 TData value_398 TData value_399 TData value_400 TData value_401 TData value_402 TData value_403 TData value_404 TData value_405 TData value_406 TData value_407 TData value_408 TData value_409 TData value_410 TData value_411 TData value_412 TData value_413 TData value_414 TData value_415 TData value_416 TData value_417 TData value_418 TData value_419 TData value_420 TData value_421 TData value_422 TData value_423 TData value_424 TData value_425 TData value_426 TData value_427 TData value_428 TData value_429 TData value_430 TData value_431 TData value_432 TData value_433 TData value_434 TData value_435 TData value_436 TData value_437 TData value_438 TData value_439 TData value_440 TData value_441 TData value_442 TData value_443 TData value_444 TData value_445 TData value_446 TData value_447 TData value_448 TData value_449 TData value_450 TData value_451 TData value_452 TData value_453 TData value_454 TData value_455 TData value_456 TData value_457 TData value_458 TData value_459 TData value_460 TData value_461 TData value_462 TData value_463 TData value_464 TData value_465 TData value_466 TData value_467 TData value_468 TData value_469 TData value_470 TData value_471 TData value_472 TData value_473 TData value_474 TData value_475 TData value_476 TData value_477 TData value_478 TData value_479 TData value_480 TData value_481 TData value_482 TData value_483 TData value_484 TData value_485 TData value_486 TData value_487 TData value_488 TData value_489 TData value_490 TData value_491 TData value_492 TData value_493 TData value_494 TData value_495 TData value_496 TData value_497 TData value_498 TData value_499 TData value_500 TData value_501 TData value_502 TData value_503 TData value_504 TData value_505 TData value_506 TData value_507 TData value_508 TData value_509 TData value_510 TData value_511 TData value_512 TData value_513 TData value_514 TData value_515 TData value_516 TData value_517 TData value_518 TData value_519 TData value_520 TData value_521 TData value_522 TData value_523 TData value_524 TData value_525 TData value_526 TData value_527 TData value_528 TData value_529 TData value_530 TData value_531 TData value_532 TData value_533 TData value_534 TData value_535 TData value_536 TData value_537 TData value_538 TData value_539 TData value_540 TData value_541 TData value_542 TData value_543 TData value_544 TData value_545 TData value_546 TData value_547 TData value_548 TData value_549 TData value_550 TData value_551 TData value_552 TData value_553 TData value_554 TData value_555 TData value_556 TData value_557 TData value_558 TData value_559 TData value_560 TData value_561 TData value_562 TData value_563 TData value_564 TData value_565 TData value_566 TData value_567 TData value_568 TData value_569 TData value_570 TData value_571 TData value_572 TData value_573 TData value_574 TData value_575 TData value_576 TData value_577 TData value_578 TData value_579 TData value_580 TData value_581 TData value_582 TData value_583 TData value_584 TData value_585 TData value_586 TData value_587 TData value_588 TData value_589 TData value_590 TData value_591 TData value_592 TData value_593 TData value_594 TData value_595 TData value_596 TData value_597 TData value_598 TData value_599 TData value_600 TData value_601 TData value_602 TData value_603 TData value_604 TData value_605 TData value_606 TData value_607 TData value_608 TData value_609 TData value_610 TData value_611 TData value_612 TData value_613 TData value_614 TData value_615 TData value_616 TData value_617 TData value_618 TData value_619 TData value_620 TData value_621 TData value_622 TData value_623 TData value_624 TData value_625 TData value_626 TData value_627 TData value_628 TData value_629 TData value_630 TData value_631 TData value_632 TData value_633 TData value_634 TData value_635 TData value_636 TData value_637 TData value_638 TData value_639 TData value_640 TData value_641 TData value_642 TData value_643 TData value_644 TData value_645 TData value_646 TData value_647 TData value_648 TData value_649 TData value_650 TData value_651 TData value_652 TData value_653 TData value_654 TData value_655 TData value_656 TData value_657 TData value_658 TData value_659 TData value_660 TData value_661 TData value_662 TData value_663 TData value_664 TData value_665 TData value_666 TData value_667 TData value_668 TData value_669 TData value_670 TData value_671 TData value_672 TData value_673 TData value_674 TData value_675 TData value_676 TData value_677 TData value_678 TData value_679 TData value_680 TData value_681 TData value_682 TData value_683 TData value_684 TData value_685 TData value_686 TData value_687 TData value_688 TData value_689 TData value_690 TData value_691 TData value_692 TData value_693 TData value_694 TData value_695 TData value_696 TData value_697 TData value_698 TData value_699 TData value_700 TData value_701 TData value_702 TData value_703 TData value_704 TData value_705 TData value_706 TData value_707 TData value_708 TData value_709 TData value_710 TData value_711 TData value_712 TData value_713 TData value_714 TData value_715 TData value_716 TData value_717 TData value_718 TData value_719 TData value_720 TData value_721 TData value_722 TData value_723 TData value_724 TData value_725 TData value_726 TData value_727 TData value_728 TData value_729 TData value_730 TData value_731 TData value_732 TData value_733 TData value_734 TData value_735 TData value_736 TData value_737 TData value_738 TData value_739 TData value_740 TData value_741 TData value_742 TData value_743 TData value_744 TData value_745 TData value_746 TData value_747 TData value_748 TData value_749 TData value_750 TData value_751 TData value_752 TData value_753 TData value_754 TData value_755 TData value_756 TData value_757 TData value_758 TData value_759 TData value_760 TData value_761 TData value_762 TData value_763 TData value_764 TData value_765 TData value_766 TData value_767 TData value_768 TData value_769 TData value_770 TData value_771 TData value_772 TData value_773 TData value_774 TData value_775 TData value_776 TData value_777 TData value_778 TData value_779 TData value_780 TData value_781 TData value_782 TData value_783 TData value_784 TData value_785 TData value_786 TData value_787 TData value_788 TData value_789 TData value_790 TData value_791 TData value_792 TData value_793 TData value_794 TData value_795 TData value_796 TData value_797 TData value_798 TData value_799 TData value_800 TData value_801 TData value_802 TData value_803 TData value_804 TData value_805 TData value_806 TData value_807 TData value_808 TData value_809 TData value_810 TData value_811 TData value_812 TData value_813 TData value_814 TData value_815 TData value_816 TData value_817 TData value_818 TData value_819 TData value_820 TData value_821 TData value_822 TData value_823 TData value_824 TData value_825 TData value_826 TData value_827 TData value_828 TData value_829 TData value_830 TData value_831 TData value_832 TData value_833 TData value_834 TData value_835 TData value_836 TData value_837 TData value_838 TData value_839 TData value_840 TData value_841 TData value_842 TData value_843 TData value_844 TData value_845 TData value_846 TData value_847 TData value_848 TData value_849 TData value_850 TData value_851 TData value_852 TData value_853 TData value_854 TData value_855 TData value_856 TData value_857 TData value_858 TData value_859 TData value_860 TData value_861 TData value_862 TData value_863 TData value_864 TData value_865 TData value_866 TData value_867 TData value_868 TData value_869 TData value_870 TData value_871 TData value_872 TData value_873 TData value_874 TData value_875 TData value_876 TData value_877 TData value_878 TData value_879 TData value_880 TData value_881 TData value_882 TData value_883 TData value_884 TData value_885 TData value_886 TData value_887 TData value_888 TData value_889 TData value_890 TData value_891 TData value_892 TData value_893 TData value_894 TData value_895 TData value_896 TData value_897 TData value_898 TData value_899 TData value_900 TData value_901 TData value_902 TData value_903 TData value_904 TData value_905 TData value_906 TData value_907 TData value_908 TData value_909 TData value_910 TData value_911 TData value_912 TData value_913 TData value_914 TData value_915 TData value_916 TData value_917 TData value_918 TData value_919 TData value_920 TData value_921 TData value_922 TData value_923 TData value_924 TData value_925 TData value_926 TData value_927 TData value_928 TData value_929 TData value_930 TData value_931 TData value_932 TData value_933 TData value_934 TData value_935 TData value_936 TData value_937 TData value_938 TData value_939 TData value_940 TData value_941 TData value_942 TData value_943 TData value_944 TData value_945 TData value_946 TData value_947 TData value_948 TData value_949 TData value_950 TData value_951 TData value_952 TData value_953 TData value_954 TData value_955 TData value_956 TData value_957 TData value_958 TData value_959 TData value_960 TData value_961 TData value_962 TData value_963 TData value_964 TData value_965 TData value_966 TData value_967 TData value_968 TData value_969 TData value_970 TData value_971 TData value_972 TData value_973 TData value_974 TData value_975 TData value_976 TData value_977 TData value_978 TData value_979 TData value_980 TData value_981 TData value_982 TData value_983 TData value_984 TData value_985 TData value_986 TData value_987 TData value_988 TData value_989 TData value_990 TData value_991 TData value_992 TData value_993 TData value_994 TData value_995 TData value_996 TData value_997 TData value_998 TData value_999 TData value_1000 TData value_1001 TData value_1002 TData value_1003 TData value_1004 TData value_1005 TData value_1006 TData value_1007 TData value_1008 TData value_1009 TData value_1010 TData value_1011 TData value_1012 TData value_1013 TData value_1014 TData value_1015 TData value_1016 TData value_1017 TData value_1018 TData value_1019 TData value_1020 TData value_1021 TData value_1022 TData value_1023 Fields Capacity Declaration public const int Capacity = 1024 Field Value Type Description int Value_0 Declaration public TData Value_0 Field Value Type Description TData Value_1 Declaration public TData Value_1 Field Value Type Description TData Value_10 Declaration public TData Value_10 Field Value Type Description TData Value_100 Declaration public TData Value_100 Field Value Type Description TData Value_1000 Declaration public TData Value_1000 Field Value Type Description TData Value_1001 Declaration public TData Value_1001 Field Value Type Description TData Value_1002 Declaration public TData Value_1002 Field Value Type Description TData Value_1003 Declaration public TData Value_1003 Field Value Type Description TData Value_1004 Declaration public TData Value_1004 Field Value Type Description TData Value_1005 Declaration public TData Value_1005 Field Value Type Description TData Value_1006 Declaration public TData Value_1006 Field Value Type Description TData Value_1007 Declaration public TData Value_1007 Field Value Type Description TData Value_1008 Declaration public TData Value_1008 Field Value Type Description TData Value_1009 Declaration public TData Value_1009 Field Value Type Description TData Value_101 Declaration public TData Value_101 Field Value Type Description TData Value_1010 Declaration public TData Value_1010 Field Value Type Description TData Value_1011 Declaration public TData Value_1011 Field Value Type Description TData Value_1012 Declaration public TData Value_1012 Field Value Type Description TData Value_1013 Declaration public TData Value_1013 Field Value Type Description TData Value_1014 Declaration public TData Value_1014 Field Value Type Description TData Value_1015 Declaration public TData Value_1015 Field Value Type Description TData Value_1016 Declaration public TData Value_1016 Field Value Type Description TData Value_1017 Declaration public TData Value_1017 Field Value Type Description TData Value_1018 Declaration public TData Value_1018 Field Value Type Description TData Value_1019 Declaration public TData Value_1019 Field Value Type Description TData Value_102 Declaration public TData Value_102 Field Value Type Description TData Value_1020 Declaration public TData Value_1020 Field Value Type Description TData Value_1021 Declaration public TData Value_1021 Field Value Type Description TData Value_1022 Declaration public TData Value_1022 Field Value Type Description TData Value_1023 Declaration public TData Value_1023 Field Value Type Description TData Value_103 Declaration public TData Value_103 Field Value Type Description TData Value_104 Declaration public TData Value_104 Field Value Type Description TData Value_105 Declaration public TData Value_105 Field Value Type Description TData Value_106 Declaration public TData Value_106 Field Value Type Description TData Value_107 Declaration public TData Value_107 Field Value Type Description TData Value_108 Declaration public TData Value_108 Field Value Type Description TData Value_109 Declaration public TData Value_109 Field Value Type Description TData Value_11 Declaration public TData Value_11 Field Value Type Description TData Value_110 Declaration public TData Value_110 Field Value Type Description TData Value_111 Declaration public TData Value_111 Field Value Type Description TData Value_112 Declaration public TData Value_112 Field Value Type Description TData Value_113 Declaration public TData Value_113 Field Value Type Description TData Value_114 Declaration public TData Value_114 Field Value Type Description TData Value_115 Declaration public TData Value_115 Field Value Type Description TData Value_116 Declaration public TData Value_116 Field Value Type Description TData Value_117 Declaration public TData Value_117 Field Value Type Description TData Value_118 Declaration public TData Value_118 Field Value Type Description TData Value_119 Declaration public TData Value_119 Field Value Type Description TData Value_12 Declaration public TData Value_12 Field Value Type Description TData Value_120 Declaration public TData Value_120 Field Value Type Description TData Value_121 Declaration public TData Value_121 Field Value Type Description TData Value_122 Declaration public TData Value_122 Field Value Type Description TData Value_123 Declaration public TData Value_123 Field Value Type Description TData Value_124 Declaration public TData Value_124 Field Value Type Description TData Value_125 Declaration public TData Value_125 Field Value Type Description TData Value_126 Declaration public TData Value_126 Field Value Type Description TData Value_127 Declaration public TData Value_127 Field Value Type Description TData Value_128 Declaration public TData Value_128 Field Value Type Description TData Value_129 Declaration public TData Value_129 Field Value Type Description TData Value_13 Declaration public TData Value_13 Field Value Type Description TData Value_130 Declaration public TData Value_130 Field Value Type Description TData Value_131 Declaration public TData Value_131 Field Value Type Description TData Value_132 Declaration public TData Value_132 Field Value Type Description TData Value_133 Declaration public TData Value_133 Field Value Type Description TData Value_134 Declaration public TData Value_134 Field Value Type Description TData Value_135 Declaration public TData Value_135 Field Value Type Description TData Value_136 Declaration public TData Value_136 Field Value Type Description TData Value_137 Declaration public TData Value_137 Field Value Type Description TData Value_138 Declaration public TData Value_138 Field Value Type Description TData Value_139 Declaration public TData Value_139 Field Value Type Description TData Value_14 Declaration public TData Value_14 Field Value Type Description TData Value_140 Declaration public TData Value_140 Field Value Type Description TData Value_141 Declaration public TData Value_141 Field Value Type Description TData Value_142 Declaration public TData Value_142 Field Value Type Description TData Value_143 Declaration public TData Value_143 Field Value Type Description TData Value_144 Declaration public TData Value_144 Field Value Type Description TData Value_145 Declaration public TData Value_145 Field Value Type Description TData Value_146 Declaration public TData Value_146 Field Value Type Description TData Value_147 Declaration public TData Value_147 Field Value Type Description TData Value_148 Declaration public TData Value_148 Field Value Type Description TData Value_149 Declaration public TData Value_149 Field Value Type Description TData Value_15 Declaration public TData Value_15 Field Value Type Description TData Value_150 Declaration public TData Value_150 Field Value Type Description TData Value_151 Declaration public TData Value_151 Field Value Type Description TData Value_152 Declaration public TData Value_152 Field Value Type Description TData Value_153 Declaration public TData Value_153 Field Value Type Description TData Value_154 Declaration public TData Value_154 Field Value Type Description TData Value_155 Declaration public TData Value_155 Field Value Type Description TData Value_156 Declaration public TData Value_156 Field Value Type Description TData Value_157 Declaration public TData Value_157 Field Value Type Description TData Value_158 Declaration public TData Value_158 Field Value Type Description TData Value_159 Declaration public TData Value_159 Field Value Type Description TData Value_16 Declaration public TData Value_16 Field Value Type Description TData Value_160 Declaration public TData Value_160 Field Value Type Description TData Value_161 Declaration public TData Value_161 Field Value Type Description TData Value_162 Declaration public TData Value_162 Field Value Type Description TData Value_163 Declaration public TData Value_163 Field Value Type Description TData Value_164 Declaration public TData Value_164 Field Value Type Description TData Value_165 Declaration public TData Value_165 Field Value Type Description TData Value_166 Declaration public TData Value_166 Field Value Type Description TData Value_167 Declaration public TData Value_167 Field Value Type Description TData Value_168 Declaration public TData Value_168 Field Value Type Description TData Value_169 Declaration public TData Value_169 Field Value Type Description TData Value_17 Declaration public TData Value_17 Field Value Type Description TData Value_170 Declaration public TData Value_170 Field Value Type Description TData Value_171 Declaration public TData Value_171 Field Value Type Description TData Value_172 Declaration public TData Value_172 Field Value Type Description TData Value_173 Declaration public TData Value_173 Field Value Type Description TData Value_174 Declaration public TData Value_174 Field Value Type Description TData Value_175 Declaration public TData Value_175 Field Value Type Description TData Value_176 Declaration public TData Value_176 Field Value Type Description TData Value_177 Declaration public TData Value_177 Field Value Type Description TData Value_178 Declaration public TData Value_178 Field Value Type Description TData Value_179 Declaration public TData Value_179 Field Value Type Description TData Value_18 Declaration public TData Value_18 Field Value Type Description TData Value_180 Declaration public TData Value_180 Field Value Type Description TData Value_181 Declaration public TData Value_181 Field Value Type Description TData Value_182 Declaration public TData Value_182 Field Value Type Description TData Value_183 Declaration public TData Value_183 Field Value Type Description TData Value_184 Declaration public TData Value_184 Field Value Type Description TData Value_185 Declaration public TData Value_185 Field Value Type Description TData Value_186 Declaration public TData Value_186 Field Value Type Description TData Value_187 Declaration public TData Value_187 Field Value Type Description TData Value_188 Declaration public TData Value_188 Field Value Type Description TData Value_189 Declaration public TData Value_189 Field Value Type Description TData Value_19 Declaration public TData Value_19 Field Value Type Description TData Value_190 Declaration public TData Value_190 Field Value Type Description TData Value_191 Declaration public TData Value_191 Field Value Type Description TData Value_192 Declaration public TData Value_192 Field Value Type Description TData Value_193 Declaration public TData Value_193 Field Value Type Description TData Value_194 Declaration public TData Value_194 Field Value Type Description TData Value_195 Declaration public TData Value_195 Field Value Type Description TData Value_196 Declaration public TData Value_196 Field Value Type Description TData Value_197 Declaration public TData Value_197 Field Value Type Description TData Value_198 Declaration public TData Value_198 Field Value Type Description TData Value_199 Declaration public TData Value_199 Field Value Type Description TData Value_2 Declaration public TData Value_2 Field Value Type Description TData Value_20 Declaration public TData Value_20 Field Value Type Description TData Value_200 Declaration public TData Value_200 Field Value Type Description TData Value_201 Declaration public TData Value_201 Field Value Type Description TData Value_202 Declaration public TData Value_202 Field Value Type Description TData Value_203 Declaration public TData Value_203 Field Value Type Description TData Value_204 Declaration public TData Value_204 Field Value Type Description TData Value_205 Declaration public TData Value_205 Field Value Type Description TData Value_206 Declaration public TData Value_206 Field Value Type Description TData Value_207 Declaration public TData Value_207 Field Value Type Description TData Value_208 Declaration public TData Value_208 Field Value Type Description TData Value_209 Declaration public TData Value_209 Field Value Type Description TData Value_21 Declaration public TData Value_21 Field Value Type Description TData Value_210 Declaration public TData Value_210 Field Value Type Description TData Value_211 Declaration public TData Value_211 Field Value Type Description TData Value_212 Declaration public TData Value_212 Field Value Type Description TData Value_213 Declaration public TData Value_213 Field Value Type Description TData Value_214 Declaration public TData Value_214 Field Value Type Description TData Value_215 Declaration public TData Value_215 Field Value Type Description TData Value_216 Declaration public TData Value_216 Field Value Type Description TData Value_217 Declaration public TData Value_217 Field Value Type Description TData Value_218 Declaration public TData Value_218 Field Value Type Description TData Value_219 Declaration public TData Value_219 Field Value Type Description TData Value_22 Declaration public TData Value_22 Field Value Type Description TData Value_220 Declaration public TData Value_220 Field Value Type Description TData Value_221 Declaration public TData Value_221 Field Value Type Description TData Value_222 Declaration public TData Value_222 Field Value Type Description TData Value_223 Declaration public TData Value_223 Field Value Type Description TData Value_224 Declaration public TData Value_224 Field Value Type Description TData Value_225 Declaration public TData Value_225 Field Value Type Description TData Value_226 Declaration public TData Value_226 Field Value Type Description TData Value_227 Declaration public TData Value_227 Field Value Type Description TData Value_228 Declaration public TData Value_228 Field Value Type Description TData Value_229 Declaration public TData Value_229 Field Value Type Description TData Value_23 Declaration public TData Value_23 Field Value Type Description TData Value_230 Declaration public TData Value_230 Field Value Type Description TData Value_231 Declaration public TData Value_231 Field Value Type Description TData Value_232 Declaration public TData Value_232 Field Value Type Description TData Value_233 Declaration public TData Value_233 Field Value Type Description TData Value_234 Declaration public TData Value_234 Field Value Type Description TData Value_235 Declaration public TData Value_235 Field Value Type Description TData Value_236 Declaration public TData Value_236 Field Value Type Description TData Value_237 Declaration public TData Value_237 Field Value Type Description TData Value_238 Declaration public TData Value_238 Field Value Type Description TData Value_239 Declaration public TData Value_239 Field Value Type Description TData Value_24 Declaration public TData Value_24 Field Value Type Description TData Value_240 Declaration public TData Value_240 Field Value Type Description TData Value_241 Declaration public TData Value_241 Field Value Type Description TData Value_242 Declaration public TData Value_242 Field Value Type Description TData Value_243 Declaration public TData Value_243 Field Value Type Description TData Value_244 Declaration public TData Value_244 Field Value Type Description TData Value_245 Declaration public TData Value_245 Field Value Type Description TData Value_246 Declaration public TData Value_246 Field Value Type Description TData Value_247 Declaration public TData Value_247 Field Value Type Description TData Value_248 Declaration public TData Value_248 Field Value Type Description TData Value_249 Declaration public TData Value_249 Field Value Type Description TData Value_25 Declaration public TData Value_25 Field Value Type Description TData Value_250 Declaration public TData Value_250 Field Value Type Description TData Value_251 Declaration public TData Value_251 Field Value Type Description TData Value_252 Declaration public TData Value_252 Field Value Type Description TData Value_253 Declaration public TData Value_253 Field Value Type Description TData Value_254 Declaration public TData Value_254 Field Value Type Description TData Value_255 Declaration public TData Value_255 Field Value Type Description TData Value_256 Declaration public TData Value_256 Field Value Type Description TData Value_257 Declaration public TData Value_257 Field Value Type Description TData Value_258 Declaration public TData Value_258 Field Value Type Description TData Value_259 Declaration public TData Value_259 Field Value Type Description TData Value_26 Declaration public TData Value_26 Field Value Type Description TData Value_260 Declaration public TData Value_260 Field Value Type Description TData Value_261 Declaration public TData Value_261 Field Value Type Description TData Value_262 Declaration public TData Value_262 Field Value Type Description TData Value_263 Declaration public TData Value_263 Field Value Type Description TData Value_264 Declaration public TData Value_264 Field Value Type Description TData Value_265 Declaration public TData Value_265 Field Value Type Description TData Value_266 Declaration public TData Value_266 Field Value Type Description TData Value_267 Declaration public TData Value_267 Field Value Type Description TData Value_268 Declaration public TData Value_268 Field Value Type Description TData Value_269 Declaration public TData Value_269 Field Value Type Description TData Value_27 Declaration public TData Value_27 Field Value Type Description TData Value_270 Declaration public TData Value_270 Field Value Type Description TData Value_271 Declaration public TData Value_271 Field Value Type Description TData Value_272 Declaration public TData Value_272 Field Value Type Description TData Value_273 Declaration public TData Value_273 Field Value Type Description TData Value_274 Declaration public TData Value_274 Field Value Type Description TData Value_275 Declaration public TData Value_275 Field Value Type Description TData Value_276 Declaration public TData Value_276 Field Value Type Description TData Value_277 Declaration public TData Value_277 Field Value Type Description TData Value_278 Declaration public TData Value_278 Field Value Type Description TData Value_279 Declaration public TData Value_279 Field Value Type Description TData Value_28 Declaration public TData Value_28 Field Value Type Description TData Value_280 Declaration public TData Value_280 Field Value Type Description TData Value_281 Declaration public TData Value_281 Field Value Type Description TData Value_282 Declaration public TData Value_282 Field Value Type Description TData Value_283 Declaration public TData Value_283 Field Value Type Description TData Value_284 Declaration public TData Value_284 Field Value Type Description TData Value_285 Declaration public TData Value_285 Field Value Type Description TData Value_286 Declaration public TData Value_286 Field Value Type Description TData Value_287 Declaration public TData Value_287 Field Value Type Description TData Value_288 Declaration public TData Value_288 Field Value Type Description TData Value_289 Declaration public TData Value_289 Field Value Type Description TData Value_29 Declaration public TData Value_29 Field Value Type Description TData Value_290 Declaration public TData Value_290 Field Value Type Description TData Value_291 Declaration public TData Value_291 Field Value Type Description TData Value_292 Declaration public TData Value_292 Field Value Type Description TData Value_293 Declaration public TData Value_293 Field Value Type Description TData Value_294 Declaration public TData Value_294 Field Value Type Description TData Value_295 Declaration public TData Value_295 Field Value Type Description TData Value_296 Declaration public TData Value_296 Field Value Type Description TData Value_297 Declaration public TData Value_297 Field Value Type Description TData Value_298 Declaration public TData Value_298 Field Value Type Description TData Value_299 Declaration public TData Value_299 Field Value Type Description TData Value_3 Declaration public TData Value_3 Field Value Type Description TData Value_30 Declaration public TData Value_30 Field Value Type Description TData Value_300 Declaration public TData Value_300 Field Value Type Description TData Value_301 Declaration public TData Value_301 Field Value Type Description TData Value_302 Declaration public TData Value_302 Field Value Type Description TData Value_303 Declaration public TData Value_303 Field Value Type Description TData Value_304 Declaration public TData Value_304 Field Value Type Description TData Value_305 Declaration public TData Value_305 Field Value Type Description TData Value_306 Declaration public TData Value_306 Field Value Type Description TData Value_307 Declaration public TData Value_307 Field Value Type Description TData Value_308 Declaration public TData Value_308 Field Value Type Description TData Value_309 Declaration public TData Value_309 Field Value Type Description TData Value_31 Declaration public TData Value_31 Field Value Type Description TData Value_310 Declaration public TData Value_310 Field Value Type Description TData Value_311 Declaration public TData Value_311 Field Value Type Description TData Value_312 Declaration public TData Value_312 Field Value Type Description TData Value_313 Declaration public TData Value_313 Field Value Type Description TData Value_314 Declaration public TData Value_314 Field Value Type Description TData Value_315 Declaration public TData Value_315 Field Value Type Description TData Value_316 Declaration public TData Value_316 Field Value Type Description TData Value_317 Declaration public TData Value_317 Field Value Type Description TData Value_318 Declaration public TData Value_318 Field Value Type Description TData Value_319 Declaration public TData Value_319 Field Value Type Description TData Value_32 Declaration public TData Value_32 Field Value Type Description TData Value_320 Declaration public TData Value_320 Field Value Type Description TData Value_321 Declaration public TData Value_321 Field Value Type Description TData Value_322 Declaration public TData Value_322 Field Value Type Description TData Value_323 Declaration public TData Value_323 Field Value Type Description TData Value_324 Declaration public TData Value_324 Field Value Type Description TData Value_325 Declaration public TData Value_325 Field Value Type Description TData Value_326 Declaration public TData Value_326 Field Value Type Description TData Value_327 Declaration public TData Value_327 Field Value Type Description TData Value_328 Declaration public TData Value_328 Field Value Type Description TData Value_329 Declaration public TData Value_329 Field Value Type Description TData Value_33 Declaration public TData Value_33 Field Value Type Description TData Value_330 Declaration public TData Value_330 Field Value Type Description TData Value_331 Declaration public TData Value_331 Field Value Type Description TData Value_332 Declaration public TData Value_332 Field Value Type Description TData Value_333 Declaration public TData Value_333 Field Value Type Description TData Value_334 Declaration public TData Value_334 Field Value Type Description TData Value_335 Declaration public TData Value_335 Field Value Type Description TData Value_336 Declaration public TData Value_336 Field Value Type Description TData Value_337 Declaration public TData Value_337 Field Value Type Description TData Value_338 Declaration public TData Value_338 Field Value Type Description TData Value_339 Declaration public TData Value_339 Field Value Type Description TData Value_34 Declaration public TData Value_34 Field Value Type Description TData Value_340 Declaration public TData Value_340 Field Value Type Description TData Value_341 Declaration public TData Value_341 Field Value Type Description TData Value_342 Declaration public TData Value_342 Field Value Type Description TData Value_343 Declaration public TData Value_343 Field Value Type Description TData Value_344 Declaration public TData Value_344 Field Value Type Description TData Value_345 Declaration public TData Value_345 Field Value Type Description TData Value_346 Declaration public TData Value_346 Field Value Type Description TData Value_347 Declaration public TData Value_347 Field Value Type Description TData Value_348 Declaration public TData Value_348 Field Value Type Description TData Value_349 Declaration public TData Value_349 Field Value Type Description TData Value_35 Declaration public TData Value_35 Field Value Type Description TData Value_350 Declaration public TData Value_350 Field Value Type Description TData Value_351 Declaration public TData Value_351 Field Value Type Description TData Value_352 Declaration public TData Value_352 Field Value Type Description TData Value_353 Declaration public TData Value_353 Field Value Type Description TData Value_354 Declaration public TData Value_354 Field Value Type Description TData Value_355 Declaration public TData Value_355 Field Value Type Description TData Value_356 Declaration public TData Value_356 Field Value Type Description TData Value_357 Declaration public TData Value_357 Field Value Type Description TData Value_358 Declaration public TData Value_358 Field Value Type Description TData Value_359 Declaration public TData Value_359 Field Value Type Description TData Value_36 Declaration public TData Value_36 Field Value Type Description TData Value_360 Declaration public TData Value_360 Field Value Type Description TData Value_361 Declaration public TData Value_361 Field Value Type Description TData Value_362 Declaration public TData Value_362 Field Value Type Description TData Value_363 Declaration public TData Value_363 Field Value Type Description TData Value_364 Declaration public TData Value_364 Field Value Type Description TData Value_365 Declaration public TData Value_365 Field Value Type Description TData Value_366 Declaration public TData Value_366 Field Value Type Description TData Value_367 Declaration public TData Value_367 Field Value Type Description TData Value_368 Declaration public TData Value_368 Field Value Type Description TData Value_369 Declaration public TData Value_369 Field Value Type Description TData Value_37 Declaration public TData Value_37 Field Value Type Description TData Value_370 Declaration public TData Value_370 Field Value Type Description TData Value_371 Declaration public TData Value_371 Field Value Type Description TData Value_372 Declaration public TData Value_372 Field Value Type Description TData Value_373 Declaration public TData Value_373 Field Value Type Description TData Value_374 Declaration public TData Value_374 Field Value Type Description TData Value_375 Declaration public TData Value_375 Field Value Type Description TData Value_376 Declaration public TData Value_376 Field Value Type Description TData Value_377 Declaration public TData Value_377 Field Value Type Description TData Value_378 Declaration public TData Value_378 Field Value Type Description TData Value_379 Declaration public TData Value_379 Field Value Type Description TData Value_38 Declaration public TData Value_38 Field Value Type Description TData Value_380 Declaration public TData Value_380 Field Value Type Description TData Value_381 Declaration public TData Value_381 Field Value Type Description TData Value_382 Declaration public TData Value_382 Field Value Type Description TData Value_383 Declaration public TData Value_383 Field Value Type Description TData Value_384 Declaration public TData Value_384 Field Value Type Description TData Value_385 Declaration public TData Value_385 Field Value Type Description TData Value_386 Declaration public TData Value_386 Field Value Type Description TData Value_387 Declaration public TData Value_387 Field Value Type Description TData Value_388 Declaration public TData Value_388 Field Value Type Description TData Value_389 Declaration public TData Value_389 Field Value Type Description TData Value_39 Declaration public TData Value_39 Field Value Type Description TData Value_390 Declaration public TData Value_390 Field Value Type Description TData Value_391 Declaration public TData Value_391 Field Value Type Description TData Value_392 Declaration public TData Value_392 Field Value Type Description TData Value_393 Declaration public TData Value_393 Field Value Type Description TData Value_394 Declaration public TData Value_394 Field Value Type Description TData Value_395 Declaration public TData Value_395 Field Value Type Description TData Value_396 Declaration public TData Value_396 Field Value Type Description TData Value_397 Declaration public TData Value_397 Field Value Type Description TData Value_398 Declaration public TData Value_398 Field Value Type Description TData Value_399 Declaration public TData Value_399 Field Value Type Description TData Value_4 Declaration public TData Value_4 Field Value Type Description TData Value_40 Declaration public TData Value_40 Field Value Type Description TData Value_400 Declaration public TData Value_400 Field Value Type Description TData Value_401 Declaration public TData Value_401 Field Value Type Description TData Value_402 Declaration public TData Value_402 Field Value Type Description TData Value_403 Declaration public TData Value_403 Field Value Type Description TData Value_404 Declaration public TData Value_404 Field Value Type Description TData Value_405 Declaration public TData Value_405 Field Value Type Description TData Value_406 Declaration public TData Value_406 Field Value Type Description TData Value_407 Declaration public TData Value_407 Field Value Type Description TData Value_408 Declaration public TData Value_408 Field Value Type Description TData Value_409 Declaration public TData Value_409 Field Value Type Description TData Value_41 Declaration public TData Value_41 Field Value Type Description TData Value_410 Declaration public TData Value_410 Field Value Type Description TData Value_411 Declaration public TData Value_411 Field Value Type Description TData Value_412 Declaration public TData Value_412 Field Value Type Description TData Value_413 Declaration public TData Value_413 Field Value Type Description TData Value_414 Declaration public TData Value_414 Field Value Type Description TData Value_415 Declaration public TData Value_415 Field Value Type Description TData Value_416 Declaration public TData Value_416 Field Value Type Description TData Value_417 Declaration public TData Value_417 Field Value Type Description TData Value_418 Declaration public TData Value_418 Field Value Type Description TData Value_419 Declaration public TData Value_419 Field Value Type Description TData Value_42 Declaration public TData Value_42 Field Value Type Description TData Value_420 Declaration public TData Value_420 Field Value Type Description TData Value_421 Declaration public TData Value_421 Field Value Type Description TData Value_422 Declaration public TData Value_422 Field Value Type Description TData Value_423 Declaration public TData Value_423 Field Value Type Description TData Value_424 Declaration public TData Value_424 Field Value Type Description TData Value_425 Declaration public TData Value_425 Field Value Type Description TData Value_426 Declaration public TData Value_426 Field Value Type Description TData Value_427 Declaration public TData Value_427 Field Value Type Description TData Value_428 Declaration public TData Value_428 Field Value Type Description TData Value_429 Declaration public TData Value_429 Field Value Type Description TData Value_43 Declaration public TData Value_43 Field Value Type Description TData Value_430 Declaration public TData Value_430 Field Value Type Description TData Value_431 Declaration public TData Value_431 Field Value Type Description TData Value_432 Declaration public TData Value_432 Field Value Type Description TData Value_433 Declaration public TData Value_433 Field Value Type Description TData Value_434 Declaration public TData Value_434 Field Value Type Description TData Value_435 Declaration public TData Value_435 Field Value Type Description TData Value_436 Declaration public TData Value_436 Field Value Type Description TData Value_437 Declaration public TData Value_437 Field Value Type Description TData Value_438 Declaration public TData Value_438 Field Value Type Description TData Value_439 Declaration public TData Value_439 Field Value Type Description TData Value_44 Declaration public TData Value_44 Field Value Type Description TData Value_440 Declaration public TData Value_440 Field Value Type Description TData Value_441 Declaration public TData Value_441 Field Value Type Description TData Value_442 Declaration public TData Value_442 Field Value Type Description TData Value_443 Declaration public TData Value_443 Field Value Type Description TData Value_444 Declaration public TData Value_444 Field Value Type Description TData Value_445 Declaration public TData Value_445 Field Value Type Description TData Value_446 Declaration public TData Value_446 Field Value Type Description TData Value_447 Declaration public TData Value_447 Field Value Type Description TData Value_448 Declaration public TData Value_448 Field Value Type Description TData Value_449 Declaration public TData Value_449 Field Value Type Description TData Value_45 Declaration public TData Value_45 Field Value Type Description TData Value_450 Declaration public TData Value_450 Field Value Type Description TData Value_451 Declaration public TData Value_451 Field Value Type Description TData Value_452 Declaration public TData Value_452 Field Value Type Description TData Value_453 Declaration public TData Value_453 Field Value Type Description TData Value_454 Declaration public TData Value_454 Field Value Type Description TData Value_455 Declaration public TData Value_455 Field Value Type Description TData Value_456 Declaration public TData Value_456 Field Value Type Description TData Value_457 Declaration public TData Value_457 Field Value Type Description TData Value_458 Declaration public TData Value_458 Field Value Type Description TData Value_459 Declaration public TData Value_459 Field Value Type Description TData Value_46 Declaration public TData Value_46 Field Value Type Description TData Value_460 Declaration public TData Value_460 Field Value Type Description TData Value_461 Declaration public TData Value_461 Field Value Type Description TData Value_462 Declaration public TData Value_462 Field Value Type Description TData Value_463 Declaration public TData Value_463 Field Value Type Description TData Value_464 Declaration public TData Value_464 Field Value Type Description TData Value_465 Declaration public TData Value_465 Field Value Type Description TData Value_466 Declaration public TData Value_466 Field Value Type Description TData Value_467 Declaration public TData Value_467 Field Value Type Description TData Value_468 Declaration public TData Value_468 Field Value Type Description TData Value_469 Declaration public TData Value_469 Field Value Type Description TData Value_47 Declaration public TData Value_47 Field Value Type Description TData Value_470 Declaration public TData Value_470 Field Value Type Description TData Value_471 Declaration public TData Value_471 Field Value Type Description TData Value_472 Declaration public TData Value_472 Field Value Type Description TData Value_473 Declaration public TData Value_473 Field Value Type Description TData Value_474 Declaration public TData Value_474 Field Value Type Description TData Value_475 Declaration public TData Value_475 Field Value Type Description TData Value_476 Declaration public TData Value_476 Field Value Type Description TData Value_477 Declaration public TData Value_477 Field Value Type Description TData Value_478 Declaration public TData Value_478 Field Value Type Description TData Value_479 Declaration public TData Value_479 Field Value Type Description TData Value_48 Declaration public TData Value_48 Field Value Type Description TData Value_480 Declaration public TData Value_480 Field Value Type Description TData Value_481 Declaration public TData Value_481 Field Value Type Description TData Value_482 Declaration public TData Value_482 Field Value Type Description TData Value_483 Declaration public TData Value_483 Field Value Type Description TData Value_484 Declaration public TData Value_484 Field Value Type Description TData Value_485 Declaration public TData Value_485 Field Value Type Description TData Value_486 Declaration public TData Value_486 Field Value Type Description TData Value_487 Declaration public TData Value_487 Field Value Type Description TData Value_488 Declaration public TData Value_488 Field Value Type Description TData Value_489 Declaration public TData Value_489 Field Value Type Description TData Value_49 Declaration public TData Value_49 Field Value Type Description TData Value_490 Declaration public TData Value_490 Field Value Type Description TData Value_491 Declaration public TData Value_491 Field Value Type Description TData Value_492 Declaration public TData Value_492 Field Value Type Description TData Value_493 Declaration public TData Value_493 Field Value Type Description TData Value_494 Declaration public TData Value_494 Field Value Type Description TData Value_495 Declaration public TData Value_495 Field Value Type Description TData Value_496 Declaration public TData Value_496 Field Value Type Description TData Value_497 Declaration public TData Value_497 Field Value Type Description TData Value_498 Declaration public TData Value_498 Field Value Type Description TData Value_499 Declaration public TData Value_499 Field Value Type Description TData Value_5 Declaration public TData Value_5 Field Value Type Description TData Value_50 Declaration public TData Value_50 Field Value Type Description TData Value_500 Declaration public TData Value_500 Field Value Type Description TData Value_501 Declaration public TData Value_501 Field Value Type Description TData Value_502 Declaration public TData Value_502 Field Value Type Description TData Value_503 Declaration public TData Value_503 Field Value Type Description TData Value_504 Declaration public TData Value_504 Field Value Type Description TData Value_505 Declaration public TData Value_505 Field Value Type Description TData Value_506 Declaration public TData Value_506 Field Value Type Description TData Value_507 Declaration public TData Value_507 Field Value Type Description TData Value_508 Declaration public TData Value_508 Field Value Type Description TData Value_509 Declaration public TData Value_509 Field Value Type Description TData Value_51 Declaration public TData Value_51 Field Value Type Description TData Value_510 Declaration public TData Value_510 Field Value Type Description TData Value_511 Declaration public TData Value_511 Field Value Type Description TData Value_512 Declaration public TData Value_512 Field Value Type Description TData Value_513 Declaration public TData Value_513 Field Value Type Description TData Value_514 Declaration public TData Value_514 Field Value Type Description TData Value_515 Declaration public TData Value_515 Field Value Type Description TData Value_516 Declaration public TData Value_516 Field Value Type Description TData Value_517 Declaration public TData Value_517 Field Value Type Description TData Value_518 Declaration public TData Value_518 Field Value Type Description TData Value_519 Declaration public TData Value_519 Field Value Type Description TData Value_52 Declaration public TData Value_52 Field Value Type Description TData Value_520 Declaration public TData Value_520 Field Value Type Description TData Value_521 Declaration public TData Value_521 Field Value Type Description TData Value_522 Declaration public TData Value_522 Field Value Type Description TData Value_523 Declaration public TData Value_523 Field Value Type Description TData Value_524 Declaration public TData Value_524 Field Value Type Description TData Value_525 Declaration public TData Value_525 Field Value Type Description TData Value_526 Declaration public TData Value_526 Field Value Type Description TData Value_527 Declaration public TData Value_527 Field Value Type Description TData Value_528 Declaration public TData Value_528 Field Value Type Description TData Value_529 Declaration public TData Value_529 Field Value Type Description TData Value_53 Declaration public TData Value_53 Field Value Type Description TData Value_530 Declaration public TData Value_530 Field Value Type Description TData Value_531 Declaration public TData Value_531 Field Value Type Description TData Value_532 Declaration public TData Value_532 Field Value Type Description TData Value_533 Declaration public TData Value_533 Field Value Type Description TData Value_534 Declaration public TData Value_534 Field Value Type Description TData Value_535 Declaration public TData Value_535 Field Value Type Description TData Value_536 Declaration public TData Value_536 Field Value Type Description TData Value_537 Declaration public TData Value_537 Field Value Type Description TData Value_538 Declaration public TData Value_538 Field Value Type Description TData Value_539 Declaration public TData Value_539 Field Value Type Description TData Value_54 Declaration public TData Value_54 Field Value Type Description TData Value_540 Declaration public TData Value_540 Field Value Type Description TData Value_541 Declaration public TData Value_541 Field Value Type Description TData Value_542 Declaration public TData Value_542 Field Value Type Description TData Value_543 Declaration public TData Value_543 Field Value Type Description TData Value_544 Declaration public TData Value_544 Field Value Type Description TData Value_545 Declaration public TData Value_545 Field Value Type Description TData Value_546 Declaration public TData Value_546 Field Value Type Description TData Value_547 Declaration public TData Value_547 Field Value Type Description TData Value_548 Declaration public TData Value_548 Field Value Type Description TData Value_549 Declaration public TData Value_549 Field Value Type Description TData Value_55 Declaration public TData Value_55 Field Value Type Description TData Value_550 Declaration public TData Value_550 Field Value Type Description TData Value_551 Declaration public TData Value_551 Field Value Type Description TData Value_552 Declaration public TData Value_552 Field Value Type Description TData Value_553 Declaration public TData Value_553 Field Value Type Description TData Value_554 Declaration public TData Value_554 Field Value Type Description TData Value_555 Declaration public TData Value_555 Field Value Type Description TData Value_556 Declaration public TData Value_556 Field Value Type Description TData Value_557 Declaration public TData Value_557 Field Value Type Description TData Value_558 Declaration public TData Value_558 Field Value Type Description TData Value_559 Declaration public TData Value_559 Field Value Type Description TData Value_56 Declaration public TData Value_56 Field Value Type Description TData Value_560 Declaration public TData Value_560 Field Value Type Description TData Value_561 Declaration public TData Value_561 Field Value Type Description TData Value_562 Declaration public TData Value_562 Field Value Type Description TData Value_563 Declaration public TData Value_563 Field Value Type Description TData Value_564 Declaration public TData Value_564 Field Value Type Description TData Value_565 Declaration public TData Value_565 Field Value Type Description TData Value_566 Declaration public TData Value_566 Field Value Type Description TData Value_567 Declaration public TData Value_567 Field Value Type Description TData Value_568 Declaration public TData Value_568 Field Value Type Description TData Value_569 Declaration public TData Value_569 Field Value Type Description TData Value_57 Declaration public TData Value_57 Field Value Type Description TData Value_570 Declaration public TData Value_570 Field Value Type Description TData Value_571 Declaration public TData Value_571 Field Value Type Description TData Value_572 Declaration public TData Value_572 Field Value Type Description TData Value_573 Declaration public TData Value_573 Field Value Type Description TData Value_574 Declaration public TData Value_574 Field Value Type Description TData Value_575 Declaration public TData Value_575 Field Value Type Description TData Value_576 Declaration public TData Value_576 Field Value Type Description TData Value_577 Declaration public TData Value_577 Field Value Type Description TData Value_578 Declaration public TData Value_578 Field Value Type Description TData Value_579 Declaration public TData Value_579 Field Value Type Description TData Value_58 Declaration public TData Value_58 Field Value Type Description TData Value_580 Declaration public TData Value_580 Field Value Type Description TData Value_581 Declaration public TData Value_581 Field Value Type Description TData Value_582 Declaration public TData Value_582 Field Value Type Description TData Value_583 Declaration public TData Value_583 Field Value Type Description TData Value_584 Declaration public TData Value_584 Field Value Type Description TData Value_585 Declaration public TData Value_585 Field Value Type Description TData Value_586 Declaration public TData Value_586 Field Value Type Description TData Value_587 Declaration public TData Value_587 Field Value Type Description TData Value_588 Declaration public TData Value_588 Field Value Type Description TData Value_589 Declaration public TData Value_589 Field Value Type Description TData Value_59 Declaration public TData Value_59 Field Value Type Description TData Value_590 Declaration public TData Value_590 Field Value Type Description TData Value_591 Declaration public TData Value_591 Field Value Type Description TData Value_592 Declaration public TData Value_592 Field Value Type Description TData Value_593 Declaration public TData Value_593 Field Value Type Description TData Value_594 Declaration public TData Value_594 Field Value Type Description TData Value_595 Declaration public TData Value_595 Field Value Type Description TData Value_596 Declaration public TData Value_596 Field Value Type Description TData Value_597 Declaration public TData Value_597 Field Value Type Description TData Value_598 Declaration public TData Value_598 Field Value Type Description TData Value_599 Declaration public TData Value_599 Field Value Type Description TData Value_6 Declaration public TData Value_6 Field Value Type Description TData Value_60 Declaration public TData Value_60 Field Value Type Description TData Value_600 Declaration public TData Value_600 Field Value Type Description TData Value_601 Declaration public TData Value_601 Field Value Type Description TData Value_602 Declaration public TData Value_602 Field Value Type Description TData Value_603 Declaration public TData Value_603 Field Value Type Description TData Value_604 Declaration public TData Value_604 Field Value Type Description TData Value_605 Declaration public TData Value_605 Field Value Type Description TData Value_606 Declaration public TData Value_606 Field Value Type Description TData Value_607 Declaration public TData Value_607 Field Value Type Description TData Value_608 Declaration public TData Value_608 Field Value Type Description TData Value_609 Declaration public TData Value_609 Field Value Type Description TData Value_61 Declaration public TData Value_61 Field Value Type Description TData Value_610 Declaration public TData Value_610 Field Value Type Description TData Value_611 Declaration public TData Value_611 Field Value Type Description TData Value_612 Declaration public TData Value_612 Field Value Type Description TData Value_613 Declaration public TData Value_613 Field Value Type Description TData Value_614 Declaration public TData Value_614 Field Value Type Description TData Value_615 Declaration public TData Value_615 Field Value Type Description TData Value_616 Declaration public TData Value_616 Field Value Type Description TData Value_617 Declaration public TData Value_617 Field Value Type Description TData Value_618 Declaration public TData Value_618 Field Value Type Description TData Value_619 Declaration public TData Value_619 Field Value Type Description TData Value_62 Declaration public TData Value_62 Field Value Type Description TData Value_620 Declaration public TData Value_620 Field Value Type Description TData Value_621 Declaration public TData Value_621 Field Value Type Description TData Value_622 Declaration public TData Value_622 Field Value Type Description TData Value_623 Declaration public TData Value_623 Field Value Type Description TData Value_624 Declaration public TData Value_624 Field Value Type Description TData Value_625 Declaration public TData Value_625 Field Value Type Description TData Value_626 Declaration public TData Value_626 Field Value Type Description TData Value_627 Declaration public TData Value_627 Field Value Type Description TData Value_628 Declaration public TData Value_628 Field Value Type Description TData Value_629 Declaration public TData Value_629 Field Value Type Description TData Value_63 Declaration public TData Value_63 Field Value Type Description TData Value_630 Declaration public TData Value_630 Field Value Type Description TData Value_631 Declaration public TData Value_631 Field Value Type Description TData Value_632 Declaration public TData Value_632 Field Value Type Description TData Value_633 Declaration public TData Value_633 Field Value Type Description TData Value_634 Declaration public TData Value_634 Field Value Type Description TData Value_635 Declaration public TData Value_635 Field Value Type Description TData Value_636 Declaration public TData Value_636 Field Value Type Description TData Value_637 Declaration public TData Value_637 Field Value Type Description TData Value_638 Declaration public TData Value_638 Field Value Type Description TData Value_639 Declaration public TData Value_639 Field Value Type Description TData Value_64 Declaration public TData Value_64 Field Value Type Description TData Value_640 Declaration public TData Value_640 Field Value Type Description TData Value_641 Declaration public TData Value_641 Field Value Type Description TData Value_642 Declaration public TData Value_642 Field Value Type Description TData Value_643 Declaration public TData Value_643 Field Value Type Description TData Value_644 Declaration public TData Value_644 Field Value Type Description TData Value_645 Declaration public TData Value_645 Field Value Type Description TData Value_646 Declaration public TData Value_646 Field Value Type Description TData Value_647 Declaration public TData Value_647 Field Value Type Description TData Value_648 Declaration public TData Value_648 Field Value Type Description TData Value_649 Declaration public TData Value_649 Field Value Type Description TData Value_65 Declaration public TData Value_65 Field Value Type Description TData Value_650 Declaration public TData Value_650 Field Value Type Description TData Value_651 Declaration public TData Value_651 Field Value Type Description TData Value_652 Declaration public TData Value_652 Field Value Type Description TData Value_653 Declaration public TData Value_653 Field Value Type Description TData Value_654 Declaration public TData Value_654 Field Value Type Description TData Value_655 Declaration public TData Value_655 Field Value Type Description TData Value_656 Declaration public TData Value_656 Field Value Type Description TData Value_657 Declaration public TData Value_657 Field Value Type Description TData Value_658 Declaration public TData Value_658 Field Value Type Description TData Value_659 Declaration public TData Value_659 Field Value Type Description TData Value_66 Declaration public TData Value_66 Field Value Type Description TData Value_660 Declaration public TData Value_660 Field Value Type Description TData Value_661 Declaration public TData Value_661 Field Value Type Description TData Value_662 Declaration public TData Value_662 Field Value Type Description TData Value_663 Declaration public TData Value_663 Field Value Type Description TData Value_664 Declaration public TData Value_664 Field Value Type Description TData Value_665 Declaration public TData Value_665 Field Value Type Description TData Value_666 Declaration public TData Value_666 Field Value Type Description TData Value_667 Declaration public TData Value_667 Field Value Type Description TData Value_668 Declaration public TData Value_668 Field Value Type Description TData Value_669 Declaration public TData Value_669 Field Value Type Description TData Value_67 Declaration public TData Value_67 Field Value Type Description TData Value_670 Declaration public TData Value_670 Field Value Type Description TData Value_671 Declaration public TData Value_671 Field Value Type Description TData Value_672 Declaration public TData Value_672 Field Value Type Description TData Value_673 Declaration public TData Value_673 Field Value Type Description TData Value_674 Declaration public TData Value_674 Field Value Type Description TData Value_675 Declaration public TData Value_675 Field Value Type Description TData Value_676 Declaration public TData Value_676 Field Value Type Description TData Value_677 Declaration public TData Value_677 Field Value Type Description TData Value_678 Declaration public TData Value_678 Field Value Type Description TData Value_679 Declaration public TData Value_679 Field Value Type Description TData Value_68 Declaration public TData Value_68 Field Value Type Description TData Value_680 Declaration public TData Value_680 Field Value Type Description TData Value_681 Declaration public TData Value_681 Field Value Type Description TData Value_682 Declaration public TData Value_682 Field Value Type Description TData Value_683 Declaration public TData Value_683 Field Value Type Description TData Value_684 Declaration public TData Value_684 Field Value Type Description TData Value_685 Declaration public TData Value_685 Field Value Type Description TData Value_686 Declaration public TData Value_686 Field Value Type Description TData Value_687 Declaration public TData Value_687 Field Value Type Description TData Value_688 Declaration public TData Value_688 Field Value Type Description TData Value_689 Declaration public TData Value_689 Field Value Type Description TData Value_69 Declaration public TData Value_69 Field Value Type Description TData Value_690 Declaration public TData Value_690 Field Value Type Description TData Value_691 Declaration public TData Value_691 Field Value Type Description TData Value_692 Declaration public TData Value_692 Field Value Type Description TData Value_693 Declaration public TData Value_693 Field Value Type Description TData Value_694 Declaration public TData Value_694 Field Value Type Description TData Value_695 Declaration public TData Value_695 Field Value Type Description TData Value_696 Declaration public TData Value_696 Field Value Type Description TData Value_697 Declaration public TData Value_697 Field Value Type Description TData Value_698 Declaration public TData Value_698 Field Value Type Description TData Value_699 Declaration public TData Value_699 Field Value Type Description TData Value_7 Declaration public TData Value_7 Field Value Type Description TData Value_70 Declaration public TData Value_70 Field Value Type Description TData Value_700 Declaration public TData Value_700 Field Value Type Description TData Value_701 Declaration public TData Value_701 Field Value Type Description TData Value_702 Declaration public TData Value_702 Field Value Type Description TData Value_703 Declaration public TData Value_703 Field Value Type Description TData Value_704 Declaration public TData Value_704 Field Value Type Description TData Value_705 Declaration public TData Value_705 Field Value Type Description TData Value_706 Declaration public TData Value_706 Field Value Type Description TData Value_707 Declaration public TData Value_707 Field Value Type Description TData Value_708 Declaration public TData Value_708 Field Value Type Description TData Value_709 Declaration public TData Value_709 Field Value Type Description TData Value_71 Declaration public TData Value_71 Field Value Type Description TData Value_710 Declaration public TData Value_710 Field Value Type Description TData Value_711 Declaration public TData Value_711 Field Value Type Description TData Value_712 Declaration public TData Value_712 Field Value Type Description TData Value_713 Declaration public TData Value_713 Field Value Type Description TData Value_714 Declaration public TData Value_714 Field Value Type Description TData Value_715 Declaration public TData Value_715 Field Value Type Description TData Value_716 Declaration public TData Value_716 Field Value Type Description TData Value_717 Declaration public TData Value_717 Field Value Type Description TData Value_718 Declaration public TData Value_718 Field Value Type Description TData Value_719 Declaration public TData Value_719 Field Value Type Description TData Value_72 Declaration public TData Value_72 Field Value Type Description TData Value_720 Declaration public TData Value_720 Field Value Type Description TData Value_721 Declaration public TData Value_721 Field Value Type Description TData Value_722 Declaration public TData Value_722 Field Value Type Description TData Value_723 Declaration public TData Value_723 Field Value Type Description TData Value_724 Declaration public TData Value_724 Field Value Type Description TData Value_725 Declaration public TData Value_725 Field Value Type Description TData Value_726 Declaration public TData Value_726 Field Value Type Description TData Value_727 Declaration public TData Value_727 Field Value Type Description TData Value_728 Declaration public TData Value_728 Field Value Type Description TData Value_729 Declaration public TData Value_729 Field Value Type Description TData Value_73 Declaration public TData Value_73 Field Value Type Description TData Value_730 Declaration public TData Value_730 Field Value Type Description TData Value_731 Declaration public TData Value_731 Field Value Type Description TData Value_732 Declaration public TData Value_732 Field Value Type Description TData Value_733 Declaration public TData Value_733 Field Value Type Description TData Value_734 Declaration public TData Value_734 Field Value Type Description TData Value_735 Declaration public TData Value_735 Field Value Type Description TData Value_736 Declaration public TData Value_736 Field Value Type Description TData Value_737 Declaration public TData Value_737 Field Value Type Description TData Value_738 Declaration public TData Value_738 Field Value Type Description TData Value_739 Declaration public TData Value_739 Field Value Type Description TData Value_74 Declaration public TData Value_74 Field Value Type Description TData Value_740 Declaration public TData Value_740 Field Value Type Description TData Value_741 Declaration public TData Value_741 Field Value Type Description TData Value_742 Declaration public TData Value_742 Field Value Type Description TData Value_743 Declaration public TData Value_743 Field Value Type Description TData Value_744 Declaration public TData Value_744 Field Value Type Description TData Value_745 Declaration public TData Value_745 Field Value Type Description TData Value_746 Declaration public TData Value_746 Field Value Type Description TData Value_747 Declaration public TData Value_747 Field Value Type Description TData Value_748 Declaration public TData Value_748 Field Value Type Description TData Value_749 Declaration public TData Value_749 Field Value Type Description TData Value_75 Declaration public TData Value_75 Field Value Type Description TData Value_750 Declaration public TData Value_750 Field Value Type Description TData Value_751 Declaration public TData Value_751 Field Value Type Description TData Value_752 Declaration public TData Value_752 Field Value Type Description TData Value_753 Declaration public TData Value_753 Field Value Type Description TData Value_754 Declaration public TData Value_754 Field Value Type Description TData Value_755 Declaration public TData Value_755 Field Value Type Description TData Value_756 Declaration public TData Value_756 Field Value Type Description TData Value_757 Declaration public TData Value_757 Field Value Type Description TData Value_758 Declaration public TData Value_758 Field Value Type Description TData Value_759 Declaration public TData Value_759 Field Value Type Description TData Value_76 Declaration public TData Value_76 Field Value Type Description TData Value_760 Declaration public TData Value_760 Field Value Type Description TData Value_761 Declaration public TData Value_761 Field Value Type Description TData Value_762 Declaration public TData Value_762 Field Value Type Description TData Value_763 Declaration public TData Value_763 Field Value Type Description TData Value_764 Declaration public TData Value_764 Field Value Type Description TData Value_765 Declaration public TData Value_765 Field Value Type Description TData Value_766 Declaration public TData Value_766 Field Value Type Description TData Value_767 Declaration public TData Value_767 Field Value Type Description TData Value_768 Declaration public TData Value_768 Field Value Type Description TData Value_769 Declaration public TData Value_769 Field Value Type Description TData Value_77 Declaration public TData Value_77 Field Value Type Description TData Value_770 Declaration public TData Value_770 Field Value Type Description TData Value_771 Declaration public TData Value_771 Field Value Type Description TData Value_772 Declaration public TData Value_772 Field Value Type Description TData Value_773 Declaration public TData Value_773 Field Value Type Description TData Value_774 Declaration public TData Value_774 Field Value Type Description TData Value_775 Declaration public TData Value_775 Field Value Type Description TData Value_776 Declaration public TData Value_776 Field Value Type Description TData Value_777 Declaration public TData Value_777 Field Value Type Description TData Value_778 Declaration public TData Value_778 Field Value Type Description TData Value_779 Declaration public TData Value_779 Field Value Type Description TData Value_78 Declaration public TData Value_78 Field Value Type Description TData Value_780 Declaration public TData Value_780 Field Value Type Description TData Value_781 Declaration public TData Value_781 Field Value Type Description TData Value_782 Declaration public TData Value_782 Field Value Type Description TData Value_783 Declaration public TData Value_783 Field Value Type Description TData Value_784 Declaration public TData Value_784 Field Value Type Description TData Value_785 Declaration public TData Value_785 Field Value Type Description TData Value_786 Declaration public TData Value_786 Field Value Type Description TData Value_787 Declaration public TData Value_787 Field Value Type Description TData Value_788 Declaration public TData Value_788 Field Value Type Description TData Value_789 Declaration public TData Value_789 Field Value Type Description TData Value_79 Declaration public TData Value_79 Field Value Type Description TData Value_790 Declaration public TData Value_790 Field Value Type Description TData Value_791 Declaration public TData Value_791 Field Value Type Description TData Value_792 Declaration public TData Value_792 Field Value Type Description TData Value_793 Declaration public TData Value_793 Field Value Type Description TData Value_794 Declaration public TData Value_794 Field Value Type Description TData Value_795 Declaration public TData Value_795 Field Value Type Description TData Value_796 Declaration public TData Value_796 Field Value Type Description TData Value_797 Declaration public TData Value_797 Field Value Type Description TData Value_798 Declaration public TData Value_798 Field Value Type Description TData Value_799 Declaration public TData Value_799 Field Value Type Description TData Value_8 Declaration public TData Value_8 Field Value Type Description TData Value_80 Declaration public TData Value_80 Field Value Type Description TData Value_800 Declaration public TData Value_800 Field Value Type Description TData Value_801 Declaration public TData Value_801 Field Value Type Description TData Value_802 Declaration public TData Value_802 Field Value Type Description TData Value_803 Declaration public TData Value_803 Field Value Type Description TData Value_804 Declaration public TData Value_804 Field Value Type Description TData Value_805 Declaration public TData Value_805 Field Value Type Description TData Value_806 Declaration public TData Value_806 Field Value Type Description TData Value_807 Declaration public TData Value_807 Field Value Type Description TData Value_808 Declaration public TData Value_808 Field Value Type Description TData Value_809 Declaration public TData Value_809 Field Value Type Description TData Value_81 Declaration public TData Value_81 Field Value Type Description TData Value_810 Declaration public TData Value_810 Field Value Type Description TData Value_811 Declaration public TData Value_811 Field Value Type Description TData Value_812 Declaration public TData Value_812 Field Value Type Description TData Value_813 Declaration public TData Value_813 Field Value Type Description TData Value_814 Declaration public TData Value_814 Field Value Type Description TData Value_815 Declaration public TData Value_815 Field Value Type Description TData Value_816 Declaration public TData Value_816 Field Value Type Description TData Value_817 Declaration public TData Value_817 Field Value Type Description TData Value_818 Declaration public TData Value_818 Field Value Type Description TData Value_819 Declaration public TData Value_819 Field Value Type Description TData Value_82 Declaration public TData Value_82 Field Value Type Description TData Value_820 Declaration public TData Value_820 Field Value Type Description TData Value_821 Declaration public TData Value_821 Field Value Type Description TData Value_822 Declaration public TData Value_822 Field Value Type Description TData Value_823 Declaration public TData Value_823 Field Value Type Description TData Value_824 Declaration public TData Value_824 Field Value Type Description TData Value_825 Declaration public TData Value_825 Field Value Type Description TData Value_826 Declaration public TData Value_826 Field Value Type Description TData Value_827 Declaration public TData Value_827 Field Value Type Description TData Value_828 Declaration public TData Value_828 Field Value Type Description TData Value_829 Declaration public TData Value_829 Field Value Type Description TData Value_83 Declaration public TData Value_83 Field Value Type Description TData Value_830 Declaration public TData Value_830 Field Value Type Description TData Value_831 Declaration public TData Value_831 Field Value Type Description TData Value_832 Declaration public TData Value_832 Field Value Type Description TData Value_833 Declaration public TData Value_833 Field Value Type Description TData Value_834 Declaration public TData Value_834 Field Value Type Description TData Value_835 Declaration public TData Value_835 Field Value Type Description TData Value_836 Declaration public TData Value_836 Field Value Type Description TData Value_837 Declaration public TData Value_837 Field Value Type Description TData Value_838 Declaration public TData Value_838 Field Value Type Description TData Value_839 Declaration public TData Value_839 Field Value Type Description TData Value_84 Declaration public TData Value_84 Field Value Type Description TData Value_840 Declaration public TData Value_840 Field Value Type Description TData Value_841 Declaration public TData Value_841 Field Value Type Description TData Value_842 Declaration public TData Value_842 Field Value Type Description TData Value_843 Declaration public TData Value_843 Field Value Type Description TData Value_844 Declaration public TData Value_844 Field Value Type Description TData Value_845 Declaration public TData Value_845 Field Value Type Description TData Value_846 Declaration public TData Value_846 Field Value Type Description TData Value_847 Declaration public TData Value_847 Field Value Type Description TData Value_848 Declaration public TData Value_848 Field Value Type Description TData Value_849 Declaration public TData Value_849 Field Value Type Description TData Value_85 Declaration public TData Value_85 Field Value Type Description TData Value_850 Declaration public TData Value_850 Field Value Type Description TData Value_851 Declaration public TData Value_851 Field Value Type Description TData Value_852 Declaration public TData Value_852 Field Value Type Description TData Value_853 Declaration public TData Value_853 Field Value Type Description TData Value_854 Declaration public TData Value_854 Field Value Type Description TData Value_855 Declaration public TData Value_855 Field Value Type Description TData Value_856 Declaration public TData Value_856 Field Value Type Description TData Value_857 Declaration public TData Value_857 Field Value Type Description TData Value_858 Declaration public TData Value_858 Field Value Type Description TData Value_859 Declaration public TData Value_859 Field Value Type Description TData Value_86 Declaration public TData Value_86 Field Value Type Description TData Value_860 Declaration public TData Value_860 Field Value Type Description TData Value_861 Declaration public TData Value_861 Field Value Type Description TData Value_862 Declaration public TData Value_862 Field Value Type Description TData Value_863 Declaration public TData Value_863 Field Value Type Description TData Value_864 Declaration public TData Value_864 Field Value Type Description TData Value_865 Declaration public TData Value_865 Field Value Type Description TData Value_866 Declaration public TData Value_866 Field Value Type Description TData Value_867 Declaration public TData Value_867 Field Value Type Description TData Value_868 Declaration public TData Value_868 Field Value Type Description TData Value_869 Declaration public TData Value_869 Field Value Type Description TData Value_87 Declaration public TData Value_87 Field Value Type Description TData Value_870 Declaration public TData Value_870 Field Value Type Description TData Value_871 Declaration public TData Value_871 Field Value Type Description TData Value_872 Declaration public TData Value_872 Field Value Type Description TData Value_873 Declaration public TData Value_873 Field Value Type Description TData Value_874 Declaration public TData Value_874 Field Value Type Description TData Value_875 Declaration public TData Value_875 Field Value Type Description TData Value_876 Declaration public TData Value_876 Field Value Type Description TData Value_877 Declaration public TData Value_877 Field Value Type Description TData Value_878 Declaration public TData Value_878 Field Value Type Description TData Value_879 Declaration public TData Value_879 Field Value Type Description TData Value_88 Declaration public TData Value_88 Field Value Type Description TData Value_880 Declaration public TData Value_880 Field Value Type Description TData Value_881 Declaration public TData Value_881 Field Value Type Description TData Value_882 Declaration public TData Value_882 Field Value Type Description TData Value_883 Declaration public TData Value_883 Field Value Type Description TData Value_884 Declaration public TData Value_884 Field Value Type Description TData Value_885 Declaration public TData Value_885 Field Value Type Description TData Value_886 Declaration public TData Value_886 Field Value Type Description TData Value_887 Declaration public TData Value_887 Field Value Type Description TData Value_888 Declaration public TData Value_888 Field Value Type Description TData Value_889 Declaration public TData Value_889 Field Value Type Description TData Value_89 Declaration public TData Value_89 Field Value Type Description TData Value_890 Declaration public TData Value_890 Field Value Type Description TData Value_891 Declaration public TData Value_891 Field Value Type Description TData Value_892 Declaration public TData Value_892 Field Value Type Description TData Value_893 Declaration public TData Value_893 Field Value Type Description TData Value_894 Declaration public TData Value_894 Field Value Type Description TData Value_895 Declaration public TData Value_895 Field Value Type Description TData Value_896 Declaration public TData Value_896 Field Value Type Description TData Value_897 Declaration public TData Value_897 Field Value Type Description TData Value_898 Declaration public TData Value_898 Field Value Type Description TData Value_899 Declaration public TData Value_899 Field Value Type Description TData Value_9 Declaration public TData Value_9 Field Value Type Description TData Value_90 Declaration public TData Value_90 Field Value Type Description TData Value_900 Declaration public TData Value_900 Field Value Type Description TData Value_901 Declaration public TData Value_901 Field Value Type Description TData Value_902 Declaration public TData Value_902 Field Value Type Description TData Value_903 Declaration public TData Value_903 Field Value Type Description TData Value_904 Declaration public TData Value_904 Field Value Type Description TData Value_905 Declaration public TData Value_905 Field Value Type Description TData Value_906 Declaration public TData Value_906 Field Value Type Description TData Value_907 Declaration public TData Value_907 Field Value Type Description TData Value_908 Declaration public TData Value_908 Field Value Type Description TData Value_909 Declaration public TData Value_909 Field Value Type Description TData Value_91 Declaration public TData Value_91 Field Value Type Description TData Value_910 Declaration public TData Value_910 Field Value Type Description TData Value_911 Declaration public TData Value_911 Field Value Type Description TData Value_912 Declaration public TData Value_912 Field Value Type Description TData Value_913 Declaration public TData Value_913 Field Value Type Description TData Value_914 Declaration public TData Value_914 Field Value Type Description TData Value_915 Declaration public TData Value_915 Field Value Type Description TData Value_916 Declaration public TData Value_916 Field Value Type Description TData Value_917 Declaration public TData Value_917 Field Value Type Description TData Value_918 Declaration public TData Value_918 Field Value Type Description TData Value_919 Declaration public TData Value_919 Field Value Type Description TData Value_92 Declaration public TData Value_92 Field Value Type Description TData Value_920 Declaration public TData Value_920 Field Value Type Description TData Value_921 Declaration public TData Value_921 Field Value Type Description TData Value_922 Declaration public TData Value_922 Field Value Type Description TData Value_923 Declaration public TData Value_923 Field Value Type Description TData Value_924 Declaration public TData Value_924 Field Value Type Description TData Value_925 Declaration public TData Value_925 Field Value Type Description TData Value_926 Declaration public TData Value_926 Field Value Type Description TData Value_927 Declaration public TData Value_927 Field Value Type Description TData Value_928 Declaration public TData Value_928 Field Value Type Description TData Value_929 Declaration public TData Value_929 Field Value Type Description TData Value_93 Declaration public TData Value_93 Field Value Type Description TData Value_930 Declaration public TData Value_930 Field Value Type Description TData Value_931 Declaration public TData Value_931 Field Value Type Description TData Value_932 Declaration public TData Value_932 Field Value Type Description TData Value_933 Declaration public TData Value_933 Field Value Type Description TData Value_934 Declaration public TData Value_934 Field Value Type Description TData Value_935 Declaration public TData Value_935 Field Value Type Description TData Value_936 Declaration public TData Value_936 Field Value Type Description TData Value_937 Declaration public TData Value_937 Field Value Type Description TData Value_938 Declaration public TData Value_938 Field Value Type Description TData Value_939 Declaration public TData Value_939 Field Value Type Description TData Value_94 Declaration public TData Value_94 Field Value Type Description TData Value_940 Declaration public TData Value_940 Field Value Type Description TData Value_941 Declaration public TData Value_941 Field Value Type Description TData Value_942 Declaration public TData Value_942 Field Value Type Description TData Value_943 Declaration public TData Value_943 Field Value Type Description TData Value_944 Declaration public TData Value_944 Field Value Type Description TData Value_945 Declaration public TData Value_945 Field Value Type Description TData Value_946 Declaration public TData Value_946 Field Value Type Description TData Value_947 Declaration public TData Value_947 Field Value Type Description TData Value_948 Declaration public TData Value_948 Field Value Type Description TData Value_949 Declaration public TData Value_949 Field Value Type Description TData Value_95 Declaration public TData Value_95 Field Value Type Description TData Value_950 Declaration public TData Value_950 Field Value Type Description TData Value_951 Declaration public TData Value_951 Field Value Type Description TData Value_952 Declaration public TData Value_952 Field Value Type Description TData Value_953 Declaration public TData Value_953 Field Value Type Description TData Value_954 Declaration public TData Value_954 Field Value Type Description TData Value_955 Declaration public TData Value_955 Field Value Type Description TData Value_956 Declaration public TData Value_956 Field Value Type Description TData Value_957 Declaration public TData Value_957 Field Value Type Description TData Value_958 Declaration public TData Value_958 Field Value Type Description TData Value_959 Declaration public TData Value_959 Field Value Type Description TData Value_96 Declaration public TData Value_96 Field Value Type Description TData Value_960 Declaration public TData Value_960 Field Value Type Description TData Value_961 Declaration public TData Value_961 Field Value Type Description TData Value_962 Declaration public TData Value_962 Field Value Type Description TData Value_963 Declaration public TData Value_963 Field Value Type Description TData Value_964 Declaration public TData Value_964 Field Value Type Description TData Value_965 Declaration public TData Value_965 Field Value Type Description TData Value_966 Declaration public TData Value_966 Field Value Type Description TData Value_967 Declaration public TData Value_967 Field Value Type Description TData Value_968 Declaration public TData Value_968 Field Value Type Description TData Value_969 Declaration public TData Value_969 Field Value Type Description TData Value_97 Declaration public TData Value_97 Field Value Type Description TData Value_970 Declaration public TData Value_970 Field Value Type Description TData Value_971 Declaration public TData Value_971 Field Value Type Description TData Value_972 Declaration public TData Value_972 Field Value Type Description TData Value_973 Declaration public TData Value_973 Field Value Type Description TData Value_974 Declaration public TData Value_974 Field Value Type Description TData Value_975 Declaration public TData Value_975 Field Value Type Description TData Value_976 Declaration public TData Value_976 Field Value Type Description TData Value_977 Declaration public TData Value_977 Field Value Type Description TData Value_978 Declaration public TData Value_978 Field Value Type Description TData Value_979 Declaration public TData Value_979 Field Value Type Description TData Value_98 Declaration public TData Value_98 Field Value Type Description TData Value_980 Declaration public TData Value_980 Field Value Type Description TData Value_981 Declaration public TData Value_981 Field Value Type Description TData Value_982 Declaration public TData Value_982 Field Value Type Description TData Value_983 Declaration public TData Value_983 Field Value Type Description TData Value_984 Declaration public TData Value_984 Field Value Type Description TData Value_985 Declaration public TData Value_985 Field Value Type Description TData Value_986 Declaration public TData Value_986 Field Value Type Description TData Value_987 Declaration public TData Value_987 Field Value Type Description TData Value_988 Declaration public TData Value_988 Field Value Type Description TData Value_989 Declaration public TData Value_989 Field Value Type Description TData Value_99 Declaration public TData Value_99 Field Value Type Description TData Value_990 Declaration public TData Value_990 Field Value Type Description TData Value_991 Declaration public TData Value_991 Field Value Type Description TData Value_992 Declaration public TData Value_992 Field Value Type Description TData Value_993 Declaration public TData Value_993 Field Value Type Description TData Value_994 Declaration public TData Value_994 Field Value Type Description TData Value_995 Declaration public TData Value_995 Field Value Type Description TData Value_996 Declaration public TData Value_996 Field Value Type Description TData Value_997 Declaration public TData Value_997 Field Value Type Description TData Value_998 Declaration public TData Value_998 Field Value Type Description TData Value_999 Declaration public TData Value_999 Field Value Type Description TData Properties this[int] Declaration public TData this[int index] { get; set; } Parameters Type Name Description int index Property Value Type Description TData Length Declaration public int Length { get; } Property Value Type Description int Methods GetEnumerator() Declaration public IEnumerator<TData> GetEnumerator() Returns Type Description IEnumerator<TData> Implements IEnumerable<T> IEnumerable Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.Collections.FixedArray12-1.html": {
    "href": "api/Fwt.Core.Collections.FixedArray12-1.html",
    "title": "Struct FixedArray12<TData> | Hex Terrains",
    "summary": "Struct FixedArray12<TData> A fixed size array of 12 elements. Implements IEnumerable<TData> IEnumerable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.Core.Collections Assembly: fwt.core.dll Syntax [Serializable] public struct FixedArray12<TData> : IEnumerable<TData>, IEnumerable Type Parameters Name Description TData Type of items in the array Constructors FixedArray12(TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData) Declaration public FixedArray12(TData value_0 = default, TData value_1 = default, TData value_2 = default, TData value_3 = default, TData value_4 = default, TData value_5 = default, TData value_6 = default, TData value_7 = default, TData value_8 = default, TData value_9 = default, TData value_10 = default, TData value_11 = default) Parameters Type Name Description TData value_0 TData value_1 TData value_2 TData value_3 TData value_4 TData value_5 TData value_6 TData value_7 TData value_8 TData value_9 TData value_10 TData value_11 Fields Capacity Declaration public const int Capacity = 12 Field Value Type Description int Value_0 Declaration public TData Value_0 Field Value Type Description TData Value_1 Declaration public TData Value_1 Field Value Type Description TData Value_10 Declaration public TData Value_10 Field Value Type Description TData Value_11 Declaration public TData Value_11 Field Value Type Description TData Value_2 Declaration public TData Value_2 Field Value Type Description TData Value_3 Declaration public TData Value_3 Field Value Type Description TData Value_4 Declaration public TData Value_4 Field Value Type Description TData Value_5 Declaration public TData Value_5 Field Value Type Description TData Value_6 Declaration public TData Value_6 Field Value Type Description TData Value_7 Declaration public TData Value_7 Field Value Type Description TData Value_8 Declaration public TData Value_8 Field Value Type Description TData Value_9 Declaration public TData Value_9 Field Value Type Description TData Properties this[int] Declaration public TData this[int index] { get; set; } Parameters Type Name Description int index Property Value Type Description TData Length Declaration public int Length { get; } Property Value Type Description int Methods GetEnumerator() Declaration public IEnumerator<TData> GetEnumerator() Returns Type Description IEnumerator<TData> Implements IEnumerable<T> IEnumerable Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.Collections.FixedArray128-1.html": {
    "href": "api/Fwt.Core.Collections.FixedArray128-1.html",
    "title": "Struct FixedArray128<TData> | Hex Terrains",
    "summary": "Struct FixedArray128<TData> A fixed size array of 128 elements. Implements IEnumerable<TData> IEnumerable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.Core.Collections Assembly: fwt.core.dll Syntax [Serializable] public struct FixedArray128<TData> : IEnumerable<TData>, IEnumerable Type Parameters Name Description TData Type of items in the array Constructors FixedArray128(TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData) Declaration public FixedArray128(TData value_0 = default, TData value_1 = default, TData value_2 = default, TData value_3 = default, TData value_4 = default, TData value_5 = default, TData value_6 = default, TData value_7 = default, TData value_8 = default, TData value_9 = default, TData value_10 = default, TData value_11 = default, TData value_12 = default, TData value_13 = default, TData value_14 = default, TData value_15 = default, TData value_16 = default, TData value_17 = default, TData value_18 = default, TData value_19 = default, TData value_20 = default, TData value_21 = default, TData value_22 = default, TData value_23 = default, TData value_24 = default, TData value_25 = default, TData value_26 = default, TData value_27 = default, TData value_28 = default, TData value_29 = default, TData value_30 = default, TData value_31 = default, TData value_32 = default, TData value_33 = default, TData value_34 = default, TData value_35 = default, TData value_36 = default, TData value_37 = default, TData value_38 = default, TData value_39 = default, TData value_40 = default, TData value_41 = default, TData value_42 = default, TData value_43 = default, TData value_44 = default, TData value_45 = default, TData value_46 = default, TData value_47 = default, TData value_48 = default, TData value_49 = default, TData value_50 = default, TData value_51 = default, TData value_52 = default, TData value_53 = default, TData value_54 = default, TData value_55 = default, TData value_56 = default, TData value_57 = default, TData value_58 = default, TData value_59 = default, TData value_60 = default, TData value_61 = default, TData value_62 = default, TData value_63 = default, TData value_64 = default, TData value_65 = default, TData value_66 = default, TData value_67 = default, TData value_68 = default, TData value_69 = default, TData value_70 = default, TData value_71 = default, TData value_72 = default, TData value_73 = default, TData value_74 = default, TData value_75 = default, TData value_76 = default, TData value_77 = default, TData value_78 = default, TData value_79 = default, TData value_80 = default, TData value_81 = default, TData value_82 = default, TData value_83 = default, TData value_84 = default, TData value_85 = default, TData value_86 = default, TData value_87 = default, TData value_88 = default, TData value_89 = default, TData value_90 = default, TData value_91 = default, TData value_92 = default, TData value_93 = default, TData value_94 = default, TData value_95 = default, TData value_96 = default, TData value_97 = default, TData value_98 = default, TData value_99 = default, TData value_100 = default, TData value_101 = default, TData value_102 = default, TData value_103 = default, TData value_104 = default, TData value_105 = default, TData value_106 = default, TData value_107 = default, TData value_108 = default, TData value_109 = default, TData value_110 = default, TData value_111 = default, TData value_112 = default, TData value_113 = default, TData value_114 = default, TData value_115 = default, TData value_116 = default, TData value_117 = default, TData value_118 = default, TData value_119 = default, TData value_120 = default, TData value_121 = default, TData value_122 = default, TData value_123 = default, TData value_124 = default, TData value_125 = default, TData value_126 = default, TData value_127 = default) Parameters Type Name Description TData value_0 TData value_1 TData value_2 TData value_3 TData value_4 TData value_5 TData value_6 TData value_7 TData value_8 TData value_9 TData value_10 TData value_11 TData value_12 TData value_13 TData value_14 TData value_15 TData value_16 TData value_17 TData value_18 TData value_19 TData value_20 TData value_21 TData value_22 TData value_23 TData value_24 TData value_25 TData value_26 TData value_27 TData value_28 TData value_29 TData value_30 TData value_31 TData value_32 TData value_33 TData value_34 TData value_35 TData value_36 TData value_37 TData value_38 TData value_39 TData value_40 TData value_41 TData value_42 TData value_43 TData value_44 TData value_45 TData value_46 TData value_47 TData value_48 TData value_49 TData value_50 TData value_51 TData value_52 TData value_53 TData value_54 TData value_55 TData value_56 TData value_57 TData value_58 TData value_59 TData value_60 TData value_61 TData value_62 TData value_63 TData value_64 TData value_65 TData value_66 TData value_67 TData value_68 TData value_69 TData value_70 TData value_71 TData value_72 TData value_73 TData value_74 TData value_75 TData value_76 TData value_77 TData value_78 TData value_79 TData value_80 TData value_81 TData value_82 TData value_83 TData value_84 TData value_85 TData value_86 TData value_87 TData value_88 TData value_89 TData value_90 TData value_91 TData value_92 TData value_93 TData value_94 TData value_95 TData value_96 TData value_97 TData value_98 TData value_99 TData value_100 TData value_101 TData value_102 TData value_103 TData value_104 TData value_105 TData value_106 TData value_107 TData value_108 TData value_109 TData value_110 TData value_111 TData value_112 TData value_113 TData value_114 TData value_115 TData value_116 TData value_117 TData value_118 TData value_119 TData value_120 TData value_121 TData value_122 TData value_123 TData value_124 TData value_125 TData value_126 TData value_127 Fields Capacity Declaration public const int Capacity = 128 Field Value Type Description int Value_0 Declaration public TData Value_0 Field Value Type Description TData Value_1 Declaration public TData Value_1 Field Value Type Description TData Value_10 Declaration public TData Value_10 Field Value Type Description TData Value_100 Declaration public TData Value_100 Field Value Type Description TData Value_101 Declaration public TData Value_101 Field Value Type Description TData Value_102 Declaration public TData Value_102 Field Value Type Description TData Value_103 Declaration public TData Value_103 Field Value Type Description TData Value_104 Declaration public TData Value_104 Field Value Type Description TData Value_105 Declaration public TData Value_105 Field Value Type Description TData Value_106 Declaration public TData Value_106 Field Value Type Description TData Value_107 Declaration public TData Value_107 Field Value Type Description TData Value_108 Declaration public TData Value_108 Field Value Type Description TData Value_109 Declaration public TData Value_109 Field Value Type Description TData Value_11 Declaration public TData Value_11 Field Value Type Description TData Value_110 Declaration public TData Value_110 Field Value Type Description TData Value_111 Declaration public TData Value_111 Field Value Type Description TData Value_112 Declaration public TData Value_112 Field Value Type Description TData Value_113 Declaration public TData Value_113 Field Value Type Description TData Value_114 Declaration public TData Value_114 Field Value Type Description TData Value_115 Declaration public TData Value_115 Field Value Type Description TData Value_116 Declaration public TData Value_116 Field Value Type Description TData Value_117 Declaration public TData Value_117 Field Value Type Description TData Value_118 Declaration public TData Value_118 Field Value Type Description TData Value_119 Declaration public TData Value_119 Field Value Type Description TData Value_12 Declaration public TData Value_12 Field Value Type Description TData Value_120 Declaration public TData Value_120 Field Value Type Description TData Value_121 Declaration public TData Value_121 Field Value Type Description TData Value_122 Declaration public TData Value_122 Field Value Type Description TData Value_123 Declaration public TData Value_123 Field Value Type Description TData Value_124 Declaration public TData Value_124 Field Value Type Description TData Value_125 Declaration public TData Value_125 Field Value Type Description TData Value_126 Declaration public TData Value_126 Field Value Type Description TData Value_127 Declaration public TData Value_127 Field Value Type Description TData Value_13 Declaration public TData Value_13 Field Value Type Description TData Value_14 Declaration public TData Value_14 Field Value Type Description TData Value_15 Declaration public TData Value_15 Field Value Type Description TData Value_16 Declaration public TData Value_16 Field Value Type Description TData Value_17 Declaration public TData Value_17 Field Value Type Description TData Value_18 Declaration public TData Value_18 Field Value Type Description TData Value_19 Declaration public TData Value_19 Field Value Type Description TData Value_2 Declaration public TData Value_2 Field Value Type Description TData Value_20 Declaration public TData Value_20 Field Value Type Description TData Value_21 Declaration public TData Value_21 Field Value Type Description TData Value_22 Declaration public TData Value_22 Field Value Type Description TData Value_23 Declaration public TData Value_23 Field Value Type Description TData Value_24 Declaration public TData Value_24 Field Value Type Description TData Value_25 Declaration public TData Value_25 Field Value Type Description TData Value_26 Declaration public TData Value_26 Field Value Type Description TData Value_27 Declaration public TData Value_27 Field Value Type Description TData Value_28 Declaration public TData Value_28 Field Value Type Description TData Value_29 Declaration public TData Value_29 Field Value Type Description TData Value_3 Declaration public TData Value_3 Field Value Type Description TData Value_30 Declaration public TData Value_30 Field Value Type Description TData Value_31 Declaration public TData Value_31 Field Value Type Description TData Value_32 Declaration public TData Value_32 Field Value Type Description TData Value_33 Declaration public TData Value_33 Field Value Type Description TData Value_34 Declaration public TData Value_34 Field Value Type Description TData Value_35 Declaration public TData Value_35 Field Value Type Description TData Value_36 Declaration public TData Value_36 Field Value Type Description TData Value_37 Declaration public TData Value_37 Field Value Type Description TData Value_38 Declaration public TData Value_38 Field Value Type Description TData Value_39 Declaration public TData Value_39 Field Value Type Description TData Value_4 Declaration public TData Value_4 Field Value Type Description TData Value_40 Declaration public TData Value_40 Field Value Type Description TData Value_41 Declaration public TData Value_41 Field Value Type Description TData Value_42 Declaration public TData Value_42 Field Value Type Description TData Value_43 Declaration public TData Value_43 Field Value Type Description TData Value_44 Declaration public TData Value_44 Field Value Type Description TData Value_45 Declaration public TData Value_45 Field Value Type Description TData Value_46 Declaration public TData Value_46 Field Value Type Description TData Value_47 Declaration public TData Value_47 Field Value Type Description TData Value_48 Declaration public TData Value_48 Field Value Type Description TData Value_49 Declaration public TData Value_49 Field Value Type Description TData Value_5 Declaration public TData Value_5 Field Value Type Description TData Value_50 Declaration public TData Value_50 Field Value Type Description TData Value_51 Declaration public TData Value_51 Field Value Type Description TData Value_52 Declaration public TData Value_52 Field Value Type Description TData Value_53 Declaration public TData Value_53 Field Value Type Description TData Value_54 Declaration public TData Value_54 Field Value Type Description TData Value_55 Declaration public TData Value_55 Field Value Type Description TData Value_56 Declaration public TData Value_56 Field Value Type Description TData Value_57 Declaration public TData Value_57 Field Value Type Description TData Value_58 Declaration public TData Value_58 Field Value Type Description TData Value_59 Declaration public TData Value_59 Field Value Type Description TData Value_6 Declaration public TData Value_6 Field Value Type Description TData Value_60 Declaration public TData Value_60 Field Value Type Description TData Value_61 Declaration public TData Value_61 Field Value Type Description TData Value_62 Declaration public TData Value_62 Field Value Type Description TData Value_63 Declaration public TData Value_63 Field Value Type Description TData Value_64 Declaration public TData Value_64 Field Value Type Description TData Value_65 Declaration public TData Value_65 Field Value Type Description TData Value_66 Declaration public TData Value_66 Field Value Type Description TData Value_67 Declaration public TData Value_67 Field Value Type Description TData Value_68 Declaration public TData Value_68 Field Value Type Description TData Value_69 Declaration public TData Value_69 Field Value Type Description TData Value_7 Declaration public TData Value_7 Field Value Type Description TData Value_70 Declaration public TData Value_70 Field Value Type Description TData Value_71 Declaration public TData Value_71 Field Value Type Description TData Value_72 Declaration public TData Value_72 Field Value Type Description TData Value_73 Declaration public TData Value_73 Field Value Type Description TData Value_74 Declaration public TData Value_74 Field Value Type Description TData Value_75 Declaration public TData Value_75 Field Value Type Description TData Value_76 Declaration public TData Value_76 Field Value Type Description TData Value_77 Declaration public TData Value_77 Field Value Type Description TData Value_78 Declaration public TData Value_78 Field Value Type Description TData Value_79 Declaration public TData Value_79 Field Value Type Description TData Value_8 Declaration public TData Value_8 Field Value Type Description TData Value_80 Declaration public TData Value_80 Field Value Type Description TData Value_81 Declaration public TData Value_81 Field Value Type Description TData Value_82 Declaration public TData Value_82 Field Value Type Description TData Value_83 Declaration public TData Value_83 Field Value Type Description TData Value_84 Declaration public TData Value_84 Field Value Type Description TData Value_85 Declaration public TData Value_85 Field Value Type Description TData Value_86 Declaration public TData Value_86 Field Value Type Description TData Value_87 Declaration public TData Value_87 Field Value Type Description TData Value_88 Declaration public TData Value_88 Field Value Type Description TData Value_89 Declaration public TData Value_89 Field Value Type Description TData Value_9 Declaration public TData Value_9 Field Value Type Description TData Value_90 Declaration public TData Value_90 Field Value Type Description TData Value_91 Declaration public TData Value_91 Field Value Type Description TData Value_92 Declaration public TData Value_92 Field Value Type Description TData Value_93 Declaration public TData Value_93 Field Value Type Description TData Value_94 Declaration public TData Value_94 Field Value Type Description TData Value_95 Declaration public TData Value_95 Field Value Type Description TData Value_96 Declaration public TData Value_96 Field Value Type Description TData Value_97 Declaration public TData Value_97 Field Value Type Description TData Value_98 Declaration public TData Value_98 Field Value Type Description TData Value_99 Declaration public TData Value_99 Field Value Type Description TData Properties this[int] Declaration public TData this[int index] { get; set; } Parameters Type Name Description int index Property Value Type Description TData Length Declaration public int Length { get; } Property Value Type Description int Methods GetEnumerator() Declaration public IEnumerator<TData> GetEnumerator() Returns Type Description IEnumerator<TData> Implements IEnumerable<T> IEnumerable Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.Collections.FixedArray16-1.html": {
    "href": "api/Fwt.Core.Collections.FixedArray16-1.html",
    "title": "Struct FixedArray16<TData> | Hex Terrains",
    "summary": "Struct FixedArray16<TData> A fixed size array of 16 elements. Implements IEnumerable<TData> IEnumerable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.Core.Collections Assembly: fwt.core.dll Syntax [Serializable] public struct FixedArray16<TData> : IEnumerable<TData>, IEnumerable Type Parameters Name Description TData Type of items in the array Constructors FixedArray16(TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData) Declaration public FixedArray16(TData value_0 = default, TData value_1 = default, TData value_2 = default, TData value_3 = default, TData value_4 = default, TData value_5 = default, TData value_6 = default, TData value_7 = default, TData value_8 = default, TData value_9 = default, TData value_10 = default, TData value_11 = default, TData value_12 = default, TData value_13 = default, TData value_14 = default, TData value_15 = default) Parameters Type Name Description TData value_0 TData value_1 TData value_2 TData value_3 TData value_4 TData value_5 TData value_6 TData value_7 TData value_8 TData value_9 TData value_10 TData value_11 TData value_12 TData value_13 TData value_14 TData value_15 Fields Capacity Declaration public const int Capacity = 16 Field Value Type Description int Value_0 Declaration public TData Value_0 Field Value Type Description TData Value_1 Declaration public TData Value_1 Field Value Type Description TData Value_10 Declaration public TData Value_10 Field Value Type Description TData Value_11 Declaration public TData Value_11 Field Value Type Description TData Value_12 Declaration public TData Value_12 Field Value Type Description TData Value_13 Declaration public TData Value_13 Field Value Type Description TData Value_14 Declaration public TData Value_14 Field Value Type Description TData Value_15 Declaration public TData Value_15 Field Value Type Description TData Value_2 Declaration public TData Value_2 Field Value Type Description TData Value_3 Declaration public TData Value_3 Field Value Type Description TData Value_4 Declaration public TData Value_4 Field Value Type Description TData Value_5 Declaration public TData Value_5 Field Value Type Description TData Value_6 Declaration public TData Value_6 Field Value Type Description TData Value_7 Declaration public TData Value_7 Field Value Type Description TData Value_8 Declaration public TData Value_8 Field Value Type Description TData Value_9 Declaration public TData Value_9 Field Value Type Description TData Properties this[int] Declaration public TData this[int index] { get; set; } Parameters Type Name Description int index Property Value Type Description TData Length Declaration public int Length { get; } Property Value Type Description int Methods GetEnumerator() Declaration public IEnumerator<TData> GetEnumerator() Returns Type Description IEnumerator<TData> Implements IEnumerable<T> IEnumerable Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.Collections.FixedArray24-1.html": {
    "href": "api/Fwt.Core.Collections.FixedArray24-1.html",
    "title": "Struct FixedArray24<TData> | Hex Terrains",
    "summary": "Struct FixedArray24<TData> A fixed size array of 24 elements. Implements IEnumerable<TData> IEnumerable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.Core.Collections Assembly: fwt.core.dll Syntax [Serializable] public struct FixedArray24<TData> : IEnumerable<TData>, IEnumerable Type Parameters Name Description TData Type of items in the array Constructors FixedArray24(TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData) Declaration public FixedArray24(TData value_0 = default, TData value_1 = default, TData value_2 = default, TData value_3 = default, TData value_4 = default, TData value_5 = default, TData value_6 = default, TData value_7 = default, TData value_8 = default, TData value_9 = default, TData value_10 = default, TData value_11 = default, TData value_12 = default, TData value_13 = default, TData value_14 = default, TData value_15 = default, TData value_16 = default, TData value_17 = default, TData value_18 = default, TData value_19 = default, TData value_20 = default, TData value_21 = default, TData value_22 = default, TData value_23 = default) Parameters Type Name Description TData value_0 TData value_1 TData value_2 TData value_3 TData value_4 TData value_5 TData value_6 TData value_7 TData value_8 TData value_9 TData value_10 TData value_11 TData value_12 TData value_13 TData value_14 TData value_15 TData value_16 TData value_17 TData value_18 TData value_19 TData value_20 TData value_21 TData value_22 TData value_23 Fields Capacity Declaration public const int Capacity = 24 Field Value Type Description int Value_0 Declaration public TData Value_0 Field Value Type Description TData Value_1 Declaration public TData Value_1 Field Value Type Description TData Value_10 Declaration public TData Value_10 Field Value Type Description TData Value_11 Declaration public TData Value_11 Field Value Type Description TData Value_12 Declaration public TData Value_12 Field Value Type Description TData Value_13 Declaration public TData Value_13 Field Value Type Description TData Value_14 Declaration public TData Value_14 Field Value Type Description TData Value_15 Declaration public TData Value_15 Field Value Type Description TData Value_16 Declaration public TData Value_16 Field Value Type Description TData Value_17 Declaration public TData Value_17 Field Value Type Description TData Value_18 Declaration public TData Value_18 Field Value Type Description TData Value_19 Declaration public TData Value_19 Field Value Type Description TData Value_2 Declaration public TData Value_2 Field Value Type Description TData Value_20 Declaration public TData Value_20 Field Value Type Description TData Value_21 Declaration public TData Value_21 Field Value Type Description TData Value_22 Declaration public TData Value_22 Field Value Type Description TData Value_23 Declaration public TData Value_23 Field Value Type Description TData Value_3 Declaration public TData Value_3 Field Value Type Description TData Value_4 Declaration public TData Value_4 Field Value Type Description TData Value_5 Declaration public TData Value_5 Field Value Type Description TData Value_6 Declaration public TData Value_6 Field Value Type Description TData Value_7 Declaration public TData Value_7 Field Value Type Description TData Value_8 Declaration public TData Value_8 Field Value Type Description TData Value_9 Declaration public TData Value_9 Field Value Type Description TData Properties this[int] Declaration public TData this[int index] { get; set; } Parameters Type Name Description int index Property Value Type Description TData Length Declaration public int Length { get; } Property Value Type Description int Methods GetEnumerator() Declaration public IEnumerator<TData> GetEnumerator() Returns Type Description IEnumerator<TData> Implements IEnumerable<T> IEnumerable Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.Collections.FixedArray256-1.html": {
    "href": "api/Fwt.Core.Collections.FixedArray256-1.html",
    "title": "Struct FixedArray256<TData> | Hex Terrains",
    "summary": "Struct FixedArray256<TData> A fixed size array of 256 elements. Implements IEnumerable<TData> IEnumerable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.Core.Collections Assembly: fwt.core.dll Syntax [Serializable] public struct FixedArray256<TData> : IEnumerable<TData>, IEnumerable Type Parameters Name Description TData Type of items in the array Constructors FixedArray256(TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData) Declaration public FixedArray256(TData value_0 = default, TData value_1 = default, TData value_2 = default, TData value_3 = default, TData value_4 = default, TData value_5 = default, TData value_6 = default, TData value_7 = default, TData value_8 = default, TData value_9 = default, TData value_10 = default, TData value_11 = default, TData value_12 = default, TData value_13 = default, TData value_14 = default, TData value_15 = default, TData value_16 = default, TData value_17 = default, TData value_18 = default, TData value_19 = default, TData value_20 = default, TData value_21 = default, TData value_22 = default, TData value_23 = default, TData value_24 = default, TData value_25 = default, TData value_26 = default, TData value_27 = default, TData value_28 = default, TData value_29 = default, TData value_30 = default, TData value_31 = default, TData value_32 = default, TData value_33 = default, TData value_34 = default, TData value_35 = default, TData value_36 = default, TData value_37 = default, TData value_38 = default, TData value_39 = default, TData value_40 = default, TData value_41 = default, TData value_42 = default, TData value_43 = default, TData value_44 = default, TData value_45 = default, TData value_46 = default, TData value_47 = default, TData value_48 = default, TData value_49 = default, TData value_50 = default, TData value_51 = default, TData value_52 = default, TData value_53 = default, TData value_54 = default, TData value_55 = default, TData value_56 = default, TData value_57 = default, TData value_58 = default, TData value_59 = default, TData value_60 = default, TData value_61 = default, TData value_62 = default, TData value_63 = default, TData value_64 = default, TData value_65 = default, TData value_66 = default, TData value_67 = default, TData value_68 = default, TData value_69 = default, TData value_70 = default, TData value_71 = default, TData value_72 = default, TData value_73 = default, TData value_74 = default, TData value_75 = default, TData value_76 = default, TData value_77 = default, TData value_78 = default, TData value_79 = default, TData value_80 = default, TData value_81 = default, TData value_82 = default, TData value_83 = default, TData value_84 = default, TData value_85 = default, TData value_86 = default, TData value_87 = default, TData value_88 = default, TData value_89 = default, TData value_90 = default, TData value_91 = default, TData value_92 = default, TData value_93 = default, TData value_94 = default, TData value_95 = default, TData value_96 = default, TData value_97 = default, TData value_98 = default, TData value_99 = default, TData value_100 = default, TData value_101 = default, TData value_102 = default, TData value_103 = default, TData value_104 = default, TData value_105 = default, TData value_106 = default, TData value_107 = default, TData value_108 = default, TData value_109 = default, TData value_110 = default, TData value_111 = default, TData value_112 = default, TData value_113 = default, TData value_114 = default, TData value_115 = default, TData value_116 = default, TData value_117 = default, TData value_118 = default, TData value_119 = default, TData value_120 = default, TData value_121 = default, TData value_122 = default, TData value_123 = default, TData value_124 = default, TData value_125 = default, TData value_126 = default, TData value_127 = default, TData value_128 = default, TData value_129 = default, TData value_130 = default, TData value_131 = default, TData value_132 = default, TData value_133 = default, TData value_134 = default, TData value_135 = default, TData value_136 = default, TData value_137 = default, TData value_138 = default, TData value_139 = default, TData value_140 = default, TData value_141 = default, TData value_142 = default, TData value_143 = default, TData value_144 = default, TData value_145 = default, TData value_146 = default, TData value_147 = default, TData value_148 = default, TData value_149 = default, TData value_150 = default, TData value_151 = default, TData value_152 = default, TData value_153 = default, TData value_154 = default, TData value_155 = default, TData value_156 = default, TData value_157 = default, TData value_158 = default, TData value_159 = default, TData value_160 = default, TData value_161 = default, TData value_162 = default, TData value_163 = default, TData value_164 = default, TData value_165 = default, TData value_166 = default, TData value_167 = default, TData value_168 = default, TData value_169 = default, TData value_170 = default, TData value_171 = default, TData value_172 = default, TData value_173 = default, TData value_174 = default, TData value_175 = default, TData value_176 = default, TData value_177 = default, TData value_178 = default, TData value_179 = default, TData value_180 = default, TData value_181 = default, TData value_182 = default, TData value_183 = default, TData value_184 = default, TData value_185 = default, TData value_186 = default, TData value_187 = default, TData value_188 = default, TData value_189 = default, TData value_190 = default, TData value_191 = default, TData value_192 = default, TData value_193 = default, TData value_194 = default, TData value_195 = default, TData value_196 = default, TData value_197 = default, TData value_198 = default, TData value_199 = default, TData value_200 = default, TData value_201 = default, TData value_202 = default, TData value_203 = default, TData value_204 = default, TData value_205 = default, TData value_206 = default, TData value_207 = default, TData value_208 = default, TData value_209 = default, TData value_210 = default, TData value_211 = default, TData value_212 = default, TData value_213 = default, TData value_214 = default, TData value_215 = default, TData value_216 = default, TData value_217 = default, TData value_218 = default, TData value_219 = default, TData value_220 = default, TData value_221 = default, TData value_222 = default, TData value_223 = default, TData value_224 = default, TData value_225 = default, TData value_226 = default, TData value_227 = default, TData value_228 = default, TData value_229 = default, TData value_230 = default, TData value_231 = default, TData value_232 = default, TData value_233 = default, TData value_234 = default, TData value_235 = default, TData value_236 = default, TData value_237 = default, TData value_238 = default, TData value_239 = default, TData value_240 = default, TData value_241 = default, TData value_242 = default, TData value_243 = default, TData value_244 = default, TData value_245 = default, TData value_246 = default, TData value_247 = default, TData value_248 = default, TData value_249 = default, TData value_250 = default, TData value_251 = default, TData value_252 = default, TData value_253 = default, TData value_254 = default, TData value_255 = default) Parameters Type Name Description TData value_0 TData value_1 TData value_2 TData value_3 TData value_4 TData value_5 TData value_6 TData value_7 TData value_8 TData value_9 TData value_10 TData value_11 TData value_12 TData value_13 TData value_14 TData value_15 TData value_16 TData value_17 TData value_18 TData value_19 TData value_20 TData value_21 TData value_22 TData value_23 TData value_24 TData value_25 TData value_26 TData value_27 TData value_28 TData value_29 TData value_30 TData value_31 TData value_32 TData value_33 TData value_34 TData value_35 TData value_36 TData value_37 TData value_38 TData value_39 TData value_40 TData value_41 TData value_42 TData value_43 TData value_44 TData value_45 TData value_46 TData value_47 TData value_48 TData value_49 TData value_50 TData value_51 TData value_52 TData value_53 TData value_54 TData value_55 TData value_56 TData value_57 TData value_58 TData value_59 TData value_60 TData value_61 TData value_62 TData value_63 TData value_64 TData value_65 TData value_66 TData value_67 TData value_68 TData value_69 TData value_70 TData value_71 TData value_72 TData value_73 TData value_74 TData value_75 TData value_76 TData value_77 TData value_78 TData value_79 TData value_80 TData value_81 TData value_82 TData value_83 TData value_84 TData value_85 TData value_86 TData value_87 TData value_88 TData value_89 TData value_90 TData value_91 TData value_92 TData value_93 TData value_94 TData value_95 TData value_96 TData value_97 TData value_98 TData value_99 TData value_100 TData value_101 TData value_102 TData value_103 TData value_104 TData value_105 TData value_106 TData value_107 TData value_108 TData value_109 TData value_110 TData value_111 TData value_112 TData value_113 TData value_114 TData value_115 TData value_116 TData value_117 TData value_118 TData value_119 TData value_120 TData value_121 TData value_122 TData value_123 TData value_124 TData value_125 TData value_126 TData value_127 TData value_128 TData value_129 TData value_130 TData value_131 TData value_132 TData value_133 TData value_134 TData value_135 TData value_136 TData value_137 TData value_138 TData value_139 TData value_140 TData value_141 TData value_142 TData value_143 TData value_144 TData value_145 TData value_146 TData value_147 TData value_148 TData value_149 TData value_150 TData value_151 TData value_152 TData value_153 TData value_154 TData value_155 TData value_156 TData value_157 TData value_158 TData value_159 TData value_160 TData value_161 TData value_162 TData value_163 TData value_164 TData value_165 TData value_166 TData value_167 TData value_168 TData value_169 TData value_170 TData value_171 TData value_172 TData value_173 TData value_174 TData value_175 TData value_176 TData value_177 TData value_178 TData value_179 TData value_180 TData value_181 TData value_182 TData value_183 TData value_184 TData value_185 TData value_186 TData value_187 TData value_188 TData value_189 TData value_190 TData value_191 TData value_192 TData value_193 TData value_194 TData value_195 TData value_196 TData value_197 TData value_198 TData value_199 TData value_200 TData value_201 TData value_202 TData value_203 TData value_204 TData value_205 TData value_206 TData value_207 TData value_208 TData value_209 TData value_210 TData value_211 TData value_212 TData value_213 TData value_214 TData value_215 TData value_216 TData value_217 TData value_218 TData value_219 TData value_220 TData value_221 TData value_222 TData value_223 TData value_224 TData value_225 TData value_226 TData value_227 TData value_228 TData value_229 TData value_230 TData value_231 TData value_232 TData value_233 TData value_234 TData value_235 TData value_236 TData value_237 TData value_238 TData value_239 TData value_240 TData value_241 TData value_242 TData value_243 TData value_244 TData value_245 TData value_246 TData value_247 TData value_248 TData value_249 TData value_250 TData value_251 TData value_252 TData value_253 TData value_254 TData value_255 Fields Capacity Declaration public const int Capacity = 256 Field Value Type Description int Value_0 Declaration public TData Value_0 Field Value Type Description TData Value_1 Declaration public TData Value_1 Field Value Type Description TData Value_10 Declaration public TData Value_10 Field Value Type Description TData Value_100 Declaration public TData Value_100 Field Value Type Description TData Value_101 Declaration public TData Value_101 Field Value Type Description TData Value_102 Declaration public TData Value_102 Field Value Type Description TData Value_103 Declaration public TData Value_103 Field Value Type Description TData Value_104 Declaration public TData Value_104 Field Value Type Description TData Value_105 Declaration public TData Value_105 Field Value Type Description TData Value_106 Declaration public TData Value_106 Field Value Type Description TData Value_107 Declaration public TData Value_107 Field Value Type Description TData Value_108 Declaration public TData Value_108 Field Value Type Description TData Value_109 Declaration public TData Value_109 Field Value Type Description TData Value_11 Declaration public TData Value_11 Field Value Type Description TData Value_110 Declaration public TData Value_110 Field Value Type Description TData Value_111 Declaration public TData Value_111 Field Value Type Description TData Value_112 Declaration public TData Value_112 Field Value Type Description TData Value_113 Declaration public TData Value_113 Field Value Type Description TData Value_114 Declaration public TData Value_114 Field Value Type Description TData Value_115 Declaration public TData Value_115 Field Value Type Description TData Value_116 Declaration public TData Value_116 Field Value Type Description TData Value_117 Declaration public TData Value_117 Field Value Type Description TData Value_118 Declaration public TData Value_118 Field Value Type Description TData Value_119 Declaration public TData Value_119 Field Value Type Description TData Value_12 Declaration public TData Value_12 Field Value Type Description TData Value_120 Declaration public TData Value_120 Field Value Type Description TData Value_121 Declaration public TData Value_121 Field Value Type Description TData Value_122 Declaration public TData Value_122 Field Value Type Description TData Value_123 Declaration public TData Value_123 Field Value Type Description TData Value_124 Declaration public TData Value_124 Field Value Type Description TData Value_125 Declaration public TData Value_125 Field Value Type Description TData Value_126 Declaration public TData Value_126 Field Value Type Description TData Value_127 Declaration public TData Value_127 Field Value Type Description TData Value_128 Declaration public TData Value_128 Field Value Type Description TData Value_129 Declaration public TData Value_129 Field Value Type Description TData Value_13 Declaration public TData Value_13 Field Value Type Description TData Value_130 Declaration public TData Value_130 Field Value Type Description TData Value_131 Declaration public TData Value_131 Field Value Type Description TData Value_132 Declaration public TData Value_132 Field Value Type Description TData Value_133 Declaration public TData Value_133 Field Value Type Description TData Value_134 Declaration public TData Value_134 Field Value Type Description TData Value_135 Declaration public TData Value_135 Field Value Type Description TData Value_136 Declaration public TData Value_136 Field Value Type Description TData Value_137 Declaration public TData Value_137 Field Value Type Description TData Value_138 Declaration public TData Value_138 Field Value Type Description TData Value_139 Declaration public TData Value_139 Field Value Type Description TData Value_14 Declaration public TData Value_14 Field Value Type Description TData Value_140 Declaration public TData Value_140 Field Value Type Description TData Value_141 Declaration public TData Value_141 Field Value Type Description TData Value_142 Declaration public TData Value_142 Field Value Type Description TData Value_143 Declaration public TData Value_143 Field Value Type Description TData Value_144 Declaration public TData Value_144 Field Value Type Description TData Value_145 Declaration public TData Value_145 Field Value Type Description TData Value_146 Declaration public TData Value_146 Field Value Type Description TData Value_147 Declaration public TData Value_147 Field Value Type Description TData Value_148 Declaration public TData Value_148 Field Value Type Description TData Value_149 Declaration public TData Value_149 Field Value Type Description TData Value_15 Declaration public TData Value_15 Field Value Type Description TData Value_150 Declaration public TData Value_150 Field Value Type Description TData Value_151 Declaration public TData Value_151 Field Value Type Description TData Value_152 Declaration public TData Value_152 Field Value Type Description TData Value_153 Declaration public TData Value_153 Field Value Type Description TData Value_154 Declaration public TData Value_154 Field Value Type Description TData Value_155 Declaration public TData Value_155 Field Value Type Description TData Value_156 Declaration public TData Value_156 Field Value Type Description TData Value_157 Declaration public TData Value_157 Field Value Type Description TData Value_158 Declaration public TData Value_158 Field Value Type Description TData Value_159 Declaration public TData Value_159 Field Value Type Description TData Value_16 Declaration public TData Value_16 Field Value Type Description TData Value_160 Declaration public TData Value_160 Field Value Type Description TData Value_161 Declaration public TData Value_161 Field Value Type Description TData Value_162 Declaration public TData Value_162 Field Value Type Description TData Value_163 Declaration public TData Value_163 Field Value Type Description TData Value_164 Declaration public TData Value_164 Field Value Type Description TData Value_165 Declaration public TData Value_165 Field Value Type Description TData Value_166 Declaration public TData Value_166 Field Value Type Description TData Value_167 Declaration public TData Value_167 Field Value Type Description TData Value_168 Declaration public TData Value_168 Field Value Type Description TData Value_169 Declaration public TData Value_169 Field Value Type Description TData Value_17 Declaration public TData Value_17 Field Value Type Description TData Value_170 Declaration public TData Value_170 Field Value Type Description TData Value_171 Declaration public TData Value_171 Field Value Type Description TData Value_172 Declaration public TData Value_172 Field Value Type Description TData Value_173 Declaration public TData Value_173 Field Value Type Description TData Value_174 Declaration public TData Value_174 Field Value Type Description TData Value_175 Declaration public TData Value_175 Field Value Type Description TData Value_176 Declaration public TData Value_176 Field Value Type Description TData Value_177 Declaration public TData Value_177 Field Value Type Description TData Value_178 Declaration public TData Value_178 Field Value Type Description TData Value_179 Declaration public TData Value_179 Field Value Type Description TData Value_18 Declaration public TData Value_18 Field Value Type Description TData Value_180 Declaration public TData Value_180 Field Value Type Description TData Value_181 Declaration public TData Value_181 Field Value Type Description TData Value_182 Declaration public TData Value_182 Field Value Type Description TData Value_183 Declaration public TData Value_183 Field Value Type Description TData Value_184 Declaration public TData Value_184 Field Value Type Description TData Value_185 Declaration public TData Value_185 Field Value Type Description TData Value_186 Declaration public TData Value_186 Field Value Type Description TData Value_187 Declaration public TData Value_187 Field Value Type Description TData Value_188 Declaration public TData Value_188 Field Value Type Description TData Value_189 Declaration public TData Value_189 Field Value Type Description TData Value_19 Declaration public TData Value_19 Field Value Type Description TData Value_190 Declaration public TData Value_190 Field Value Type Description TData Value_191 Declaration public TData Value_191 Field Value Type Description TData Value_192 Declaration public TData Value_192 Field Value Type Description TData Value_193 Declaration public TData Value_193 Field Value Type Description TData Value_194 Declaration public TData Value_194 Field Value Type Description TData Value_195 Declaration public TData Value_195 Field Value Type Description TData Value_196 Declaration public TData Value_196 Field Value Type Description TData Value_197 Declaration public TData Value_197 Field Value Type Description TData Value_198 Declaration public TData Value_198 Field Value Type Description TData Value_199 Declaration public TData Value_199 Field Value Type Description TData Value_2 Declaration public TData Value_2 Field Value Type Description TData Value_20 Declaration public TData Value_20 Field Value Type Description TData Value_200 Declaration public TData Value_200 Field Value Type Description TData Value_201 Declaration public TData Value_201 Field Value Type Description TData Value_202 Declaration public TData Value_202 Field Value Type Description TData Value_203 Declaration public TData Value_203 Field Value Type Description TData Value_204 Declaration public TData Value_204 Field Value Type Description TData Value_205 Declaration public TData Value_205 Field Value Type Description TData Value_206 Declaration public TData Value_206 Field Value Type Description TData Value_207 Declaration public TData Value_207 Field Value Type Description TData Value_208 Declaration public TData Value_208 Field Value Type Description TData Value_209 Declaration public TData Value_209 Field Value Type Description TData Value_21 Declaration public TData Value_21 Field Value Type Description TData Value_210 Declaration public TData Value_210 Field Value Type Description TData Value_211 Declaration public TData Value_211 Field Value Type Description TData Value_212 Declaration public TData Value_212 Field Value Type Description TData Value_213 Declaration public TData Value_213 Field Value Type Description TData Value_214 Declaration public TData Value_214 Field Value Type Description TData Value_215 Declaration public TData Value_215 Field Value Type Description TData Value_216 Declaration public TData Value_216 Field Value Type Description TData Value_217 Declaration public TData Value_217 Field Value Type Description TData Value_218 Declaration public TData Value_218 Field Value Type Description TData Value_219 Declaration public TData Value_219 Field Value Type Description TData Value_22 Declaration public TData Value_22 Field Value Type Description TData Value_220 Declaration public TData Value_220 Field Value Type Description TData Value_221 Declaration public TData Value_221 Field Value Type Description TData Value_222 Declaration public TData Value_222 Field Value Type Description TData Value_223 Declaration public TData Value_223 Field Value Type Description TData Value_224 Declaration public TData Value_224 Field Value Type Description TData Value_225 Declaration public TData Value_225 Field Value Type Description TData Value_226 Declaration public TData Value_226 Field Value Type Description TData Value_227 Declaration public TData Value_227 Field Value Type Description TData Value_228 Declaration public TData Value_228 Field Value Type Description TData Value_229 Declaration public TData Value_229 Field Value Type Description TData Value_23 Declaration public TData Value_23 Field Value Type Description TData Value_230 Declaration public TData Value_230 Field Value Type Description TData Value_231 Declaration public TData Value_231 Field Value Type Description TData Value_232 Declaration public TData Value_232 Field Value Type Description TData Value_233 Declaration public TData Value_233 Field Value Type Description TData Value_234 Declaration public TData Value_234 Field Value Type Description TData Value_235 Declaration public TData Value_235 Field Value Type Description TData Value_236 Declaration public TData Value_236 Field Value Type Description TData Value_237 Declaration public TData Value_237 Field Value Type Description TData Value_238 Declaration public TData Value_238 Field Value Type Description TData Value_239 Declaration public TData Value_239 Field Value Type Description TData Value_24 Declaration public TData Value_24 Field Value Type Description TData Value_240 Declaration public TData Value_240 Field Value Type Description TData Value_241 Declaration public TData Value_241 Field Value Type Description TData Value_242 Declaration public TData Value_242 Field Value Type Description TData Value_243 Declaration public TData Value_243 Field Value Type Description TData Value_244 Declaration public TData Value_244 Field Value Type Description TData Value_245 Declaration public TData Value_245 Field Value Type Description TData Value_246 Declaration public TData Value_246 Field Value Type Description TData Value_247 Declaration public TData Value_247 Field Value Type Description TData Value_248 Declaration public TData Value_248 Field Value Type Description TData Value_249 Declaration public TData Value_249 Field Value Type Description TData Value_25 Declaration public TData Value_25 Field Value Type Description TData Value_250 Declaration public TData Value_250 Field Value Type Description TData Value_251 Declaration public TData Value_251 Field Value Type Description TData Value_252 Declaration public TData Value_252 Field Value Type Description TData Value_253 Declaration public TData Value_253 Field Value Type Description TData Value_254 Declaration public TData Value_254 Field Value Type Description TData Value_255 Declaration public TData Value_255 Field Value Type Description TData Value_26 Declaration public TData Value_26 Field Value Type Description TData Value_27 Declaration public TData Value_27 Field Value Type Description TData Value_28 Declaration public TData Value_28 Field Value Type Description TData Value_29 Declaration public TData Value_29 Field Value Type Description TData Value_3 Declaration public TData Value_3 Field Value Type Description TData Value_30 Declaration public TData Value_30 Field Value Type Description TData Value_31 Declaration public TData Value_31 Field Value Type Description TData Value_32 Declaration public TData Value_32 Field Value Type Description TData Value_33 Declaration public TData Value_33 Field Value Type Description TData Value_34 Declaration public TData Value_34 Field Value Type Description TData Value_35 Declaration public TData Value_35 Field Value Type Description TData Value_36 Declaration public TData Value_36 Field Value Type Description TData Value_37 Declaration public TData Value_37 Field Value Type Description TData Value_38 Declaration public TData Value_38 Field Value Type Description TData Value_39 Declaration public TData Value_39 Field Value Type Description TData Value_4 Declaration public TData Value_4 Field Value Type Description TData Value_40 Declaration public TData Value_40 Field Value Type Description TData Value_41 Declaration public TData Value_41 Field Value Type Description TData Value_42 Declaration public TData Value_42 Field Value Type Description TData Value_43 Declaration public TData Value_43 Field Value Type Description TData Value_44 Declaration public TData Value_44 Field Value Type Description TData Value_45 Declaration public TData Value_45 Field Value Type Description TData Value_46 Declaration public TData Value_46 Field Value Type Description TData Value_47 Declaration public TData Value_47 Field Value Type Description TData Value_48 Declaration public TData Value_48 Field Value Type Description TData Value_49 Declaration public TData Value_49 Field Value Type Description TData Value_5 Declaration public TData Value_5 Field Value Type Description TData Value_50 Declaration public TData Value_50 Field Value Type Description TData Value_51 Declaration public TData Value_51 Field Value Type Description TData Value_52 Declaration public TData Value_52 Field Value Type Description TData Value_53 Declaration public TData Value_53 Field Value Type Description TData Value_54 Declaration public TData Value_54 Field Value Type Description TData Value_55 Declaration public TData Value_55 Field Value Type Description TData Value_56 Declaration public TData Value_56 Field Value Type Description TData Value_57 Declaration public TData Value_57 Field Value Type Description TData Value_58 Declaration public TData Value_58 Field Value Type Description TData Value_59 Declaration public TData Value_59 Field Value Type Description TData Value_6 Declaration public TData Value_6 Field Value Type Description TData Value_60 Declaration public TData Value_60 Field Value Type Description TData Value_61 Declaration public TData Value_61 Field Value Type Description TData Value_62 Declaration public TData Value_62 Field Value Type Description TData Value_63 Declaration public TData Value_63 Field Value Type Description TData Value_64 Declaration public TData Value_64 Field Value Type Description TData Value_65 Declaration public TData Value_65 Field Value Type Description TData Value_66 Declaration public TData Value_66 Field Value Type Description TData Value_67 Declaration public TData Value_67 Field Value Type Description TData Value_68 Declaration public TData Value_68 Field Value Type Description TData Value_69 Declaration public TData Value_69 Field Value Type Description TData Value_7 Declaration public TData Value_7 Field Value Type Description TData Value_70 Declaration public TData Value_70 Field Value Type Description TData Value_71 Declaration public TData Value_71 Field Value Type Description TData Value_72 Declaration public TData Value_72 Field Value Type Description TData Value_73 Declaration public TData Value_73 Field Value Type Description TData Value_74 Declaration public TData Value_74 Field Value Type Description TData Value_75 Declaration public TData Value_75 Field Value Type Description TData Value_76 Declaration public TData Value_76 Field Value Type Description TData Value_77 Declaration public TData Value_77 Field Value Type Description TData Value_78 Declaration public TData Value_78 Field Value Type Description TData Value_79 Declaration public TData Value_79 Field Value Type Description TData Value_8 Declaration public TData Value_8 Field Value Type Description TData Value_80 Declaration public TData Value_80 Field Value Type Description TData Value_81 Declaration public TData Value_81 Field Value Type Description TData Value_82 Declaration public TData Value_82 Field Value Type Description TData Value_83 Declaration public TData Value_83 Field Value Type Description TData Value_84 Declaration public TData Value_84 Field Value Type Description TData Value_85 Declaration public TData Value_85 Field Value Type Description TData Value_86 Declaration public TData Value_86 Field Value Type Description TData Value_87 Declaration public TData Value_87 Field Value Type Description TData Value_88 Declaration public TData Value_88 Field Value Type Description TData Value_89 Declaration public TData Value_89 Field Value Type Description TData Value_9 Declaration public TData Value_9 Field Value Type Description TData Value_90 Declaration public TData Value_90 Field Value Type Description TData Value_91 Declaration public TData Value_91 Field Value Type Description TData Value_92 Declaration public TData Value_92 Field Value Type Description TData Value_93 Declaration public TData Value_93 Field Value Type Description TData Value_94 Declaration public TData Value_94 Field Value Type Description TData Value_95 Declaration public TData Value_95 Field Value Type Description TData Value_96 Declaration public TData Value_96 Field Value Type Description TData Value_97 Declaration public TData Value_97 Field Value Type Description TData Value_98 Declaration public TData Value_98 Field Value Type Description TData Value_99 Declaration public TData Value_99 Field Value Type Description TData Properties this[int] Declaration public TData this[int index] { get; set; } Parameters Type Name Description int index Property Value Type Description TData Length Declaration public int Length { get; } Property Value Type Description int Methods GetEnumerator() Declaration public IEnumerator<TData> GetEnumerator() Returns Type Description IEnumerator<TData> Implements IEnumerable<T> IEnumerable Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.Collections.FixedArray32-1.html": {
    "href": "api/Fwt.Core.Collections.FixedArray32-1.html",
    "title": "Struct FixedArray32<TData> | Hex Terrains",
    "summary": "Struct FixedArray32<TData> A fixed size array of 32 elements. Implements IEnumerable<TData> IEnumerable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.Core.Collections Assembly: fwt.core.dll Syntax [Serializable] public struct FixedArray32<TData> : IEnumerable<TData>, IEnumerable Type Parameters Name Description TData Type of items in the array Constructors FixedArray32(TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData) Declaration public FixedArray32(TData value_0 = default, TData value_1 = default, TData value_2 = default, TData value_3 = default, TData value_4 = default, TData value_5 = default, TData value_6 = default, TData value_7 = default, TData value_8 = default, TData value_9 = default, TData value_10 = default, TData value_11 = default, TData value_12 = default, TData value_13 = default, TData value_14 = default, TData value_15 = default, TData value_16 = default, TData value_17 = default, TData value_18 = default, TData value_19 = default, TData value_20 = default, TData value_21 = default, TData value_22 = default, TData value_23 = default, TData value_24 = default, TData value_25 = default, TData value_26 = default, TData value_27 = default, TData value_28 = default, TData value_29 = default, TData value_30 = default, TData value_31 = default) Parameters Type Name Description TData value_0 TData value_1 TData value_2 TData value_3 TData value_4 TData value_5 TData value_6 TData value_7 TData value_8 TData value_9 TData value_10 TData value_11 TData value_12 TData value_13 TData value_14 TData value_15 TData value_16 TData value_17 TData value_18 TData value_19 TData value_20 TData value_21 TData value_22 TData value_23 TData value_24 TData value_25 TData value_26 TData value_27 TData value_28 TData value_29 TData value_30 TData value_31 Fields Capacity Declaration public const int Capacity = 32 Field Value Type Description int Value_0 Declaration public TData Value_0 Field Value Type Description TData Value_1 Declaration public TData Value_1 Field Value Type Description TData Value_10 Declaration public TData Value_10 Field Value Type Description TData Value_11 Declaration public TData Value_11 Field Value Type Description TData Value_12 Declaration public TData Value_12 Field Value Type Description TData Value_13 Declaration public TData Value_13 Field Value Type Description TData Value_14 Declaration public TData Value_14 Field Value Type Description TData Value_15 Declaration public TData Value_15 Field Value Type Description TData Value_16 Declaration public TData Value_16 Field Value Type Description TData Value_17 Declaration public TData Value_17 Field Value Type Description TData Value_18 Declaration public TData Value_18 Field Value Type Description TData Value_19 Declaration public TData Value_19 Field Value Type Description TData Value_2 Declaration public TData Value_2 Field Value Type Description TData Value_20 Declaration public TData Value_20 Field Value Type Description TData Value_21 Declaration public TData Value_21 Field Value Type Description TData Value_22 Declaration public TData Value_22 Field Value Type Description TData Value_23 Declaration public TData Value_23 Field Value Type Description TData Value_24 Declaration public TData Value_24 Field Value Type Description TData Value_25 Declaration public TData Value_25 Field Value Type Description TData Value_26 Declaration public TData Value_26 Field Value Type Description TData Value_27 Declaration public TData Value_27 Field Value Type Description TData Value_28 Declaration public TData Value_28 Field Value Type Description TData Value_29 Declaration public TData Value_29 Field Value Type Description TData Value_3 Declaration public TData Value_3 Field Value Type Description TData Value_30 Declaration public TData Value_30 Field Value Type Description TData Value_31 Declaration public TData Value_31 Field Value Type Description TData Value_4 Declaration public TData Value_4 Field Value Type Description TData Value_5 Declaration public TData Value_5 Field Value Type Description TData Value_6 Declaration public TData Value_6 Field Value Type Description TData Value_7 Declaration public TData Value_7 Field Value Type Description TData Value_8 Declaration public TData Value_8 Field Value Type Description TData Value_9 Declaration public TData Value_9 Field Value Type Description TData Properties this[int] Declaration public TData this[int index] { get; set; } Parameters Type Name Description int index Property Value Type Description TData Length Declaration public int Length { get; } Property Value Type Description int Methods GetEnumerator() Declaration public IEnumerator<TData> GetEnumerator() Returns Type Description IEnumerator<TData> Implements IEnumerable<T> IEnumerable Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.Collections.FixedArray4-1.html": {
    "href": "api/Fwt.Core.Collections.FixedArray4-1.html",
    "title": "Struct FixedArray4<TData> | Hex Terrains",
    "summary": "Struct FixedArray4<TData> A fixed size array of 4 elements. Implements IEnumerable<TData> IEnumerable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.Core.Collections Assembly: fwt.core.dll Syntax [Serializable] public struct FixedArray4<TData> : IEnumerable<TData>, IEnumerable Type Parameters Name Description TData Type of items in the array Constructors FixedArray4(TData, TData, TData, TData) Declaration public FixedArray4(TData value_0 = default, TData value_1 = default, TData value_2 = default, TData value_3 = default) Parameters Type Name Description TData value_0 TData value_1 TData value_2 TData value_3 Fields Capacity Declaration public const int Capacity = 4 Field Value Type Description int Value_0 Declaration public TData Value_0 Field Value Type Description TData Value_1 Declaration public TData Value_1 Field Value Type Description TData Value_2 Declaration public TData Value_2 Field Value Type Description TData Value_3 Declaration public TData Value_3 Field Value Type Description TData Properties this[int] Declaration public TData this[int index] { get; set; } Parameters Type Name Description int index Property Value Type Description TData Length Declaration public int Length { get; } Property Value Type Description int Methods GetEnumerator() Declaration public IEnumerator<TData> GetEnumerator() Returns Type Description IEnumerator<TData> Implements IEnumerable<T> IEnumerable Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.Collections.FixedArray512-1.html": {
    "href": "api/Fwt.Core.Collections.FixedArray512-1.html",
    "title": "Struct FixedArray512<TData> | Hex Terrains",
    "summary": "Struct FixedArray512<TData> A fixed size array of 512 elements. Implements IEnumerable<TData> IEnumerable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.Core.Collections Assembly: fwt.core.dll Syntax [Serializable] public struct FixedArray512<TData> : IEnumerable<TData>, IEnumerable Type Parameters Name Description TData Type of items in the array Constructors FixedArray512(TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData) Declaration public FixedArray512(TData value_0 = default, TData value_1 = default, TData value_2 = default, TData value_3 = default, TData value_4 = default, TData value_5 = default, TData value_6 = default, TData value_7 = default, TData value_8 = default, TData value_9 = default, TData value_10 = default, TData value_11 = default, TData value_12 = default, TData value_13 = default, TData value_14 = default, TData value_15 = default, TData value_16 = default, TData value_17 = default, TData value_18 = default, TData value_19 = default, TData value_20 = default, TData value_21 = default, TData value_22 = default, TData value_23 = default, TData value_24 = default, TData value_25 = default, TData value_26 = default, TData value_27 = default, TData value_28 = default, TData value_29 = default, TData value_30 = default, TData value_31 = default, TData value_32 = default, TData value_33 = default, TData value_34 = default, TData value_35 = default, TData value_36 = default, TData value_37 = default, TData value_38 = default, TData value_39 = default, TData value_40 = default, TData value_41 = default, TData value_42 = default, TData value_43 = default, TData value_44 = default, TData value_45 = default, TData value_46 = default, TData value_47 = default, TData value_48 = default, TData value_49 = default, TData value_50 = default, TData value_51 = default, TData value_52 = default, TData value_53 = default, TData value_54 = default, TData value_55 = default, TData value_56 = default, TData value_57 = default, TData value_58 = default, TData value_59 = default, TData value_60 = default, TData value_61 = default, TData value_62 = default, TData value_63 = default, TData value_64 = default, TData value_65 = default, TData value_66 = default, TData value_67 = default, TData value_68 = default, TData value_69 = default, TData value_70 = default, TData value_71 = default, TData value_72 = default, TData value_73 = default, TData value_74 = default, TData value_75 = default, TData value_76 = default, TData value_77 = default, TData value_78 = default, TData value_79 = default, TData value_80 = default, TData value_81 = default, TData value_82 = default, TData value_83 = default, TData value_84 = default, TData value_85 = default, TData value_86 = default, TData value_87 = default, TData value_88 = default, TData value_89 = default, TData value_90 = default, TData value_91 = default, TData value_92 = default, TData value_93 = default, TData value_94 = default, TData value_95 = default, TData value_96 = default, TData value_97 = default, TData value_98 = default, TData value_99 = default, TData value_100 = default, TData value_101 = default, TData value_102 = default, TData value_103 = default, TData value_104 = default, TData value_105 = default, TData value_106 = default, TData value_107 = default, TData value_108 = default, TData value_109 = default, TData value_110 = default, TData value_111 = default, TData value_112 = default, TData value_113 = default, TData value_114 = default, TData value_115 = default, TData value_116 = default, TData value_117 = default, TData value_118 = default, TData value_119 = default, TData value_120 = default, TData value_121 = default, TData value_122 = default, TData value_123 = default, TData value_124 = default, TData value_125 = default, TData value_126 = default, TData value_127 = default, TData value_128 = default, TData value_129 = default, TData value_130 = default, TData value_131 = default, TData value_132 = default, TData value_133 = default, TData value_134 = default, TData value_135 = default, TData value_136 = default, TData value_137 = default, TData value_138 = default, TData value_139 = default, TData value_140 = default, TData value_141 = default, TData value_142 = default, TData value_143 = default, TData value_144 = default, TData value_145 = default, TData value_146 = default, TData value_147 = default, TData value_148 = default, TData value_149 = default, TData value_150 = default, TData value_151 = default, TData value_152 = default, TData value_153 = default, TData value_154 = default, TData value_155 = default, TData value_156 = default, TData value_157 = default, TData value_158 = default, TData value_159 = default, TData value_160 = default, TData value_161 = default, TData value_162 = default, TData value_163 = default, TData value_164 = default, TData value_165 = default, TData value_166 = default, TData value_167 = default, TData value_168 = default, TData value_169 = default, TData value_170 = default, TData value_171 = default, TData value_172 = default, TData value_173 = default, TData value_174 = default, TData value_175 = default, TData value_176 = default, TData value_177 = default, TData value_178 = default, TData value_179 = default, TData value_180 = default, TData value_181 = default, TData value_182 = default, TData value_183 = default, TData value_184 = default, TData value_185 = default, TData value_186 = default, TData value_187 = default, TData value_188 = default, TData value_189 = default, TData value_190 = default, TData value_191 = default, TData value_192 = default, TData value_193 = default, TData value_194 = default, TData value_195 = default, TData value_196 = default, TData value_197 = default, TData value_198 = default, TData value_199 = default, TData value_200 = default, TData value_201 = default, TData value_202 = default, TData value_203 = default, TData value_204 = default, TData value_205 = default, TData value_206 = default, TData value_207 = default, TData value_208 = default, TData value_209 = default, TData value_210 = default, TData value_211 = default, TData value_212 = default, TData value_213 = default, TData value_214 = default, TData value_215 = default, TData value_216 = default, TData value_217 = default, TData value_218 = default, TData value_219 = default, TData value_220 = default, TData value_221 = default, TData value_222 = default, TData value_223 = default, TData value_224 = default, TData value_225 = default, TData value_226 = default, TData value_227 = default, TData value_228 = default, TData value_229 = default, TData value_230 = default, TData value_231 = default, TData value_232 = default, TData value_233 = default, TData value_234 = default, TData value_235 = default, TData value_236 = default, TData value_237 = default, TData value_238 = default, TData value_239 = default, TData value_240 = default, TData value_241 = default, TData value_242 = default, TData value_243 = default, TData value_244 = default, TData value_245 = default, TData value_246 = default, TData value_247 = default, TData value_248 = default, TData value_249 = default, TData value_250 = default, TData value_251 = default, TData value_252 = default, TData value_253 = default, TData value_254 = default, TData value_255 = default, TData value_256 = default, TData value_257 = default, TData value_258 = default, TData value_259 = default, TData value_260 = default, TData value_261 = default, TData value_262 = default, TData value_263 = default, TData value_264 = default, TData value_265 = default, TData value_266 = default, TData value_267 = default, TData value_268 = default, TData value_269 = default, TData value_270 = default, TData value_271 = default, TData value_272 = default, TData value_273 = default, TData value_274 = default, TData value_275 = default, TData value_276 = default, TData value_277 = default, TData value_278 = default, TData value_279 = default, TData value_280 = default, TData value_281 = default, TData value_282 = default, TData value_283 = default, TData value_284 = default, TData value_285 = default, TData value_286 = default, TData value_287 = default, TData value_288 = default, TData value_289 = default, TData value_290 = default, TData value_291 = default, TData value_292 = default, TData value_293 = default, TData value_294 = default, TData value_295 = default, TData value_296 = default, TData value_297 = default, TData value_298 = default, TData value_299 = default, TData value_300 = default, TData value_301 = default, TData value_302 = default, TData value_303 = default, TData value_304 = default, TData value_305 = default, TData value_306 = default, TData value_307 = default, TData value_308 = default, TData value_309 = default, TData value_310 = default, TData value_311 = default, TData value_312 = default, TData value_313 = default, TData value_314 = default, TData value_315 = default, TData value_316 = default, TData value_317 = default, TData value_318 = default, TData value_319 = default, TData value_320 = default, TData value_321 = default, TData value_322 = default, TData value_323 = default, TData value_324 = default, TData value_325 = default, TData value_326 = default, TData value_327 = default, TData value_328 = default, TData value_329 = default, TData value_330 = default, TData value_331 = default, TData value_332 = default, TData value_333 = default, TData value_334 = default, TData value_335 = default, TData value_336 = default, TData value_337 = default, TData value_338 = default, TData value_339 = default, TData value_340 = default, TData value_341 = default, TData value_342 = default, TData value_343 = default, TData value_344 = default, TData value_345 = default, TData value_346 = default, TData value_347 = default, TData value_348 = default, TData value_349 = default, TData value_350 = default, TData value_351 = default, TData value_352 = default, TData value_353 = default, TData value_354 = default, TData value_355 = default, TData value_356 = default, TData value_357 = default, TData value_358 = default, TData value_359 = default, TData value_360 = default, TData value_361 = default, TData value_362 = default, TData value_363 = default, TData value_364 = default, TData value_365 = default, TData value_366 = default, TData value_367 = default, TData value_368 = default, TData value_369 = default, TData value_370 = default, TData value_371 = default, TData value_372 = default, TData value_373 = default, TData value_374 = default, TData value_375 = default, TData value_376 = default, TData value_377 = default, TData value_378 = default, TData value_379 = default, TData value_380 = default, TData value_381 = default, TData value_382 = default, TData value_383 = default, TData value_384 = default, TData value_385 = default, TData value_386 = default, TData value_387 = default, TData value_388 = default, TData value_389 = default, TData value_390 = default, TData value_391 = default, TData value_392 = default, TData value_393 = default, TData value_394 = default, TData value_395 = default, TData value_396 = default, TData value_397 = default, TData value_398 = default, TData value_399 = default, TData value_400 = default, TData value_401 = default, TData value_402 = default, TData value_403 = default, TData value_404 = default, TData value_405 = default, TData value_406 = default, TData value_407 = default, TData value_408 = default, TData value_409 = default, TData value_410 = default, TData value_411 = default, TData value_412 = default, TData value_413 = default, TData value_414 = default, TData value_415 = default, TData value_416 = default, TData value_417 = default, TData value_418 = default, TData value_419 = default, TData value_420 = default, TData value_421 = default, TData value_422 = default, TData value_423 = default, TData value_424 = default, TData value_425 = default, TData value_426 = default, TData value_427 = default, TData value_428 = default, TData value_429 = default, TData value_430 = default, TData value_431 = default, TData value_432 = default, TData value_433 = default, TData value_434 = default, TData value_435 = default, TData value_436 = default, TData value_437 = default, TData value_438 = default, TData value_439 = default, TData value_440 = default, TData value_441 = default, TData value_442 = default, TData value_443 = default, TData value_444 = default, TData value_445 = default, TData value_446 = default, TData value_447 = default, TData value_448 = default, TData value_449 = default, TData value_450 = default, TData value_451 = default, TData value_452 = default, TData value_453 = default, TData value_454 = default, TData value_455 = default, TData value_456 = default, TData value_457 = default, TData value_458 = default, TData value_459 = default, TData value_460 = default, TData value_461 = default, TData value_462 = default, TData value_463 = default, TData value_464 = default, TData value_465 = default, TData value_466 = default, TData value_467 = default, TData value_468 = default, TData value_469 = default, TData value_470 = default, TData value_471 = default, TData value_472 = default, TData value_473 = default, TData value_474 = default, TData value_475 = default, TData value_476 = default, TData value_477 = default, TData value_478 = default, TData value_479 = default, TData value_480 = default, TData value_481 = default, TData value_482 = default, TData value_483 = default, TData value_484 = default, TData value_485 = default, TData value_486 = default, TData value_487 = default, TData value_488 = default, TData value_489 = default, TData value_490 = default, TData value_491 = default, TData value_492 = default, TData value_493 = default, TData value_494 = default, TData value_495 = default, TData value_496 = default, TData value_497 = default, TData value_498 = default, TData value_499 = default, TData value_500 = default, TData value_501 = default, TData value_502 = default, TData value_503 = default, TData value_504 = default, TData value_505 = default, TData value_506 = default, TData value_507 = default, TData value_508 = default, TData value_509 = default, TData value_510 = default, TData value_511 = default) Parameters Type Name Description TData value_0 TData value_1 TData value_2 TData value_3 TData value_4 TData value_5 TData value_6 TData value_7 TData value_8 TData value_9 TData value_10 TData value_11 TData value_12 TData value_13 TData value_14 TData value_15 TData value_16 TData value_17 TData value_18 TData value_19 TData value_20 TData value_21 TData value_22 TData value_23 TData value_24 TData value_25 TData value_26 TData value_27 TData value_28 TData value_29 TData value_30 TData value_31 TData value_32 TData value_33 TData value_34 TData value_35 TData value_36 TData value_37 TData value_38 TData value_39 TData value_40 TData value_41 TData value_42 TData value_43 TData value_44 TData value_45 TData value_46 TData value_47 TData value_48 TData value_49 TData value_50 TData value_51 TData value_52 TData value_53 TData value_54 TData value_55 TData value_56 TData value_57 TData value_58 TData value_59 TData value_60 TData value_61 TData value_62 TData value_63 TData value_64 TData value_65 TData value_66 TData value_67 TData value_68 TData value_69 TData value_70 TData value_71 TData value_72 TData value_73 TData value_74 TData value_75 TData value_76 TData value_77 TData value_78 TData value_79 TData value_80 TData value_81 TData value_82 TData value_83 TData value_84 TData value_85 TData value_86 TData value_87 TData value_88 TData value_89 TData value_90 TData value_91 TData value_92 TData value_93 TData value_94 TData value_95 TData value_96 TData value_97 TData value_98 TData value_99 TData value_100 TData value_101 TData value_102 TData value_103 TData value_104 TData value_105 TData value_106 TData value_107 TData value_108 TData value_109 TData value_110 TData value_111 TData value_112 TData value_113 TData value_114 TData value_115 TData value_116 TData value_117 TData value_118 TData value_119 TData value_120 TData value_121 TData value_122 TData value_123 TData value_124 TData value_125 TData value_126 TData value_127 TData value_128 TData value_129 TData value_130 TData value_131 TData value_132 TData value_133 TData value_134 TData value_135 TData value_136 TData value_137 TData value_138 TData value_139 TData value_140 TData value_141 TData value_142 TData value_143 TData value_144 TData value_145 TData value_146 TData value_147 TData value_148 TData value_149 TData value_150 TData value_151 TData value_152 TData value_153 TData value_154 TData value_155 TData value_156 TData value_157 TData value_158 TData value_159 TData value_160 TData value_161 TData value_162 TData value_163 TData value_164 TData value_165 TData value_166 TData value_167 TData value_168 TData value_169 TData value_170 TData value_171 TData value_172 TData value_173 TData value_174 TData value_175 TData value_176 TData value_177 TData value_178 TData value_179 TData value_180 TData value_181 TData value_182 TData value_183 TData value_184 TData value_185 TData value_186 TData value_187 TData value_188 TData value_189 TData value_190 TData value_191 TData value_192 TData value_193 TData value_194 TData value_195 TData value_196 TData value_197 TData value_198 TData value_199 TData value_200 TData value_201 TData value_202 TData value_203 TData value_204 TData value_205 TData value_206 TData value_207 TData value_208 TData value_209 TData value_210 TData value_211 TData value_212 TData value_213 TData value_214 TData value_215 TData value_216 TData value_217 TData value_218 TData value_219 TData value_220 TData value_221 TData value_222 TData value_223 TData value_224 TData value_225 TData value_226 TData value_227 TData value_228 TData value_229 TData value_230 TData value_231 TData value_232 TData value_233 TData value_234 TData value_235 TData value_236 TData value_237 TData value_238 TData value_239 TData value_240 TData value_241 TData value_242 TData value_243 TData value_244 TData value_245 TData value_246 TData value_247 TData value_248 TData value_249 TData value_250 TData value_251 TData value_252 TData value_253 TData value_254 TData value_255 TData value_256 TData value_257 TData value_258 TData value_259 TData value_260 TData value_261 TData value_262 TData value_263 TData value_264 TData value_265 TData value_266 TData value_267 TData value_268 TData value_269 TData value_270 TData value_271 TData value_272 TData value_273 TData value_274 TData value_275 TData value_276 TData value_277 TData value_278 TData value_279 TData value_280 TData value_281 TData value_282 TData value_283 TData value_284 TData value_285 TData value_286 TData value_287 TData value_288 TData value_289 TData value_290 TData value_291 TData value_292 TData value_293 TData value_294 TData value_295 TData value_296 TData value_297 TData value_298 TData value_299 TData value_300 TData value_301 TData value_302 TData value_303 TData value_304 TData value_305 TData value_306 TData value_307 TData value_308 TData value_309 TData value_310 TData value_311 TData value_312 TData value_313 TData value_314 TData value_315 TData value_316 TData value_317 TData value_318 TData value_319 TData value_320 TData value_321 TData value_322 TData value_323 TData value_324 TData value_325 TData value_326 TData value_327 TData value_328 TData value_329 TData value_330 TData value_331 TData value_332 TData value_333 TData value_334 TData value_335 TData value_336 TData value_337 TData value_338 TData value_339 TData value_340 TData value_341 TData value_342 TData value_343 TData value_344 TData value_345 TData value_346 TData value_347 TData value_348 TData value_349 TData value_350 TData value_351 TData value_352 TData value_353 TData value_354 TData value_355 TData value_356 TData value_357 TData value_358 TData value_359 TData value_360 TData value_361 TData value_362 TData value_363 TData value_364 TData value_365 TData value_366 TData value_367 TData value_368 TData value_369 TData value_370 TData value_371 TData value_372 TData value_373 TData value_374 TData value_375 TData value_376 TData value_377 TData value_378 TData value_379 TData value_380 TData value_381 TData value_382 TData value_383 TData value_384 TData value_385 TData value_386 TData value_387 TData value_388 TData value_389 TData value_390 TData value_391 TData value_392 TData value_393 TData value_394 TData value_395 TData value_396 TData value_397 TData value_398 TData value_399 TData value_400 TData value_401 TData value_402 TData value_403 TData value_404 TData value_405 TData value_406 TData value_407 TData value_408 TData value_409 TData value_410 TData value_411 TData value_412 TData value_413 TData value_414 TData value_415 TData value_416 TData value_417 TData value_418 TData value_419 TData value_420 TData value_421 TData value_422 TData value_423 TData value_424 TData value_425 TData value_426 TData value_427 TData value_428 TData value_429 TData value_430 TData value_431 TData value_432 TData value_433 TData value_434 TData value_435 TData value_436 TData value_437 TData value_438 TData value_439 TData value_440 TData value_441 TData value_442 TData value_443 TData value_444 TData value_445 TData value_446 TData value_447 TData value_448 TData value_449 TData value_450 TData value_451 TData value_452 TData value_453 TData value_454 TData value_455 TData value_456 TData value_457 TData value_458 TData value_459 TData value_460 TData value_461 TData value_462 TData value_463 TData value_464 TData value_465 TData value_466 TData value_467 TData value_468 TData value_469 TData value_470 TData value_471 TData value_472 TData value_473 TData value_474 TData value_475 TData value_476 TData value_477 TData value_478 TData value_479 TData value_480 TData value_481 TData value_482 TData value_483 TData value_484 TData value_485 TData value_486 TData value_487 TData value_488 TData value_489 TData value_490 TData value_491 TData value_492 TData value_493 TData value_494 TData value_495 TData value_496 TData value_497 TData value_498 TData value_499 TData value_500 TData value_501 TData value_502 TData value_503 TData value_504 TData value_505 TData value_506 TData value_507 TData value_508 TData value_509 TData value_510 TData value_511 Fields Capacity Declaration public const int Capacity = 512 Field Value Type Description int Value_0 Declaration public TData Value_0 Field Value Type Description TData Value_1 Declaration public TData Value_1 Field Value Type Description TData Value_10 Declaration public TData Value_10 Field Value Type Description TData Value_100 Declaration public TData Value_100 Field Value Type Description TData Value_101 Declaration public TData Value_101 Field Value Type Description TData Value_102 Declaration public TData Value_102 Field Value Type Description TData Value_103 Declaration public TData Value_103 Field Value Type Description TData Value_104 Declaration public TData Value_104 Field Value Type Description TData Value_105 Declaration public TData Value_105 Field Value Type Description TData Value_106 Declaration public TData Value_106 Field Value Type Description TData Value_107 Declaration public TData Value_107 Field Value Type Description TData Value_108 Declaration public TData Value_108 Field Value Type Description TData Value_109 Declaration public TData Value_109 Field Value Type Description TData Value_11 Declaration public TData Value_11 Field Value Type Description TData Value_110 Declaration public TData Value_110 Field Value Type Description TData Value_111 Declaration public TData Value_111 Field Value Type Description TData Value_112 Declaration public TData Value_112 Field Value Type Description TData Value_113 Declaration public TData Value_113 Field Value Type Description TData Value_114 Declaration public TData Value_114 Field Value Type Description TData Value_115 Declaration public TData Value_115 Field Value Type Description TData Value_116 Declaration public TData Value_116 Field Value Type Description TData Value_117 Declaration public TData Value_117 Field Value Type Description TData Value_118 Declaration public TData Value_118 Field Value Type Description TData Value_119 Declaration public TData Value_119 Field Value Type Description TData Value_12 Declaration public TData Value_12 Field Value Type Description TData Value_120 Declaration public TData Value_120 Field Value Type Description TData Value_121 Declaration public TData Value_121 Field Value Type Description TData Value_122 Declaration public TData Value_122 Field Value Type Description TData Value_123 Declaration public TData Value_123 Field Value Type Description TData Value_124 Declaration public TData Value_124 Field Value Type Description TData Value_125 Declaration public TData Value_125 Field Value Type Description TData Value_126 Declaration public TData Value_126 Field Value Type Description TData Value_127 Declaration public TData Value_127 Field Value Type Description TData Value_128 Declaration public TData Value_128 Field Value Type Description TData Value_129 Declaration public TData Value_129 Field Value Type Description TData Value_13 Declaration public TData Value_13 Field Value Type Description TData Value_130 Declaration public TData Value_130 Field Value Type Description TData Value_131 Declaration public TData Value_131 Field Value Type Description TData Value_132 Declaration public TData Value_132 Field Value Type Description TData Value_133 Declaration public TData Value_133 Field Value Type Description TData Value_134 Declaration public TData Value_134 Field Value Type Description TData Value_135 Declaration public TData Value_135 Field Value Type Description TData Value_136 Declaration public TData Value_136 Field Value Type Description TData Value_137 Declaration public TData Value_137 Field Value Type Description TData Value_138 Declaration public TData Value_138 Field Value Type Description TData Value_139 Declaration public TData Value_139 Field Value Type Description TData Value_14 Declaration public TData Value_14 Field Value Type Description TData Value_140 Declaration public TData Value_140 Field Value Type Description TData Value_141 Declaration public TData Value_141 Field Value Type Description TData Value_142 Declaration public TData Value_142 Field Value Type Description TData Value_143 Declaration public TData Value_143 Field Value Type Description TData Value_144 Declaration public TData Value_144 Field Value Type Description TData Value_145 Declaration public TData Value_145 Field Value Type Description TData Value_146 Declaration public TData Value_146 Field Value Type Description TData Value_147 Declaration public TData Value_147 Field Value Type Description TData Value_148 Declaration public TData Value_148 Field Value Type Description TData Value_149 Declaration public TData Value_149 Field Value Type Description TData Value_15 Declaration public TData Value_15 Field Value Type Description TData Value_150 Declaration public TData Value_150 Field Value Type Description TData Value_151 Declaration public TData Value_151 Field Value Type Description TData Value_152 Declaration public TData Value_152 Field Value Type Description TData Value_153 Declaration public TData Value_153 Field Value Type Description TData Value_154 Declaration public TData Value_154 Field Value Type Description TData Value_155 Declaration public TData Value_155 Field Value Type Description TData Value_156 Declaration public TData Value_156 Field Value Type Description TData Value_157 Declaration public TData Value_157 Field Value Type Description TData Value_158 Declaration public TData Value_158 Field Value Type Description TData Value_159 Declaration public TData Value_159 Field Value Type Description TData Value_16 Declaration public TData Value_16 Field Value Type Description TData Value_160 Declaration public TData Value_160 Field Value Type Description TData Value_161 Declaration public TData Value_161 Field Value Type Description TData Value_162 Declaration public TData Value_162 Field Value Type Description TData Value_163 Declaration public TData Value_163 Field Value Type Description TData Value_164 Declaration public TData Value_164 Field Value Type Description TData Value_165 Declaration public TData Value_165 Field Value Type Description TData Value_166 Declaration public TData Value_166 Field Value Type Description TData Value_167 Declaration public TData Value_167 Field Value Type Description TData Value_168 Declaration public TData Value_168 Field Value Type Description TData Value_169 Declaration public TData Value_169 Field Value Type Description TData Value_17 Declaration public TData Value_17 Field Value Type Description TData Value_170 Declaration public TData Value_170 Field Value Type Description TData Value_171 Declaration public TData Value_171 Field Value Type Description TData Value_172 Declaration public TData Value_172 Field Value Type Description TData Value_173 Declaration public TData Value_173 Field Value Type Description TData Value_174 Declaration public TData Value_174 Field Value Type Description TData Value_175 Declaration public TData Value_175 Field Value Type Description TData Value_176 Declaration public TData Value_176 Field Value Type Description TData Value_177 Declaration public TData Value_177 Field Value Type Description TData Value_178 Declaration public TData Value_178 Field Value Type Description TData Value_179 Declaration public TData Value_179 Field Value Type Description TData Value_18 Declaration public TData Value_18 Field Value Type Description TData Value_180 Declaration public TData Value_180 Field Value Type Description TData Value_181 Declaration public TData Value_181 Field Value Type Description TData Value_182 Declaration public TData Value_182 Field Value Type Description TData Value_183 Declaration public TData Value_183 Field Value Type Description TData Value_184 Declaration public TData Value_184 Field Value Type Description TData Value_185 Declaration public TData Value_185 Field Value Type Description TData Value_186 Declaration public TData Value_186 Field Value Type Description TData Value_187 Declaration public TData Value_187 Field Value Type Description TData Value_188 Declaration public TData Value_188 Field Value Type Description TData Value_189 Declaration public TData Value_189 Field Value Type Description TData Value_19 Declaration public TData Value_19 Field Value Type Description TData Value_190 Declaration public TData Value_190 Field Value Type Description TData Value_191 Declaration public TData Value_191 Field Value Type Description TData Value_192 Declaration public TData Value_192 Field Value Type Description TData Value_193 Declaration public TData Value_193 Field Value Type Description TData Value_194 Declaration public TData Value_194 Field Value Type Description TData Value_195 Declaration public TData Value_195 Field Value Type Description TData Value_196 Declaration public TData Value_196 Field Value Type Description TData Value_197 Declaration public TData Value_197 Field Value Type Description TData Value_198 Declaration public TData Value_198 Field Value Type Description TData Value_199 Declaration public TData Value_199 Field Value Type Description TData Value_2 Declaration public TData Value_2 Field Value Type Description TData Value_20 Declaration public TData Value_20 Field Value Type Description TData Value_200 Declaration public TData Value_200 Field Value Type Description TData Value_201 Declaration public TData Value_201 Field Value Type Description TData Value_202 Declaration public TData Value_202 Field Value Type Description TData Value_203 Declaration public TData Value_203 Field Value Type Description TData Value_204 Declaration public TData Value_204 Field Value Type Description TData Value_205 Declaration public TData Value_205 Field Value Type Description TData Value_206 Declaration public TData Value_206 Field Value Type Description TData Value_207 Declaration public TData Value_207 Field Value Type Description TData Value_208 Declaration public TData Value_208 Field Value Type Description TData Value_209 Declaration public TData Value_209 Field Value Type Description TData Value_21 Declaration public TData Value_21 Field Value Type Description TData Value_210 Declaration public TData Value_210 Field Value Type Description TData Value_211 Declaration public TData Value_211 Field Value Type Description TData Value_212 Declaration public TData Value_212 Field Value Type Description TData Value_213 Declaration public TData Value_213 Field Value Type Description TData Value_214 Declaration public TData Value_214 Field Value Type Description TData Value_215 Declaration public TData Value_215 Field Value Type Description TData Value_216 Declaration public TData Value_216 Field Value Type Description TData Value_217 Declaration public TData Value_217 Field Value Type Description TData Value_218 Declaration public TData Value_218 Field Value Type Description TData Value_219 Declaration public TData Value_219 Field Value Type Description TData Value_22 Declaration public TData Value_22 Field Value Type Description TData Value_220 Declaration public TData Value_220 Field Value Type Description TData Value_221 Declaration public TData Value_221 Field Value Type Description TData Value_222 Declaration public TData Value_222 Field Value Type Description TData Value_223 Declaration public TData Value_223 Field Value Type Description TData Value_224 Declaration public TData Value_224 Field Value Type Description TData Value_225 Declaration public TData Value_225 Field Value Type Description TData Value_226 Declaration public TData Value_226 Field Value Type Description TData Value_227 Declaration public TData Value_227 Field Value Type Description TData Value_228 Declaration public TData Value_228 Field Value Type Description TData Value_229 Declaration public TData Value_229 Field Value Type Description TData Value_23 Declaration public TData Value_23 Field Value Type Description TData Value_230 Declaration public TData Value_230 Field Value Type Description TData Value_231 Declaration public TData Value_231 Field Value Type Description TData Value_232 Declaration public TData Value_232 Field Value Type Description TData Value_233 Declaration public TData Value_233 Field Value Type Description TData Value_234 Declaration public TData Value_234 Field Value Type Description TData Value_235 Declaration public TData Value_235 Field Value Type Description TData Value_236 Declaration public TData Value_236 Field Value Type Description TData Value_237 Declaration public TData Value_237 Field Value Type Description TData Value_238 Declaration public TData Value_238 Field Value Type Description TData Value_239 Declaration public TData Value_239 Field Value Type Description TData Value_24 Declaration public TData Value_24 Field Value Type Description TData Value_240 Declaration public TData Value_240 Field Value Type Description TData Value_241 Declaration public TData Value_241 Field Value Type Description TData Value_242 Declaration public TData Value_242 Field Value Type Description TData Value_243 Declaration public TData Value_243 Field Value Type Description TData Value_244 Declaration public TData Value_244 Field Value Type Description TData Value_245 Declaration public TData Value_245 Field Value Type Description TData Value_246 Declaration public TData Value_246 Field Value Type Description TData Value_247 Declaration public TData Value_247 Field Value Type Description TData Value_248 Declaration public TData Value_248 Field Value Type Description TData Value_249 Declaration public TData Value_249 Field Value Type Description TData Value_25 Declaration public TData Value_25 Field Value Type Description TData Value_250 Declaration public TData Value_250 Field Value Type Description TData Value_251 Declaration public TData Value_251 Field Value Type Description TData Value_252 Declaration public TData Value_252 Field Value Type Description TData Value_253 Declaration public TData Value_253 Field Value Type Description TData Value_254 Declaration public TData Value_254 Field Value Type Description TData Value_255 Declaration public TData Value_255 Field Value Type Description TData Value_256 Declaration public TData Value_256 Field Value Type Description TData Value_257 Declaration public TData Value_257 Field Value Type Description TData Value_258 Declaration public TData Value_258 Field Value Type Description TData Value_259 Declaration public TData Value_259 Field Value Type Description TData Value_26 Declaration public TData Value_26 Field Value Type Description TData Value_260 Declaration public TData Value_260 Field Value Type Description TData Value_261 Declaration public TData Value_261 Field Value Type Description TData Value_262 Declaration public TData Value_262 Field Value Type Description TData Value_263 Declaration public TData Value_263 Field Value Type Description TData Value_264 Declaration public TData Value_264 Field Value Type Description TData Value_265 Declaration public TData Value_265 Field Value Type Description TData Value_266 Declaration public TData Value_266 Field Value Type Description TData Value_267 Declaration public TData Value_267 Field Value Type Description TData Value_268 Declaration public TData Value_268 Field Value Type Description TData Value_269 Declaration public TData Value_269 Field Value Type Description TData Value_27 Declaration public TData Value_27 Field Value Type Description TData Value_270 Declaration public TData Value_270 Field Value Type Description TData Value_271 Declaration public TData Value_271 Field Value Type Description TData Value_272 Declaration public TData Value_272 Field Value Type Description TData Value_273 Declaration public TData Value_273 Field Value Type Description TData Value_274 Declaration public TData Value_274 Field Value Type Description TData Value_275 Declaration public TData Value_275 Field Value Type Description TData Value_276 Declaration public TData Value_276 Field Value Type Description TData Value_277 Declaration public TData Value_277 Field Value Type Description TData Value_278 Declaration public TData Value_278 Field Value Type Description TData Value_279 Declaration public TData Value_279 Field Value Type Description TData Value_28 Declaration public TData Value_28 Field Value Type Description TData Value_280 Declaration public TData Value_280 Field Value Type Description TData Value_281 Declaration public TData Value_281 Field Value Type Description TData Value_282 Declaration public TData Value_282 Field Value Type Description TData Value_283 Declaration public TData Value_283 Field Value Type Description TData Value_284 Declaration public TData Value_284 Field Value Type Description TData Value_285 Declaration public TData Value_285 Field Value Type Description TData Value_286 Declaration public TData Value_286 Field Value Type Description TData Value_287 Declaration public TData Value_287 Field Value Type Description TData Value_288 Declaration public TData Value_288 Field Value Type Description TData Value_289 Declaration public TData Value_289 Field Value Type Description TData Value_29 Declaration public TData Value_29 Field Value Type Description TData Value_290 Declaration public TData Value_290 Field Value Type Description TData Value_291 Declaration public TData Value_291 Field Value Type Description TData Value_292 Declaration public TData Value_292 Field Value Type Description TData Value_293 Declaration public TData Value_293 Field Value Type Description TData Value_294 Declaration public TData Value_294 Field Value Type Description TData Value_295 Declaration public TData Value_295 Field Value Type Description TData Value_296 Declaration public TData Value_296 Field Value Type Description TData Value_297 Declaration public TData Value_297 Field Value Type Description TData Value_298 Declaration public TData Value_298 Field Value Type Description TData Value_299 Declaration public TData Value_299 Field Value Type Description TData Value_3 Declaration public TData Value_3 Field Value Type Description TData Value_30 Declaration public TData Value_30 Field Value Type Description TData Value_300 Declaration public TData Value_300 Field Value Type Description TData Value_301 Declaration public TData Value_301 Field Value Type Description TData Value_302 Declaration public TData Value_302 Field Value Type Description TData Value_303 Declaration public TData Value_303 Field Value Type Description TData Value_304 Declaration public TData Value_304 Field Value Type Description TData Value_305 Declaration public TData Value_305 Field Value Type Description TData Value_306 Declaration public TData Value_306 Field Value Type Description TData Value_307 Declaration public TData Value_307 Field Value Type Description TData Value_308 Declaration public TData Value_308 Field Value Type Description TData Value_309 Declaration public TData Value_309 Field Value Type Description TData Value_31 Declaration public TData Value_31 Field Value Type Description TData Value_310 Declaration public TData Value_310 Field Value Type Description TData Value_311 Declaration public TData Value_311 Field Value Type Description TData Value_312 Declaration public TData Value_312 Field Value Type Description TData Value_313 Declaration public TData Value_313 Field Value Type Description TData Value_314 Declaration public TData Value_314 Field Value Type Description TData Value_315 Declaration public TData Value_315 Field Value Type Description TData Value_316 Declaration public TData Value_316 Field Value Type Description TData Value_317 Declaration public TData Value_317 Field Value Type Description TData Value_318 Declaration public TData Value_318 Field Value Type Description TData Value_319 Declaration public TData Value_319 Field Value Type Description TData Value_32 Declaration public TData Value_32 Field Value Type Description TData Value_320 Declaration public TData Value_320 Field Value Type Description TData Value_321 Declaration public TData Value_321 Field Value Type Description TData Value_322 Declaration public TData Value_322 Field Value Type Description TData Value_323 Declaration public TData Value_323 Field Value Type Description TData Value_324 Declaration public TData Value_324 Field Value Type Description TData Value_325 Declaration public TData Value_325 Field Value Type Description TData Value_326 Declaration public TData Value_326 Field Value Type Description TData Value_327 Declaration public TData Value_327 Field Value Type Description TData Value_328 Declaration public TData Value_328 Field Value Type Description TData Value_329 Declaration public TData Value_329 Field Value Type Description TData Value_33 Declaration public TData Value_33 Field Value Type Description TData Value_330 Declaration public TData Value_330 Field Value Type Description TData Value_331 Declaration public TData Value_331 Field Value Type Description TData Value_332 Declaration public TData Value_332 Field Value Type Description TData Value_333 Declaration public TData Value_333 Field Value Type Description TData Value_334 Declaration public TData Value_334 Field Value Type Description TData Value_335 Declaration public TData Value_335 Field Value Type Description TData Value_336 Declaration public TData Value_336 Field Value Type Description TData Value_337 Declaration public TData Value_337 Field Value Type Description TData Value_338 Declaration public TData Value_338 Field Value Type Description TData Value_339 Declaration public TData Value_339 Field Value Type Description TData Value_34 Declaration public TData Value_34 Field Value Type Description TData Value_340 Declaration public TData Value_340 Field Value Type Description TData Value_341 Declaration public TData Value_341 Field Value Type Description TData Value_342 Declaration public TData Value_342 Field Value Type Description TData Value_343 Declaration public TData Value_343 Field Value Type Description TData Value_344 Declaration public TData Value_344 Field Value Type Description TData Value_345 Declaration public TData Value_345 Field Value Type Description TData Value_346 Declaration public TData Value_346 Field Value Type Description TData Value_347 Declaration public TData Value_347 Field Value Type Description TData Value_348 Declaration public TData Value_348 Field Value Type Description TData Value_349 Declaration public TData Value_349 Field Value Type Description TData Value_35 Declaration public TData Value_35 Field Value Type Description TData Value_350 Declaration public TData Value_350 Field Value Type Description TData Value_351 Declaration public TData Value_351 Field Value Type Description TData Value_352 Declaration public TData Value_352 Field Value Type Description TData Value_353 Declaration public TData Value_353 Field Value Type Description TData Value_354 Declaration public TData Value_354 Field Value Type Description TData Value_355 Declaration public TData Value_355 Field Value Type Description TData Value_356 Declaration public TData Value_356 Field Value Type Description TData Value_357 Declaration public TData Value_357 Field Value Type Description TData Value_358 Declaration public TData Value_358 Field Value Type Description TData Value_359 Declaration public TData Value_359 Field Value Type Description TData Value_36 Declaration public TData Value_36 Field Value Type Description TData Value_360 Declaration public TData Value_360 Field Value Type Description TData Value_361 Declaration public TData Value_361 Field Value Type Description TData Value_362 Declaration public TData Value_362 Field Value Type Description TData Value_363 Declaration public TData Value_363 Field Value Type Description TData Value_364 Declaration public TData Value_364 Field Value Type Description TData Value_365 Declaration public TData Value_365 Field Value Type Description TData Value_366 Declaration public TData Value_366 Field Value Type Description TData Value_367 Declaration public TData Value_367 Field Value Type Description TData Value_368 Declaration public TData Value_368 Field Value Type Description TData Value_369 Declaration public TData Value_369 Field Value Type Description TData Value_37 Declaration public TData Value_37 Field Value Type Description TData Value_370 Declaration public TData Value_370 Field Value Type Description TData Value_371 Declaration public TData Value_371 Field Value Type Description TData Value_372 Declaration public TData Value_372 Field Value Type Description TData Value_373 Declaration public TData Value_373 Field Value Type Description TData Value_374 Declaration public TData Value_374 Field Value Type Description TData Value_375 Declaration public TData Value_375 Field Value Type Description TData Value_376 Declaration public TData Value_376 Field Value Type Description TData Value_377 Declaration public TData Value_377 Field Value Type Description TData Value_378 Declaration public TData Value_378 Field Value Type Description TData Value_379 Declaration public TData Value_379 Field Value Type Description TData Value_38 Declaration public TData Value_38 Field Value Type Description TData Value_380 Declaration public TData Value_380 Field Value Type Description TData Value_381 Declaration public TData Value_381 Field Value Type Description TData Value_382 Declaration public TData Value_382 Field Value Type Description TData Value_383 Declaration public TData Value_383 Field Value Type Description TData Value_384 Declaration public TData Value_384 Field Value Type Description TData Value_385 Declaration public TData Value_385 Field Value Type Description TData Value_386 Declaration public TData Value_386 Field Value Type Description TData Value_387 Declaration public TData Value_387 Field Value Type Description TData Value_388 Declaration public TData Value_388 Field Value Type Description TData Value_389 Declaration public TData Value_389 Field Value Type Description TData Value_39 Declaration public TData Value_39 Field Value Type Description TData Value_390 Declaration public TData Value_390 Field Value Type Description TData Value_391 Declaration public TData Value_391 Field Value Type Description TData Value_392 Declaration public TData Value_392 Field Value Type Description TData Value_393 Declaration public TData Value_393 Field Value Type Description TData Value_394 Declaration public TData Value_394 Field Value Type Description TData Value_395 Declaration public TData Value_395 Field Value Type Description TData Value_396 Declaration public TData Value_396 Field Value Type Description TData Value_397 Declaration public TData Value_397 Field Value Type Description TData Value_398 Declaration public TData Value_398 Field Value Type Description TData Value_399 Declaration public TData Value_399 Field Value Type Description TData Value_4 Declaration public TData Value_4 Field Value Type Description TData Value_40 Declaration public TData Value_40 Field Value Type Description TData Value_400 Declaration public TData Value_400 Field Value Type Description TData Value_401 Declaration public TData Value_401 Field Value Type Description TData Value_402 Declaration public TData Value_402 Field Value Type Description TData Value_403 Declaration public TData Value_403 Field Value Type Description TData Value_404 Declaration public TData Value_404 Field Value Type Description TData Value_405 Declaration public TData Value_405 Field Value Type Description TData Value_406 Declaration public TData Value_406 Field Value Type Description TData Value_407 Declaration public TData Value_407 Field Value Type Description TData Value_408 Declaration public TData Value_408 Field Value Type Description TData Value_409 Declaration public TData Value_409 Field Value Type Description TData Value_41 Declaration public TData Value_41 Field Value Type Description TData Value_410 Declaration public TData Value_410 Field Value Type Description TData Value_411 Declaration public TData Value_411 Field Value Type Description TData Value_412 Declaration public TData Value_412 Field Value Type Description TData Value_413 Declaration public TData Value_413 Field Value Type Description TData Value_414 Declaration public TData Value_414 Field Value Type Description TData Value_415 Declaration public TData Value_415 Field Value Type Description TData Value_416 Declaration public TData Value_416 Field Value Type Description TData Value_417 Declaration public TData Value_417 Field Value Type Description TData Value_418 Declaration public TData Value_418 Field Value Type Description TData Value_419 Declaration public TData Value_419 Field Value Type Description TData Value_42 Declaration public TData Value_42 Field Value Type Description TData Value_420 Declaration public TData Value_420 Field Value Type Description TData Value_421 Declaration public TData Value_421 Field Value Type Description TData Value_422 Declaration public TData Value_422 Field Value Type Description TData Value_423 Declaration public TData Value_423 Field Value Type Description TData Value_424 Declaration public TData Value_424 Field Value Type Description TData Value_425 Declaration public TData Value_425 Field Value Type Description TData Value_426 Declaration public TData Value_426 Field Value Type Description TData Value_427 Declaration public TData Value_427 Field Value Type Description TData Value_428 Declaration public TData Value_428 Field Value Type Description TData Value_429 Declaration public TData Value_429 Field Value Type Description TData Value_43 Declaration public TData Value_43 Field Value Type Description TData Value_430 Declaration public TData Value_430 Field Value Type Description TData Value_431 Declaration public TData Value_431 Field Value Type Description TData Value_432 Declaration public TData Value_432 Field Value Type Description TData Value_433 Declaration public TData Value_433 Field Value Type Description TData Value_434 Declaration public TData Value_434 Field Value Type Description TData Value_435 Declaration public TData Value_435 Field Value Type Description TData Value_436 Declaration public TData Value_436 Field Value Type Description TData Value_437 Declaration public TData Value_437 Field Value Type Description TData Value_438 Declaration public TData Value_438 Field Value Type Description TData Value_439 Declaration public TData Value_439 Field Value Type Description TData Value_44 Declaration public TData Value_44 Field Value Type Description TData Value_440 Declaration public TData Value_440 Field Value Type Description TData Value_441 Declaration public TData Value_441 Field Value Type Description TData Value_442 Declaration public TData Value_442 Field Value Type Description TData Value_443 Declaration public TData Value_443 Field Value Type Description TData Value_444 Declaration public TData Value_444 Field Value Type Description TData Value_445 Declaration public TData Value_445 Field Value Type Description TData Value_446 Declaration public TData Value_446 Field Value Type Description TData Value_447 Declaration public TData Value_447 Field Value Type Description TData Value_448 Declaration public TData Value_448 Field Value Type Description TData Value_449 Declaration public TData Value_449 Field Value Type Description TData Value_45 Declaration public TData Value_45 Field Value Type Description TData Value_450 Declaration public TData Value_450 Field Value Type Description TData Value_451 Declaration public TData Value_451 Field Value Type Description TData Value_452 Declaration public TData Value_452 Field Value Type Description TData Value_453 Declaration public TData Value_453 Field Value Type Description TData Value_454 Declaration public TData Value_454 Field Value Type Description TData Value_455 Declaration public TData Value_455 Field Value Type Description TData Value_456 Declaration public TData Value_456 Field Value Type Description TData Value_457 Declaration public TData Value_457 Field Value Type Description TData Value_458 Declaration public TData Value_458 Field Value Type Description TData Value_459 Declaration public TData Value_459 Field Value Type Description TData Value_46 Declaration public TData Value_46 Field Value Type Description TData Value_460 Declaration public TData Value_460 Field Value Type Description TData Value_461 Declaration public TData Value_461 Field Value Type Description TData Value_462 Declaration public TData Value_462 Field Value Type Description TData Value_463 Declaration public TData Value_463 Field Value Type Description TData Value_464 Declaration public TData Value_464 Field Value Type Description TData Value_465 Declaration public TData Value_465 Field Value Type Description TData Value_466 Declaration public TData Value_466 Field Value Type Description TData Value_467 Declaration public TData Value_467 Field Value Type Description TData Value_468 Declaration public TData Value_468 Field Value Type Description TData Value_469 Declaration public TData Value_469 Field Value Type Description TData Value_47 Declaration public TData Value_47 Field Value Type Description TData Value_470 Declaration public TData Value_470 Field Value Type Description TData Value_471 Declaration public TData Value_471 Field Value Type Description TData Value_472 Declaration public TData Value_472 Field Value Type Description TData Value_473 Declaration public TData Value_473 Field Value Type Description TData Value_474 Declaration public TData Value_474 Field Value Type Description TData Value_475 Declaration public TData Value_475 Field Value Type Description TData Value_476 Declaration public TData Value_476 Field Value Type Description TData Value_477 Declaration public TData Value_477 Field Value Type Description TData Value_478 Declaration public TData Value_478 Field Value Type Description TData Value_479 Declaration public TData Value_479 Field Value Type Description TData Value_48 Declaration public TData Value_48 Field Value Type Description TData Value_480 Declaration public TData Value_480 Field Value Type Description TData Value_481 Declaration public TData Value_481 Field Value Type Description TData Value_482 Declaration public TData Value_482 Field Value Type Description TData Value_483 Declaration public TData Value_483 Field Value Type Description TData Value_484 Declaration public TData Value_484 Field Value Type Description TData Value_485 Declaration public TData Value_485 Field Value Type Description TData Value_486 Declaration public TData Value_486 Field Value Type Description TData Value_487 Declaration public TData Value_487 Field Value Type Description TData Value_488 Declaration public TData Value_488 Field Value Type Description TData Value_489 Declaration public TData Value_489 Field Value Type Description TData Value_49 Declaration public TData Value_49 Field Value Type Description TData Value_490 Declaration public TData Value_490 Field Value Type Description TData Value_491 Declaration public TData Value_491 Field Value Type Description TData Value_492 Declaration public TData Value_492 Field Value Type Description TData Value_493 Declaration public TData Value_493 Field Value Type Description TData Value_494 Declaration public TData Value_494 Field Value Type Description TData Value_495 Declaration public TData Value_495 Field Value Type Description TData Value_496 Declaration public TData Value_496 Field Value Type Description TData Value_497 Declaration public TData Value_497 Field Value Type Description TData Value_498 Declaration public TData Value_498 Field Value Type Description TData Value_499 Declaration public TData Value_499 Field Value Type Description TData Value_5 Declaration public TData Value_5 Field Value Type Description TData Value_50 Declaration public TData Value_50 Field Value Type Description TData Value_500 Declaration public TData Value_500 Field Value Type Description TData Value_501 Declaration public TData Value_501 Field Value Type Description TData Value_502 Declaration public TData Value_502 Field Value Type Description TData Value_503 Declaration public TData Value_503 Field Value Type Description TData Value_504 Declaration public TData Value_504 Field Value Type Description TData Value_505 Declaration public TData Value_505 Field Value Type Description TData Value_506 Declaration public TData Value_506 Field Value Type Description TData Value_507 Declaration public TData Value_507 Field Value Type Description TData Value_508 Declaration public TData Value_508 Field Value Type Description TData Value_509 Declaration public TData Value_509 Field Value Type Description TData Value_51 Declaration public TData Value_51 Field Value Type Description TData Value_510 Declaration public TData Value_510 Field Value Type Description TData Value_511 Declaration public TData Value_511 Field Value Type Description TData Value_52 Declaration public TData Value_52 Field Value Type Description TData Value_53 Declaration public TData Value_53 Field Value Type Description TData Value_54 Declaration public TData Value_54 Field Value Type Description TData Value_55 Declaration public TData Value_55 Field Value Type Description TData Value_56 Declaration public TData Value_56 Field Value Type Description TData Value_57 Declaration public TData Value_57 Field Value Type Description TData Value_58 Declaration public TData Value_58 Field Value Type Description TData Value_59 Declaration public TData Value_59 Field Value Type Description TData Value_6 Declaration public TData Value_6 Field Value Type Description TData Value_60 Declaration public TData Value_60 Field Value Type Description TData Value_61 Declaration public TData Value_61 Field Value Type Description TData Value_62 Declaration public TData Value_62 Field Value Type Description TData Value_63 Declaration public TData Value_63 Field Value Type Description TData Value_64 Declaration public TData Value_64 Field Value Type Description TData Value_65 Declaration public TData Value_65 Field Value Type Description TData Value_66 Declaration public TData Value_66 Field Value Type Description TData Value_67 Declaration public TData Value_67 Field Value Type Description TData Value_68 Declaration public TData Value_68 Field Value Type Description TData Value_69 Declaration public TData Value_69 Field Value Type Description TData Value_7 Declaration public TData Value_7 Field Value Type Description TData Value_70 Declaration public TData Value_70 Field Value Type Description TData Value_71 Declaration public TData Value_71 Field Value Type Description TData Value_72 Declaration public TData Value_72 Field Value Type Description TData Value_73 Declaration public TData Value_73 Field Value Type Description TData Value_74 Declaration public TData Value_74 Field Value Type Description TData Value_75 Declaration public TData Value_75 Field Value Type Description TData Value_76 Declaration public TData Value_76 Field Value Type Description TData Value_77 Declaration public TData Value_77 Field Value Type Description TData Value_78 Declaration public TData Value_78 Field Value Type Description TData Value_79 Declaration public TData Value_79 Field Value Type Description TData Value_8 Declaration public TData Value_8 Field Value Type Description TData Value_80 Declaration public TData Value_80 Field Value Type Description TData Value_81 Declaration public TData Value_81 Field Value Type Description TData Value_82 Declaration public TData Value_82 Field Value Type Description TData Value_83 Declaration public TData Value_83 Field Value Type Description TData Value_84 Declaration public TData Value_84 Field Value Type Description TData Value_85 Declaration public TData Value_85 Field Value Type Description TData Value_86 Declaration public TData Value_86 Field Value Type Description TData Value_87 Declaration public TData Value_87 Field Value Type Description TData Value_88 Declaration public TData Value_88 Field Value Type Description TData Value_89 Declaration public TData Value_89 Field Value Type Description TData Value_9 Declaration public TData Value_9 Field Value Type Description TData Value_90 Declaration public TData Value_90 Field Value Type Description TData Value_91 Declaration public TData Value_91 Field Value Type Description TData Value_92 Declaration public TData Value_92 Field Value Type Description TData Value_93 Declaration public TData Value_93 Field Value Type Description TData Value_94 Declaration public TData Value_94 Field Value Type Description TData Value_95 Declaration public TData Value_95 Field Value Type Description TData Value_96 Declaration public TData Value_96 Field Value Type Description TData Value_97 Declaration public TData Value_97 Field Value Type Description TData Value_98 Declaration public TData Value_98 Field Value Type Description TData Value_99 Declaration public TData Value_99 Field Value Type Description TData Properties this[int] Declaration public TData this[int index] { get; set; } Parameters Type Name Description int index Property Value Type Description TData Length Declaration public int Length { get; } Property Value Type Description int Methods GetEnumerator() Declaration public IEnumerator<TData> GetEnumerator() Returns Type Description IEnumerator<TData> Implements IEnumerable<T> IEnumerable Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.Collections.FixedArray64-1.html": {
    "href": "api/Fwt.Core.Collections.FixedArray64-1.html",
    "title": "Struct FixedArray64<TData> | Hex Terrains",
    "summary": "Struct FixedArray64<TData> A fixed size array of 64 elements. Implements IEnumerable<TData> IEnumerable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.Core.Collections Assembly: fwt.core.dll Syntax [Serializable] public struct FixedArray64<TData> : IEnumerable<TData>, IEnumerable Type Parameters Name Description TData Type of items in the array Constructors FixedArray64(TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData, TData) Declaration public FixedArray64(TData value_0 = default, TData value_1 = default, TData value_2 = default, TData value_3 = default, TData value_4 = default, TData value_5 = default, TData value_6 = default, TData value_7 = default, TData value_8 = default, TData value_9 = default, TData value_10 = default, TData value_11 = default, TData value_12 = default, TData value_13 = default, TData value_14 = default, TData value_15 = default, TData value_16 = default, TData value_17 = default, TData value_18 = default, TData value_19 = default, TData value_20 = default, TData value_21 = default, TData value_22 = default, TData value_23 = default, TData value_24 = default, TData value_25 = default, TData value_26 = default, TData value_27 = default, TData value_28 = default, TData value_29 = default, TData value_30 = default, TData value_31 = default, TData value_32 = default, TData value_33 = default, TData value_34 = default, TData value_35 = default, TData value_36 = default, TData value_37 = default, TData value_38 = default, TData value_39 = default, TData value_40 = default, TData value_41 = default, TData value_42 = default, TData value_43 = default, TData value_44 = default, TData value_45 = default, TData value_46 = default, TData value_47 = default, TData value_48 = default, TData value_49 = default, TData value_50 = default, TData value_51 = default, TData value_52 = default, TData value_53 = default, TData value_54 = default, TData value_55 = default, TData value_56 = default, TData value_57 = default, TData value_58 = default, TData value_59 = default, TData value_60 = default, TData value_61 = default, TData value_62 = default, TData value_63 = default) Parameters Type Name Description TData value_0 TData value_1 TData value_2 TData value_3 TData value_4 TData value_5 TData value_6 TData value_7 TData value_8 TData value_9 TData value_10 TData value_11 TData value_12 TData value_13 TData value_14 TData value_15 TData value_16 TData value_17 TData value_18 TData value_19 TData value_20 TData value_21 TData value_22 TData value_23 TData value_24 TData value_25 TData value_26 TData value_27 TData value_28 TData value_29 TData value_30 TData value_31 TData value_32 TData value_33 TData value_34 TData value_35 TData value_36 TData value_37 TData value_38 TData value_39 TData value_40 TData value_41 TData value_42 TData value_43 TData value_44 TData value_45 TData value_46 TData value_47 TData value_48 TData value_49 TData value_50 TData value_51 TData value_52 TData value_53 TData value_54 TData value_55 TData value_56 TData value_57 TData value_58 TData value_59 TData value_60 TData value_61 TData value_62 TData value_63 Fields Capacity Declaration public const int Capacity = 64 Field Value Type Description int Value_0 Declaration public TData Value_0 Field Value Type Description TData Value_1 Declaration public TData Value_1 Field Value Type Description TData Value_10 Declaration public TData Value_10 Field Value Type Description TData Value_11 Declaration public TData Value_11 Field Value Type Description TData Value_12 Declaration public TData Value_12 Field Value Type Description TData Value_13 Declaration public TData Value_13 Field Value Type Description TData Value_14 Declaration public TData Value_14 Field Value Type Description TData Value_15 Declaration public TData Value_15 Field Value Type Description TData Value_16 Declaration public TData Value_16 Field Value Type Description TData Value_17 Declaration public TData Value_17 Field Value Type Description TData Value_18 Declaration public TData Value_18 Field Value Type Description TData Value_19 Declaration public TData Value_19 Field Value Type Description TData Value_2 Declaration public TData Value_2 Field Value Type Description TData Value_20 Declaration public TData Value_20 Field Value Type Description TData Value_21 Declaration public TData Value_21 Field Value Type Description TData Value_22 Declaration public TData Value_22 Field Value Type Description TData Value_23 Declaration public TData Value_23 Field Value Type Description TData Value_24 Declaration public TData Value_24 Field Value Type Description TData Value_25 Declaration public TData Value_25 Field Value Type Description TData Value_26 Declaration public TData Value_26 Field Value Type Description TData Value_27 Declaration public TData Value_27 Field Value Type Description TData Value_28 Declaration public TData Value_28 Field Value Type Description TData Value_29 Declaration public TData Value_29 Field Value Type Description TData Value_3 Declaration public TData Value_3 Field Value Type Description TData Value_30 Declaration public TData Value_30 Field Value Type Description TData Value_31 Declaration public TData Value_31 Field Value Type Description TData Value_32 Declaration public TData Value_32 Field Value Type Description TData Value_33 Declaration public TData Value_33 Field Value Type Description TData Value_34 Declaration public TData Value_34 Field Value Type Description TData Value_35 Declaration public TData Value_35 Field Value Type Description TData Value_36 Declaration public TData Value_36 Field Value Type Description TData Value_37 Declaration public TData Value_37 Field Value Type Description TData Value_38 Declaration public TData Value_38 Field Value Type Description TData Value_39 Declaration public TData Value_39 Field Value Type Description TData Value_4 Declaration public TData Value_4 Field Value Type Description TData Value_40 Declaration public TData Value_40 Field Value Type Description TData Value_41 Declaration public TData Value_41 Field Value Type Description TData Value_42 Declaration public TData Value_42 Field Value Type Description TData Value_43 Declaration public TData Value_43 Field Value Type Description TData Value_44 Declaration public TData Value_44 Field Value Type Description TData Value_45 Declaration public TData Value_45 Field Value Type Description TData Value_46 Declaration public TData Value_46 Field Value Type Description TData Value_47 Declaration public TData Value_47 Field Value Type Description TData Value_48 Declaration public TData Value_48 Field Value Type Description TData Value_49 Declaration public TData Value_49 Field Value Type Description TData Value_5 Declaration public TData Value_5 Field Value Type Description TData Value_50 Declaration public TData Value_50 Field Value Type Description TData Value_51 Declaration public TData Value_51 Field Value Type Description TData Value_52 Declaration public TData Value_52 Field Value Type Description TData Value_53 Declaration public TData Value_53 Field Value Type Description TData Value_54 Declaration public TData Value_54 Field Value Type Description TData Value_55 Declaration public TData Value_55 Field Value Type Description TData Value_56 Declaration public TData Value_56 Field Value Type Description TData Value_57 Declaration public TData Value_57 Field Value Type Description TData Value_58 Declaration public TData Value_58 Field Value Type Description TData Value_59 Declaration public TData Value_59 Field Value Type Description TData Value_6 Declaration public TData Value_6 Field Value Type Description TData Value_60 Declaration public TData Value_60 Field Value Type Description TData Value_61 Declaration public TData Value_61 Field Value Type Description TData Value_62 Declaration public TData Value_62 Field Value Type Description TData Value_63 Declaration public TData Value_63 Field Value Type Description TData Value_7 Declaration public TData Value_7 Field Value Type Description TData Value_8 Declaration public TData Value_8 Field Value Type Description TData Value_9 Declaration public TData Value_9 Field Value Type Description TData Properties this[int] Declaration public TData this[int index] { get; set; } Parameters Type Name Description int index Property Value Type Description TData Length Declaration public int Length { get; } Property Value Type Description int Methods GetEnumerator() Declaration public IEnumerator<TData> GetEnumerator() Returns Type Description IEnumerator<TData> Implements IEnumerable<T> IEnumerable Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.Collections.FixedArray8-1.html": {
    "href": "api/Fwt.Core.Collections.FixedArray8-1.html",
    "title": "Struct FixedArray8<TData> | Hex Terrains",
    "summary": "Struct FixedArray8<TData> A fixed size array of 8 elements. Implements IEnumerable<TData> IEnumerable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.Core.Collections Assembly: fwt.core.dll Syntax [Serializable] public struct FixedArray8<TData> : IEnumerable<TData>, IEnumerable Type Parameters Name Description TData Type of item in the array Constructors FixedArray8(TData, TData, TData, TData, TData, TData, TData, TData) Declaration public FixedArray8(TData value_0 = default, TData value_1 = default, TData value_2 = default, TData value_3 = default, TData value_4 = default, TData value_5 = default, TData value_6 = default, TData value_7 = default) Parameters Type Name Description TData value_0 TData value_1 TData value_2 TData value_3 TData value_4 TData value_5 TData value_6 TData value_7 Fields Capacity Declaration public const int Capacity = 8 Field Value Type Description int Value_0 Declaration public TData Value_0 Field Value Type Description TData Value_1 Declaration public TData Value_1 Field Value Type Description TData Value_2 Declaration public TData Value_2 Field Value Type Description TData Value_3 Declaration public TData Value_3 Field Value Type Description TData Value_4 Declaration public TData Value_4 Field Value Type Description TData Value_5 Declaration public TData Value_5 Field Value Type Description TData Value_6 Declaration public TData Value_6 Field Value Type Description TData Value_7 Declaration public TData Value_7 Field Value Type Description TData Properties this[int] Declaration public TData this[int index] { get; set; } Parameters Type Name Description int index Property Value Type Description TData Length Declaration public int Length { get; } Property Value Type Description int Methods GetEnumerator() Declaration public IEnumerator<TData> GetEnumerator() Returns Type Description IEnumerator<TData> Implements IEnumerable<T> IEnumerable Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.Collections.FixedList1024-1.html": {
    "href": "api/Fwt.Core.Collections.FixedList1024-1.html",
    "title": "Struct FixedList1024<TData> | Hex Terrains",
    "summary": "Struct FixedList1024<TData> Array with a fixed size of 1024 elements. Implements IList ICollection IList<TData> ICollection<TData> IEnumerable<TData> IEnumerable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.Core.Collections Assembly: fwt.core.dll Syntax [Serializable] public struct FixedList1024<TData> : IList, ICollection, IList<TData>, ICollection<TData>, IEnumerable<TData>, IEnumerable Type Parameters Name Description TData Type of items in the list Fields Capacity Declaration public const int Capacity = 1024 Field Value Type Description int Value_0 Declaration public TData Value_0 Field Value Type Description TData Value_1 Declaration public TData Value_1 Field Value Type Description TData Value_10 Declaration public TData Value_10 Field Value Type Description TData Value_100 Declaration public TData Value_100 Field Value Type Description TData Value_1000 Declaration public TData Value_1000 Field Value Type Description TData Value_1001 Declaration public TData Value_1001 Field Value Type Description TData Value_1002 Declaration public TData Value_1002 Field Value Type Description TData Value_1003 Declaration public TData Value_1003 Field Value Type Description TData Value_1004 Declaration public TData Value_1004 Field Value Type Description TData Value_1005 Declaration public TData Value_1005 Field Value Type Description TData Value_1006 Declaration public TData Value_1006 Field Value Type Description TData Value_1007 Declaration public TData Value_1007 Field Value Type Description TData Value_1008 Declaration public TData Value_1008 Field Value Type Description TData Value_1009 Declaration public TData Value_1009 Field Value Type Description TData Value_101 Declaration public TData Value_101 Field Value Type Description TData Value_1010 Declaration public TData Value_1010 Field Value Type Description TData Value_1011 Declaration public TData Value_1011 Field Value Type Description TData Value_1012 Declaration public TData Value_1012 Field Value Type Description TData Value_1013 Declaration public TData Value_1013 Field Value Type Description TData Value_1014 Declaration public TData Value_1014 Field Value Type Description TData Value_1015 Declaration public TData Value_1015 Field Value Type Description TData Value_1016 Declaration public TData Value_1016 Field Value Type Description TData Value_1017 Declaration public TData Value_1017 Field Value Type Description TData Value_1018 Declaration public TData Value_1018 Field Value Type Description TData Value_1019 Declaration public TData Value_1019 Field Value Type Description TData Value_102 Declaration public TData Value_102 Field Value Type Description TData Value_1020 Declaration public TData Value_1020 Field Value Type Description TData Value_1021 Declaration public TData Value_1021 Field Value Type Description TData Value_1022 Declaration public TData Value_1022 Field Value Type Description TData Value_1023 Declaration public TData Value_1023 Field Value Type Description TData Value_103 Declaration public TData Value_103 Field Value Type Description TData Value_104 Declaration public TData Value_104 Field Value Type Description TData Value_105 Declaration public TData Value_105 Field Value Type Description TData Value_106 Declaration public TData Value_106 Field Value Type Description TData Value_107 Declaration public TData Value_107 Field Value Type Description TData Value_108 Declaration public TData Value_108 Field Value Type Description TData Value_109 Declaration public TData Value_109 Field Value Type Description TData Value_11 Declaration public TData Value_11 Field Value Type Description TData Value_110 Declaration public TData Value_110 Field Value Type Description TData Value_111 Declaration public TData Value_111 Field Value Type Description TData Value_112 Declaration public TData Value_112 Field Value Type Description TData Value_113 Declaration public TData Value_113 Field Value Type Description TData Value_114 Declaration public TData Value_114 Field Value Type Description TData Value_115 Declaration public TData Value_115 Field Value Type Description TData Value_116 Declaration public TData Value_116 Field Value Type Description TData Value_117 Declaration public TData Value_117 Field Value Type Description TData Value_118 Declaration public TData Value_118 Field Value Type Description TData Value_119 Declaration public TData Value_119 Field Value Type Description TData Value_12 Declaration public TData Value_12 Field Value Type Description TData Value_120 Declaration public TData Value_120 Field Value Type Description TData Value_121 Declaration public TData Value_121 Field Value Type Description TData Value_122 Declaration public TData Value_122 Field Value Type Description TData Value_123 Declaration public TData Value_123 Field Value Type Description TData Value_124 Declaration public TData Value_124 Field Value Type Description TData Value_125 Declaration public TData Value_125 Field Value Type Description TData Value_126 Declaration public TData Value_126 Field Value Type Description TData Value_127 Declaration public TData Value_127 Field Value Type Description TData Value_128 Declaration public TData Value_128 Field Value Type Description TData Value_129 Declaration public TData Value_129 Field Value Type Description TData Value_13 Declaration public TData Value_13 Field Value Type Description TData Value_130 Declaration public TData Value_130 Field Value Type Description TData Value_131 Declaration public TData Value_131 Field Value Type Description TData Value_132 Declaration public TData Value_132 Field Value Type Description TData Value_133 Declaration public TData Value_133 Field Value Type Description TData Value_134 Declaration public TData Value_134 Field Value Type Description TData Value_135 Declaration public TData Value_135 Field Value Type Description TData Value_136 Declaration public TData Value_136 Field Value Type Description TData Value_137 Declaration public TData Value_137 Field Value Type Description TData Value_138 Declaration public TData Value_138 Field Value Type Description TData Value_139 Declaration public TData Value_139 Field Value Type Description TData Value_14 Declaration public TData Value_14 Field Value Type Description TData Value_140 Declaration public TData Value_140 Field Value Type Description TData Value_141 Declaration public TData Value_141 Field Value Type Description TData Value_142 Declaration public TData Value_142 Field Value Type Description TData Value_143 Declaration public TData Value_143 Field Value Type Description TData Value_144 Declaration public TData Value_144 Field Value Type Description TData Value_145 Declaration public TData Value_145 Field Value Type Description TData Value_146 Declaration public TData Value_146 Field Value Type Description TData Value_147 Declaration public TData Value_147 Field Value Type Description TData Value_148 Declaration public TData Value_148 Field Value Type Description TData Value_149 Declaration public TData Value_149 Field Value Type Description TData Value_15 Declaration public TData Value_15 Field Value Type Description TData Value_150 Declaration public TData Value_150 Field Value Type Description TData Value_151 Declaration public TData Value_151 Field Value Type Description TData Value_152 Declaration public TData Value_152 Field Value Type Description TData Value_153 Declaration public TData Value_153 Field Value Type Description TData Value_154 Declaration public TData Value_154 Field Value Type Description TData Value_155 Declaration public TData Value_155 Field Value Type Description TData Value_156 Declaration public TData Value_156 Field Value Type Description TData Value_157 Declaration public TData Value_157 Field Value Type Description TData Value_158 Declaration public TData Value_158 Field Value Type Description TData Value_159 Declaration public TData Value_159 Field Value Type Description TData Value_16 Declaration public TData Value_16 Field Value Type Description TData Value_160 Declaration public TData Value_160 Field Value Type Description TData Value_161 Declaration public TData Value_161 Field Value Type Description TData Value_162 Declaration public TData Value_162 Field Value Type Description TData Value_163 Declaration public TData Value_163 Field Value Type Description TData Value_164 Declaration public TData Value_164 Field Value Type Description TData Value_165 Declaration public TData Value_165 Field Value Type Description TData Value_166 Declaration public TData Value_166 Field Value Type Description TData Value_167 Declaration public TData Value_167 Field Value Type Description TData Value_168 Declaration public TData Value_168 Field Value Type Description TData Value_169 Declaration public TData Value_169 Field Value Type Description TData Value_17 Declaration public TData Value_17 Field Value Type Description TData Value_170 Declaration public TData Value_170 Field Value Type Description TData Value_171 Declaration public TData Value_171 Field Value Type Description TData Value_172 Declaration public TData Value_172 Field Value Type Description TData Value_173 Declaration public TData Value_173 Field Value Type Description TData Value_174 Declaration public TData Value_174 Field Value Type Description TData Value_175 Declaration public TData Value_175 Field Value Type Description TData Value_176 Declaration public TData Value_176 Field Value Type Description TData Value_177 Declaration public TData Value_177 Field Value Type Description TData Value_178 Declaration public TData Value_178 Field Value Type Description TData Value_179 Declaration public TData Value_179 Field Value Type Description TData Value_18 Declaration public TData Value_18 Field Value Type Description TData Value_180 Declaration public TData Value_180 Field Value Type Description TData Value_181 Declaration public TData Value_181 Field Value Type Description TData Value_182 Declaration public TData Value_182 Field Value Type Description TData Value_183 Declaration public TData Value_183 Field Value Type Description TData Value_184 Declaration public TData Value_184 Field Value Type Description TData Value_185 Declaration public TData Value_185 Field Value Type Description TData Value_186 Declaration public TData Value_186 Field Value Type Description TData Value_187 Declaration public TData Value_187 Field Value Type Description TData Value_188 Declaration public TData Value_188 Field Value Type Description TData Value_189 Declaration public TData Value_189 Field Value Type Description TData Value_19 Declaration public TData Value_19 Field Value Type Description TData Value_190 Declaration public TData Value_190 Field Value Type Description TData Value_191 Declaration public TData Value_191 Field Value Type Description TData Value_192 Declaration public TData Value_192 Field Value Type Description TData Value_193 Declaration public TData Value_193 Field Value Type Description TData Value_194 Declaration public TData Value_194 Field Value Type Description TData Value_195 Declaration public TData Value_195 Field Value Type Description TData Value_196 Declaration public TData Value_196 Field Value Type Description TData Value_197 Declaration public TData Value_197 Field Value Type Description TData Value_198 Declaration public TData Value_198 Field Value Type Description TData Value_199 Declaration public TData Value_199 Field Value Type Description TData Value_2 Declaration public TData Value_2 Field Value Type Description TData Value_20 Declaration public TData Value_20 Field Value Type Description TData Value_200 Declaration public TData Value_200 Field Value Type Description TData Value_201 Declaration public TData Value_201 Field Value Type Description TData Value_202 Declaration public TData Value_202 Field Value Type Description TData Value_203 Declaration public TData Value_203 Field Value Type Description TData Value_204 Declaration public TData Value_204 Field Value Type Description TData Value_205 Declaration public TData Value_205 Field Value Type Description TData Value_206 Declaration public TData Value_206 Field Value Type Description TData Value_207 Declaration public TData Value_207 Field Value Type Description TData Value_208 Declaration public TData Value_208 Field Value Type Description TData Value_209 Declaration public TData Value_209 Field Value Type Description TData Value_21 Declaration public TData Value_21 Field Value Type Description TData Value_210 Declaration public TData Value_210 Field Value Type Description TData Value_211 Declaration public TData Value_211 Field Value Type Description TData Value_212 Declaration public TData Value_212 Field Value Type Description TData Value_213 Declaration public TData Value_213 Field Value Type Description TData Value_214 Declaration public TData Value_214 Field Value Type Description TData Value_215 Declaration public TData Value_215 Field Value Type Description TData Value_216 Declaration public TData Value_216 Field Value Type Description TData Value_217 Declaration public TData Value_217 Field Value Type Description TData Value_218 Declaration public TData Value_218 Field Value Type Description TData Value_219 Declaration public TData Value_219 Field Value Type Description TData Value_22 Declaration public TData Value_22 Field Value Type Description TData Value_220 Declaration public TData Value_220 Field Value Type Description TData Value_221 Declaration public TData Value_221 Field Value Type Description TData Value_222 Declaration public TData Value_222 Field Value Type Description TData Value_223 Declaration public TData Value_223 Field Value Type Description TData Value_224 Declaration public TData Value_224 Field Value Type Description TData Value_225 Declaration public TData Value_225 Field Value Type Description TData Value_226 Declaration public TData Value_226 Field Value Type Description TData Value_227 Declaration public TData Value_227 Field Value Type Description TData Value_228 Declaration public TData Value_228 Field Value Type Description TData Value_229 Declaration public TData Value_229 Field Value Type Description TData Value_23 Declaration public TData Value_23 Field Value Type Description TData Value_230 Declaration public TData Value_230 Field Value Type Description TData Value_231 Declaration public TData Value_231 Field Value Type Description TData Value_232 Declaration public TData Value_232 Field Value Type Description TData Value_233 Declaration public TData Value_233 Field Value Type Description TData Value_234 Declaration public TData Value_234 Field Value Type Description TData Value_235 Declaration public TData Value_235 Field Value Type Description TData Value_236 Declaration public TData Value_236 Field Value Type Description TData Value_237 Declaration public TData Value_237 Field Value Type Description TData Value_238 Declaration public TData Value_238 Field Value Type Description TData Value_239 Declaration public TData Value_239 Field Value Type Description TData Value_24 Declaration public TData Value_24 Field Value Type Description TData Value_240 Declaration public TData Value_240 Field Value Type Description TData Value_241 Declaration public TData Value_241 Field Value Type Description TData Value_242 Declaration public TData Value_242 Field Value Type Description TData Value_243 Declaration public TData Value_243 Field Value Type Description TData Value_244 Declaration public TData Value_244 Field Value Type Description TData Value_245 Declaration public TData Value_245 Field Value Type Description TData Value_246 Declaration public TData Value_246 Field Value Type Description TData Value_247 Declaration public TData Value_247 Field Value Type Description TData Value_248 Declaration public TData Value_248 Field Value Type Description TData Value_249 Declaration public TData Value_249 Field Value Type Description TData Value_25 Declaration public TData Value_25 Field Value Type Description TData Value_250 Declaration public TData Value_250 Field Value Type Description TData Value_251 Declaration public TData Value_251 Field Value Type Description TData Value_252 Declaration public TData Value_252 Field Value Type Description TData Value_253 Declaration public TData Value_253 Field Value Type Description TData Value_254 Declaration public TData Value_254 Field Value Type Description TData Value_255 Declaration public TData Value_255 Field Value Type Description TData Value_256 Declaration public TData Value_256 Field Value Type Description TData Value_257 Declaration public TData Value_257 Field Value Type Description TData Value_258 Declaration public TData Value_258 Field Value Type Description TData Value_259 Declaration public TData Value_259 Field Value Type Description TData Value_26 Declaration public TData Value_26 Field Value Type Description TData Value_260 Declaration public TData Value_260 Field Value Type Description TData Value_261 Declaration public TData Value_261 Field Value Type Description TData Value_262 Declaration public TData Value_262 Field Value Type Description TData Value_263 Declaration public TData Value_263 Field Value Type Description TData Value_264 Declaration public TData Value_264 Field Value Type Description TData Value_265 Declaration public TData Value_265 Field Value Type Description TData Value_266 Declaration public TData Value_266 Field Value Type Description TData Value_267 Declaration public TData Value_267 Field Value Type Description TData Value_268 Declaration public TData Value_268 Field Value Type Description TData Value_269 Declaration public TData Value_269 Field Value Type Description TData Value_27 Declaration public TData Value_27 Field Value Type Description TData Value_270 Declaration public TData Value_270 Field Value Type Description TData Value_271 Declaration public TData Value_271 Field Value Type Description TData Value_272 Declaration public TData Value_272 Field Value Type Description TData Value_273 Declaration public TData Value_273 Field Value Type Description TData Value_274 Declaration public TData Value_274 Field Value Type Description TData Value_275 Declaration public TData Value_275 Field Value Type Description TData Value_276 Declaration public TData Value_276 Field Value Type Description TData Value_277 Declaration public TData Value_277 Field Value Type Description TData Value_278 Declaration public TData Value_278 Field Value Type Description TData Value_279 Declaration public TData Value_279 Field Value Type Description TData Value_28 Declaration public TData Value_28 Field Value Type Description TData Value_280 Declaration public TData Value_280 Field Value Type Description TData Value_281 Declaration public TData Value_281 Field Value Type Description TData Value_282 Declaration public TData Value_282 Field Value Type Description TData Value_283 Declaration public TData Value_283 Field Value Type Description TData Value_284 Declaration public TData Value_284 Field Value Type Description TData Value_285 Declaration public TData Value_285 Field Value Type Description TData Value_286 Declaration public TData Value_286 Field Value Type Description TData Value_287 Declaration public TData Value_287 Field Value Type Description TData Value_288 Declaration public TData Value_288 Field Value Type Description TData Value_289 Declaration public TData Value_289 Field Value Type Description TData Value_29 Declaration public TData Value_29 Field Value Type Description TData Value_290 Declaration public TData Value_290 Field Value Type Description TData Value_291 Declaration public TData Value_291 Field Value Type Description TData Value_292 Declaration public TData Value_292 Field Value Type Description TData Value_293 Declaration public TData Value_293 Field Value Type Description TData Value_294 Declaration public TData Value_294 Field Value Type Description TData Value_295 Declaration public TData Value_295 Field Value Type Description TData Value_296 Declaration public TData Value_296 Field Value Type Description TData Value_297 Declaration public TData Value_297 Field Value Type Description TData Value_298 Declaration public TData Value_298 Field Value Type Description TData Value_299 Declaration public TData Value_299 Field Value Type Description TData Value_3 Declaration public TData Value_3 Field Value Type Description TData Value_30 Declaration public TData Value_30 Field Value Type Description TData Value_300 Declaration public TData Value_300 Field Value Type Description TData Value_301 Declaration public TData Value_301 Field Value Type Description TData Value_302 Declaration public TData Value_302 Field Value Type Description TData Value_303 Declaration public TData Value_303 Field Value Type Description TData Value_304 Declaration public TData Value_304 Field Value Type Description TData Value_305 Declaration public TData Value_305 Field Value Type Description TData Value_306 Declaration public TData Value_306 Field Value Type Description TData Value_307 Declaration public TData Value_307 Field Value Type Description TData Value_308 Declaration public TData Value_308 Field Value Type Description TData Value_309 Declaration public TData Value_309 Field Value Type Description TData Value_31 Declaration public TData Value_31 Field Value Type Description TData Value_310 Declaration public TData Value_310 Field Value Type Description TData Value_311 Declaration public TData Value_311 Field Value Type Description TData Value_312 Declaration public TData Value_312 Field Value Type Description TData Value_313 Declaration public TData Value_313 Field Value Type Description TData Value_314 Declaration public TData Value_314 Field Value Type Description TData Value_315 Declaration public TData Value_315 Field Value Type Description TData Value_316 Declaration public TData Value_316 Field Value Type Description TData Value_317 Declaration public TData Value_317 Field Value Type Description TData Value_318 Declaration public TData Value_318 Field Value Type Description TData Value_319 Declaration public TData Value_319 Field Value Type Description TData Value_32 Declaration public TData Value_32 Field Value Type Description TData Value_320 Declaration public TData Value_320 Field Value Type Description TData Value_321 Declaration public TData Value_321 Field Value Type Description TData Value_322 Declaration public TData Value_322 Field Value Type Description TData Value_323 Declaration public TData Value_323 Field Value Type Description TData Value_324 Declaration public TData Value_324 Field Value Type Description TData Value_325 Declaration public TData Value_325 Field Value Type Description TData Value_326 Declaration public TData Value_326 Field Value Type Description TData Value_327 Declaration public TData Value_327 Field Value Type Description TData Value_328 Declaration public TData Value_328 Field Value Type Description TData Value_329 Declaration public TData Value_329 Field Value Type Description TData Value_33 Declaration public TData Value_33 Field Value Type Description TData Value_330 Declaration public TData Value_330 Field Value Type Description TData Value_331 Declaration public TData Value_331 Field Value Type Description TData Value_332 Declaration public TData Value_332 Field Value Type Description TData Value_333 Declaration public TData Value_333 Field Value Type Description TData Value_334 Declaration public TData Value_334 Field Value Type Description TData Value_335 Declaration public TData Value_335 Field Value Type Description TData Value_336 Declaration public TData Value_336 Field Value Type Description TData Value_337 Declaration public TData Value_337 Field Value Type Description TData Value_338 Declaration public TData Value_338 Field Value Type Description TData Value_339 Declaration public TData Value_339 Field Value Type Description TData Value_34 Declaration public TData Value_34 Field Value Type Description TData Value_340 Declaration public TData Value_340 Field Value Type Description TData Value_341 Declaration public TData Value_341 Field Value Type Description TData Value_342 Declaration public TData Value_342 Field Value Type Description TData Value_343 Declaration public TData Value_343 Field Value Type Description TData Value_344 Declaration public TData Value_344 Field Value Type Description TData Value_345 Declaration public TData Value_345 Field Value Type Description TData Value_346 Declaration public TData Value_346 Field Value Type Description TData Value_347 Declaration public TData Value_347 Field Value Type Description TData Value_348 Declaration public TData Value_348 Field Value Type Description TData Value_349 Declaration public TData Value_349 Field Value Type Description TData Value_35 Declaration public TData Value_35 Field Value Type Description TData Value_350 Declaration public TData Value_350 Field Value Type Description TData Value_351 Declaration public TData Value_351 Field Value Type Description TData Value_352 Declaration public TData Value_352 Field Value Type Description TData Value_353 Declaration public TData Value_353 Field Value Type Description TData Value_354 Declaration public TData Value_354 Field Value Type Description TData Value_355 Declaration public TData Value_355 Field Value Type Description TData Value_356 Declaration public TData Value_356 Field Value Type Description TData Value_357 Declaration public TData Value_357 Field Value Type Description TData Value_358 Declaration public TData Value_358 Field Value Type Description TData Value_359 Declaration public TData Value_359 Field Value Type Description TData Value_36 Declaration public TData Value_36 Field Value Type Description TData Value_360 Declaration public TData Value_360 Field Value Type Description TData Value_361 Declaration public TData Value_361 Field Value Type Description TData Value_362 Declaration public TData Value_362 Field Value Type Description TData Value_363 Declaration public TData Value_363 Field Value Type Description TData Value_364 Declaration public TData Value_364 Field Value Type Description TData Value_365 Declaration public TData Value_365 Field Value Type Description TData Value_366 Declaration public TData Value_366 Field Value Type Description TData Value_367 Declaration public TData Value_367 Field Value Type Description TData Value_368 Declaration public TData Value_368 Field Value Type Description TData Value_369 Declaration public TData Value_369 Field Value Type Description TData Value_37 Declaration public TData Value_37 Field Value Type Description TData Value_370 Declaration public TData Value_370 Field Value Type Description TData Value_371 Declaration public TData Value_371 Field Value Type Description TData Value_372 Declaration public TData Value_372 Field Value Type Description TData Value_373 Declaration public TData Value_373 Field Value Type Description TData Value_374 Declaration public TData Value_374 Field Value Type Description TData Value_375 Declaration public TData Value_375 Field Value Type Description TData Value_376 Declaration public TData Value_376 Field Value Type Description TData Value_377 Declaration public TData Value_377 Field Value Type Description TData Value_378 Declaration public TData Value_378 Field Value Type Description TData Value_379 Declaration public TData Value_379 Field Value Type Description TData Value_38 Declaration public TData Value_38 Field Value Type Description TData Value_380 Declaration public TData Value_380 Field Value Type Description TData Value_381 Declaration public TData Value_381 Field Value Type Description TData Value_382 Declaration public TData Value_382 Field Value Type Description TData Value_383 Declaration public TData Value_383 Field Value Type Description TData Value_384 Declaration public TData Value_384 Field Value Type Description TData Value_385 Declaration public TData Value_385 Field Value Type Description TData Value_386 Declaration public TData Value_386 Field Value Type Description TData Value_387 Declaration public TData Value_387 Field Value Type Description TData Value_388 Declaration public TData Value_388 Field Value Type Description TData Value_389 Declaration public TData Value_389 Field Value Type Description TData Value_39 Declaration public TData Value_39 Field Value Type Description TData Value_390 Declaration public TData Value_390 Field Value Type Description TData Value_391 Declaration public TData Value_391 Field Value Type Description TData Value_392 Declaration public TData Value_392 Field Value Type Description TData Value_393 Declaration public TData Value_393 Field Value Type Description TData Value_394 Declaration public TData Value_394 Field Value Type Description TData Value_395 Declaration public TData Value_395 Field Value Type Description TData Value_396 Declaration public TData Value_396 Field Value Type Description TData Value_397 Declaration public TData Value_397 Field Value Type Description TData Value_398 Declaration public TData Value_398 Field Value Type Description TData Value_399 Declaration public TData Value_399 Field Value Type Description TData Value_4 Declaration public TData Value_4 Field Value Type Description TData Value_40 Declaration public TData Value_40 Field Value Type Description TData Value_400 Declaration public TData Value_400 Field Value Type Description TData Value_401 Declaration public TData Value_401 Field Value Type Description TData Value_402 Declaration public TData Value_402 Field Value Type Description TData Value_403 Declaration public TData Value_403 Field Value Type Description TData Value_404 Declaration public TData Value_404 Field Value Type Description TData Value_405 Declaration public TData Value_405 Field Value Type Description TData Value_406 Declaration public TData Value_406 Field Value Type Description TData Value_407 Declaration public TData Value_407 Field Value Type Description TData Value_408 Declaration public TData Value_408 Field Value Type Description TData Value_409 Declaration public TData Value_409 Field Value Type Description TData Value_41 Declaration public TData Value_41 Field Value Type Description TData Value_410 Declaration public TData Value_410 Field Value Type Description TData Value_411 Declaration public TData Value_411 Field Value Type Description TData Value_412 Declaration public TData Value_412 Field Value Type Description TData Value_413 Declaration public TData Value_413 Field Value Type Description TData Value_414 Declaration public TData Value_414 Field Value Type Description TData Value_415 Declaration public TData Value_415 Field Value Type Description TData Value_416 Declaration public TData Value_416 Field Value Type Description TData Value_417 Declaration public TData Value_417 Field Value Type Description TData Value_418 Declaration public TData Value_418 Field Value Type Description TData Value_419 Declaration public TData Value_419 Field Value Type Description TData Value_42 Declaration public TData Value_42 Field Value Type Description TData Value_420 Declaration public TData Value_420 Field Value Type Description TData Value_421 Declaration public TData Value_421 Field Value Type Description TData Value_422 Declaration public TData Value_422 Field Value Type Description TData Value_423 Declaration public TData Value_423 Field Value Type Description TData Value_424 Declaration public TData Value_424 Field Value Type Description TData Value_425 Declaration public TData Value_425 Field Value Type Description TData Value_426 Declaration public TData Value_426 Field Value Type Description TData Value_427 Declaration public TData Value_427 Field Value Type Description TData Value_428 Declaration public TData Value_428 Field Value Type Description TData Value_429 Declaration public TData Value_429 Field Value Type Description TData Value_43 Declaration public TData Value_43 Field Value Type Description TData Value_430 Declaration public TData Value_430 Field Value Type Description TData Value_431 Declaration public TData Value_431 Field Value Type Description TData Value_432 Declaration public TData Value_432 Field Value Type Description TData Value_433 Declaration public TData Value_433 Field Value Type Description TData Value_434 Declaration public TData Value_434 Field Value Type Description TData Value_435 Declaration public TData Value_435 Field Value Type Description TData Value_436 Declaration public TData Value_436 Field Value Type Description TData Value_437 Declaration public TData Value_437 Field Value Type Description TData Value_438 Declaration public TData Value_438 Field Value Type Description TData Value_439 Declaration public TData Value_439 Field Value Type Description TData Value_44 Declaration public TData Value_44 Field Value Type Description TData Value_440 Declaration public TData Value_440 Field Value Type Description TData Value_441 Declaration public TData Value_441 Field Value Type Description TData Value_442 Declaration public TData Value_442 Field Value Type Description TData Value_443 Declaration public TData Value_443 Field Value Type Description TData Value_444 Declaration public TData Value_444 Field Value Type Description TData Value_445 Declaration public TData Value_445 Field Value Type Description TData Value_446 Declaration public TData Value_446 Field Value Type Description TData Value_447 Declaration public TData Value_447 Field Value Type Description TData Value_448 Declaration public TData Value_448 Field Value Type Description TData Value_449 Declaration public TData Value_449 Field Value Type Description TData Value_45 Declaration public TData Value_45 Field Value Type Description TData Value_450 Declaration public TData Value_450 Field Value Type Description TData Value_451 Declaration public TData Value_451 Field Value Type Description TData Value_452 Declaration public TData Value_452 Field Value Type Description TData Value_453 Declaration public TData Value_453 Field Value Type Description TData Value_454 Declaration public TData Value_454 Field Value Type Description TData Value_455 Declaration public TData Value_455 Field Value Type Description TData Value_456 Declaration public TData Value_456 Field Value Type Description TData Value_457 Declaration public TData Value_457 Field Value Type Description TData Value_458 Declaration public TData Value_458 Field Value Type Description TData Value_459 Declaration public TData Value_459 Field Value Type Description TData Value_46 Declaration public TData Value_46 Field Value Type Description TData Value_460 Declaration public TData Value_460 Field Value Type Description TData Value_461 Declaration public TData Value_461 Field Value Type Description TData Value_462 Declaration public TData Value_462 Field Value Type Description TData Value_463 Declaration public TData Value_463 Field Value Type Description TData Value_464 Declaration public TData Value_464 Field Value Type Description TData Value_465 Declaration public TData Value_465 Field Value Type Description TData Value_466 Declaration public TData Value_466 Field Value Type Description TData Value_467 Declaration public TData Value_467 Field Value Type Description TData Value_468 Declaration public TData Value_468 Field Value Type Description TData Value_469 Declaration public TData Value_469 Field Value Type Description TData Value_47 Declaration public TData Value_47 Field Value Type Description TData Value_470 Declaration public TData Value_470 Field Value Type Description TData Value_471 Declaration public TData Value_471 Field Value Type Description TData Value_472 Declaration public TData Value_472 Field Value Type Description TData Value_473 Declaration public TData Value_473 Field Value Type Description TData Value_474 Declaration public TData Value_474 Field Value Type Description TData Value_475 Declaration public TData Value_475 Field Value Type Description TData Value_476 Declaration public TData Value_476 Field Value Type Description TData Value_477 Declaration public TData Value_477 Field Value Type Description TData Value_478 Declaration public TData Value_478 Field Value Type Description TData Value_479 Declaration public TData Value_479 Field Value Type Description TData Value_48 Declaration public TData Value_48 Field Value Type Description TData Value_480 Declaration public TData Value_480 Field Value Type Description TData Value_481 Declaration public TData Value_481 Field Value Type Description TData Value_482 Declaration public TData Value_482 Field Value Type Description TData Value_483 Declaration public TData Value_483 Field Value Type Description TData Value_484 Declaration public TData Value_484 Field Value Type Description TData Value_485 Declaration public TData Value_485 Field Value Type Description TData Value_486 Declaration public TData Value_486 Field Value Type Description TData Value_487 Declaration public TData Value_487 Field Value Type Description TData Value_488 Declaration public TData Value_488 Field Value Type Description TData Value_489 Declaration public TData Value_489 Field Value Type Description TData Value_49 Declaration public TData Value_49 Field Value Type Description TData Value_490 Declaration public TData Value_490 Field Value Type Description TData Value_491 Declaration public TData Value_491 Field Value Type Description TData Value_492 Declaration public TData Value_492 Field Value Type Description TData Value_493 Declaration public TData Value_493 Field Value Type Description TData Value_494 Declaration public TData Value_494 Field Value Type Description TData Value_495 Declaration public TData Value_495 Field Value Type Description TData Value_496 Declaration public TData Value_496 Field Value Type Description TData Value_497 Declaration public TData Value_497 Field Value Type Description TData Value_498 Declaration public TData Value_498 Field Value Type Description TData Value_499 Declaration public TData Value_499 Field Value Type Description TData Value_5 Declaration public TData Value_5 Field Value Type Description TData Value_50 Declaration public TData Value_50 Field Value Type Description TData Value_500 Declaration public TData Value_500 Field Value Type Description TData Value_501 Declaration public TData Value_501 Field Value Type Description TData Value_502 Declaration public TData Value_502 Field Value Type Description TData Value_503 Declaration public TData Value_503 Field Value Type Description TData Value_504 Declaration public TData Value_504 Field Value Type Description TData Value_505 Declaration public TData Value_505 Field Value Type Description TData Value_506 Declaration public TData Value_506 Field Value Type Description TData Value_507 Declaration public TData Value_507 Field Value Type Description TData Value_508 Declaration public TData Value_508 Field Value Type Description TData Value_509 Declaration public TData Value_509 Field Value Type Description TData Value_51 Declaration public TData Value_51 Field Value Type Description TData Value_510 Declaration public TData Value_510 Field Value Type Description TData Value_511 Declaration public TData Value_511 Field Value Type Description TData Value_512 Declaration public TData Value_512 Field Value Type Description TData Value_513 Declaration public TData Value_513 Field Value Type Description TData Value_514 Declaration public TData Value_514 Field Value Type Description TData Value_515 Declaration public TData Value_515 Field Value Type Description TData Value_516 Declaration public TData Value_516 Field Value Type Description TData Value_517 Declaration public TData Value_517 Field Value Type Description TData Value_518 Declaration public TData Value_518 Field Value Type Description TData Value_519 Declaration public TData Value_519 Field Value Type Description TData Value_52 Declaration public TData Value_52 Field Value Type Description TData Value_520 Declaration public TData Value_520 Field Value Type Description TData Value_521 Declaration public TData Value_521 Field Value Type Description TData Value_522 Declaration public TData Value_522 Field Value Type Description TData Value_523 Declaration public TData Value_523 Field Value Type Description TData Value_524 Declaration public TData Value_524 Field Value Type Description TData Value_525 Declaration public TData Value_525 Field Value Type Description TData Value_526 Declaration public TData Value_526 Field Value Type Description TData Value_527 Declaration public TData Value_527 Field Value Type Description TData Value_528 Declaration public TData Value_528 Field Value Type Description TData Value_529 Declaration public TData Value_529 Field Value Type Description TData Value_53 Declaration public TData Value_53 Field Value Type Description TData Value_530 Declaration public TData Value_530 Field Value Type Description TData Value_531 Declaration public TData Value_531 Field Value Type Description TData Value_532 Declaration public TData Value_532 Field Value Type Description TData Value_533 Declaration public TData Value_533 Field Value Type Description TData Value_534 Declaration public TData Value_534 Field Value Type Description TData Value_535 Declaration public TData Value_535 Field Value Type Description TData Value_536 Declaration public TData Value_536 Field Value Type Description TData Value_537 Declaration public TData Value_537 Field Value Type Description TData Value_538 Declaration public TData Value_538 Field Value Type Description TData Value_539 Declaration public TData Value_539 Field Value Type Description TData Value_54 Declaration public TData Value_54 Field Value Type Description TData Value_540 Declaration public TData Value_540 Field Value Type Description TData Value_541 Declaration public TData Value_541 Field Value Type Description TData Value_542 Declaration public TData Value_542 Field Value Type Description TData Value_543 Declaration public TData Value_543 Field Value Type Description TData Value_544 Declaration public TData Value_544 Field Value Type Description TData Value_545 Declaration public TData Value_545 Field Value Type Description TData Value_546 Declaration public TData Value_546 Field Value Type Description TData Value_547 Declaration public TData Value_547 Field Value Type Description TData Value_548 Declaration public TData Value_548 Field Value Type Description TData Value_549 Declaration public TData Value_549 Field Value Type Description TData Value_55 Declaration public TData Value_55 Field Value Type Description TData Value_550 Declaration public TData Value_550 Field Value Type Description TData Value_551 Declaration public TData Value_551 Field Value Type Description TData Value_552 Declaration public TData Value_552 Field Value Type Description TData Value_553 Declaration public TData Value_553 Field Value Type Description TData Value_554 Declaration public TData Value_554 Field Value Type Description TData Value_555 Declaration public TData Value_555 Field Value Type Description TData Value_556 Declaration public TData Value_556 Field Value Type Description TData Value_557 Declaration public TData Value_557 Field Value Type Description TData Value_558 Declaration public TData Value_558 Field Value Type Description TData Value_559 Declaration public TData Value_559 Field Value Type Description TData Value_56 Declaration public TData Value_56 Field Value Type Description TData Value_560 Declaration public TData Value_560 Field Value Type Description TData Value_561 Declaration public TData Value_561 Field Value Type Description TData Value_562 Declaration public TData Value_562 Field Value Type Description TData Value_563 Declaration public TData Value_563 Field Value Type Description TData Value_564 Declaration public TData Value_564 Field Value Type Description TData Value_565 Declaration public TData Value_565 Field Value Type Description TData Value_566 Declaration public TData Value_566 Field Value Type Description TData Value_567 Declaration public TData Value_567 Field Value Type Description TData Value_568 Declaration public TData Value_568 Field Value Type Description TData Value_569 Declaration public TData Value_569 Field Value Type Description TData Value_57 Declaration public TData Value_57 Field Value Type Description TData Value_570 Declaration public TData Value_570 Field Value Type Description TData Value_571 Declaration public TData Value_571 Field Value Type Description TData Value_572 Declaration public TData Value_572 Field Value Type Description TData Value_573 Declaration public TData Value_573 Field Value Type Description TData Value_574 Declaration public TData Value_574 Field Value Type Description TData Value_575 Declaration public TData Value_575 Field Value Type Description TData Value_576 Declaration public TData Value_576 Field Value Type Description TData Value_577 Declaration public TData Value_577 Field Value Type Description TData Value_578 Declaration public TData Value_578 Field Value Type Description TData Value_579 Declaration public TData Value_579 Field Value Type Description TData Value_58 Declaration public TData Value_58 Field Value Type Description TData Value_580 Declaration public TData Value_580 Field Value Type Description TData Value_581 Declaration public TData Value_581 Field Value Type Description TData Value_582 Declaration public TData Value_582 Field Value Type Description TData Value_583 Declaration public TData Value_583 Field Value Type Description TData Value_584 Declaration public TData Value_584 Field Value Type Description TData Value_585 Declaration public TData Value_585 Field Value Type Description TData Value_586 Declaration public TData Value_586 Field Value Type Description TData Value_587 Declaration public TData Value_587 Field Value Type Description TData Value_588 Declaration public TData Value_588 Field Value Type Description TData Value_589 Declaration public TData Value_589 Field Value Type Description TData Value_59 Declaration public TData Value_59 Field Value Type Description TData Value_590 Declaration public TData Value_590 Field Value Type Description TData Value_591 Declaration public TData Value_591 Field Value Type Description TData Value_592 Declaration public TData Value_592 Field Value Type Description TData Value_593 Declaration public TData Value_593 Field Value Type Description TData Value_594 Declaration public TData Value_594 Field Value Type Description TData Value_595 Declaration public TData Value_595 Field Value Type Description TData Value_596 Declaration public TData Value_596 Field Value Type Description TData Value_597 Declaration public TData Value_597 Field Value Type Description TData Value_598 Declaration public TData Value_598 Field Value Type Description TData Value_599 Declaration public TData Value_599 Field Value Type Description TData Value_6 Declaration public TData Value_6 Field Value Type Description TData Value_60 Declaration public TData Value_60 Field Value Type Description TData Value_600 Declaration public TData Value_600 Field Value Type Description TData Value_601 Declaration public TData Value_601 Field Value Type Description TData Value_602 Declaration public TData Value_602 Field Value Type Description TData Value_603 Declaration public TData Value_603 Field Value Type Description TData Value_604 Declaration public TData Value_604 Field Value Type Description TData Value_605 Declaration public TData Value_605 Field Value Type Description TData Value_606 Declaration public TData Value_606 Field Value Type Description TData Value_607 Declaration public TData Value_607 Field Value Type Description TData Value_608 Declaration public TData Value_608 Field Value Type Description TData Value_609 Declaration public TData Value_609 Field Value Type Description TData Value_61 Declaration public TData Value_61 Field Value Type Description TData Value_610 Declaration public TData Value_610 Field Value Type Description TData Value_611 Declaration public TData Value_611 Field Value Type Description TData Value_612 Declaration public TData Value_612 Field Value Type Description TData Value_613 Declaration public TData Value_613 Field Value Type Description TData Value_614 Declaration public TData Value_614 Field Value Type Description TData Value_615 Declaration public TData Value_615 Field Value Type Description TData Value_616 Declaration public TData Value_616 Field Value Type Description TData Value_617 Declaration public TData Value_617 Field Value Type Description TData Value_618 Declaration public TData Value_618 Field Value Type Description TData Value_619 Declaration public TData Value_619 Field Value Type Description TData Value_62 Declaration public TData Value_62 Field Value Type Description TData Value_620 Declaration public TData Value_620 Field Value Type Description TData Value_621 Declaration public TData Value_621 Field Value Type Description TData Value_622 Declaration public TData Value_622 Field Value Type Description TData Value_623 Declaration public TData Value_623 Field Value Type Description TData Value_624 Declaration public TData Value_624 Field Value Type Description TData Value_625 Declaration public TData Value_625 Field Value Type Description TData Value_626 Declaration public TData Value_626 Field Value Type Description TData Value_627 Declaration public TData Value_627 Field Value Type Description TData Value_628 Declaration public TData Value_628 Field Value Type Description TData Value_629 Declaration public TData Value_629 Field Value Type Description TData Value_63 Declaration public TData Value_63 Field Value Type Description TData Value_630 Declaration public TData Value_630 Field Value Type Description TData Value_631 Declaration public TData Value_631 Field Value Type Description TData Value_632 Declaration public TData Value_632 Field Value Type Description TData Value_633 Declaration public TData Value_633 Field Value Type Description TData Value_634 Declaration public TData Value_634 Field Value Type Description TData Value_635 Declaration public TData Value_635 Field Value Type Description TData Value_636 Declaration public TData Value_636 Field Value Type Description TData Value_637 Declaration public TData Value_637 Field Value Type Description TData Value_638 Declaration public TData Value_638 Field Value Type Description TData Value_639 Declaration public TData Value_639 Field Value Type Description TData Value_64 Declaration public TData Value_64 Field Value Type Description TData Value_640 Declaration public TData Value_640 Field Value Type Description TData Value_641 Declaration public TData Value_641 Field Value Type Description TData Value_642 Declaration public TData Value_642 Field Value Type Description TData Value_643 Declaration public TData Value_643 Field Value Type Description TData Value_644 Declaration public TData Value_644 Field Value Type Description TData Value_645 Declaration public TData Value_645 Field Value Type Description TData Value_646 Declaration public TData Value_646 Field Value Type Description TData Value_647 Declaration public TData Value_647 Field Value Type Description TData Value_648 Declaration public TData Value_648 Field Value Type Description TData Value_649 Declaration public TData Value_649 Field Value Type Description TData Value_65 Declaration public TData Value_65 Field Value Type Description TData Value_650 Declaration public TData Value_650 Field Value Type Description TData Value_651 Declaration public TData Value_651 Field Value Type Description TData Value_652 Declaration public TData Value_652 Field Value Type Description TData Value_653 Declaration public TData Value_653 Field Value Type Description TData Value_654 Declaration public TData Value_654 Field Value Type Description TData Value_655 Declaration public TData Value_655 Field Value Type Description TData Value_656 Declaration public TData Value_656 Field Value Type Description TData Value_657 Declaration public TData Value_657 Field Value Type Description TData Value_658 Declaration public TData Value_658 Field Value Type Description TData Value_659 Declaration public TData Value_659 Field Value Type Description TData Value_66 Declaration public TData Value_66 Field Value Type Description TData Value_660 Declaration public TData Value_660 Field Value Type Description TData Value_661 Declaration public TData Value_661 Field Value Type Description TData Value_662 Declaration public TData Value_662 Field Value Type Description TData Value_663 Declaration public TData Value_663 Field Value Type Description TData Value_664 Declaration public TData Value_664 Field Value Type Description TData Value_665 Declaration public TData Value_665 Field Value Type Description TData Value_666 Declaration public TData Value_666 Field Value Type Description TData Value_667 Declaration public TData Value_667 Field Value Type Description TData Value_668 Declaration public TData Value_668 Field Value Type Description TData Value_669 Declaration public TData Value_669 Field Value Type Description TData Value_67 Declaration public TData Value_67 Field Value Type Description TData Value_670 Declaration public TData Value_670 Field Value Type Description TData Value_671 Declaration public TData Value_671 Field Value Type Description TData Value_672 Declaration public TData Value_672 Field Value Type Description TData Value_673 Declaration public TData Value_673 Field Value Type Description TData Value_674 Declaration public TData Value_674 Field Value Type Description TData Value_675 Declaration public TData Value_675 Field Value Type Description TData Value_676 Declaration public TData Value_676 Field Value Type Description TData Value_677 Declaration public TData Value_677 Field Value Type Description TData Value_678 Declaration public TData Value_678 Field Value Type Description TData Value_679 Declaration public TData Value_679 Field Value Type Description TData Value_68 Declaration public TData Value_68 Field Value Type Description TData Value_680 Declaration public TData Value_680 Field Value Type Description TData Value_681 Declaration public TData Value_681 Field Value Type Description TData Value_682 Declaration public TData Value_682 Field Value Type Description TData Value_683 Declaration public TData Value_683 Field Value Type Description TData Value_684 Declaration public TData Value_684 Field Value Type Description TData Value_685 Declaration public TData Value_685 Field Value Type Description TData Value_686 Declaration public TData Value_686 Field Value Type Description TData Value_687 Declaration public TData Value_687 Field Value Type Description TData Value_688 Declaration public TData Value_688 Field Value Type Description TData Value_689 Declaration public TData Value_689 Field Value Type Description TData Value_69 Declaration public TData Value_69 Field Value Type Description TData Value_690 Declaration public TData Value_690 Field Value Type Description TData Value_691 Declaration public TData Value_691 Field Value Type Description TData Value_692 Declaration public TData Value_692 Field Value Type Description TData Value_693 Declaration public TData Value_693 Field Value Type Description TData Value_694 Declaration public TData Value_694 Field Value Type Description TData Value_695 Declaration public TData Value_695 Field Value Type Description TData Value_696 Declaration public TData Value_696 Field Value Type Description TData Value_697 Declaration public TData Value_697 Field Value Type Description TData Value_698 Declaration public TData Value_698 Field Value Type Description TData Value_699 Declaration public TData Value_699 Field Value Type Description TData Value_7 Declaration public TData Value_7 Field Value Type Description TData Value_70 Declaration public TData Value_70 Field Value Type Description TData Value_700 Declaration public TData Value_700 Field Value Type Description TData Value_701 Declaration public TData Value_701 Field Value Type Description TData Value_702 Declaration public TData Value_702 Field Value Type Description TData Value_703 Declaration public TData Value_703 Field Value Type Description TData Value_704 Declaration public TData Value_704 Field Value Type Description TData Value_705 Declaration public TData Value_705 Field Value Type Description TData Value_706 Declaration public TData Value_706 Field Value Type Description TData Value_707 Declaration public TData Value_707 Field Value Type Description TData Value_708 Declaration public TData Value_708 Field Value Type Description TData Value_709 Declaration public TData Value_709 Field Value Type Description TData Value_71 Declaration public TData Value_71 Field Value Type Description TData Value_710 Declaration public TData Value_710 Field Value Type Description TData Value_711 Declaration public TData Value_711 Field Value Type Description TData Value_712 Declaration public TData Value_712 Field Value Type Description TData Value_713 Declaration public TData Value_713 Field Value Type Description TData Value_714 Declaration public TData Value_714 Field Value Type Description TData Value_715 Declaration public TData Value_715 Field Value Type Description TData Value_716 Declaration public TData Value_716 Field Value Type Description TData Value_717 Declaration public TData Value_717 Field Value Type Description TData Value_718 Declaration public TData Value_718 Field Value Type Description TData Value_719 Declaration public TData Value_719 Field Value Type Description TData Value_72 Declaration public TData Value_72 Field Value Type Description TData Value_720 Declaration public TData Value_720 Field Value Type Description TData Value_721 Declaration public TData Value_721 Field Value Type Description TData Value_722 Declaration public TData Value_722 Field Value Type Description TData Value_723 Declaration public TData Value_723 Field Value Type Description TData Value_724 Declaration public TData Value_724 Field Value Type Description TData Value_725 Declaration public TData Value_725 Field Value Type Description TData Value_726 Declaration public TData Value_726 Field Value Type Description TData Value_727 Declaration public TData Value_727 Field Value Type Description TData Value_728 Declaration public TData Value_728 Field Value Type Description TData Value_729 Declaration public TData Value_729 Field Value Type Description TData Value_73 Declaration public TData Value_73 Field Value Type Description TData Value_730 Declaration public TData Value_730 Field Value Type Description TData Value_731 Declaration public TData Value_731 Field Value Type Description TData Value_732 Declaration public TData Value_732 Field Value Type Description TData Value_733 Declaration public TData Value_733 Field Value Type Description TData Value_734 Declaration public TData Value_734 Field Value Type Description TData Value_735 Declaration public TData Value_735 Field Value Type Description TData Value_736 Declaration public TData Value_736 Field Value Type Description TData Value_737 Declaration public TData Value_737 Field Value Type Description TData Value_738 Declaration public TData Value_738 Field Value Type Description TData Value_739 Declaration public TData Value_739 Field Value Type Description TData Value_74 Declaration public TData Value_74 Field Value Type Description TData Value_740 Declaration public TData Value_740 Field Value Type Description TData Value_741 Declaration public TData Value_741 Field Value Type Description TData Value_742 Declaration public TData Value_742 Field Value Type Description TData Value_743 Declaration public TData Value_743 Field Value Type Description TData Value_744 Declaration public TData Value_744 Field Value Type Description TData Value_745 Declaration public TData Value_745 Field Value Type Description TData Value_746 Declaration public TData Value_746 Field Value Type Description TData Value_747 Declaration public TData Value_747 Field Value Type Description TData Value_748 Declaration public TData Value_748 Field Value Type Description TData Value_749 Declaration public TData Value_749 Field Value Type Description TData Value_75 Declaration public TData Value_75 Field Value Type Description TData Value_750 Declaration public TData Value_750 Field Value Type Description TData Value_751 Declaration public TData Value_751 Field Value Type Description TData Value_752 Declaration public TData Value_752 Field Value Type Description TData Value_753 Declaration public TData Value_753 Field Value Type Description TData Value_754 Declaration public TData Value_754 Field Value Type Description TData Value_755 Declaration public TData Value_755 Field Value Type Description TData Value_756 Declaration public TData Value_756 Field Value Type Description TData Value_757 Declaration public TData Value_757 Field Value Type Description TData Value_758 Declaration public TData Value_758 Field Value Type Description TData Value_759 Declaration public TData Value_759 Field Value Type Description TData Value_76 Declaration public TData Value_76 Field Value Type Description TData Value_760 Declaration public TData Value_760 Field Value Type Description TData Value_761 Declaration public TData Value_761 Field Value Type Description TData Value_762 Declaration public TData Value_762 Field Value Type Description TData Value_763 Declaration public TData Value_763 Field Value Type Description TData Value_764 Declaration public TData Value_764 Field Value Type Description TData Value_765 Declaration public TData Value_765 Field Value Type Description TData Value_766 Declaration public TData Value_766 Field Value Type Description TData Value_767 Declaration public TData Value_767 Field Value Type Description TData Value_768 Declaration public TData Value_768 Field Value Type Description TData Value_769 Declaration public TData Value_769 Field Value Type Description TData Value_77 Declaration public TData Value_77 Field Value Type Description TData Value_770 Declaration public TData Value_770 Field Value Type Description TData Value_771 Declaration public TData Value_771 Field Value Type Description TData Value_772 Declaration public TData Value_772 Field Value Type Description TData Value_773 Declaration public TData Value_773 Field Value Type Description TData Value_774 Declaration public TData Value_774 Field Value Type Description TData Value_775 Declaration public TData Value_775 Field Value Type Description TData Value_776 Declaration public TData Value_776 Field Value Type Description TData Value_777 Declaration public TData Value_777 Field Value Type Description TData Value_778 Declaration public TData Value_778 Field Value Type Description TData Value_779 Declaration public TData Value_779 Field Value Type Description TData Value_78 Declaration public TData Value_78 Field Value Type Description TData Value_780 Declaration public TData Value_780 Field Value Type Description TData Value_781 Declaration public TData Value_781 Field Value Type Description TData Value_782 Declaration public TData Value_782 Field Value Type Description TData Value_783 Declaration public TData Value_783 Field Value Type Description TData Value_784 Declaration public TData Value_784 Field Value Type Description TData Value_785 Declaration public TData Value_785 Field Value Type Description TData Value_786 Declaration public TData Value_786 Field Value Type Description TData Value_787 Declaration public TData Value_787 Field Value Type Description TData Value_788 Declaration public TData Value_788 Field Value Type Description TData Value_789 Declaration public TData Value_789 Field Value Type Description TData Value_79 Declaration public TData Value_79 Field Value Type Description TData Value_790 Declaration public TData Value_790 Field Value Type Description TData Value_791 Declaration public TData Value_791 Field Value Type Description TData Value_792 Declaration public TData Value_792 Field Value Type Description TData Value_793 Declaration public TData Value_793 Field Value Type Description TData Value_794 Declaration public TData Value_794 Field Value Type Description TData Value_795 Declaration public TData Value_795 Field Value Type Description TData Value_796 Declaration public TData Value_796 Field Value Type Description TData Value_797 Declaration public TData Value_797 Field Value Type Description TData Value_798 Declaration public TData Value_798 Field Value Type Description TData Value_799 Declaration public TData Value_799 Field Value Type Description TData Value_8 Declaration public TData Value_8 Field Value Type Description TData Value_80 Declaration public TData Value_80 Field Value Type Description TData Value_800 Declaration public TData Value_800 Field Value Type Description TData Value_801 Declaration public TData Value_801 Field Value Type Description TData Value_802 Declaration public TData Value_802 Field Value Type Description TData Value_803 Declaration public TData Value_803 Field Value Type Description TData Value_804 Declaration public TData Value_804 Field Value Type Description TData Value_805 Declaration public TData Value_805 Field Value Type Description TData Value_806 Declaration public TData Value_806 Field Value Type Description TData Value_807 Declaration public TData Value_807 Field Value Type Description TData Value_808 Declaration public TData Value_808 Field Value Type Description TData Value_809 Declaration public TData Value_809 Field Value Type Description TData Value_81 Declaration public TData Value_81 Field Value Type Description TData Value_810 Declaration public TData Value_810 Field Value Type Description TData Value_811 Declaration public TData Value_811 Field Value Type Description TData Value_812 Declaration public TData Value_812 Field Value Type Description TData Value_813 Declaration public TData Value_813 Field Value Type Description TData Value_814 Declaration public TData Value_814 Field Value Type Description TData Value_815 Declaration public TData Value_815 Field Value Type Description TData Value_816 Declaration public TData Value_816 Field Value Type Description TData Value_817 Declaration public TData Value_817 Field Value Type Description TData Value_818 Declaration public TData Value_818 Field Value Type Description TData Value_819 Declaration public TData Value_819 Field Value Type Description TData Value_82 Declaration public TData Value_82 Field Value Type Description TData Value_820 Declaration public TData Value_820 Field Value Type Description TData Value_821 Declaration public TData Value_821 Field Value Type Description TData Value_822 Declaration public TData Value_822 Field Value Type Description TData Value_823 Declaration public TData Value_823 Field Value Type Description TData Value_824 Declaration public TData Value_824 Field Value Type Description TData Value_825 Declaration public TData Value_825 Field Value Type Description TData Value_826 Declaration public TData Value_826 Field Value Type Description TData Value_827 Declaration public TData Value_827 Field Value Type Description TData Value_828 Declaration public TData Value_828 Field Value Type Description TData Value_829 Declaration public TData Value_829 Field Value Type Description TData Value_83 Declaration public TData Value_83 Field Value Type Description TData Value_830 Declaration public TData Value_830 Field Value Type Description TData Value_831 Declaration public TData Value_831 Field Value Type Description TData Value_832 Declaration public TData Value_832 Field Value Type Description TData Value_833 Declaration public TData Value_833 Field Value Type Description TData Value_834 Declaration public TData Value_834 Field Value Type Description TData Value_835 Declaration public TData Value_835 Field Value Type Description TData Value_836 Declaration public TData Value_836 Field Value Type Description TData Value_837 Declaration public TData Value_837 Field Value Type Description TData Value_838 Declaration public TData Value_838 Field Value Type Description TData Value_839 Declaration public TData Value_839 Field Value Type Description TData Value_84 Declaration public TData Value_84 Field Value Type Description TData Value_840 Declaration public TData Value_840 Field Value Type Description TData Value_841 Declaration public TData Value_841 Field Value Type Description TData Value_842 Declaration public TData Value_842 Field Value Type Description TData Value_843 Declaration public TData Value_843 Field Value Type Description TData Value_844 Declaration public TData Value_844 Field Value Type Description TData Value_845 Declaration public TData Value_845 Field Value Type Description TData Value_846 Declaration public TData Value_846 Field Value Type Description TData Value_847 Declaration public TData Value_847 Field Value Type Description TData Value_848 Declaration public TData Value_848 Field Value Type Description TData Value_849 Declaration public TData Value_849 Field Value Type Description TData Value_85 Declaration public TData Value_85 Field Value Type Description TData Value_850 Declaration public TData Value_850 Field Value Type Description TData Value_851 Declaration public TData Value_851 Field Value Type Description TData Value_852 Declaration public TData Value_852 Field Value Type Description TData Value_853 Declaration public TData Value_853 Field Value Type Description TData Value_854 Declaration public TData Value_854 Field Value Type Description TData Value_855 Declaration public TData Value_855 Field Value Type Description TData Value_856 Declaration public TData Value_856 Field Value Type Description TData Value_857 Declaration public TData Value_857 Field Value Type Description TData Value_858 Declaration public TData Value_858 Field Value Type Description TData Value_859 Declaration public TData Value_859 Field Value Type Description TData Value_86 Declaration public TData Value_86 Field Value Type Description TData Value_860 Declaration public TData Value_860 Field Value Type Description TData Value_861 Declaration public TData Value_861 Field Value Type Description TData Value_862 Declaration public TData Value_862 Field Value Type Description TData Value_863 Declaration public TData Value_863 Field Value Type Description TData Value_864 Declaration public TData Value_864 Field Value Type Description TData Value_865 Declaration public TData Value_865 Field Value Type Description TData Value_866 Declaration public TData Value_866 Field Value Type Description TData Value_867 Declaration public TData Value_867 Field Value Type Description TData Value_868 Declaration public TData Value_868 Field Value Type Description TData Value_869 Declaration public TData Value_869 Field Value Type Description TData Value_87 Declaration public TData Value_87 Field Value Type Description TData Value_870 Declaration public TData Value_870 Field Value Type Description TData Value_871 Declaration public TData Value_871 Field Value Type Description TData Value_872 Declaration public TData Value_872 Field Value Type Description TData Value_873 Declaration public TData Value_873 Field Value Type Description TData Value_874 Declaration public TData Value_874 Field Value Type Description TData Value_875 Declaration public TData Value_875 Field Value Type Description TData Value_876 Declaration public TData Value_876 Field Value Type Description TData Value_877 Declaration public TData Value_877 Field Value Type Description TData Value_878 Declaration public TData Value_878 Field Value Type Description TData Value_879 Declaration public TData Value_879 Field Value Type Description TData Value_88 Declaration public TData Value_88 Field Value Type Description TData Value_880 Declaration public TData Value_880 Field Value Type Description TData Value_881 Declaration public TData Value_881 Field Value Type Description TData Value_882 Declaration public TData Value_882 Field Value Type Description TData Value_883 Declaration public TData Value_883 Field Value Type Description TData Value_884 Declaration public TData Value_884 Field Value Type Description TData Value_885 Declaration public TData Value_885 Field Value Type Description TData Value_886 Declaration public TData Value_886 Field Value Type Description TData Value_887 Declaration public TData Value_887 Field Value Type Description TData Value_888 Declaration public TData Value_888 Field Value Type Description TData Value_889 Declaration public TData Value_889 Field Value Type Description TData Value_89 Declaration public TData Value_89 Field Value Type Description TData Value_890 Declaration public TData Value_890 Field Value Type Description TData Value_891 Declaration public TData Value_891 Field Value Type Description TData Value_892 Declaration public TData Value_892 Field Value Type Description TData Value_893 Declaration public TData Value_893 Field Value Type Description TData Value_894 Declaration public TData Value_894 Field Value Type Description TData Value_895 Declaration public TData Value_895 Field Value Type Description TData Value_896 Declaration public TData Value_896 Field Value Type Description TData Value_897 Declaration public TData Value_897 Field Value Type Description TData Value_898 Declaration public TData Value_898 Field Value Type Description TData Value_899 Declaration public TData Value_899 Field Value Type Description TData Value_9 Declaration public TData Value_9 Field Value Type Description TData Value_90 Declaration public TData Value_90 Field Value Type Description TData Value_900 Declaration public TData Value_900 Field Value Type Description TData Value_901 Declaration public TData Value_901 Field Value Type Description TData Value_902 Declaration public TData Value_902 Field Value Type Description TData Value_903 Declaration public TData Value_903 Field Value Type Description TData Value_904 Declaration public TData Value_904 Field Value Type Description TData Value_905 Declaration public TData Value_905 Field Value Type Description TData Value_906 Declaration public TData Value_906 Field Value Type Description TData Value_907 Declaration public TData Value_907 Field Value Type Description TData Value_908 Declaration public TData Value_908 Field Value Type Description TData Value_909 Declaration public TData Value_909 Field Value Type Description TData Value_91 Declaration public TData Value_91 Field Value Type Description TData Value_910 Declaration public TData Value_910 Field Value Type Description TData Value_911 Declaration public TData Value_911 Field Value Type Description TData Value_912 Declaration public TData Value_912 Field Value Type Description TData Value_913 Declaration public TData Value_913 Field Value Type Description TData Value_914 Declaration public TData Value_914 Field Value Type Description TData Value_915 Declaration public TData Value_915 Field Value Type Description TData Value_916 Declaration public TData Value_916 Field Value Type Description TData Value_917 Declaration public TData Value_917 Field Value Type Description TData Value_918 Declaration public TData Value_918 Field Value Type Description TData Value_919 Declaration public TData Value_919 Field Value Type Description TData Value_92 Declaration public TData Value_92 Field Value Type Description TData Value_920 Declaration public TData Value_920 Field Value Type Description TData Value_921 Declaration public TData Value_921 Field Value Type Description TData Value_922 Declaration public TData Value_922 Field Value Type Description TData Value_923 Declaration public TData Value_923 Field Value Type Description TData Value_924 Declaration public TData Value_924 Field Value Type Description TData Value_925 Declaration public TData Value_925 Field Value Type Description TData Value_926 Declaration public TData Value_926 Field Value Type Description TData Value_927 Declaration public TData Value_927 Field Value Type Description TData Value_928 Declaration public TData Value_928 Field Value Type Description TData Value_929 Declaration public TData Value_929 Field Value Type Description TData Value_93 Declaration public TData Value_93 Field Value Type Description TData Value_930 Declaration public TData Value_930 Field Value Type Description TData Value_931 Declaration public TData Value_931 Field Value Type Description TData Value_932 Declaration public TData Value_932 Field Value Type Description TData Value_933 Declaration public TData Value_933 Field Value Type Description TData Value_934 Declaration public TData Value_934 Field Value Type Description TData Value_935 Declaration public TData Value_935 Field Value Type Description TData Value_936 Declaration public TData Value_936 Field Value Type Description TData Value_937 Declaration public TData Value_937 Field Value Type Description TData Value_938 Declaration public TData Value_938 Field Value Type Description TData Value_939 Declaration public TData Value_939 Field Value Type Description TData Value_94 Declaration public TData Value_94 Field Value Type Description TData Value_940 Declaration public TData Value_940 Field Value Type Description TData Value_941 Declaration public TData Value_941 Field Value Type Description TData Value_942 Declaration public TData Value_942 Field Value Type Description TData Value_943 Declaration public TData Value_943 Field Value Type Description TData Value_944 Declaration public TData Value_944 Field Value Type Description TData Value_945 Declaration public TData Value_945 Field Value Type Description TData Value_946 Declaration public TData Value_946 Field Value Type Description TData Value_947 Declaration public TData Value_947 Field Value Type Description TData Value_948 Declaration public TData Value_948 Field Value Type Description TData Value_949 Declaration public TData Value_949 Field Value Type Description TData Value_95 Declaration public TData Value_95 Field Value Type Description TData Value_950 Declaration public TData Value_950 Field Value Type Description TData Value_951 Declaration public TData Value_951 Field Value Type Description TData Value_952 Declaration public TData Value_952 Field Value Type Description TData Value_953 Declaration public TData Value_953 Field Value Type Description TData Value_954 Declaration public TData Value_954 Field Value Type Description TData Value_955 Declaration public TData Value_955 Field Value Type Description TData Value_956 Declaration public TData Value_956 Field Value Type Description TData Value_957 Declaration public TData Value_957 Field Value Type Description TData Value_958 Declaration public TData Value_958 Field Value Type Description TData Value_959 Declaration public TData Value_959 Field Value Type Description TData Value_96 Declaration public TData Value_96 Field Value Type Description TData Value_960 Declaration public TData Value_960 Field Value Type Description TData Value_961 Declaration public TData Value_961 Field Value Type Description TData Value_962 Declaration public TData Value_962 Field Value Type Description TData Value_963 Declaration public TData Value_963 Field Value Type Description TData Value_964 Declaration public TData Value_964 Field Value Type Description TData Value_965 Declaration public TData Value_965 Field Value Type Description TData Value_966 Declaration public TData Value_966 Field Value Type Description TData Value_967 Declaration public TData Value_967 Field Value Type Description TData Value_968 Declaration public TData Value_968 Field Value Type Description TData Value_969 Declaration public TData Value_969 Field Value Type Description TData Value_97 Declaration public TData Value_97 Field Value Type Description TData Value_970 Declaration public TData Value_970 Field Value Type Description TData Value_971 Declaration public TData Value_971 Field Value Type Description TData Value_972 Declaration public TData Value_972 Field Value Type Description TData Value_973 Declaration public TData Value_973 Field Value Type Description TData Value_974 Declaration public TData Value_974 Field Value Type Description TData Value_975 Declaration public TData Value_975 Field Value Type Description TData Value_976 Declaration public TData Value_976 Field Value Type Description TData Value_977 Declaration public TData Value_977 Field Value Type Description TData Value_978 Declaration public TData Value_978 Field Value Type Description TData Value_979 Declaration public TData Value_979 Field Value Type Description TData Value_98 Declaration public TData Value_98 Field Value Type Description TData Value_980 Declaration public TData Value_980 Field Value Type Description TData Value_981 Declaration public TData Value_981 Field Value Type Description TData Value_982 Declaration public TData Value_982 Field Value Type Description TData Value_983 Declaration public TData Value_983 Field Value Type Description TData Value_984 Declaration public TData Value_984 Field Value Type Description TData Value_985 Declaration public TData Value_985 Field Value Type Description TData Value_986 Declaration public TData Value_986 Field Value Type Description TData Value_987 Declaration public TData Value_987 Field Value Type Description TData Value_988 Declaration public TData Value_988 Field Value Type Description TData Value_989 Declaration public TData Value_989 Field Value Type Description TData Value_99 Declaration public TData Value_99 Field Value Type Description TData Value_990 Declaration public TData Value_990 Field Value Type Description TData Value_991 Declaration public TData Value_991 Field Value Type Description TData Value_992 Declaration public TData Value_992 Field Value Type Description TData Value_993 Declaration public TData Value_993 Field Value Type Description TData Value_994 Declaration public TData Value_994 Field Value Type Description TData Value_995 Declaration public TData Value_995 Field Value Type Description TData Value_996 Declaration public TData Value_996 Field Value Type Description TData Value_997 Declaration public TData Value_997 Field Value Type Description TData Value_998 Declaration public TData Value_998 Field Value Type Description TData Value_999 Declaration public TData Value_999 Field Value Type Description TData Properties Count The number of elements in the list. Declaration public int Count { get; } Property Value Type Description int IsFixedSize Declaration public bool IsFixedSize { get; } Property Value Type Description bool IsReadOnly Declaration public bool IsReadOnly { get; } Property Value Type Description bool IsSynchronized Declaration public bool IsSynchronized { get; } Property Value Type Description bool this[int] Declaration public TData this[int index] { get; set; } Parameters Type Name Description int index Property Value Type Description TData SyncRoot Declaration public object SyncRoot { get; } Property Value Type Description object Methods Add(object) Declaration public int Add(object value) Parameters Type Name Description object value Returns Type Description int Add(TData) Declaration public void Add(TData value) Parameters Type Name Description TData value Clear() Declaration public void Clear() Contains(object) Declaration public bool Contains(object value) Parameters Type Name Description object value Returns Type Description bool Contains(TData) Declaration public bool Contains(TData value) Parameters Type Name Description TData value Returns Type Description bool CopyTo(Array, int) Declaration public void CopyTo(Array array, int index) Parameters Type Name Description Array array int index CopyTo(TData[], int) Declaration public void CopyTo(TData[] array, int index) Parameters Type Name Description TData[] array int index GetCapacity() Declaration public int GetCapacity() Returns Type Description int GetEnumerator() Declaration public IEnumerator GetEnumerator() Returns Type Description IEnumerator IndexOf(object) Declaration public int IndexOf(object value) Parameters Type Name Description object value Returns Type Description int IndexOf(TData) Declaration public int IndexOf(TData value) Parameters Type Name Description TData value Returns Type Description int Insert(int, object) Declaration public void Insert(int index, object value) Parameters Type Name Description int index object value Insert(int, TData) Declaration public void Insert(int index, TData value) Parameters Type Name Description int index TData value IsFull() Declaration public bool IsFull() Returns Type Description bool Remove(object) Declaration public void Remove(object value) Parameters Type Name Description object value Remove(TData) Declaration public bool Remove(TData value) Parameters Type Name Description TData value Returns Type Description bool RemoveAt(int) Declaration public void RemoveAt(int index) Parameters Type Name Description int index Implements IList ICollection IList<T> ICollection<T> IEnumerable<T> IEnumerable Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_Collections.GetRandom<TItem>(IList<TItem>) Extensions_Collections.TryGetItemOrDefault<TItem>(IList<TItem>, int) Extensions_Collections.TryGetItem<TItem>(IList<TItem>, int, out TItem) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.Collections.FixedList12-1.html": {
    "href": "api/Fwt.Core.Collections.FixedList12-1.html",
    "title": "Struct FixedList12<TData> | Hex Terrains",
    "summary": "Struct FixedList12<TData> A fixed size list of 12 elements. Implements IList ICollection IList<TData> ICollection<TData> IEnumerable<TData> IEnumerable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.Core.Collections Assembly: fwt.core.dll Syntax [Serializable] public struct FixedList12<TData> : IList, ICollection, IList<TData>, ICollection<TData>, IEnumerable<TData>, IEnumerable Type Parameters Name Description TData Type of items in the list Fields Capacity Declaration public const int Capacity = 12 Field Value Type Description int Value_0 Declaration public TData Value_0 Field Value Type Description TData Value_1 Declaration public TData Value_1 Field Value Type Description TData Value_10 Declaration public TData Value_10 Field Value Type Description TData Value_11 Declaration public TData Value_11 Field Value Type Description TData Value_2 Declaration public TData Value_2 Field Value Type Description TData Value_3 Declaration public TData Value_3 Field Value Type Description TData Value_4 Declaration public TData Value_4 Field Value Type Description TData Value_5 Declaration public TData Value_5 Field Value Type Description TData Value_6 Declaration public TData Value_6 Field Value Type Description TData Value_7 Declaration public TData Value_7 Field Value Type Description TData Value_8 Declaration public TData Value_8 Field Value Type Description TData Value_9 Declaration public TData Value_9 Field Value Type Description TData Properties Count The number of elements in the list. Declaration public int Count { get; } Property Value Type Description int IsFixedSize Declaration public bool IsFixedSize { get; } Property Value Type Description bool IsReadOnly Declaration public bool IsReadOnly { get; } Property Value Type Description bool IsSynchronized Declaration public bool IsSynchronized { get; } Property Value Type Description bool this[int] Declaration public TData this[int index] { get; set; } Parameters Type Name Description int index Property Value Type Description TData SyncRoot Declaration public object SyncRoot { get; } Property Value Type Description object Methods Add(object) Declaration public int Add(object value) Parameters Type Name Description object value Returns Type Description int Add(TData) Declaration public void Add(TData value) Parameters Type Name Description TData value Clear() Declaration public void Clear() Contains(object) Declaration public bool Contains(object value) Parameters Type Name Description object value Returns Type Description bool Contains(TData) Declaration public bool Contains(TData value) Parameters Type Name Description TData value Returns Type Description bool CopyTo(Array, int) Declaration public void CopyTo(Array array, int index) Parameters Type Name Description Array array int index CopyTo(TData[], int) Declaration public void CopyTo(TData[] array, int index) Parameters Type Name Description TData[] array int index GetCapacity() Declaration public int GetCapacity() Returns Type Description int GetEnumerator() Declaration public IEnumerator GetEnumerator() Returns Type Description IEnumerator IndexOf(object) Declaration public int IndexOf(object value) Parameters Type Name Description object value Returns Type Description int IndexOf(TData) Declaration public int IndexOf(TData value) Parameters Type Name Description TData value Returns Type Description int Insert(int, object) Declaration public void Insert(int index, object value) Parameters Type Name Description int index object value Insert(int, TData) Declaration public void Insert(int index, TData value) Parameters Type Name Description int index TData value IsFull() Declaration public bool IsFull() Returns Type Description bool Remove(object) Declaration public void Remove(object value) Parameters Type Name Description object value Remove(TData) Declaration public bool Remove(TData value) Parameters Type Name Description TData value Returns Type Description bool RemoveAt(int) Declaration public void RemoveAt(int index) Parameters Type Name Description int index Implements IList ICollection IList<T> ICollection<T> IEnumerable<T> IEnumerable Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_Collections.GetRandom<TItem>(IList<TItem>) Extensions_Collections.TryGetItemOrDefault<TItem>(IList<TItem>, int) Extensions_Collections.TryGetItem<TItem>(IList<TItem>, int, out TItem) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.Collections.FixedList128-1.html": {
    "href": "api/Fwt.Core.Collections.FixedList128-1.html",
    "title": "Struct FixedList128<TData> | Hex Terrains",
    "summary": "Struct FixedList128<TData> A fixed size list of 128 elements. Implements IList ICollection IList<TData> ICollection<TData> IEnumerable<TData> IEnumerable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.Core.Collections Assembly: fwt.core.dll Syntax [Serializable] public struct FixedList128<TData> : IList, ICollection, IList<TData>, ICollection<TData>, IEnumerable<TData>, IEnumerable Type Parameters Name Description TData Type of item in the list Fields Capacity Declaration public const int Capacity = 128 Field Value Type Description int Value_0 Declaration public TData Value_0 Field Value Type Description TData Value_1 Declaration public TData Value_1 Field Value Type Description TData Value_10 Declaration public TData Value_10 Field Value Type Description TData Value_100 Declaration public TData Value_100 Field Value Type Description TData Value_101 Declaration public TData Value_101 Field Value Type Description TData Value_102 Declaration public TData Value_102 Field Value Type Description TData Value_103 Declaration public TData Value_103 Field Value Type Description TData Value_104 Declaration public TData Value_104 Field Value Type Description TData Value_105 Declaration public TData Value_105 Field Value Type Description TData Value_106 Declaration public TData Value_106 Field Value Type Description TData Value_107 Declaration public TData Value_107 Field Value Type Description TData Value_108 Declaration public TData Value_108 Field Value Type Description TData Value_109 Declaration public TData Value_109 Field Value Type Description TData Value_11 Declaration public TData Value_11 Field Value Type Description TData Value_110 Declaration public TData Value_110 Field Value Type Description TData Value_111 Declaration public TData Value_111 Field Value Type Description TData Value_112 Declaration public TData Value_112 Field Value Type Description TData Value_113 Declaration public TData Value_113 Field Value Type Description TData Value_114 Declaration public TData Value_114 Field Value Type Description TData Value_115 Declaration public TData Value_115 Field Value Type Description TData Value_116 Declaration public TData Value_116 Field Value Type Description TData Value_117 Declaration public TData Value_117 Field Value Type Description TData Value_118 Declaration public TData Value_118 Field Value Type Description TData Value_119 Declaration public TData Value_119 Field Value Type Description TData Value_12 Declaration public TData Value_12 Field Value Type Description TData Value_120 Declaration public TData Value_120 Field Value Type Description TData Value_121 Declaration public TData Value_121 Field Value Type Description TData Value_122 Declaration public TData Value_122 Field Value Type Description TData Value_123 Declaration public TData Value_123 Field Value Type Description TData Value_124 Declaration public TData Value_124 Field Value Type Description TData Value_125 Declaration public TData Value_125 Field Value Type Description TData Value_126 Declaration public TData Value_126 Field Value Type Description TData Value_127 Declaration public TData Value_127 Field Value Type Description TData Value_13 Declaration public TData Value_13 Field Value Type Description TData Value_14 Declaration public TData Value_14 Field Value Type Description TData Value_15 Declaration public TData Value_15 Field Value Type Description TData Value_16 Declaration public TData Value_16 Field Value Type Description TData Value_17 Declaration public TData Value_17 Field Value Type Description TData Value_18 Declaration public TData Value_18 Field Value Type Description TData Value_19 Declaration public TData Value_19 Field Value Type Description TData Value_2 Declaration public TData Value_2 Field Value Type Description TData Value_20 Declaration public TData Value_20 Field Value Type Description TData Value_21 Declaration public TData Value_21 Field Value Type Description TData Value_22 Declaration public TData Value_22 Field Value Type Description TData Value_23 Declaration public TData Value_23 Field Value Type Description TData Value_24 Declaration public TData Value_24 Field Value Type Description TData Value_25 Declaration public TData Value_25 Field Value Type Description TData Value_26 Declaration public TData Value_26 Field Value Type Description TData Value_27 Declaration public TData Value_27 Field Value Type Description TData Value_28 Declaration public TData Value_28 Field Value Type Description TData Value_29 Declaration public TData Value_29 Field Value Type Description TData Value_3 Declaration public TData Value_3 Field Value Type Description TData Value_30 Declaration public TData Value_30 Field Value Type Description TData Value_31 Declaration public TData Value_31 Field Value Type Description TData Value_32 Declaration public TData Value_32 Field Value Type Description TData Value_33 Declaration public TData Value_33 Field Value Type Description TData Value_34 Declaration public TData Value_34 Field Value Type Description TData Value_35 Declaration public TData Value_35 Field Value Type Description TData Value_36 Declaration public TData Value_36 Field Value Type Description TData Value_37 Declaration public TData Value_37 Field Value Type Description TData Value_38 Declaration public TData Value_38 Field Value Type Description TData Value_39 Declaration public TData Value_39 Field Value Type Description TData Value_4 Declaration public TData Value_4 Field Value Type Description TData Value_40 Declaration public TData Value_40 Field Value Type Description TData Value_41 Declaration public TData Value_41 Field Value Type Description TData Value_42 Declaration public TData Value_42 Field Value Type Description TData Value_43 Declaration public TData Value_43 Field Value Type Description TData Value_44 Declaration public TData Value_44 Field Value Type Description TData Value_45 Declaration public TData Value_45 Field Value Type Description TData Value_46 Declaration public TData Value_46 Field Value Type Description TData Value_47 Declaration public TData Value_47 Field Value Type Description TData Value_48 Declaration public TData Value_48 Field Value Type Description TData Value_49 Declaration public TData Value_49 Field Value Type Description TData Value_5 Declaration public TData Value_5 Field Value Type Description TData Value_50 Declaration public TData Value_50 Field Value Type Description TData Value_51 Declaration public TData Value_51 Field Value Type Description TData Value_52 Declaration public TData Value_52 Field Value Type Description TData Value_53 Declaration public TData Value_53 Field Value Type Description TData Value_54 Declaration public TData Value_54 Field Value Type Description TData Value_55 Declaration public TData Value_55 Field Value Type Description TData Value_56 Declaration public TData Value_56 Field Value Type Description TData Value_57 Declaration public TData Value_57 Field Value Type Description TData Value_58 Declaration public TData Value_58 Field Value Type Description TData Value_59 Declaration public TData Value_59 Field Value Type Description TData Value_6 Declaration public TData Value_6 Field Value Type Description TData Value_60 Declaration public TData Value_60 Field Value Type Description TData Value_61 Declaration public TData Value_61 Field Value Type Description TData Value_62 Declaration public TData Value_62 Field Value Type Description TData Value_63 Declaration public TData Value_63 Field Value Type Description TData Value_64 Declaration public TData Value_64 Field Value Type Description TData Value_65 Declaration public TData Value_65 Field Value Type Description TData Value_66 Declaration public TData Value_66 Field Value Type Description TData Value_67 Declaration public TData Value_67 Field Value Type Description TData Value_68 Declaration public TData Value_68 Field Value Type Description TData Value_69 Declaration public TData Value_69 Field Value Type Description TData Value_7 Declaration public TData Value_7 Field Value Type Description TData Value_70 Declaration public TData Value_70 Field Value Type Description TData Value_71 Declaration public TData Value_71 Field Value Type Description TData Value_72 Declaration public TData Value_72 Field Value Type Description TData Value_73 Declaration public TData Value_73 Field Value Type Description TData Value_74 Declaration public TData Value_74 Field Value Type Description TData Value_75 Declaration public TData Value_75 Field Value Type Description TData Value_76 Declaration public TData Value_76 Field Value Type Description TData Value_77 Declaration public TData Value_77 Field Value Type Description TData Value_78 Declaration public TData Value_78 Field Value Type Description TData Value_79 Declaration public TData Value_79 Field Value Type Description TData Value_8 Declaration public TData Value_8 Field Value Type Description TData Value_80 Declaration public TData Value_80 Field Value Type Description TData Value_81 Declaration public TData Value_81 Field Value Type Description TData Value_82 Declaration public TData Value_82 Field Value Type Description TData Value_83 Declaration public TData Value_83 Field Value Type Description TData Value_84 Declaration public TData Value_84 Field Value Type Description TData Value_85 Declaration public TData Value_85 Field Value Type Description TData Value_86 Declaration public TData Value_86 Field Value Type Description TData Value_87 Declaration public TData Value_87 Field Value Type Description TData Value_88 Declaration public TData Value_88 Field Value Type Description TData Value_89 Declaration public TData Value_89 Field Value Type Description TData Value_9 Declaration public TData Value_9 Field Value Type Description TData Value_90 Declaration public TData Value_90 Field Value Type Description TData Value_91 Declaration public TData Value_91 Field Value Type Description TData Value_92 Declaration public TData Value_92 Field Value Type Description TData Value_93 Declaration public TData Value_93 Field Value Type Description TData Value_94 Declaration public TData Value_94 Field Value Type Description TData Value_95 Declaration public TData Value_95 Field Value Type Description TData Value_96 Declaration public TData Value_96 Field Value Type Description TData Value_97 Declaration public TData Value_97 Field Value Type Description TData Value_98 Declaration public TData Value_98 Field Value Type Description TData Value_99 Declaration public TData Value_99 Field Value Type Description TData Properties Count The number of elements in the list. Declaration public int Count { get; } Property Value Type Description int IsFixedSize Declaration public bool IsFixedSize { get; } Property Value Type Description bool IsReadOnly Declaration public bool IsReadOnly { get; } Property Value Type Description bool IsSynchronized Declaration public bool IsSynchronized { get; } Property Value Type Description bool this[int] Declaration public TData this[int index] { get; set; } Parameters Type Name Description int index Property Value Type Description TData SyncRoot Declaration public object SyncRoot { get; } Property Value Type Description object Methods Add(object) Declaration public int Add(object value) Parameters Type Name Description object value Returns Type Description int Add(TData) Declaration public void Add(TData value) Parameters Type Name Description TData value Clear() Declaration public void Clear() Contains(object) Declaration public bool Contains(object value) Parameters Type Name Description object value Returns Type Description bool Contains(TData) Declaration public bool Contains(TData value) Parameters Type Name Description TData value Returns Type Description bool CopyTo(Array, int) Declaration public void CopyTo(Array array, int index) Parameters Type Name Description Array array int index CopyTo(TData[], int) Declaration public void CopyTo(TData[] array, int index) Parameters Type Name Description TData[] array int index GetCapacity() Declaration public int GetCapacity() Returns Type Description int GetEnumerator() Declaration public IEnumerator GetEnumerator() Returns Type Description IEnumerator IndexOf(object) Declaration public int IndexOf(object value) Parameters Type Name Description object value Returns Type Description int IndexOf(TData) Declaration public int IndexOf(TData value) Parameters Type Name Description TData value Returns Type Description int Insert(int, object) Declaration public void Insert(int index, object value) Parameters Type Name Description int index object value Insert(int, TData) Declaration public void Insert(int index, TData value) Parameters Type Name Description int index TData value IsFull() Declaration public bool IsFull() Returns Type Description bool Remove(object) Declaration public void Remove(object value) Parameters Type Name Description object value Remove(TData) Declaration public bool Remove(TData value) Parameters Type Name Description TData value Returns Type Description bool RemoveAt(int) Declaration public void RemoveAt(int index) Parameters Type Name Description int index Implements IList ICollection IList<T> ICollection<T> IEnumerable<T> IEnumerable Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_Collections.GetRandom<TItem>(IList<TItem>) Extensions_Collections.TryGetItemOrDefault<TItem>(IList<TItem>, int) Extensions_Collections.TryGetItem<TItem>(IList<TItem>, int, out TItem) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.Collections.FixedList16-1.html": {
    "href": "api/Fwt.Core.Collections.FixedList16-1.html",
    "title": "Struct FixedList16<TData> | Hex Terrains",
    "summary": "Struct FixedList16<TData> A fixed size list of 16 elements. Implements IList ICollection IList<TData> ICollection<TData> IEnumerable<TData> IEnumerable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.Core.Collections Assembly: fwt.core.dll Syntax [Serializable] public struct FixedList16<TData> : IList, ICollection, IList<TData>, ICollection<TData>, IEnumerable<TData>, IEnumerable Type Parameters Name Description TData Type of items in the list Fields Capacity Declaration public const int Capacity = 16 Field Value Type Description int Value_0 Declaration public TData Value_0 Field Value Type Description TData Value_1 Declaration public TData Value_1 Field Value Type Description TData Value_10 Declaration public TData Value_10 Field Value Type Description TData Value_11 Declaration public TData Value_11 Field Value Type Description TData Value_12 Declaration public TData Value_12 Field Value Type Description TData Value_13 Declaration public TData Value_13 Field Value Type Description TData Value_14 Declaration public TData Value_14 Field Value Type Description TData Value_15 Declaration public TData Value_15 Field Value Type Description TData Value_2 Declaration public TData Value_2 Field Value Type Description TData Value_3 Declaration public TData Value_3 Field Value Type Description TData Value_4 Declaration public TData Value_4 Field Value Type Description TData Value_5 Declaration public TData Value_5 Field Value Type Description TData Value_6 Declaration public TData Value_6 Field Value Type Description TData Value_7 Declaration public TData Value_7 Field Value Type Description TData Value_8 Declaration public TData Value_8 Field Value Type Description TData Value_9 Declaration public TData Value_9 Field Value Type Description TData Properties Count The number of elements in the list. Declaration public int Count { get; } Property Value Type Description int IsFixedSize Declaration public bool IsFixedSize { get; } Property Value Type Description bool IsReadOnly Declaration public bool IsReadOnly { get; } Property Value Type Description bool IsSynchronized Declaration public bool IsSynchronized { get; } Property Value Type Description bool this[int] Declaration public TData this[int index] { get; set; } Parameters Type Name Description int index Property Value Type Description TData SyncRoot Declaration public object SyncRoot { get; } Property Value Type Description object Methods Add(object) Declaration public int Add(object value) Parameters Type Name Description object value Returns Type Description int Add(TData) Declaration public void Add(TData value) Parameters Type Name Description TData value Clear() Declaration public void Clear() Contains(object) Declaration public bool Contains(object value) Parameters Type Name Description object value Returns Type Description bool Contains(TData) Declaration public bool Contains(TData value) Parameters Type Name Description TData value Returns Type Description bool CopyTo(Array, int) Declaration public void CopyTo(Array array, int index) Parameters Type Name Description Array array int index CopyTo(TData[], int) Declaration public void CopyTo(TData[] array, int index) Parameters Type Name Description TData[] array int index GetCapacity() Declaration public int GetCapacity() Returns Type Description int GetEnumerator() Declaration public IEnumerator GetEnumerator() Returns Type Description IEnumerator IndexOf(object) Declaration public int IndexOf(object value) Parameters Type Name Description object value Returns Type Description int IndexOf(TData) Declaration public int IndexOf(TData value) Parameters Type Name Description TData value Returns Type Description int Insert(int, object) Declaration public void Insert(int index, object value) Parameters Type Name Description int index object value Insert(int, TData) Declaration public void Insert(int index, TData value) Parameters Type Name Description int index TData value IsFull() Declaration public bool IsFull() Returns Type Description bool Remove(object) Declaration public void Remove(object value) Parameters Type Name Description object value Remove(TData) Declaration public bool Remove(TData value) Parameters Type Name Description TData value Returns Type Description bool RemoveAt(int) Declaration public void RemoveAt(int index) Parameters Type Name Description int index Implements IList ICollection IList<T> ICollection<T> IEnumerable<T> IEnumerable Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_Collections.GetRandom<TItem>(IList<TItem>) Extensions_Collections.TryGetItemOrDefault<TItem>(IList<TItem>, int) Extensions_Collections.TryGetItem<TItem>(IList<TItem>, int, out TItem) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.Collections.FixedList24-1.html": {
    "href": "api/Fwt.Core.Collections.FixedList24-1.html",
    "title": "Struct FixedList24<TData> | Hex Terrains",
    "summary": "Struct FixedList24<TData> A fixed size list of 24 elements. Implements IList ICollection IList<TData> ICollection<TData> IEnumerable<TData> IEnumerable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.Core.Collections Assembly: fwt.core.dll Syntax [Serializable] public struct FixedList24<TData> : IList, ICollection, IList<TData>, ICollection<TData>, IEnumerable<TData>, IEnumerable Type Parameters Name Description TData Type of items in the list Fields Capacity Declaration public const int Capacity = 24 Field Value Type Description int Value_0 Declaration public TData Value_0 Field Value Type Description TData Value_1 Declaration public TData Value_1 Field Value Type Description TData Value_10 Declaration public TData Value_10 Field Value Type Description TData Value_11 Declaration public TData Value_11 Field Value Type Description TData Value_12 Declaration public TData Value_12 Field Value Type Description TData Value_13 Declaration public TData Value_13 Field Value Type Description TData Value_14 Declaration public TData Value_14 Field Value Type Description TData Value_15 Declaration public TData Value_15 Field Value Type Description TData Value_16 Declaration public TData Value_16 Field Value Type Description TData Value_17 Declaration public TData Value_17 Field Value Type Description TData Value_18 Declaration public TData Value_18 Field Value Type Description TData Value_19 Declaration public TData Value_19 Field Value Type Description TData Value_2 Declaration public TData Value_2 Field Value Type Description TData Value_20 Declaration public TData Value_20 Field Value Type Description TData Value_21 Declaration public TData Value_21 Field Value Type Description TData Value_22 Declaration public TData Value_22 Field Value Type Description TData Value_23 Declaration public TData Value_23 Field Value Type Description TData Value_3 Declaration public TData Value_3 Field Value Type Description TData Value_4 Declaration public TData Value_4 Field Value Type Description TData Value_5 Declaration public TData Value_5 Field Value Type Description TData Value_6 Declaration public TData Value_6 Field Value Type Description TData Value_7 Declaration public TData Value_7 Field Value Type Description TData Value_8 Declaration public TData Value_8 Field Value Type Description TData Value_9 Declaration public TData Value_9 Field Value Type Description TData Properties Count The number of elements in the list. Declaration public int Count { get; } Property Value Type Description int IsFixedSize Declaration public bool IsFixedSize { get; } Property Value Type Description bool IsReadOnly Declaration public bool IsReadOnly { get; } Property Value Type Description bool IsSynchronized Declaration public bool IsSynchronized { get; } Property Value Type Description bool this[int] Declaration public TData this[int index] { get; set; } Parameters Type Name Description int index Property Value Type Description TData SyncRoot Declaration public object SyncRoot { get; } Property Value Type Description object Methods Add(object) Declaration public int Add(object value) Parameters Type Name Description object value Returns Type Description int Add(TData) Declaration public void Add(TData value) Parameters Type Name Description TData value Clear() Declaration public void Clear() Contains(object) Declaration public bool Contains(object value) Parameters Type Name Description object value Returns Type Description bool Contains(TData) Declaration public bool Contains(TData value) Parameters Type Name Description TData value Returns Type Description bool CopyTo(Array, int) Declaration public void CopyTo(Array array, int index) Parameters Type Name Description Array array int index CopyTo(TData[], int) Declaration public void CopyTo(TData[] array, int index) Parameters Type Name Description TData[] array int index GetCapacity() Declaration public int GetCapacity() Returns Type Description int GetEnumerator() Declaration public IEnumerator GetEnumerator() Returns Type Description IEnumerator IndexOf(object) Declaration public int IndexOf(object value) Parameters Type Name Description object value Returns Type Description int IndexOf(TData) Declaration public int IndexOf(TData value) Parameters Type Name Description TData value Returns Type Description int Insert(int, object) Declaration public void Insert(int index, object value) Parameters Type Name Description int index object value Insert(int, TData) Declaration public void Insert(int index, TData value) Parameters Type Name Description int index TData value IsFull() Declaration public bool IsFull() Returns Type Description bool Remove(object) Declaration public void Remove(object value) Parameters Type Name Description object value Remove(TData) Declaration public bool Remove(TData value) Parameters Type Name Description TData value Returns Type Description bool RemoveAt(int) Declaration public void RemoveAt(int index) Parameters Type Name Description int index Implements IList ICollection IList<T> ICollection<T> IEnumerable<T> IEnumerable Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_Collections.GetRandom<TItem>(IList<TItem>) Extensions_Collections.TryGetItemOrDefault<TItem>(IList<TItem>, int) Extensions_Collections.TryGetItem<TItem>(IList<TItem>, int, out TItem) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.Collections.FixedList256-1.html": {
    "href": "api/Fwt.Core.Collections.FixedList256-1.html",
    "title": "Struct FixedList256<TData> | Hex Terrains",
    "summary": "Struct FixedList256<TData> A fixed size list of 256 elements. Implements IList ICollection IList<TData> ICollection<TData> IEnumerable<TData> IEnumerable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.Core.Collections Assembly: fwt.core.dll Syntax [Serializable] public struct FixedList256<TData> : IList, ICollection, IList<TData>, ICollection<TData>, IEnumerable<TData>, IEnumerable Type Parameters Name Description TData Type of item in the list Fields Capacity Declaration public const int Capacity = 256 Field Value Type Description int Value_0 Declaration public TData Value_0 Field Value Type Description TData Value_1 Declaration public TData Value_1 Field Value Type Description TData Value_10 Declaration public TData Value_10 Field Value Type Description TData Value_100 Declaration public TData Value_100 Field Value Type Description TData Value_101 Declaration public TData Value_101 Field Value Type Description TData Value_102 Declaration public TData Value_102 Field Value Type Description TData Value_103 Declaration public TData Value_103 Field Value Type Description TData Value_104 Declaration public TData Value_104 Field Value Type Description TData Value_105 Declaration public TData Value_105 Field Value Type Description TData Value_106 Declaration public TData Value_106 Field Value Type Description TData Value_107 Declaration public TData Value_107 Field Value Type Description TData Value_108 Declaration public TData Value_108 Field Value Type Description TData Value_109 Declaration public TData Value_109 Field Value Type Description TData Value_11 Declaration public TData Value_11 Field Value Type Description TData Value_110 Declaration public TData Value_110 Field Value Type Description TData Value_111 Declaration public TData Value_111 Field Value Type Description TData Value_112 Declaration public TData Value_112 Field Value Type Description TData Value_113 Declaration public TData Value_113 Field Value Type Description TData Value_114 Declaration public TData Value_114 Field Value Type Description TData Value_115 Declaration public TData Value_115 Field Value Type Description TData Value_116 Declaration public TData Value_116 Field Value Type Description TData Value_117 Declaration public TData Value_117 Field Value Type Description TData Value_118 Declaration public TData Value_118 Field Value Type Description TData Value_119 Declaration public TData Value_119 Field Value Type Description TData Value_12 Declaration public TData Value_12 Field Value Type Description TData Value_120 Declaration public TData Value_120 Field Value Type Description TData Value_121 Declaration public TData Value_121 Field Value Type Description TData Value_122 Declaration public TData Value_122 Field Value Type Description TData Value_123 Declaration public TData Value_123 Field Value Type Description TData Value_124 Declaration public TData Value_124 Field Value Type Description TData Value_125 Declaration public TData Value_125 Field Value Type Description TData Value_126 Declaration public TData Value_126 Field Value Type Description TData Value_127 Declaration public TData Value_127 Field Value Type Description TData Value_128 Declaration public TData Value_128 Field Value Type Description TData Value_129 Declaration public TData Value_129 Field Value Type Description TData Value_13 Declaration public TData Value_13 Field Value Type Description TData Value_130 Declaration public TData Value_130 Field Value Type Description TData Value_131 Declaration public TData Value_131 Field Value Type Description TData Value_132 Declaration public TData Value_132 Field Value Type Description TData Value_133 Declaration public TData Value_133 Field Value Type Description TData Value_134 Declaration public TData Value_134 Field Value Type Description TData Value_135 Declaration public TData Value_135 Field Value Type Description TData Value_136 Declaration public TData Value_136 Field Value Type Description TData Value_137 Declaration public TData Value_137 Field Value Type Description TData Value_138 Declaration public TData Value_138 Field Value Type Description TData Value_139 Declaration public TData Value_139 Field Value Type Description TData Value_14 Declaration public TData Value_14 Field Value Type Description TData Value_140 Declaration public TData Value_140 Field Value Type Description TData Value_141 Declaration public TData Value_141 Field Value Type Description TData Value_142 Declaration public TData Value_142 Field Value Type Description TData Value_143 Declaration public TData Value_143 Field Value Type Description TData Value_144 Declaration public TData Value_144 Field Value Type Description TData Value_145 Declaration public TData Value_145 Field Value Type Description TData Value_146 Declaration public TData Value_146 Field Value Type Description TData Value_147 Declaration public TData Value_147 Field Value Type Description TData Value_148 Declaration public TData Value_148 Field Value Type Description TData Value_149 Declaration public TData Value_149 Field Value Type Description TData Value_15 Declaration public TData Value_15 Field Value Type Description TData Value_150 Declaration public TData Value_150 Field Value Type Description TData Value_151 Declaration public TData Value_151 Field Value Type Description TData Value_152 Declaration public TData Value_152 Field Value Type Description TData Value_153 Declaration public TData Value_153 Field Value Type Description TData Value_154 Declaration public TData Value_154 Field Value Type Description TData Value_155 Declaration public TData Value_155 Field Value Type Description TData Value_156 Declaration public TData Value_156 Field Value Type Description TData Value_157 Declaration public TData Value_157 Field Value Type Description TData Value_158 Declaration public TData Value_158 Field Value Type Description TData Value_159 Declaration public TData Value_159 Field Value Type Description TData Value_16 Declaration public TData Value_16 Field Value Type Description TData Value_160 Declaration public TData Value_160 Field Value Type Description TData Value_161 Declaration public TData Value_161 Field Value Type Description TData Value_162 Declaration public TData Value_162 Field Value Type Description TData Value_163 Declaration public TData Value_163 Field Value Type Description TData Value_164 Declaration public TData Value_164 Field Value Type Description TData Value_165 Declaration public TData Value_165 Field Value Type Description TData Value_166 Declaration public TData Value_166 Field Value Type Description TData Value_167 Declaration public TData Value_167 Field Value Type Description TData Value_168 Declaration public TData Value_168 Field Value Type Description TData Value_169 Declaration public TData Value_169 Field Value Type Description TData Value_17 Declaration public TData Value_17 Field Value Type Description TData Value_170 Declaration public TData Value_170 Field Value Type Description TData Value_171 Declaration public TData Value_171 Field Value Type Description TData Value_172 Declaration public TData Value_172 Field Value Type Description TData Value_173 Declaration public TData Value_173 Field Value Type Description TData Value_174 Declaration public TData Value_174 Field Value Type Description TData Value_175 Declaration public TData Value_175 Field Value Type Description TData Value_176 Declaration public TData Value_176 Field Value Type Description TData Value_177 Declaration public TData Value_177 Field Value Type Description TData Value_178 Declaration public TData Value_178 Field Value Type Description TData Value_179 Declaration public TData Value_179 Field Value Type Description TData Value_18 Declaration public TData Value_18 Field Value Type Description TData Value_180 Declaration public TData Value_180 Field Value Type Description TData Value_181 Declaration public TData Value_181 Field Value Type Description TData Value_182 Declaration public TData Value_182 Field Value Type Description TData Value_183 Declaration public TData Value_183 Field Value Type Description TData Value_184 Declaration public TData Value_184 Field Value Type Description TData Value_185 Declaration public TData Value_185 Field Value Type Description TData Value_186 Declaration public TData Value_186 Field Value Type Description TData Value_187 Declaration public TData Value_187 Field Value Type Description TData Value_188 Declaration public TData Value_188 Field Value Type Description TData Value_189 Declaration public TData Value_189 Field Value Type Description TData Value_19 Declaration public TData Value_19 Field Value Type Description TData Value_190 Declaration public TData Value_190 Field Value Type Description TData Value_191 Declaration public TData Value_191 Field Value Type Description TData Value_192 Declaration public TData Value_192 Field Value Type Description TData Value_193 Declaration public TData Value_193 Field Value Type Description TData Value_194 Declaration public TData Value_194 Field Value Type Description TData Value_195 Declaration public TData Value_195 Field Value Type Description TData Value_196 Declaration public TData Value_196 Field Value Type Description TData Value_197 Declaration public TData Value_197 Field Value Type Description TData Value_198 Declaration public TData Value_198 Field Value Type Description TData Value_199 Declaration public TData Value_199 Field Value Type Description TData Value_2 Declaration public TData Value_2 Field Value Type Description TData Value_20 Declaration public TData Value_20 Field Value Type Description TData Value_200 Declaration public TData Value_200 Field Value Type Description TData Value_201 Declaration public TData Value_201 Field Value Type Description TData Value_202 Declaration public TData Value_202 Field Value Type Description TData Value_203 Declaration public TData Value_203 Field Value Type Description TData Value_204 Declaration public TData Value_204 Field Value Type Description TData Value_205 Declaration public TData Value_205 Field Value Type Description TData Value_206 Declaration public TData Value_206 Field Value Type Description TData Value_207 Declaration public TData Value_207 Field Value Type Description TData Value_208 Declaration public TData Value_208 Field Value Type Description TData Value_209 Declaration public TData Value_209 Field Value Type Description TData Value_21 Declaration public TData Value_21 Field Value Type Description TData Value_210 Declaration public TData Value_210 Field Value Type Description TData Value_211 Declaration public TData Value_211 Field Value Type Description TData Value_212 Declaration public TData Value_212 Field Value Type Description TData Value_213 Declaration public TData Value_213 Field Value Type Description TData Value_214 Declaration public TData Value_214 Field Value Type Description TData Value_215 Declaration public TData Value_215 Field Value Type Description TData Value_216 Declaration public TData Value_216 Field Value Type Description TData Value_217 Declaration public TData Value_217 Field Value Type Description TData Value_218 Declaration public TData Value_218 Field Value Type Description TData Value_219 Declaration public TData Value_219 Field Value Type Description TData Value_22 Declaration public TData Value_22 Field Value Type Description TData Value_220 Declaration public TData Value_220 Field Value Type Description TData Value_221 Declaration public TData Value_221 Field Value Type Description TData Value_222 Declaration public TData Value_222 Field Value Type Description TData Value_223 Declaration public TData Value_223 Field Value Type Description TData Value_224 Declaration public TData Value_224 Field Value Type Description TData Value_225 Declaration public TData Value_225 Field Value Type Description TData Value_226 Declaration public TData Value_226 Field Value Type Description TData Value_227 Declaration public TData Value_227 Field Value Type Description TData Value_228 Declaration public TData Value_228 Field Value Type Description TData Value_229 Declaration public TData Value_229 Field Value Type Description TData Value_23 Declaration public TData Value_23 Field Value Type Description TData Value_230 Declaration public TData Value_230 Field Value Type Description TData Value_231 Declaration public TData Value_231 Field Value Type Description TData Value_232 Declaration public TData Value_232 Field Value Type Description TData Value_233 Declaration public TData Value_233 Field Value Type Description TData Value_234 Declaration public TData Value_234 Field Value Type Description TData Value_235 Declaration public TData Value_235 Field Value Type Description TData Value_236 Declaration public TData Value_236 Field Value Type Description TData Value_237 Declaration public TData Value_237 Field Value Type Description TData Value_238 Declaration public TData Value_238 Field Value Type Description TData Value_239 Declaration public TData Value_239 Field Value Type Description TData Value_24 Declaration public TData Value_24 Field Value Type Description TData Value_240 Declaration public TData Value_240 Field Value Type Description TData Value_241 Declaration public TData Value_241 Field Value Type Description TData Value_242 Declaration public TData Value_242 Field Value Type Description TData Value_243 Declaration public TData Value_243 Field Value Type Description TData Value_244 Declaration public TData Value_244 Field Value Type Description TData Value_245 Declaration public TData Value_245 Field Value Type Description TData Value_246 Declaration public TData Value_246 Field Value Type Description TData Value_247 Declaration public TData Value_247 Field Value Type Description TData Value_248 Declaration public TData Value_248 Field Value Type Description TData Value_249 Declaration public TData Value_249 Field Value Type Description TData Value_25 Declaration public TData Value_25 Field Value Type Description TData Value_250 Declaration public TData Value_250 Field Value Type Description TData Value_251 Declaration public TData Value_251 Field Value Type Description TData Value_252 Declaration public TData Value_252 Field Value Type Description TData Value_253 Declaration public TData Value_253 Field Value Type Description TData Value_254 Declaration public TData Value_254 Field Value Type Description TData Value_255 Declaration public TData Value_255 Field Value Type Description TData Value_26 Declaration public TData Value_26 Field Value Type Description TData Value_27 Declaration public TData Value_27 Field Value Type Description TData Value_28 Declaration public TData Value_28 Field Value Type Description TData Value_29 Declaration public TData Value_29 Field Value Type Description TData Value_3 Declaration public TData Value_3 Field Value Type Description TData Value_30 Declaration public TData Value_30 Field Value Type Description TData Value_31 Declaration public TData Value_31 Field Value Type Description TData Value_32 Declaration public TData Value_32 Field Value Type Description TData Value_33 Declaration public TData Value_33 Field Value Type Description TData Value_34 Declaration public TData Value_34 Field Value Type Description TData Value_35 Declaration public TData Value_35 Field Value Type Description TData Value_36 Declaration public TData Value_36 Field Value Type Description TData Value_37 Declaration public TData Value_37 Field Value Type Description TData Value_38 Declaration public TData Value_38 Field Value Type Description TData Value_39 Declaration public TData Value_39 Field Value Type Description TData Value_4 Declaration public TData Value_4 Field Value Type Description TData Value_40 Declaration public TData Value_40 Field Value Type Description TData Value_41 Declaration public TData Value_41 Field Value Type Description TData Value_42 Declaration public TData Value_42 Field Value Type Description TData Value_43 Declaration public TData Value_43 Field Value Type Description TData Value_44 Declaration public TData Value_44 Field Value Type Description TData Value_45 Declaration public TData Value_45 Field Value Type Description TData Value_46 Declaration public TData Value_46 Field Value Type Description TData Value_47 Declaration public TData Value_47 Field Value Type Description TData Value_48 Declaration public TData Value_48 Field Value Type Description TData Value_49 Declaration public TData Value_49 Field Value Type Description TData Value_5 Declaration public TData Value_5 Field Value Type Description TData Value_50 Declaration public TData Value_50 Field Value Type Description TData Value_51 Declaration public TData Value_51 Field Value Type Description TData Value_52 Declaration public TData Value_52 Field Value Type Description TData Value_53 Declaration public TData Value_53 Field Value Type Description TData Value_54 Declaration public TData Value_54 Field Value Type Description TData Value_55 Declaration public TData Value_55 Field Value Type Description TData Value_56 Declaration public TData Value_56 Field Value Type Description TData Value_57 Declaration public TData Value_57 Field Value Type Description TData Value_58 Declaration public TData Value_58 Field Value Type Description TData Value_59 Declaration public TData Value_59 Field Value Type Description TData Value_6 Declaration public TData Value_6 Field Value Type Description TData Value_60 Declaration public TData Value_60 Field Value Type Description TData Value_61 Declaration public TData Value_61 Field Value Type Description TData Value_62 Declaration public TData Value_62 Field Value Type Description TData Value_63 Declaration public TData Value_63 Field Value Type Description TData Value_64 Declaration public TData Value_64 Field Value Type Description TData Value_65 Declaration public TData Value_65 Field Value Type Description TData Value_66 Declaration public TData Value_66 Field Value Type Description TData Value_67 Declaration public TData Value_67 Field Value Type Description TData Value_68 Declaration public TData Value_68 Field Value Type Description TData Value_69 Declaration public TData Value_69 Field Value Type Description TData Value_7 Declaration public TData Value_7 Field Value Type Description TData Value_70 Declaration public TData Value_70 Field Value Type Description TData Value_71 Declaration public TData Value_71 Field Value Type Description TData Value_72 Declaration public TData Value_72 Field Value Type Description TData Value_73 Declaration public TData Value_73 Field Value Type Description TData Value_74 Declaration public TData Value_74 Field Value Type Description TData Value_75 Declaration public TData Value_75 Field Value Type Description TData Value_76 Declaration public TData Value_76 Field Value Type Description TData Value_77 Declaration public TData Value_77 Field Value Type Description TData Value_78 Declaration public TData Value_78 Field Value Type Description TData Value_79 Declaration public TData Value_79 Field Value Type Description TData Value_8 Declaration public TData Value_8 Field Value Type Description TData Value_80 Declaration public TData Value_80 Field Value Type Description TData Value_81 Declaration public TData Value_81 Field Value Type Description TData Value_82 Declaration public TData Value_82 Field Value Type Description TData Value_83 Declaration public TData Value_83 Field Value Type Description TData Value_84 Declaration public TData Value_84 Field Value Type Description TData Value_85 Declaration public TData Value_85 Field Value Type Description TData Value_86 Declaration public TData Value_86 Field Value Type Description TData Value_87 Declaration public TData Value_87 Field Value Type Description TData Value_88 Declaration public TData Value_88 Field Value Type Description TData Value_89 Declaration public TData Value_89 Field Value Type Description TData Value_9 Declaration public TData Value_9 Field Value Type Description TData Value_90 Declaration public TData Value_90 Field Value Type Description TData Value_91 Declaration public TData Value_91 Field Value Type Description TData Value_92 Declaration public TData Value_92 Field Value Type Description TData Value_93 Declaration public TData Value_93 Field Value Type Description TData Value_94 Declaration public TData Value_94 Field Value Type Description TData Value_95 Declaration public TData Value_95 Field Value Type Description TData Value_96 Declaration public TData Value_96 Field Value Type Description TData Value_97 Declaration public TData Value_97 Field Value Type Description TData Value_98 Declaration public TData Value_98 Field Value Type Description TData Value_99 Declaration public TData Value_99 Field Value Type Description TData Properties Count The number of elements in the list. Declaration public int Count { get; } Property Value Type Description int IsFixedSize Declaration public bool IsFixedSize { get; } Property Value Type Description bool IsReadOnly Declaration public bool IsReadOnly { get; } Property Value Type Description bool IsSynchronized Declaration public bool IsSynchronized { get; } Property Value Type Description bool this[int] Declaration public TData this[int index] { get; set; } Parameters Type Name Description int index Property Value Type Description TData SyncRoot Declaration public object SyncRoot { get; } Property Value Type Description object Methods Add(object) Declaration public int Add(object value) Parameters Type Name Description object value Returns Type Description int Add(TData) Declaration public void Add(TData value) Parameters Type Name Description TData value Clear() Declaration public void Clear() Contains(object) Declaration public bool Contains(object value) Parameters Type Name Description object value Returns Type Description bool Contains(TData) Declaration public bool Contains(TData value) Parameters Type Name Description TData value Returns Type Description bool CopyTo(Array, int) Declaration public void CopyTo(Array array, int index) Parameters Type Name Description Array array int index CopyTo(TData[], int) Declaration public void CopyTo(TData[] array, int index) Parameters Type Name Description TData[] array int index GetCapacity() Declaration public int GetCapacity() Returns Type Description int GetEnumerator() Declaration public IEnumerator GetEnumerator() Returns Type Description IEnumerator IndexOf(object) Declaration public int IndexOf(object value) Parameters Type Name Description object value Returns Type Description int IndexOf(TData) Declaration public int IndexOf(TData value) Parameters Type Name Description TData value Returns Type Description int Insert(int, object) Declaration public void Insert(int index, object value) Parameters Type Name Description int index object value Insert(int, TData) Declaration public void Insert(int index, TData value) Parameters Type Name Description int index TData value IsFull() Declaration public bool IsFull() Returns Type Description bool Remove(object) Declaration public void Remove(object value) Parameters Type Name Description object value Remove(TData) Declaration public bool Remove(TData value) Parameters Type Name Description TData value Returns Type Description bool RemoveAt(int) Declaration public void RemoveAt(int index) Parameters Type Name Description int index Implements IList ICollection IList<T> ICollection<T> IEnumerable<T> IEnumerable Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_Collections.GetRandom<TItem>(IList<TItem>) Extensions_Collections.TryGetItemOrDefault<TItem>(IList<TItem>, int) Extensions_Collections.TryGetItem<TItem>(IList<TItem>, int, out TItem) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.Collections.FixedList32-1.html": {
    "href": "api/Fwt.Core.Collections.FixedList32-1.html",
    "title": "Struct FixedList32<TData> | Hex Terrains",
    "summary": "Struct FixedList32<TData> A fixed size list of 32 elements. Implements IList ICollection IList<TData> ICollection<TData> IEnumerable<TData> IEnumerable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.Core.Collections Assembly: fwt.core.dll Syntax [Serializable] public struct FixedList32<TData> : IList, ICollection, IList<TData>, ICollection<TData>, IEnumerable<TData>, IEnumerable Type Parameters Name Description TData Type of item in the list Fields Capacity Declaration public const int Capacity = 32 Field Value Type Description int Value_0 Declaration public TData Value_0 Field Value Type Description TData Value_1 Declaration public TData Value_1 Field Value Type Description TData Value_10 Declaration public TData Value_10 Field Value Type Description TData Value_11 Declaration public TData Value_11 Field Value Type Description TData Value_12 Declaration public TData Value_12 Field Value Type Description TData Value_13 Declaration public TData Value_13 Field Value Type Description TData Value_14 Declaration public TData Value_14 Field Value Type Description TData Value_15 Declaration public TData Value_15 Field Value Type Description TData Value_16 Declaration public TData Value_16 Field Value Type Description TData Value_17 Declaration public TData Value_17 Field Value Type Description TData Value_18 Declaration public TData Value_18 Field Value Type Description TData Value_19 Declaration public TData Value_19 Field Value Type Description TData Value_2 Declaration public TData Value_2 Field Value Type Description TData Value_20 Declaration public TData Value_20 Field Value Type Description TData Value_21 Declaration public TData Value_21 Field Value Type Description TData Value_22 Declaration public TData Value_22 Field Value Type Description TData Value_23 Declaration public TData Value_23 Field Value Type Description TData Value_24 Declaration public TData Value_24 Field Value Type Description TData Value_25 Declaration public TData Value_25 Field Value Type Description TData Value_26 Declaration public TData Value_26 Field Value Type Description TData Value_27 Declaration public TData Value_27 Field Value Type Description TData Value_28 Declaration public TData Value_28 Field Value Type Description TData Value_29 Declaration public TData Value_29 Field Value Type Description TData Value_3 Declaration public TData Value_3 Field Value Type Description TData Value_30 Declaration public TData Value_30 Field Value Type Description TData Value_31 Declaration public TData Value_31 Field Value Type Description TData Value_4 Declaration public TData Value_4 Field Value Type Description TData Value_5 Declaration public TData Value_5 Field Value Type Description TData Value_6 Declaration public TData Value_6 Field Value Type Description TData Value_7 Declaration public TData Value_7 Field Value Type Description TData Value_8 Declaration public TData Value_8 Field Value Type Description TData Value_9 Declaration public TData Value_9 Field Value Type Description TData Properties Count The number of elements in the list. Declaration public int Count { get; } Property Value Type Description int IsFixedSize Declaration public bool IsFixedSize { get; } Property Value Type Description bool IsReadOnly Declaration public bool IsReadOnly { get; } Property Value Type Description bool IsSynchronized Declaration public bool IsSynchronized { get; } Property Value Type Description bool this[int] Declaration public TData this[int index] { get; set; } Parameters Type Name Description int index Property Value Type Description TData SyncRoot Declaration public object SyncRoot { get; } Property Value Type Description object Methods Add(object) Declaration public int Add(object value) Parameters Type Name Description object value Returns Type Description int Add(TData) Declaration public void Add(TData value) Parameters Type Name Description TData value Clear() Declaration public void Clear() Contains(object) Declaration public bool Contains(object value) Parameters Type Name Description object value Returns Type Description bool Contains(TData) Declaration public bool Contains(TData value) Parameters Type Name Description TData value Returns Type Description bool CopyTo(Array, int) Declaration public void CopyTo(Array array, int index) Parameters Type Name Description Array array int index CopyTo(TData[], int) Declaration public void CopyTo(TData[] array, int index) Parameters Type Name Description TData[] array int index GetCapacity() Declaration public int GetCapacity() Returns Type Description int GetEnumerator() Declaration public IEnumerator GetEnumerator() Returns Type Description IEnumerator IndexOf(object) Declaration public int IndexOf(object value) Parameters Type Name Description object value Returns Type Description int IndexOf(TData) Declaration public int IndexOf(TData value) Parameters Type Name Description TData value Returns Type Description int Insert(int, object) Declaration public void Insert(int index, object value) Parameters Type Name Description int index object value Insert(int, TData) Declaration public void Insert(int index, TData value) Parameters Type Name Description int index TData value IsFull() Declaration public bool IsFull() Returns Type Description bool Remove(object) Declaration public void Remove(object value) Parameters Type Name Description object value Remove(TData) Declaration public bool Remove(TData value) Parameters Type Name Description TData value Returns Type Description bool RemoveAt(int) Declaration public void RemoveAt(int index) Parameters Type Name Description int index Implements IList ICollection IList<T> ICollection<T> IEnumerable<T> IEnumerable Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_Collections.GetRandom<TItem>(IList<TItem>) Extensions_Collections.TryGetItemOrDefault<TItem>(IList<TItem>, int) Extensions_Collections.TryGetItem<TItem>(IList<TItem>, int, out TItem) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.Collections.FixedList4-1.html": {
    "href": "api/Fwt.Core.Collections.FixedList4-1.html",
    "title": "Struct FixedList4<TData> | Hex Terrains",
    "summary": "Struct FixedList4<TData> A fixed size list of 4 elements. Implements IList ICollection IList<TData> ICollection<TData> IEnumerable<TData> IEnumerable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.Core.Collections Assembly: fwt.core.dll Syntax [Serializable] public struct FixedList4<TData> : IList, ICollection, IList<TData>, ICollection<TData>, IEnumerable<TData>, IEnumerable Type Parameters Name Description TData Type of items in the list Fields Capacity Declaration public const int Capacity = 4 Field Value Type Description int Value_0 Declaration public TData Value_0 Field Value Type Description TData Value_1 Declaration public TData Value_1 Field Value Type Description TData Value_2 Declaration public TData Value_2 Field Value Type Description TData Value_3 Declaration public TData Value_3 Field Value Type Description TData Properties Count The number of elements in the list. Declaration public int Count { get; } Property Value Type Description int IsFixedSize Declaration public bool IsFixedSize { get; } Property Value Type Description bool IsReadOnly Declaration public bool IsReadOnly { get; } Property Value Type Description bool IsSynchronized Declaration public bool IsSynchronized { get; } Property Value Type Description bool this[int] Declaration public TData this[int index] { get; set; } Parameters Type Name Description int index Property Value Type Description TData SyncRoot Declaration public object SyncRoot { get; } Property Value Type Description object Methods Add(object) Declaration public int Add(object value) Parameters Type Name Description object value Returns Type Description int Add(TData) Declaration public void Add(TData value) Parameters Type Name Description TData value Clear() Declaration public void Clear() Contains(object) Declaration public bool Contains(object value) Parameters Type Name Description object value Returns Type Description bool Contains(TData) Declaration public bool Contains(TData value) Parameters Type Name Description TData value Returns Type Description bool CopyTo(Array, int) Declaration public void CopyTo(Array array, int index) Parameters Type Name Description Array array int index CopyTo(TData[], int) Declaration public void CopyTo(TData[] array, int index) Parameters Type Name Description TData[] array int index GetCapacity() Declaration public int GetCapacity() Returns Type Description int GetEnumerator() Declaration public IEnumerator GetEnumerator() Returns Type Description IEnumerator IndexOf(object) Declaration public int IndexOf(object value) Parameters Type Name Description object value Returns Type Description int IndexOf(TData) Declaration public int IndexOf(TData value) Parameters Type Name Description TData value Returns Type Description int Insert(int, object) Declaration public void Insert(int index, object value) Parameters Type Name Description int index object value Insert(int, TData) Declaration public void Insert(int index, TData value) Parameters Type Name Description int index TData value IsFull() Declaration public bool IsFull() Returns Type Description bool Remove(object) Declaration public void Remove(object value) Parameters Type Name Description object value Remove(TData) Declaration public bool Remove(TData value) Parameters Type Name Description TData value Returns Type Description bool RemoveAt(int) Declaration public void RemoveAt(int index) Parameters Type Name Description int index Implements IList ICollection IList<T> ICollection<T> IEnumerable<T> IEnumerable Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_Collections.GetRandom<TItem>(IList<TItem>) Extensions_Collections.TryGetItemOrDefault<TItem>(IList<TItem>, int) Extensions_Collections.TryGetItem<TItem>(IList<TItem>, int, out TItem) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.Collections.FixedList512-1.html": {
    "href": "api/Fwt.Core.Collections.FixedList512-1.html",
    "title": "Struct FixedList512<TData> | Hex Terrains",
    "summary": "Struct FixedList512<TData> Array with fixed size of 512 elements. Implements IList ICollection IList<TData> ICollection<TData> IEnumerable<TData> IEnumerable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.Core.Collections Assembly: fwt.core.dll Syntax [Serializable] public struct FixedList512<TData> : IList, ICollection, IList<TData>, ICollection<TData>, IEnumerable<TData>, IEnumerable Type Parameters Name Description TData Type of item in the list Fields Capacity Declaration public const int Capacity = 512 Field Value Type Description int Value_0 Declaration public TData Value_0 Field Value Type Description TData Value_1 Declaration public TData Value_1 Field Value Type Description TData Value_10 Declaration public TData Value_10 Field Value Type Description TData Value_100 Declaration public TData Value_100 Field Value Type Description TData Value_101 Declaration public TData Value_101 Field Value Type Description TData Value_102 Declaration public TData Value_102 Field Value Type Description TData Value_103 Declaration public TData Value_103 Field Value Type Description TData Value_104 Declaration public TData Value_104 Field Value Type Description TData Value_105 Declaration public TData Value_105 Field Value Type Description TData Value_106 Declaration public TData Value_106 Field Value Type Description TData Value_107 Declaration public TData Value_107 Field Value Type Description TData Value_108 Declaration public TData Value_108 Field Value Type Description TData Value_109 Declaration public TData Value_109 Field Value Type Description TData Value_11 Declaration public TData Value_11 Field Value Type Description TData Value_110 Declaration public TData Value_110 Field Value Type Description TData Value_111 Declaration public TData Value_111 Field Value Type Description TData Value_112 Declaration public TData Value_112 Field Value Type Description TData Value_113 Declaration public TData Value_113 Field Value Type Description TData Value_114 Declaration public TData Value_114 Field Value Type Description TData Value_115 Declaration public TData Value_115 Field Value Type Description TData Value_116 Declaration public TData Value_116 Field Value Type Description TData Value_117 Declaration public TData Value_117 Field Value Type Description TData Value_118 Declaration public TData Value_118 Field Value Type Description TData Value_119 Declaration public TData Value_119 Field Value Type Description TData Value_12 Declaration public TData Value_12 Field Value Type Description TData Value_120 Declaration public TData Value_120 Field Value Type Description TData Value_121 Declaration public TData Value_121 Field Value Type Description TData Value_122 Declaration public TData Value_122 Field Value Type Description TData Value_123 Declaration public TData Value_123 Field Value Type Description TData Value_124 Declaration public TData Value_124 Field Value Type Description TData Value_125 Declaration public TData Value_125 Field Value Type Description TData Value_126 Declaration public TData Value_126 Field Value Type Description TData Value_127 Declaration public TData Value_127 Field Value Type Description TData Value_128 Declaration public TData Value_128 Field Value Type Description TData Value_129 Declaration public TData Value_129 Field Value Type Description TData Value_13 Declaration public TData Value_13 Field Value Type Description TData Value_130 Declaration public TData Value_130 Field Value Type Description TData Value_131 Declaration public TData Value_131 Field Value Type Description TData Value_132 Declaration public TData Value_132 Field Value Type Description TData Value_133 Declaration public TData Value_133 Field Value Type Description TData Value_134 Declaration public TData Value_134 Field Value Type Description TData Value_135 Declaration public TData Value_135 Field Value Type Description TData Value_136 Declaration public TData Value_136 Field Value Type Description TData Value_137 Declaration public TData Value_137 Field Value Type Description TData Value_138 Declaration public TData Value_138 Field Value Type Description TData Value_139 Declaration public TData Value_139 Field Value Type Description TData Value_14 Declaration public TData Value_14 Field Value Type Description TData Value_140 Declaration public TData Value_140 Field Value Type Description TData Value_141 Declaration public TData Value_141 Field Value Type Description TData Value_142 Declaration public TData Value_142 Field Value Type Description TData Value_143 Declaration public TData Value_143 Field Value Type Description TData Value_144 Declaration public TData Value_144 Field Value Type Description TData Value_145 Declaration public TData Value_145 Field Value Type Description TData Value_146 Declaration public TData Value_146 Field Value Type Description TData Value_147 Declaration public TData Value_147 Field Value Type Description TData Value_148 Declaration public TData Value_148 Field Value Type Description TData Value_149 Declaration public TData Value_149 Field Value Type Description TData Value_15 Declaration public TData Value_15 Field Value Type Description TData Value_150 Declaration public TData Value_150 Field Value Type Description TData Value_151 Declaration public TData Value_151 Field Value Type Description TData Value_152 Declaration public TData Value_152 Field Value Type Description TData Value_153 Declaration public TData Value_153 Field Value Type Description TData Value_154 Declaration public TData Value_154 Field Value Type Description TData Value_155 Declaration public TData Value_155 Field Value Type Description TData Value_156 Declaration public TData Value_156 Field Value Type Description TData Value_157 Declaration public TData Value_157 Field Value Type Description TData Value_158 Declaration public TData Value_158 Field Value Type Description TData Value_159 Declaration public TData Value_159 Field Value Type Description TData Value_16 Declaration public TData Value_16 Field Value Type Description TData Value_160 Declaration public TData Value_160 Field Value Type Description TData Value_161 Declaration public TData Value_161 Field Value Type Description TData Value_162 Declaration public TData Value_162 Field Value Type Description TData Value_163 Declaration public TData Value_163 Field Value Type Description TData Value_164 Declaration public TData Value_164 Field Value Type Description TData Value_165 Declaration public TData Value_165 Field Value Type Description TData Value_166 Declaration public TData Value_166 Field Value Type Description TData Value_167 Declaration public TData Value_167 Field Value Type Description TData Value_168 Declaration public TData Value_168 Field Value Type Description TData Value_169 Declaration public TData Value_169 Field Value Type Description TData Value_17 Declaration public TData Value_17 Field Value Type Description TData Value_170 Declaration public TData Value_170 Field Value Type Description TData Value_171 Declaration public TData Value_171 Field Value Type Description TData Value_172 Declaration public TData Value_172 Field Value Type Description TData Value_173 Declaration public TData Value_173 Field Value Type Description TData Value_174 Declaration public TData Value_174 Field Value Type Description TData Value_175 Declaration public TData Value_175 Field Value Type Description TData Value_176 Declaration public TData Value_176 Field Value Type Description TData Value_177 Declaration public TData Value_177 Field Value Type Description TData Value_178 Declaration public TData Value_178 Field Value Type Description TData Value_179 Declaration public TData Value_179 Field Value Type Description TData Value_18 Declaration public TData Value_18 Field Value Type Description TData Value_180 Declaration public TData Value_180 Field Value Type Description TData Value_181 Declaration public TData Value_181 Field Value Type Description TData Value_182 Declaration public TData Value_182 Field Value Type Description TData Value_183 Declaration public TData Value_183 Field Value Type Description TData Value_184 Declaration public TData Value_184 Field Value Type Description TData Value_185 Declaration public TData Value_185 Field Value Type Description TData Value_186 Declaration public TData Value_186 Field Value Type Description TData Value_187 Declaration public TData Value_187 Field Value Type Description TData Value_188 Declaration public TData Value_188 Field Value Type Description TData Value_189 Declaration public TData Value_189 Field Value Type Description TData Value_19 Declaration public TData Value_19 Field Value Type Description TData Value_190 Declaration public TData Value_190 Field Value Type Description TData Value_191 Declaration public TData Value_191 Field Value Type Description TData Value_192 Declaration public TData Value_192 Field Value Type Description TData Value_193 Declaration public TData Value_193 Field Value Type Description TData Value_194 Declaration public TData Value_194 Field Value Type Description TData Value_195 Declaration public TData Value_195 Field Value Type Description TData Value_196 Declaration public TData Value_196 Field Value Type Description TData Value_197 Declaration public TData Value_197 Field Value Type Description TData Value_198 Declaration public TData Value_198 Field Value Type Description TData Value_199 Declaration public TData Value_199 Field Value Type Description TData Value_2 Declaration public TData Value_2 Field Value Type Description TData Value_20 Declaration public TData Value_20 Field Value Type Description TData Value_200 Declaration public TData Value_200 Field Value Type Description TData Value_201 Declaration public TData Value_201 Field Value Type Description TData Value_202 Declaration public TData Value_202 Field Value Type Description TData Value_203 Declaration public TData Value_203 Field Value Type Description TData Value_204 Declaration public TData Value_204 Field Value Type Description TData Value_205 Declaration public TData Value_205 Field Value Type Description TData Value_206 Declaration public TData Value_206 Field Value Type Description TData Value_207 Declaration public TData Value_207 Field Value Type Description TData Value_208 Declaration public TData Value_208 Field Value Type Description TData Value_209 Declaration public TData Value_209 Field Value Type Description TData Value_21 Declaration public TData Value_21 Field Value Type Description TData Value_210 Declaration public TData Value_210 Field Value Type Description TData Value_211 Declaration public TData Value_211 Field Value Type Description TData Value_212 Declaration public TData Value_212 Field Value Type Description TData Value_213 Declaration public TData Value_213 Field Value Type Description TData Value_214 Declaration public TData Value_214 Field Value Type Description TData Value_215 Declaration public TData Value_215 Field Value Type Description TData Value_216 Declaration public TData Value_216 Field Value Type Description TData Value_217 Declaration public TData Value_217 Field Value Type Description TData Value_218 Declaration public TData Value_218 Field Value Type Description TData Value_219 Declaration public TData Value_219 Field Value Type Description TData Value_22 Declaration public TData Value_22 Field Value Type Description TData Value_220 Declaration public TData Value_220 Field Value Type Description TData Value_221 Declaration public TData Value_221 Field Value Type Description TData Value_222 Declaration public TData Value_222 Field Value Type Description TData Value_223 Declaration public TData Value_223 Field Value Type Description TData Value_224 Declaration public TData Value_224 Field Value Type Description TData Value_225 Declaration public TData Value_225 Field Value Type Description TData Value_226 Declaration public TData Value_226 Field Value Type Description TData Value_227 Declaration public TData Value_227 Field Value Type Description TData Value_228 Declaration public TData Value_228 Field Value Type Description TData Value_229 Declaration public TData Value_229 Field Value Type Description TData Value_23 Declaration public TData Value_23 Field Value Type Description TData Value_230 Declaration public TData Value_230 Field Value Type Description TData Value_231 Declaration public TData Value_231 Field Value Type Description TData Value_232 Declaration public TData Value_232 Field Value Type Description TData Value_233 Declaration public TData Value_233 Field Value Type Description TData Value_234 Declaration public TData Value_234 Field Value Type Description TData Value_235 Declaration public TData Value_235 Field Value Type Description TData Value_236 Declaration public TData Value_236 Field Value Type Description TData Value_237 Declaration public TData Value_237 Field Value Type Description TData Value_238 Declaration public TData Value_238 Field Value Type Description TData Value_239 Declaration public TData Value_239 Field Value Type Description TData Value_24 Declaration public TData Value_24 Field Value Type Description TData Value_240 Declaration public TData Value_240 Field Value Type Description TData Value_241 Declaration public TData Value_241 Field Value Type Description TData Value_242 Declaration public TData Value_242 Field Value Type Description TData Value_243 Declaration public TData Value_243 Field Value Type Description TData Value_244 Declaration public TData Value_244 Field Value Type Description TData Value_245 Declaration public TData Value_245 Field Value Type Description TData Value_246 Declaration public TData Value_246 Field Value Type Description TData Value_247 Declaration public TData Value_247 Field Value Type Description TData Value_248 Declaration public TData Value_248 Field Value Type Description TData Value_249 Declaration public TData Value_249 Field Value Type Description TData Value_25 Declaration public TData Value_25 Field Value Type Description TData Value_250 Declaration public TData Value_250 Field Value Type Description TData Value_251 Declaration public TData Value_251 Field Value Type Description TData Value_252 Declaration public TData Value_252 Field Value Type Description TData Value_253 Declaration public TData Value_253 Field Value Type Description TData Value_254 Declaration public TData Value_254 Field Value Type Description TData Value_255 Declaration public TData Value_255 Field Value Type Description TData Value_256 Declaration public TData Value_256 Field Value Type Description TData Value_257 Declaration public TData Value_257 Field Value Type Description TData Value_258 Declaration public TData Value_258 Field Value Type Description TData Value_259 Declaration public TData Value_259 Field Value Type Description TData Value_26 Declaration public TData Value_26 Field Value Type Description TData Value_260 Declaration public TData Value_260 Field Value Type Description TData Value_261 Declaration public TData Value_261 Field Value Type Description TData Value_262 Declaration public TData Value_262 Field Value Type Description TData Value_263 Declaration public TData Value_263 Field Value Type Description TData Value_264 Declaration public TData Value_264 Field Value Type Description TData Value_265 Declaration public TData Value_265 Field Value Type Description TData Value_266 Declaration public TData Value_266 Field Value Type Description TData Value_267 Declaration public TData Value_267 Field Value Type Description TData Value_268 Declaration public TData Value_268 Field Value Type Description TData Value_269 Declaration public TData Value_269 Field Value Type Description TData Value_27 Declaration public TData Value_27 Field Value Type Description TData Value_270 Declaration public TData Value_270 Field Value Type Description TData Value_271 Declaration public TData Value_271 Field Value Type Description TData Value_272 Declaration public TData Value_272 Field Value Type Description TData Value_273 Declaration public TData Value_273 Field Value Type Description TData Value_274 Declaration public TData Value_274 Field Value Type Description TData Value_275 Declaration public TData Value_275 Field Value Type Description TData Value_276 Declaration public TData Value_276 Field Value Type Description TData Value_277 Declaration public TData Value_277 Field Value Type Description TData Value_278 Declaration public TData Value_278 Field Value Type Description TData Value_279 Declaration public TData Value_279 Field Value Type Description TData Value_28 Declaration public TData Value_28 Field Value Type Description TData Value_280 Declaration public TData Value_280 Field Value Type Description TData Value_281 Declaration public TData Value_281 Field Value Type Description TData Value_282 Declaration public TData Value_282 Field Value Type Description TData Value_283 Declaration public TData Value_283 Field Value Type Description TData Value_284 Declaration public TData Value_284 Field Value Type Description TData Value_285 Declaration public TData Value_285 Field Value Type Description TData Value_286 Declaration public TData Value_286 Field Value Type Description TData Value_287 Declaration public TData Value_287 Field Value Type Description TData Value_288 Declaration public TData Value_288 Field Value Type Description TData Value_289 Declaration public TData Value_289 Field Value Type Description TData Value_29 Declaration public TData Value_29 Field Value Type Description TData Value_290 Declaration public TData Value_290 Field Value Type Description TData Value_291 Declaration public TData Value_291 Field Value Type Description TData Value_292 Declaration public TData Value_292 Field Value Type Description TData Value_293 Declaration public TData Value_293 Field Value Type Description TData Value_294 Declaration public TData Value_294 Field Value Type Description TData Value_295 Declaration public TData Value_295 Field Value Type Description TData Value_296 Declaration public TData Value_296 Field Value Type Description TData Value_297 Declaration public TData Value_297 Field Value Type Description TData Value_298 Declaration public TData Value_298 Field Value Type Description TData Value_299 Declaration public TData Value_299 Field Value Type Description TData Value_3 Declaration public TData Value_3 Field Value Type Description TData Value_30 Declaration public TData Value_30 Field Value Type Description TData Value_300 Declaration public TData Value_300 Field Value Type Description TData Value_301 Declaration public TData Value_301 Field Value Type Description TData Value_302 Declaration public TData Value_302 Field Value Type Description TData Value_303 Declaration public TData Value_303 Field Value Type Description TData Value_304 Declaration public TData Value_304 Field Value Type Description TData Value_305 Declaration public TData Value_305 Field Value Type Description TData Value_306 Declaration public TData Value_306 Field Value Type Description TData Value_307 Declaration public TData Value_307 Field Value Type Description TData Value_308 Declaration public TData Value_308 Field Value Type Description TData Value_309 Declaration public TData Value_309 Field Value Type Description TData Value_31 Declaration public TData Value_31 Field Value Type Description TData Value_310 Declaration public TData Value_310 Field Value Type Description TData Value_311 Declaration public TData Value_311 Field Value Type Description TData Value_312 Declaration public TData Value_312 Field Value Type Description TData Value_313 Declaration public TData Value_313 Field Value Type Description TData Value_314 Declaration public TData Value_314 Field Value Type Description TData Value_315 Declaration public TData Value_315 Field Value Type Description TData Value_316 Declaration public TData Value_316 Field Value Type Description TData Value_317 Declaration public TData Value_317 Field Value Type Description TData Value_318 Declaration public TData Value_318 Field Value Type Description TData Value_319 Declaration public TData Value_319 Field Value Type Description TData Value_32 Declaration public TData Value_32 Field Value Type Description TData Value_320 Declaration public TData Value_320 Field Value Type Description TData Value_321 Declaration public TData Value_321 Field Value Type Description TData Value_322 Declaration public TData Value_322 Field Value Type Description TData Value_323 Declaration public TData Value_323 Field Value Type Description TData Value_324 Declaration public TData Value_324 Field Value Type Description TData Value_325 Declaration public TData Value_325 Field Value Type Description TData Value_326 Declaration public TData Value_326 Field Value Type Description TData Value_327 Declaration public TData Value_327 Field Value Type Description TData Value_328 Declaration public TData Value_328 Field Value Type Description TData Value_329 Declaration public TData Value_329 Field Value Type Description TData Value_33 Declaration public TData Value_33 Field Value Type Description TData Value_330 Declaration public TData Value_330 Field Value Type Description TData Value_331 Declaration public TData Value_331 Field Value Type Description TData Value_332 Declaration public TData Value_332 Field Value Type Description TData Value_333 Declaration public TData Value_333 Field Value Type Description TData Value_334 Declaration public TData Value_334 Field Value Type Description TData Value_335 Declaration public TData Value_335 Field Value Type Description TData Value_336 Declaration public TData Value_336 Field Value Type Description TData Value_337 Declaration public TData Value_337 Field Value Type Description TData Value_338 Declaration public TData Value_338 Field Value Type Description TData Value_339 Declaration public TData Value_339 Field Value Type Description TData Value_34 Declaration public TData Value_34 Field Value Type Description TData Value_340 Declaration public TData Value_340 Field Value Type Description TData Value_341 Declaration public TData Value_341 Field Value Type Description TData Value_342 Declaration public TData Value_342 Field Value Type Description TData Value_343 Declaration public TData Value_343 Field Value Type Description TData Value_344 Declaration public TData Value_344 Field Value Type Description TData Value_345 Declaration public TData Value_345 Field Value Type Description TData Value_346 Declaration public TData Value_346 Field Value Type Description TData Value_347 Declaration public TData Value_347 Field Value Type Description TData Value_348 Declaration public TData Value_348 Field Value Type Description TData Value_349 Declaration public TData Value_349 Field Value Type Description TData Value_35 Declaration public TData Value_35 Field Value Type Description TData Value_350 Declaration public TData Value_350 Field Value Type Description TData Value_351 Declaration public TData Value_351 Field Value Type Description TData Value_352 Declaration public TData Value_352 Field Value Type Description TData Value_353 Declaration public TData Value_353 Field Value Type Description TData Value_354 Declaration public TData Value_354 Field Value Type Description TData Value_355 Declaration public TData Value_355 Field Value Type Description TData Value_356 Declaration public TData Value_356 Field Value Type Description TData Value_357 Declaration public TData Value_357 Field Value Type Description TData Value_358 Declaration public TData Value_358 Field Value Type Description TData Value_359 Declaration public TData Value_359 Field Value Type Description TData Value_36 Declaration public TData Value_36 Field Value Type Description TData Value_360 Declaration public TData Value_360 Field Value Type Description TData Value_361 Declaration public TData Value_361 Field Value Type Description TData Value_362 Declaration public TData Value_362 Field Value Type Description TData Value_363 Declaration public TData Value_363 Field Value Type Description TData Value_364 Declaration public TData Value_364 Field Value Type Description TData Value_365 Declaration public TData Value_365 Field Value Type Description TData Value_366 Declaration public TData Value_366 Field Value Type Description TData Value_367 Declaration public TData Value_367 Field Value Type Description TData Value_368 Declaration public TData Value_368 Field Value Type Description TData Value_369 Declaration public TData Value_369 Field Value Type Description TData Value_37 Declaration public TData Value_37 Field Value Type Description TData Value_370 Declaration public TData Value_370 Field Value Type Description TData Value_371 Declaration public TData Value_371 Field Value Type Description TData Value_372 Declaration public TData Value_372 Field Value Type Description TData Value_373 Declaration public TData Value_373 Field Value Type Description TData Value_374 Declaration public TData Value_374 Field Value Type Description TData Value_375 Declaration public TData Value_375 Field Value Type Description TData Value_376 Declaration public TData Value_376 Field Value Type Description TData Value_377 Declaration public TData Value_377 Field Value Type Description TData Value_378 Declaration public TData Value_378 Field Value Type Description TData Value_379 Declaration public TData Value_379 Field Value Type Description TData Value_38 Declaration public TData Value_38 Field Value Type Description TData Value_380 Declaration public TData Value_380 Field Value Type Description TData Value_381 Declaration public TData Value_381 Field Value Type Description TData Value_382 Declaration public TData Value_382 Field Value Type Description TData Value_383 Declaration public TData Value_383 Field Value Type Description TData Value_384 Declaration public TData Value_384 Field Value Type Description TData Value_385 Declaration public TData Value_385 Field Value Type Description TData Value_386 Declaration public TData Value_386 Field Value Type Description TData Value_387 Declaration public TData Value_387 Field Value Type Description TData Value_388 Declaration public TData Value_388 Field Value Type Description TData Value_389 Declaration public TData Value_389 Field Value Type Description TData Value_39 Declaration public TData Value_39 Field Value Type Description TData Value_390 Declaration public TData Value_390 Field Value Type Description TData Value_391 Declaration public TData Value_391 Field Value Type Description TData Value_392 Declaration public TData Value_392 Field Value Type Description TData Value_393 Declaration public TData Value_393 Field Value Type Description TData Value_394 Declaration public TData Value_394 Field Value Type Description TData Value_395 Declaration public TData Value_395 Field Value Type Description TData Value_396 Declaration public TData Value_396 Field Value Type Description TData Value_397 Declaration public TData Value_397 Field Value Type Description TData Value_398 Declaration public TData Value_398 Field Value Type Description TData Value_399 Declaration public TData Value_399 Field Value Type Description TData Value_4 Declaration public TData Value_4 Field Value Type Description TData Value_40 Declaration public TData Value_40 Field Value Type Description TData Value_400 Declaration public TData Value_400 Field Value Type Description TData Value_401 Declaration public TData Value_401 Field Value Type Description TData Value_402 Declaration public TData Value_402 Field Value Type Description TData Value_403 Declaration public TData Value_403 Field Value Type Description TData Value_404 Declaration public TData Value_404 Field Value Type Description TData Value_405 Declaration public TData Value_405 Field Value Type Description TData Value_406 Declaration public TData Value_406 Field Value Type Description TData Value_407 Declaration public TData Value_407 Field Value Type Description TData Value_408 Declaration public TData Value_408 Field Value Type Description TData Value_409 Declaration public TData Value_409 Field Value Type Description TData Value_41 Declaration public TData Value_41 Field Value Type Description TData Value_410 Declaration public TData Value_410 Field Value Type Description TData Value_411 Declaration public TData Value_411 Field Value Type Description TData Value_412 Declaration public TData Value_412 Field Value Type Description TData Value_413 Declaration public TData Value_413 Field Value Type Description TData Value_414 Declaration public TData Value_414 Field Value Type Description TData Value_415 Declaration public TData Value_415 Field Value Type Description TData Value_416 Declaration public TData Value_416 Field Value Type Description TData Value_417 Declaration public TData Value_417 Field Value Type Description TData Value_418 Declaration public TData Value_418 Field Value Type Description TData Value_419 Declaration public TData Value_419 Field Value Type Description TData Value_42 Declaration public TData Value_42 Field Value Type Description TData Value_420 Declaration public TData Value_420 Field Value Type Description TData Value_421 Declaration public TData Value_421 Field Value Type Description TData Value_422 Declaration public TData Value_422 Field Value Type Description TData Value_423 Declaration public TData Value_423 Field Value Type Description TData Value_424 Declaration public TData Value_424 Field Value Type Description TData Value_425 Declaration public TData Value_425 Field Value Type Description TData Value_426 Declaration public TData Value_426 Field Value Type Description TData Value_427 Declaration public TData Value_427 Field Value Type Description TData Value_428 Declaration public TData Value_428 Field Value Type Description TData Value_429 Declaration public TData Value_429 Field Value Type Description TData Value_43 Declaration public TData Value_43 Field Value Type Description TData Value_430 Declaration public TData Value_430 Field Value Type Description TData Value_431 Declaration public TData Value_431 Field Value Type Description TData Value_432 Declaration public TData Value_432 Field Value Type Description TData Value_433 Declaration public TData Value_433 Field Value Type Description TData Value_434 Declaration public TData Value_434 Field Value Type Description TData Value_435 Declaration public TData Value_435 Field Value Type Description TData Value_436 Declaration public TData Value_436 Field Value Type Description TData Value_437 Declaration public TData Value_437 Field Value Type Description TData Value_438 Declaration public TData Value_438 Field Value Type Description TData Value_439 Declaration public TData Value_439 Field Value Type Description TData Value_44 Declaration public TData Value_44 Field Value Type Description TData Value_440 Declaration public TData Value_440 Field Value Type Description TData Value_441 Declaration public TData Value_441 Field Value Type Description TData Value_442 Declaration public TData Value_442 Field Value Type Description TData Value_443 Declaration public TData Value_443 Field Value Type Description TData Value_444 Declaration public TData Value_444 Field Value Type Description TData Value_445 Declaration public TData Value_445 Field Value Type Description TData Value_446 Declaration public TData Value_446 Field Value Type Description TData Value_447 Declaration public TData Value_447 Field Value Type Description TData Value_448 Declaration public TData Value_448 Field Value Type Description TData Value_449 Declaration public TData Value_449 Field Value Type Description TData Value_45 Declaration public TData Value_45 Field Value Type Description TData Value_450 Declaration public TData Value_450 Field Value Type Description TData Value_451 Declaration public TData Value_451 Field Value Type Description TData Value_452 Declaration public TData Value_452 Field Value Type Description TData Value_453 Declaration public TData Value_453 Field Value Type Description TData Value_454 Declaration public TData Value_454 Field Value Type Description TData Value_455 Declaration public TData Value_455 Field Value Type Description TData Value_456 Declaration public TData Value_456 Field Value Type Description TData Value_457 Declaration public TData Value_457 Field Value Type Description TData Value_458 Declaration public TData Value_458 Field Value Type Description TData Value_459 Declaration public TData Value_459 Field Value Type Description TData Value_46 Declaration public TData Value_46 Field Value Type Description TData Value_460 Declaration public TData Value_460 Field Value Type Description TData Value_461 Declaration public TData Value_461 Field Value Type Description TData Value_462 Declaration public TData Value_462 Field Value Type Description TData Value_463 Declaration public TData Value_463 Field Value Type Description TData Value_464 Declaration public TData Value_464 Field Value Type Description TData Value_465 Declaration public TData Value_465 Field Value Type Description TData Value_466 Declaration public TData Value_466 Field Value Type Description TData Value_467 Declaration public TData Value_467 Field Value Type Description TData Value_468 Declaration public TData Value_468 Field Value Type Description TData Value_469 Declaration public TData Value_469 Field Value Type Description TData Value_47 Declaration public TData Value_47 Field Value Type Description TData Value_470 Declaration public TData Value_470 Field Value Type Description TData Value_471 Declaration public TData Value_471 Field Value Type Description TData Value_472 Declaration public TData Value_472 Field Value Type Description TData Value_473 Declaration public TData Value_473 Field Value Type Description TData Value_474 Declaration public TData Value_474 Field Value Type Description TData Value_475 Declaration public TData Value_475 Field Value Type Description TData Value_476 Declaration public TData Value_476 Field Value Type Description TData Value_477 Declaration public TData Value_477 Field Value Type Description TData Value_478 Declaration public TData Value_478 Field Value Type Description TData Value_479 Declaration public TData Value_479 Field Value Type Description TData Value_48 Declaration public TData Value_48 Field Value Type Description TData Value_480 Declaration public TData Value_480 Field Value Type Description TData Value_481 Declaration public TData Value_481 Field Value Type Description TData Value_482 Declaration public TData Value_482 Field Value Type Description TData Value_483 Declaration public TData Value_483 Field Value Type Description TData Value_484 Declaration public TData Value_484 Field Value Type Description TData Value_485 Declaration public TData Value_485 Field Value Type Description TData Value_486 Declaration public TData Value_486 Field Value Type Description TData Value_487 Declaration public TData Value_487 Field Value Type Description TData Value_488 Declaration public TData Value_488 Field Value Type Description TData Value_489 Declaration public TData Value_489 Field Value Type Description TData Value_49 Declaration public TData Value_49 Field Value Type Description TData Value_490 Declaration public TData Value_490 Field Value Type Description TData Value_491 Declaration public TData Value_491 Field Value Type Description TData Value_492 Declaration public TData Value_492 Field Value Type Description TData Value_493 Declaration public TData Value_493 Field Value Type Description TData Value_494 Declaration public TData Value_494 Field Value Type Description TData Value_495 Declaration public TData Value_495 Field Value Type Description TData Value_496 Declaration public TData Value_496 Field Value Type Description TData Value_497 Declaration public TData Value_497 Field Value Type Description TData Value_498 Declaration public TData Value_498 Field Value Type Description TData Value_499 Declaration public TData Value_499 Field Value Type Description TData Value_5 Declaration public TData Value_5 Field Value Type Description TData Value_50 Declaration public TData Value_50 Field Value Type Description TData Value_500 Declaration public TData Value_500 Field Value Type Description TData Value_501 Declaration public TData Value_501 Field Value Type Description TData Value_502 Declaration public TData Value_502 Field Value Type Description TData Value_503 Declaration public TData Value_503 Field Value Type Description TData Value_504 Declaration public TData Value_504 Field Value Type Description TData Value_505 Declaration public TData Value_505 Field Value Type Description TData Value_506 Declaration public TData Value_506 Field Value Type Description TData Value_507 Declaration public TData Value_507 Field Value Type Description TData Value_508 Declaration public TData Value_508 Field Value Type Description TData Value_509 Declaration public TData Value_509 Field Value Type Description TData Value_51 Declaration public TData Value_51 Field Value Type Description TData Value_510 Declaration public TData Value_510 Field Value Type Description TData Value_511 Declaration public TData Value_511 Field Value Type Description TData Value_52 Declaration public TData Value_52 Field Value Type Description TData Value_53 Declaration public TData Value_53 Field Value Type Description TData Value_54 Declaration public TData Value_54 Field Value Type Description TData Value_55 Declaration public TData Value_55 Field Value Type Description TData Value_56 Declaration public TData Value_56 Field Value Type Description TData Value_57 Declaration public TData Value_57 Field Value Type Description TData Value_58 Declaration public TData Value_58 Field Value Type Description TData Value_59 Declaration public TData Value_59 Field Value Type Description TData Value_6 Declaration public TData Value_6 Field Value Type Description TData Value_60 Declaration public TData Value_60 Field Value Type Description TData Value_61 Declaration public TData Value_61 Field Value Type Description TData Value_62 Declaration public TData Value_62 Field Value Type Description TData Value_63 Declaration public TData Value_63 Field Value Type Description TData Value_64 Declaration public TData Value_64 Field Value Type Description TData Value_65 Declaration public TData Value_65 Field Value Type Description TData Value_66 Declaration public TData Value_66 Field Value Type Description TData Value_67 Declaration public TData Value_67 Field Value Type Description TData Value_68 Declaration public TData Value_68 Field Value Type Description TData Value_69 Declaration public TData Value_69 Field Value Type Description TData Value_7 Declaration public TData Value_7 Field Value Type Description TData Value_70 Declaration public TData Value_70 Field Value Type Description TData Value_71 Declaration public TData Value_71 Field Value Type Description TData Value_72 Declaration public TData Value_72 Field Value Type Description TData Value_73 Declaration public TData Value_73 Field Value Type Description TData Value_74 Declaration public TData Value_74 Field Value Type Description TData Value_75 Declaration public TData Value_75 Field Value Type Description TData Value_76 Declaration public TData Value_76 Field Value Type Description TData Value_77 Declaration public TData Value_77 Field Value Type Description TData Value_78 Declaration public TData Value_78 Field Value Type Description TData Value_79 Declaration public TData Value_79 Field Value Type Description TData Value_8 Declaration public TData Value_8 Field Value Type Description TData Value_80 Declaration public TData Value_80 Field Value Type Description TData Value_81 Declaration public TData Value_81 Field Value Type Description TData Value_82 Declaration public TData Value_82 Field Value Type Description TData Value_83 Declaration public TData Value_83 Field Value Type Description TData Value_84 Declaration public TData Value_84 Field Value Type Description TData Value_85 Declaration public TData Value_85 Field Value Type Description TData Value_86 Declaration public TData Value_86 Field Value Type Description TData Value_87 Declaration public TData Value_87 Field Value Type Description TData Value_88 Declaration public TData Value_88 Field Value Type Description TData Value_89 Declaration public TData Value_89 Field Value Type Description TData Value_9 Declaration public TData Value_9 Field Value Type Description TData Value_90 Declaration public TData Value_90 Field Value Type Description TData Value_91 Declaration public TData Value_91 Field Value Type Description TData Value_92 Declaration public TData Value_92 Field Value Type Description TData Value_93 Declaration public TData Value_93 Field Value Type Description TData Value_94 Declaration public TData Value_94 Field Value Type Description TData Value_95 Declaration public TData Value_95 Field Value Type Description TData Value_96 Declaration public TData Value_96 Field Value Type Description TData Value_97 Declaration public TData Value_97 Field Value Type Description TData Value_98 Declaration public TData Value_98 Field Value Type Description TData Value_99 Declaration public TData Value_99 Field Value Type Description TData Properties Count Count of items in the list. Declaration public int Count { get; } Property Value Type Description int IsFixedSize Declaration public bool IsFixedSize { get; } Property Value Type Description bool IsReadOnly Declaration public bool IsReadOnly { get; } Property Value Type Description bool IsSynchronized Declaration public bool IsSynchronized { get; } Property Value Type Description bool this[int] Declaration public TData this[int index] { get; set; } Parameters Type Name Description int index Property Value Type Description TData SyncRoot Declaration public object SyncRoot { get; } Property Value Type Description object Methods Add(object) Declaration public int Add(object value) Parameters Type Name Description object value Returns Type Description int Add(TData) Declaration public void Add(TData value) Parameters Type Name Description TData value Clear() Declaration public void Clear() Contains(object) Declaration public bool Contains(object value) Parameters Type Name Description object value Returns Type Description bool Contains(TData) Declaration public bool Contains(TData value) Parameters Type Name Description TData value Returns Type Description bool CopyTo(Array, int) Declaration public void CopyTo(Array array, int index) Parameters Type Name Description Array array int index CopyTo(TData[], int) Declaration public void CopyTo(TData[] array, int index) Parameters Type Name Description TData[] array int index GetCapacity() Declaration public int GetCapacity() Returns Type Description int GetEnumerator() Declaration public IEnumerator GetEnumerator() Returns Type Description IEnumerator IndexOf(object) Declaration public int IndexOf(object value) Parameters Type Name Description object value Returns Type Description int IndexOf(TData) Declaration public int IndexOf(TData value) Parameters Type Name Description TData value Returns Type Description int Insert(int, object) Declaration public void Insert(int index, object value) Parameters Type Name Description int index object value Insert(int, TData) Declaration public void Insert(int index, TData value) Parameters Type Name Description int index TData value IsFull() Declaration public bool IsFull() Returns Type Description bool Remove(object) Declaration public void Remove(object value) Parameters Type Name Description object value Remove(TData) Declaration public bool Remove(TData value) Parameters Type Name Description TData value Returns Type Description bool RemoveAt(int) Declaration public void RemoveAt(int index) Parameters Type Name Description int index Implements IList ICollection IList<T> ICollection<T> IEnumerable<T> IEnumerable Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_Collections.GetRandom<TItem>(IList<TItem>) Extensions_Collections.TryGetItemOrDefault<TItem>(IList<TItem>, int) Extensions_Collections.TryGetItem<TItem>(IList<TItem>, int, out TItem) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.Collections.FixedList64-1.html": {
    "href": "api/Fwt.Core.Collections.FixedList64-1.html",
    "title": "Struct FixedList64<TData> | Hex Terrains",
    "summary": "Struct FixedList64<TData> Array with fixed size of 64 elements. Implements IList ICollection IList<TData> ICollection<TData> IEnumerable<TData> IEnumerable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.Core.Collections Assembly: fwt.core.dll Syntax [Serializable] public struct FixedList64<TData> : IList, ICollection, IList<TData>, ICollection<TData>, IEnumerable<TData>, IEnumerable Type Parameters Name Description TData Type of item in the list Fields Capacity Declaration public const int Capacity = 64 Field Value Type Description int Value_0 Declaration public TData Value_0 Field Value Type Description TData Value_1 Declaration public TData Value_1 Field Value Type Description TData Value_10 Declaration public TData Value_10 Field Value Type Description TData Value_11 Declaration public TData Value_11 Field Value Type Description TData Value_12 Declaration public TData Value_12 Field Value Type Description TData Value_13 Declaration public TData Value_13 Field Value Type Description TData Value_14 Declaration public TData Value_14 Field Value Type Description TData Value_15 Declaration public TData Value_15 Field Value Type Description TData Value_16 Declaration public TData Value_16 Field Value Type Description TData Value_17 Declaration public TData Value_17 Field Value Type Description TData Value_18 Declaration public TData Value_18 Field Value Type Description TData Value_19 Declaration public TData Value_19 Field Value Type Description TData Value_2 Declaration public TData Value_2 Field Value Type Description TData Value_20 Declaration public TData Value_20 Field Value Type Description TData Value_21 Declaration public TData Value_21 Field Value Type Description TData Value_22 Declaration public TData Value_22 Field Value Type Description TData Value_23 Declaration public TData Value_23 Field Value Type Description TData Value_24 Declaration public TData Value_24 Field Value Type Description TData Value_25 Declaration public TData Value_25 Field Value Type Description TData Value_26 Declaration public TData Value_26 Field Value Type Description TData Value_27 Declaration public TData Value_27 Field Value Type Description TData Value_28 Declaration public TData Value_28 Field Value Type Description TData Value_29 Declaration public TData Value_29 Field Value Type Description TData Value_3 Declaration public TData Value_3 Field Value Type Description TData Value_30 Declaration public TData Value_30 Field Value Type Description TData Value_31 Declaration public TData Value_31 Field Value Type Description TData Value_32 Declaration public TData Value_32 Field Value Type Description TData Value_33 Declaration public TData Value_33 Field Value Type Description TData Value_34 Declaration public TData Value_34 Field Value Type Description TData Value_35 Declaration public TData Value_35 Field Value Type Description TData Value_36 Declaration public TData Value_36 Field Value Type Description TData Value_37 Declaration public TData Value_37 Field Value Type Description TData Value_38 Declaration public TData Value_38 Field Value Type Description TData Value_39 Declaration public TData Value_39 Field Value Type Description TData Value_4 Declaration public TData Value_4 Field Value Type Description TData Value_40 Declaration public TData Value_40 Field Value Type Description TData Value_41 Declaration public TData Value_41 Field Value Type Description TData Value_42 Declaration public TData Value_42 Field Value Type Description TData Value_43 Declaration public TData Value_43 Field Value Type Description TData Value_44 Declaration public TData Value_44 Field Value Type Description TData Value_45 Declaration public TData Value_45 Field Value Type Description TData Value_46 Declaration public TData Value_46 Field Value Type Description TData Value_47 Declaration public TData Value_47 Field Value Type Description TData Value_48 Declaration public TData Value_48 Field Value Type Description TData Value_49 Declaration public TData Value_49 Field Value Type Description TData Value_5 Declaration public TData Value_5 Field Value Type Description TData Value_50 Declaration public TData Value_50 Field Value Type Description TData Value_51 Declaration public TData Value_51 Field Value Type Description TData Value_52 Declaration public TData Value_52 Field Value Type Description TData Value_53 Declaration public TData Value_53 Field Value Type Description TData Value_54 Declaration public TData Value_54 Field Value Type Description TData Value_55 Declaration public TData Value_55 Field Value Type Description TData Value_56 Declaration public TData Value_56 Field Value Type Description TData Value_57 Declaration public TData Value_57 Field Value Type Description TData Value_58 Declaration public TData Value_58 Field Value Type Description TData Value_59 Declaration public TData Value_59 Field Value Type Description TData Value_6 Declaration public TData Value_6 Field Value Type Description TData Value_60 Declaration public TData Value_60 Field Value Type Description TData Value_61 Declaration public TData Value_61 Field Value Type Description TData Value_62 Declaration public TData Value_62 Field Value Type Description TData Value_63 Declaration public TData Value_63 Field Value Type Description TData Value_7 Declaration public TData Value_7 Field Value Type Description TData Value_8 Declaration public TData Value_8 Field Value Type Description TData Value_9 Declaration public TData Value_9 Field Value Type Description TData Properties Count Count of elements in the list. Declaration public int Count { get; } Property Value Type Description int IsFixedSize Declaration public bool IsFixedSize { get; } Property Value Type Description bool IsReadOnly Declaration public bool IsReadOnly { get; } Property Value Type Description bool IsSynchronized Declaration public bool IsSynchronized { get; } Property Value Type Description bool this[int] Declaration public TData this[int index] { get; set; } Parameters Type Name Description int index Property Value Type Description TData SyncRoot Declaration public object SyncRoot { get; } Property Value Type Description object Methods Add(object) Declaration public int Add(object value) Parameters Type Name Description object value Returns Type Description int Add(TData) Declaration public void Add(TData value) Parameters Type Name Description TData value Clear() Declaration public void Clear() Contains(object) Declaration public bool Contains(object value) Parameters Type Name Description object value Returns Type Description bool Contains(TData) Declaration public bool Contains(TData value) Parameters Type Name Description TData value Returns Type Description bool CopyTo(Array, int) Declaration public void CopyTo(Array array, int index) Parameters Type Name Description Array array int index CopyTo(TData[], int) Declaration public void CopyTo(TData[] array, int index) Parameters Type Name Description TData[] array int index GetCapacity() Declaration public int GetCapacity() Returns Type Description int GetEnumerator() Declaration public IEnumerator GetEnumerator() Returns Type Description IEnumerator IndexOf(object) Declaration public int IndexOf(object value) Parameters Type Name Description object value Returns Type Description int IndexOf(TData) Declaration public int IndexOf(TData value) Parameters Type Name Description TData value Returns Type Description int Insert(int, object) Declaration public void Insert(int index, object value) Parameters Type Name Description int index object value Insert(int, TData) Declaration public void Insert(int index, TData value) Parameters Type Name Description int index TData value IsFull() Declaration public bool IsFull() Returns Type Description bool Remove(object) Declaration public void Remove(object value) Parameters Type Name Description object value Remove(TData) Declaration public bool Remove(TData value) Parameters Type Name Description TData value Returns Type Description bool RemoveAt(int) Declaration public void RemoveAt(int index) Parameters Type Name Description int index Implements IList ICollection IList<T> ICollection<T> IEnumerable<T> IEnumerable Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_Collections.GetRandom<TItem>(IList<TItem>) Extensions_Collections.TryGetItemOrDefault<TItem>(IList<TItem>, int) Extensions_Collections.TryGetItem<TItem>(IList<TItem>, int, out TItem) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.Collections.FixedList8-1.html": {
    "href": "api/Fwt.Core.Collections.FixedList8-1.html",
    "title": "Struct FixedList8<TData> | Hex Terrains",
    "summary": "Struct FixedList8<TData> Array with fixed size of 8 elements. Implements IList ICollection IList<TData> ICollection<TData> IEnumerable<TData> IEnumerable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.Core.Collections Assembly: fwt.core.dll Syntax [Serializable] public struct FixedList8<TData> : IList, ICollection, IList<TData>, ICollection<TData>, IEnumerable<TData>, IEnumerable Type Parameters Name Description TData Type of item in the list Fields Capacity Declaration public const int Capacity = 8 Field Value Type Description int Value_0 Declaration public TData Value_0 Field Value Type Description TData Value_1 Declaration public TData Value_1 Field Value Type Description TData Value_2 Declaration public TData Value_2 Field Value Type Description TData Value_3 Declaration public TData Value_3 Field Value Type Description TData Value_4 Declaration public TData Value_4 Field Value Type Description TData Value_5 Declaration public TData Value_5 Field Value Type Description TData Value_6 Declaration public TData Value_6 Field Value Type Description TData Value_7 Declaration public TData Value_7 Field Value Type Description TData Properties Count Count of elements in the list. Declaration public int Count { get; } Property Value Type Description int IsFixedSize Declaration public bool IsFixedSize { get; } Property Value Type Description bool IsReadOnly Declaration public bool IsReadOnly { get; } Property Value Type Description bool IsSynchronized Declaration public bool IsSynchronized { get; } Property Value Type Description bool this[int] Declaration public TData this[int index] { get; set; } Parameters Type Name Description int index Property Value Type Description TData SyncRoot Declaration public object SyncRoot { get; } Property Value Type Description object Methods Add(object) Declaration public int Add(object value) Parameters Type Name Description object value Returns Type Description int Add(TData) Declaration public void Add(TData value) Parameters Type Name Description TData value Clear() Declaration public void Clear() Contains(object) Declaration public bool Contains(object value) Parameters Type Name Description object value Returns Type Description bool Contains(TData) Declaration public bool Contains(TData value) Parameters Type Name Description TData value Returns Type Description bool CopyTo(Array, int) Declaration public void CopyTo(Array array, int index) Parameters Type Name Description Array array int index CopyTo(TData[], int) Declaration public void CopyTo(TData[] array, int index) Parameters Type Name Description TData[] array int index GetCapacity() Declaration public int GetCapacity() Returns Type Description int GetEnumerator() Declaration public IEnumerator GetEnumerator() Returns Type Description IEnumerator IndexOf(object) Declaration public int IndexOf(object value) Parameters Type Name Description object value Returns Type Description int IndexOf(TData) Declaration public int IndexOf(TData value) Parameters Type Name Description TData value Returns Type Description int Insert(int, object) Declaration public void Insert(int index, object value) Parameters Type Name Description int index object value Insert(int, TData) Declaration public void Insert(int index, TData value) Parameters Type Name Description int index TData value IsFull() Declaration public bool IsFull() Returns Type Description bool Remove(object) Declaration public void Remove(object value) Parameters Type Name Description object value Remove(TData) Declaration public bool Remove(TData value) Parameters Type Name Description TData value Returns Type Description bool RemoveAt(int) Declaration public void RemoveAt(int index) Parameters Type Name Description int index Implements IList ICollection IList<T> ICollection<T> IEnumerable<T> IEnumerable Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_Collections.GetRandom<TItem>(IList<TItem>) Extensions_Collections.TryGetItemOrDefault<TItem>(IList<TItem>, int) Extensions_Collections.TryGetItem<TItem>(IList<TItem>, int, out TItem) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.Collections.FragmentableList-1.html": {
    "href": "api/Fwt.Core.Collections.FragmentableList-1.html",
    "title": "Struct FragmentableList<TItem> | Hex Terrains",
    "summary": "Struct FragmentableList<TItem> Holds two lists. Items list holds values. EmptySlots holds vacant indexes, so when you add item through Add() function, it places it into Items list in the vacant slot (if any). When you call RemoveAt() item, it makes the given itemIndex vacant to be filled later with Add() function Implements IDisposable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.Core.Collections Assembly: fwt.core.dll Syntax public struct FragmentableList<TItem> : IDisposable Type Parameters Name Description TItem Fields EmptySlots Array of indexes of empty slots in ItemSlots list. When item is added, it is added to the first empty slot in this list. If no empty slots are available, it is added to the end of the ItemSlots list. Declaration public NativeList<int> EmptySlots Field Value Type Description NativeList<int> ItemSlots Array of items. Declaration public List<TItem> ItemSlots Field Value Type Description List<TItem> SortedEmptySlots Key = index of the empty slot Data = index of the record about the empty slot in the EmptySlots list Declaration public NativeHashMap<int, int> SortedEmptySlots Field Value Type Description NativeHashMap<int, int> SortedOccupiedSlots Key = index of the occupied slot in ItemSlots list; Declaration public NativeHashSet<int> SortedOccupiedSlots Field Value Type Description NativeHashSet<int> Properties Count Amount of Items in all NON-empty slots Declaration public int Count { get; } Property Value Type Description int this[int] Gets an item from the ItemSlots list. DOES NOT DO any checks for null or something, so NullReferenceException is possible Declaration public TItem this[int index] { get; set; } Parameters Type Name Description int index Property Value Type Description TItem Methods Add(TItem) Returns the index this item is added to Declaration public int Add(TItem item) Parameters Type Name Description TItem item Returns Type Description int Clear() Declaration public void Clear() Dispose() Declaration public void Dispose() GetOccupiedIndexesArray(Allocator) Creates a native array filled with indexes of occupied slots in ItemSlots array, so you can take the data by this indexes from ItemSlots or by using indexer to get the items that are not 'deleted' Declaration public NativeArray<int> GetOccupiedIndexesArray(Allocator allocator) Parameters Type Name Description Allocator allocator Returns Type Description NativeArray<int> Init(Allocator) Ensures that internal collections are initialized Declaration public void Init(Allocator allocator) Parameters Type Name Description Allocator allocator IsEmptySlot(int, out int) Declaration public bool IsEmptySlot(int itemIndex, out int emptySlotIndex) Parameters Type Name Description int itemIndex int emptySlotIndex Returns Type Description bool MarkSlotOccupied(int) Adds a record about that given itemIndex slot is occupied. Removes the record from EmptySlots about this itemIndex Declaration public bool MarkSlotOccupied(int itemIndex) Parameters Type Name Description int itemIndex Returns Type Description bool RemoveAt(int) Makes the itemIndex slot vacant to be filled later. Does not really removes an item from Items list, so it is not resized and items are preserver their indexes Declaration public bool RemoveAt(int itemIndex) Parameters Type Name Description int itemIndex Returns Type Description bool RemoveEmptySlot(int) Removes an empty slot for item with given index. itemIndex is an index in Items list. Declaration public bool RemoveEmptySlot(int itemIndex) Parameters Type Name Description int itemIndex Returns Type Description bool Set(int, TItem) Declaration public int Set(int index, TItem item) Parameters Type Name Description int index TItem item Returns Type Description int TryGetItem(int, out TItem) Validates the requested itemIndex and also checks if the requested itemIndex slot is empty. Returns false if validation has not passed or slot is empty. Returns true if validation has passed and there is an item at requested index; out item contains the requested value. out item is default if there is no value found Declaration public bool TryGetItem(int itemIndex, out TItem item) Parameters Type Name Description int itemIndex TItem item Returns Type Description bool Implements IDisposable Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.Collections.FragmentableNativeList-1.html": {
    "href": "api/Fwt.Core.Collections.FragmentableNativeList-1.html",
    "title": "Struct FragmentableNativeList<TItem> | Hex Terrains",
    "summary": "Struct FragmentableNativeList<TItem> Holds two lists. Items list holds values. EmptySlots holds vacant indexes, so when you add item through Add() function, it places it into Items list in the vacant slot (if any). When you call RemoveAt() item, it makes the given itemIndex vacant to be filled later with Add() function Implements IDisposable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.Core.Collections Assembly: fwt.core.dll Syntax public struct FragmentableNativeList<TItem> : IDisposable where TItem : unmanaged Type Parameters Name Description TItem Fields EmptySlots Array of empty (vacant) slots. When item is added, it checks if there are any empty slots. If empty slot is found, it is used to store the item. If no empty slots are found, the item is added to the end of the list. Declaration public NativeList<int> EmptySlots Field Value Type Description NativeList<int> ItemSlots Here the items are stored, but this list is fragmented, so may contain empty (vacant) slots Declaration public NativeList<TItem> ItemSlots Field Value Type Description NativeList<TItem> SortedEmptySlots Key = index of the empty slot Data = index of the record about the empty slot in the EmptySlots list Declaration public NativeHashMap<int, int> SortedEmptySlots Field Value Type Description NativeHashMap<int, int> SortedOccupiedSlots Key = index of the occupied slot in ItemSlots list; Declaration public NativeHashSet<int> SortedOccupiedSlots Field Value Type Description NativeHashSet<int> Properties Count Amount of Items in all NON-empty slots Declaration public int Count { get; } Property Value Type Description int this[int] Gets an item from the ItemSlots list. DOES NOT DO any checks for null or something, so NullReferenceException is possible Declaration public TItem this[int index] { get; set; } Parameters Type Name Description int index Property Value Type Description TItem Methods Add(TItem) Returns the index this item is added to Declaration public int Add(TItem item) Parameters Type Name Description TItem item Returns Type Description int Clear() Declaration public void Clear() Dispose() Declaration public void Dispose() GetOccupiedIndexesArray(Allocator) Creates a native array filled with indexes of occupied slots in ItemSlots array, so you can take the data by this indexes from ItemSlots or by using indexer to get the items that are not 'deleted' Declaration public NativeArray<int> GetOccupiedIndexesArray(Allocator allocator) Parameters Type Name Description Allocator allocator Returns Type Description NativeArray<int> Init(Allocator) Ensures that internal collections are initialized Declaration public void Init(Allocator allocator) Parameters Type Name Description Allocator allocator IsEmptySlot(int, out int) Declaration public bool IsEmptySlot(int itemIndex, out int emptySlotIndex) Parameters Type Name Description int itemIndex int emptySlotIndex Returns Type Description bool MarkSlotOccupied(int) Adds a record about that given itemIndex slot is occupied. Removes the record from EmptySlots about this itemIndex Declaration public bool MarkSlotOccupied(int itemIndex) Parameters Type Name Description int itemIndex Returns Type Description bool RemoveAt(int) Makes the itemIndex slot vacant to be filled later. Does not really removes an item from Items list, so it is not resized and items are preserver their indexes Declaration public bool RemoveAt(int itemIndex) Parameters Type Name Description int itemIndex Returns Type Description bool RemoveEmptySlot(int) Removes an empty slot for item with given index. itemIndex is an index in Items list. Declaration public bool RemoveEmptySlot(int itemIndex) Parameters Type Name Description int itemIndex Returns Type Description bool Set(int, TItem) Declaration public int Set(int index, TItem item) Parameters Type Name Description int index TItem item Returns Type Description int TryGetItem(int, out TItem) Validates the requested itemIndex and also checks if the requested itemIndex slot is empty. Returns false if validation has not passed or slot is empty. Returns true if validation has passed and there is an item at requested index; out item contains the requested value. out item is default if there is no value found Declaration public bool TryGetItem(int itemIndex, out TItem item) Parameters Type Name Description int itemIndex TItem item Returns Type Description bool Implements IDisposable Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.Collections.VersionFragmentableList-1.html": {
    "href": "api/Fwt.Core.Collections.VersionFragmentableList-1.html",
    "title": "Struct VersionFragmentableList<TItem> | Hex Terrains",
    "summary": "Struct VersionFragmentableList<TItem> Wrapper for FragmentableList with versioning. Whenever the list is modified, the version is incremented. Implements IDisposable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.Core.Collections Assembly: fwt.core.dll Syntax public struct VersionFragmentableList<TItem> : IDisposable Type Parameters Name Description TItem Type of item in the list Fields Values The list itself. Declaration public FragmentableList<TItem> Values Field Value Type Description FragmentableList<TItem> Version Version of the list. Whenever the list is modified, this value is incremented. Declaration public long Version Field Value Type Description long Properties IsCreated Declaration public bool IsCreated { get; } Property Value Type Description bool IsDirty Declaration public bool IsDirty { get; } Property Value Type Description bool this[int] Declaration public TItem this[int index] { get; set; } Parameters Type Name Description int index Property Value Type Description TItem Length Declaration public int Length { get; } Property Value Type Description int Methods Clear() Declaration public void Clear() Dispose() Declaration public void Dispose() Init(Allocator) Declaration public void Init(Allocator allocator) Parameters Type Name Description Allocator allocator MarkDirty() Declaration public void MarkDirty() ResetDirty() Declaration public void ResetDirty() TryGetItem(int, out TItem) Declaration public bool TryGetItem(int itemIndex, out TItem item) Parameters Type Name Description int itemIndex TItem item Returns Type Description bool Implements IDisposable Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.Collections.VersionFragmentableNativeList-1.html": {
    "href": "api/Fwt.Core.Collections.VersionFragmentableNativeList-1.html",
    "title": "Struct VersionFragmentableNativeList<TItem> | Hex Terrains",
    "summary": "Struct VersionFragmentableNativeList<TItem> Wrapper for FragmentableNativeList with versioning. Whenever the list is modified, the version is incremented. Implements IDisposable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.Core.Collections Assembly: fwt.core.dll Syntax public struct VersionFragmentableNativeList<TItem> : IDisposable where TItem : unmanaged Type Parameters Name Description TItem Type of item in the list Fields Values The list itself. Declaration public FragmentableNativeList<TItem> Values Field Value Type Description FragmentableNativeList<TItem> Version Version of the list. Whenever the list is modified, this value is incremented. Declaration public long Version Field Value Type Description long Properties IsCreated Declaration public bool IsCreated { get; } Property Value Type Description bool IsDirty Declaration public bool IsDirty { get; } Property Value Type Description bool this[int] Declaration public TItem this[int index] { get; set; } Parameters Type Name Description int index Property Value Type Description TItem Length Declaration public int Length { get; } Property Value Type Description int Methods Clear() Declaration public void Clear() Dispose() Declaration public void Dispose() Init(Allocator) Declaration public void Init(Allocator allocator) Parameters Type Name Description Allocator allocator MarkDirty() Declaration public void MarkDirty() ResetDirty() Declaration public void ResetDirty() TryGetItem(int, out TItem) Declaration public bool TryGetItem(int itemIndex, out TItem item) Parameters Type Name Description int itemIndex TItem item Returns Type Description bool Implements IDisposable Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.Collections.VersionList-1.html": {
    "href": "api/Fwt.Core.Collections.VersionList-1.html",
    "title": "Struct VersionList<TItem> | Hex Terrains",
    "summary": "Struct VersionList<TItem> Wrapper for Array with versioning. Whenever the list is modified, the version is incremented. Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.Core.Collections Assembly: fwt.core.dll Syntax public struct VersionList<TItem> Type Parameters Name Description TItem Type of item in the list Fields Values The list itself. Declaration public List<TItem> Values Field Value Type Description List<TItem> Version Version of the list. Whenever the list is modified, this value is incremented. Declaration public long Version Field Value Type Description long Properties Count Declaration public int Count { get; } Property Value Type Description int IsCreated Declaration public bool IsCreated { get; } Property Value Type Description bool IsDirty Declaration public bool IsDirty { get; } Property Value Type Description bool this[int] Declaration public TItem this[int index] { get; set; } Parameters Type Name Description int index Property Value Type Description TItem Length Declaration public int Length { get; } Property Value Type Description int Methods Add(TItem) Declaration public void Add(TItem item) Parameters Type Name Description TItem item Clear() Declaration public void Clear() FillArray(TItem) Declaration public void FillArray(TItem value) Parameters Type Name Description TItem value Init() Declaration public void Init() MarkDirty() Declaration public void MarkDirty() RemoveAt(int) Declaration public void RemoveAt(int index) Parameters Type Name Description int index ResetDirty() Declaration public void ResetDirty() SetItemsCount(int) Declaration public void SetItemsCount(int itemsCount) Parameters Type Name Description int itemsCount Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.Collections.VersionNativeArray-1.html": {
    "href": "api/Fwt.Core.Collections.VersionNativeArray-1.html",
    "title": "Struct VersionNativeArray<TItem> | Hex Terrains",
    "summary": "Struct VersionNativeArray<TItem> Wrapper for NativeArray with versioning. Whenever the array is modified, the version is incremented. Implements IDisposable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.Core.Collections Assembly: fwt.core.dll Syntax public struct VersionNativeArray<TItem> : IDisposable where TItem : unmanaged Type Parameters Name Description TItem Type of value in the array Fields Values The array itself. Declaration public NativeArray<TItem> Values Field Value Type Description NativeArray<TItem> Version Version of the array. Whenever the array is modified, this value is incremented. Declaration public long Version Field Value Type Description long Properties IsCreated Declaration public bool IsCreated { get; } Property Value Type Description bool IsDirty Declaration public bool IsDirty { get; } Property Value Type Description bool this[int] Declaration public TItem this[int index] { get; set; } Parameters Type Name Description int index Property Value Type Description TItem Length Declaration public int Length { get; } Property Value Type Description int Methods Dispose() Declaration public void Dispose() FillArray(TItem) Declaration public void FillArray(TItem value) Parameters Type Name Description TItem value Init(int, Allocator) Declaration public void Init(int itemsCount, Allocator allocator) Parameters Type Name Description int itemsCount Allocator allocator MarkDirty() Declaration public void MarkDirty() ResetDirty() Declaration public void ResetDirty() Implements IDisposable Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.Collections.VersionNativeHashMap-2.html": {
    "href": "api/Fwt.Core.Collections.VersionNativeHashMap-2.html",
    "title": "Struct VersionNativeHashMap<TKey, TItem> | Hex Terrains",
    "summary": "Struct VersionNativeHashMap<TKey, TItem> Wrapper for NativeHashMap with versioning. Whenever the map is modified, the version is incremented. Implements IDisposable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.Core.Collections Assembly: fwt.core.dll Syntax public struct VersionNativeHashMap<TKey, TItem> : IDisposable where TKey : unmanaged, IEquatable<TKey> where TItem : unmanaged Type Parameters Name Description TKey TYpe of key in the HashMap TItem Type of value in the HashMap Fields Values The actual hash map. Declaration public NativeHashMap<TKey, TItem> Values Field Value Type Description NativeHashMap<TKey, TItem> Version Version of the map. Incremented whenever the map is modified. Declaration public long Version Field Value Type Description long Properties Capacity Declaration public int Capacity { get; set; } Property Value Type Description int IsCreated Declaration public bool IsCreated { get; } Property Value Type Description bool IsDirty Declaration public bool IsDirty { get; } Property Value Type Description bool this[TKey] Declaration public TItem this[TKey key] { get; set; } Parameters Type Name Description TKey key Property Value Type Description TItem Length Declaration public int Length { get; } Property Value Type Description int Methods Clear() Declaration public void Clear() Dispose() Declaration public void Dispose() Init(int, Allocator) Declaration public void Init(int capacity, Allocator allocator) Parameters Type Name Description int capacity Allocator allocator MarkDirty() Declaration public void MarkDirty() ResetDirty() Declaration public void ResetDirty() Implements IDisposable Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.Collections.VersionNativeHashSet-1.html": {
    "href": "api/Fwt.Core.Collections.VersionNativeHashSet-1.html",
    "title": "Struct VersionNativeHashSet<TValue> | Hex Terrains",
    "summary": "Struct VersionNativeHashSet<TValue> Wrapper for NativeHashSet with versioning. Whenever the hash set is modified, the version is incremented. Implements IDisposable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.Core.Collections Assembly: fwt.core.dll Syntax public struct VersionNativeHashSet<TValue> : IDisposable where TValue : unmanaged, IEquatable<TValue> Type Parameters Name Description TValue Type of value in the HashSet Fields Values The hash set itself. Declaration public NativeHashSet<TValue> Values Field Value Type Description NativeHashSet<TValue> Version Version of the hash set. Whenever the hash set is modified, this value is incremented. Declaration public long Version Field Value Type Description long Properties Capacity Declaration public int Capacity { get; set; } Property Value Type Description int IsCreated Declaration public bool IsCreated { get; } Property Value Type Description bool IsDirty Declaration public bool IsDirty { get; } Property Value Type Description bool Length Declaration public int Length { get; } Property Value Type Description int Methods Clear() Declaration public void Clear() Dispose() Declaration public void Dispose() Init(int, Allocator) Declaration public void Init(int capacity, Allocator allocator) Parameters Type Name Description int capacity Allocator allocator MarkDirty() Declaration public void MarkDirty() ResetDirty() Declaration public void ResetDirty() Implements IDisposable Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.Collections.VersionNativeList-1.html": {
    "href": "api/Fwt.Core.Collections.VersionNativeList-1.html",
    "title": "Struct VersionNativeList<TItem> | Hex Terrains",
    "summary": "Struct VersionNativeList<TItem> Wrapper for NativeList with versioning. Whenever the list is modified, the version is incremented. Implements IDisposable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.Core.Collections Assembly: fwt.core.dll Syntax public struct VersionNativeList<TItem> : IDisposable where TItem : unmanaged Type Parameters Name Description TItem Type of value in a Array Fields Values The list of items. Declaration public NativeList<TItem> Values Field Value Type Description NativeList<TItem> Version Version of the list. Whenever the list is modified, this value is incremented. Declaration public long Version Field Value Type Description long Properties IsCreated Declaration public bool IsCreated { get; } Property Value Type Description bool IsDirty Declaration public bool IsDirty { get; } Property Value Type Description bool this[int] Declaration public TItem this[int index] { get; set; } Parameters Type Name Description int index Property Value Type Description TItem Length Declaration public int Length { get; } Property Value Type Description int Methods Clear() Declaration public void Clear() Dispose() Declaration public void Dispose() FillArray(TItem) Declaration public void FillArray(TItem value) Parameters Type Name Description TItem value Init(int, Allocator) Declaration public void Init(int capacity, Allocator allocator) Parameters Type Name Description int capacity Allocator allocator Init(Allocator) Declaration public void Init(Allocator allocator) Parameters Type Name Description Allocator allocator MarkDirty() Declaration public void MarkDirty() ResetDirty() Declaration public void ResetDirty() SetItemsCount(int) Declaration public void SetItemsCount(int itemsCount) Parameters Type Name Description int itemsCount Implements IDisposable Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.Collections.VersionNativeParallelHashMap-2.html": {
    "href": "api/Fwt.Core.Collections.VersionNativeParallelHashMap-2.html",
    "title": "Struct VersionNativeParallelHashMap<TKey, TItem> | Hex Terrains",
    "summary": "Struct VersionNativeParallelHashMap<TKey, TItem> Wrapper for NativeParallelHashMap with versioning. Whenever the map is modified, the version is incremented. Implements IDisposable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.Core.Collections Assembly: fwt.core.dll Syntax public struct VersionNativeParallelHashMap<TKey, TItem> : IDisposable where TKey : unmanaged, IEquatable<TKey> where TItem : unmanaged Type Parameters Name Description TKey Type of key in a HashMap TItem Type of value in a HashMap Fields Values The actual hash map that stores the key-value pairs. Declaration public NativeParallelHashMap<TKey, TItem> Values Field Value Type Description NativeParallelHashMap<TKey, TItem> Version Version of the map. Incremented whenever the map is modified. Declaration public long Version Field Value Type Description long Properties Capacity Declaration public int Capacity { get; set; } Property Value Type Description int IsCreated Declaration public bool IsCreated { get; } Property Value Type Description bool IsDirty Declaration public bool IsDirty { get; } Property Value Type Description bool this[TKey] Declaration public TItem this[TKey key] { get; set; } Parameters Type Name Description TKey key Property Value Type Description TItem Length Declaration public int Length { get; } Property Value Type Description int Methods Clear() Declaration public void Clear() Dispose() Declaration public void Dispose() Init(int, Allocator) Declaration public void Init(int capacity, Allocator allocator) Parameters Type Name Description int capacity Allocator allocator MarkDirty() Declaration public void MarkDirty() ResetDirty() Declaration public void ResetDirty() Implements IDisposable Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.Collections.VersionNativeParallelHashSet-1.html": {
    "href": "api/Fwt.Core.Collections.VersionNativeParallelHashSet-1.html",
    "title": "Struct VersionNativeParallelHashSet<TItem> | Hex Terrains",
    "summary": "Struct VersionNativeParallelHashSet<TItem> Wrapper for NativeParallelHashSet with versioning. Whenever the hash set is modified, the version is incremented. Implements IDisposable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.Core.Collections Assembly: fwt.core.dll Syntax public struct VersionNativeParallelHashSet<TItem> : IDisposable where TItem : unmanaged, IEquatable<TItem> Type Parameters Name Description TItem Value of the HashSet Fields Values The hash set itself. Declaration public NativeParallelHashSet<TItem> Values Field Value Type Description NativeParallelHashSet<TItem> Version Version of the hash set. Whenever the hash set is modified, this value is incremented. Declaration public long Version Field Value Type Description long Properties Capacity Declaration public int Capacity { get; set; } Property Value Type Description int IsCreated Declaration public bool IsCreated { get; } Property Value Type Description bool IsDirty Declaration public bool IsDirty { get; } Property Value Type Description bool Methods Clear() Declaration public void Clear() Dispose() Declaration public void Dispose() Init(int, Allocator) Declaration public void Init(int capacity, Allocator allocator) Parameters Type Name Description int capacity Allocator allocator MarkDirty() Declaration public void MarkDirty() Remove(TItem) Declaration public bool Remove(TItem item) Parameters Type Name Description TItem item Returns Type Description bool ResetDirty() Declaration public void ResetDirty() Implements IDisposable Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.Collections.VersionNativeParallelMultiHashMap-2.html": {
    "href": "api/Fwt.Core.Collections.VersionNativeParallelMultiHashMap-2.html",
    "title": "Struct VersionNativeParallelMultiHashMap<TKey, TItem> | Hex Terrains",
    "summary": "Struct VersionNativeParallelMultiHashMap<TKey, TItem> Wrapper for NativeParallelMultiHashMap with versioning. Whenever the map is modified, the version is incremented. Implements IDisposable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.Core.Collections Assembly: fwt.core.dll Syntax public struct VersionNativeParallelMultiHashMap<TKey, TItem> : IDisposable where TKey : unmanaged, IEquatable<TKey> where TItem : unmanaged Type Parameters Name Description TKey Type of keys of MultiHashMap TItem Type of value of MultiHashMap Fields Values The actual multi hash map. Declaration public NativeParallelMultiHashMap<TKey, TItem> Values Field Value Type Description NativeParallelMultiHashMap<TKey, TItem> Version Version of the map. Incremented whenever the map is modified. Declaration public long Version Field Value Type Description long Properties Capacity Declaration public int Capacity { get; set; } Property Value Type Description int IsCreated Declaration public bool IsCreated { get; } Property Value Type Description bool IsDirty Declaration public bool IsDirty { get; } Property Value Type Description bool Length Declaration public int Length { get; } Property Value Type Description int Methods Clear() Declaration public void Clear() Dispose() Declaration public void Dispose() Init(int, Allocator) Declaration public void Init(int capacity, Allocator allocator) Parameters Type Name Description int capacity Allocator allocator MarkDirty() Declaration public void MarkDirty() ResetDirty() Declaration public void ResetDirty() Implements IDisposable Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.Collections.html": {
    "href": "api/Fwt.Core.Collections.html",
    "title": "Namespace Fwt.Core.Collections | Hex Terrains",
    "summary": "Namespace Fwt.Core.Collections Structs FixedArray1024<TData> A fixed size array of 1024 elements. FixedArray128<TData> A fixed size array of 128 elements. FixedArray12<TData> A fixed size array of 12 elements. FixedArray16<TData> A fixed size array of 16 elements. FixedArray24<TData> A fixed size array of 24 elements. FixedArray256<TData> A fixed size array of 256 elements. FixedArray32<TData> A fixed size array of 32 elements. FixedArray4<TData> A fixed size array of 4 elements. FixedArray512<TData> A fixed size array of 512 elements. FixedArray64<TData> A fixed size array of 64 elements. FixedArray8<TData> A fixed size array of 8 elements. FixedList1024<TData> Array with a fixed size of 1024 elements. FixedList128<TData> A fixed size list of 128 elements. FixedList12<TData> A fixed size list of 12 elements. FixedList16<TData> A fixed size list of 16 elements. FixedList24<TData> A fixed size list of 24 elements. FixedList256<TData> A fixed size list of 256 elements. FixedList32<TData> A fixed size list of 32 elements. FixedList4<TData> A fixed size list of 4 elements. FixedList512<TData> Array with fixed size of 512 elements. FixedList64<TData> Array with fixed size of 64 elements. FixedList8<TData> Array with fixed size of 8 elements. FragmentableList<TItem> Holds two lists. Items list holds values. EmptySlots holds vacant indexes, so when you add item through Add() function, it places it into Items list in the vacant slot (if any). When you call RemoveAt() item, it makes the given itemIndex vacant to be filled later with Add() function FragmentableNativeList<TItem> Holds two lists. Items list holds values. EmptySlots holds vacant indexes, so when you add item through Add() function, it places it into Items list in the vacant slot (if any). When you call RemoveAt() item, it makes the given itemIndex vacant to be filled later with Add() function VersionFragmentableList<TItem> Wrapper for FragmentableList with versioning. Whenever the list is modified, the version is incremented. VersionFragmentableNativeList<TItem> Wrapper for FragmentableNativeList with versioning. Whenever the list is modified, the version is incremented. VersionList<TItem> Wrapper for Array with versioning. Whenever the list is modified, the version is incremented. VersionNativeArray<TItem> Wrapper for NativeArray with versioning. Whenever the array is modified, the version is incremented. VersionNativeHashMap<TKey, TItem> Wrapper for NativeHashMap with versioning. Whenever the map is modified, the version is incremented. VersionNativeHashSet<TValue> Wrapper for NativeHashSet with versioning. Whenever the hash set is modified, the version is incremented. VersionNativeList<TItem> Wrapper for NativeList with versioning. Whenever the list is modified, the version is incremented. VersionNativeParallelHashMap<TKey, TItem> Wrapper for NativeParallelHashMap with versioning. Whenever the map is modified, the version is incremented. VersionNativeParallelHashSet<TItem> Wrapper for NativeParallelHashSet with versioning. Whenever the hash set is modified, the version is incremented. VersionNativeParallelMultiHashMap<TKey, TItem> Wrapper for NativeParallelMultiHashMap with versioning. Whenever the map is modified, the version is incremented."
  },
  "api/Fwt.Core.Component_SaveCameraImage.html": {
    "href": "api/Fwt.Core.Component_SaveCameraImage.html",
    "title": "Class Component_SaveCameraImage | Hex Terrains",
    "summary": "Class Component_SaveCameraImage Inheritance object Object Component Behaviour MonoBehaviour Component_SaveCameraImage Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Fwt.Core Assembly: fwt.core.dll Syntax public class Component_SaveCameraImage : MonoBehaviour Fields Camera Declaration public Camera Camera Field Value Type Description Camera ImageDepth Declaration public int ImageDepth Field Value Type Description int ImageSize Declaration public int2 ImageSize Field Value Type Description int2 TextureFormat Declaration public RenderTextureFormat TextureFormat Field Value Type Description RenderTextureFormat Methods CaptureAndSaveScreenshot() Declaration [ContextMenu(\"Capture Screenshot\")] public void CaptureAndSaveScreenshot() Extension Methods Extensions_UnityObject.SmartDestroy<TObject>(TObject) Extensions_UnityObject.SmartDisableGameObject<TObject>(TObject) Extensions_UnityObject.SmartEnableGameObject<TObject>(TObject) HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.CurveMath.html": {
    "href": "api/Fwt.Core.CurveMath.html",
    "title": "Class CurveMath | Hex Terrains",
    "summary": "Class CurveMath Inheritance object CurveMath Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.Core Assembly: fwt.core.dll Syntax [BurstCompile] public static class CurveMath Methods Bezier3(float3, float3, float3, float) Declaration public static float3 Bezier3(float3 pointA, float3 pointB, float3 pointC, float time) Parameters Type Name Description float3 pointA float3 pointB float3 pointC float time Returns Type Description float3 Bezier4(float3, float3, float3, float3, float) Declaration public static float3 Bezier4(float3 a1, float3 c1, float3 c2, float3 a2, float t) Parameters Type Name Description float3 a1 float3 c1 float3 c2 float3 a2 float t Returns Type Description float3"
  },
  "api/Fwt.Core.CustomLogger.html": {
    "href": "api/Fwt.Core.CustomLogger.html",
    "title": "Class CustomLogger | Hex Terrains",
    "summary": "Class CustomLogger Inheritance object CustomLogger Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.Core Assembly: fwt.core.dll Syntax public class CustomLogger Methods Log(string, params object[]) Declaration public static void Log(string message, params object[] args) Parameters Type Name Description string message object[] args LogError(Exception) Declaration public static void LogError(Exception ex) Parameters Type Name Description Exception ex LogError(string, params object[]) Declaration public static void LogError(string message, params object[] args) Parameters Type Name Description string message object[] args LogErrorFormat(string, params object[]) Declaration public static void LogErrorFormat(string message, params object[] args) Parameters Type Name Description string message object[] args LogFormat(string, params object[]) Declaration public static void LogFormat(string message, params object[] args) Parameters Type Name Description string message object[] args LogWarning(string, params object[]) Declaration public static void LogWarning(string message, params object[] args) Parameters Type Name Description string message object[] args LogWarningFormat(string, params object[]) Declaration public static void LogWarningFormat(string message, params object[] args) Parameters Type Name Description string message object[] args Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.DataLayers.ArrayChunkedDataLayer-1.html": {
    "href": "api/Fwt.Core.DataLayers.ArrayChunkedDataLayer-1.html",
    "title": "Class ArrayChunkedDataLayer<TItem> | Hex Terrains",
    "summary": "Class ArrayChunkedDataLayer<TItem> Base class for data layers that use array as a data storage and track changes per chunk. Inheritance object DataLayer ChunkedDataLayer ArrayChunkedDataLayer<TItem> Implements IDisposable ICommitChanges IListDataLayer<TItem> Inherited Members ChunkedDataLayer.CellsGridSize ChunkedDataLayer.ChunkGridSize ChunkedDataLayer.ChunkSize ChunkedDataLayer.IsConnectedHorizontally ChunkedDataLayer.IsConnectedVertically ChunkedDataLayer.ChunksCount ChunkedDataLayer.ChunkDirtyGrid ChunkedDataLayer.DirtyChunks ChunkedDataLayer.SetCellDirty(int) ChunkedDataLayer.SetCellDirty(int, bool) ChunkedDataLayer.GetIsChunkDirty(int) ChunkedDataLayer.SetChunkDirty(int, bool) ChunkedDataLayer.SetAllChunksDirty(bool) ChunkedDataLayer.SetAllChunksDirtyAsync(bool, JobHandle) ChunkedDataLayer.SetAllChunksDirty() ChunkedDataLayer.ClearAllChunksDirty() ChunkedDataLayer.MergeChunkDirtyGrids(ChunkedDataLayer, JobHandle) ChunkedDataLayer.MergeChunkDirtyGrids(ChunkedDataLayer, ChunkedDataLayer, JobHandle) ChunkedDataLayer.MergeChunkDirtyGrids(ChunkedDataLayer, ChunkedDataLayer, ChunkedDataLayer, JobHandle) ChunkedDataLayer.MergeChunkDirtyGrids(ChunkedDataLayer, ChunkedDataLayer, ChunkedDataLayer, ChunkedDataLayer, JobHandle) ChunkedDataLayer.GetChunkIndexByCellIndex(int) ChunkedDataLayer.GetChunkCoord(int2) ChunkedDataLayer.GetChunkCoord(int) ChunkedDataLayer.GetChunkIndex(int2) ChunkedDataLayer.GetCellCoord(int) ChunkedDataLayer.GetCellIndex(int2) ChunkedDataLayer.ResolveCellCoord(int2) ChunkedDataLayer.ResolveChunkCoord(int2) ChunkedDataLayer.Dispose() DataLayer.IsDisposableItems DataLayer._readJobsDependency DataLayer.ReadDependency DataLayer._writeJobsDependency DataLayer.WriteDependency DataLayer.CombinedDependency DataLayer._isDirty DataLayer.IsDirty DataLayer._version DataLayer.Version DataLayer.AddReadDependency(JobHandle) DataLayer.AddWriteDependency(JobHandle) DataLayer.SetReadDependency(JobHandle) DataLayer.SetWriteDependency(JobHandle) DataLayer.PrepareToWrite() DataLayer.PrepareToRead() DataLayer.OpenToRead() DataLayer.OpenToWrite() DataLayer.CompleteReadJobs() DataLayer.CompleteWriteJobs() DataLayer.CompleteAllJobs() DataLayer.CommitChanges() DataLayer.SetDirty(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.Core.DataLayers Assembly: fwt.core.dll Syntax public abstract class ArrayChunkedDataLayer<TItem> : ChunkedDataLayer, IDisposable, ICommitChanges, IListDataLayer<TItem> Type Parameters Name Description TItem type of item stored in a layer Fields _data Declaration protected TItem[] _data Field Value Type Description TItem[] Properties Data Container for layer data. Declaration public TItem[] Data { get; } Property Value Type Description TItem[] Length The length of the data layer. Declaration public override int Length { get; } Property Value Type Description int Overrides DataLayer.Length Methods DisposeAllItems() Disposes all items in the data layer by calling DisposeDataItem() on each item DisposeDataItem(TItem) Declaration public override void DisposeAllItems() Overrides DataLayer.DisposeAllItems() DisposeDataItem(TItem) Disposes item in the data layer if it is IDisposable. Declaration protected virtual void DisposeDataItem(TItem item) Parameters Type Name Description TItem item DisposeExcessItems(int) Disposes items from cells with index geater than layerSize Declaration public virtual void DisposeExcessItems(int layerSize) Parameters Type Name Description int layerSize amount of items to keep, dispose the rest GetData(int) Returns data from cell at provided index Declaration public virtual TItem GetData(int index) Parameters Type Name Description int index cell index to get data from Returns Type Description TItem data found in a cell at provided index Init(int) Initializes/Reinitializes the data layer Declaration public override void Init(int layerSize) Parameters Type Name Description int layerSize cells count int the data layer Overrides ChunkedDataLayer.Init(int) SetData(int, TItem) Sets data in cell at provided index. Declaration public virtual bool SetData(int index, TItem data) Parameters Type Name Description int index cell index to put data into TItem data data to put into the cell at provided index Returns Type Description bool true if data was set TryGetData(int, out TItem) Tries to get data from cell at provided index. Declaration public virtual bool TryGetData(int index, out TItem data) Parameters Type Name Description int index cell index to get data from TItem data data found in the cell at provided index Returns Type Description bool true if data was found TrySetData(int, TItem) Declaration public virtual bool TrySetData(int index, TItem data) Parameters Type Name Description int index cell index to put data into TItem data data to put into the cell at provided index Returns Type Description bool true if data was set Implements IDisposable ICommitChanges IListDataLayer<TItem> Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.DataLayers.ArrayDataLayer-1.html": {
    "href": "api/Fwt.Core.DataLayers.ArrayDataLayer-1.html",
    "title": "Class ArrayDataLayer<TItem> | Hex Terrains",
    "summary": "Class ArrayDataLayer<TItem> Base class for all data layers that use an array as a data container. Inheritance object DataLayer ArrayDataLayer<TItem> Implements IDisposable ICommitChanges IListDataLayer<TItem> Inherited Members DataLayer.IsDisposableItems DataLayer._readJobsDependency DataLayer.ReadDependency DataLayer._writeJobsDependency DataLayer.WriteDependency DataLayer.CombinedDependency DataLayer._isDirty DataLayer.IsDirty DataLayer._version DataLayer.Version DataLayer.AddReadDependency(JobHandle) DataLayer.AddWriteDependency(JobHandle) DataLayer.SetReadDependency(JobHandle) DataLayer.SetWriteDependency(JobHandle) DataLayer.PrepareToWrite() DataLayer.PrepareToRead() DataLayer.OpenToRead() DataLayer.OpenToWrite() DataLayer.CompleteReadJobs() DataLayer.CompleteWriteJobs() DataLayer.CompleteAllJobs() DataLayer.CommitChanges() DataLayer.SetDirty(bool) DataLayer.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.Core.DataLayers Assembly: fwt.core.dll Syntax public abstract class ArrayDataLayer<TItem> : DataLayer, IDisposable, ICommitChanges, IListDataLayer<TItem> Type Parameters Name Description TItem Item type to store in the data layer Fields _data Declaration protected TItem[] _data Field Value Type Description TItem[] Properties Data The data array that stores the items in the layer. Declaration public TItem[] Data { get; } Property Value Type Description TItem[] Length The length of the data layer. Declaration public override int Length { get; } Property Value Type Description int Overrides DataLayer.Length Methods DisposeAllItems() Disposes all items in the data layer. Calls DisposeDataItem(item) for each item in the data array. Declaration public override void DisposeAllItems() Overrides DataLayer.DisposeAllItems() DisposeDataItem(TItem) Disposes the provided item if it is IDisposable. Declaration protected virtual void DisposeDataItem(TItem item) Parameters Type Name Description TItem item DisposeExcessItems(int) Disposes every item in the data layer that is beyond the specified layer size. Usually used when layer is resized and there was items in the data layer that are not needed anymore and IsDisposableItems == true. Declaration public virtual void DisposeExcessItems(int layerSize) Parameters Type Name Description int layerSize GetData(int) Gets the data at the specified index. Declaration public virtual TItem GetData(int index) Parameters Type Name Description int index index of cell to get data from Returns Type Description TItem data from the cell at provided index Init(int, Allocator) Initializes/Reinitializes the data layer with the specified size. Declaration public virtual void Init(int layerSize, Allocator allocator) Parameters Type Name Description int layerSize size of the data layer (cells count) Allocator allocator allocator to create internal collections with (used in classes inherited from this data layer) SetData(int, TItem) Sets the data to the cell at the specified index. Declaration public virtual bool SetData(int index, TItem data) Parameters Type Name Description int index index of cell to put data into TItem data data to put in a cell at provided index Returns Type Description bool TryGetData(int, out TItem) Tries to get the data at the specified index. returns false if index is out of the bounds and data is set to default value. Declaration public virtual bool TryGetData(int index, out TItem data) Parameters Type Name Description int index cell index to get data from TItem data found value if index is inside the bounds. Default value if index is out of bounds Returns Type Description bool TrySetData(int, TItem) Tries to set the data at the specified index. Returns true if data was set. Returns false if index is out of the bounds. Declaration public virtual bool TrySetData(int index, TItem data) Parameters Type Name Description int index cell index to put data into TItem data data to put in the cell at provided index Returns Type Description bool true if data was set, otherwise - false Implements IDisposable ICommitChanges IListDataLayer<TItem> Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.DataLayers.ChunkedDataLayer.html": {
    "href": "api/Fwt.Core.DataLayers.ChunkedDataLayer.html",
    "title": "Class ChunkedDataLayer | Hex Terrains",
    "summary": "Class ChunkedDataLayer Base class for all chunked data layers (DataLayer). Chunked data layer is a container for data that tracks changes per chunk. When intializing the data layer, it creates a grid of chunks. Each cell in this grid is a dirty flag for the chunk. When a cell is modified, the corresponding chunk is marked as dirty and also the whole layer is marked as dirty. The layer contains a dirty flags per chunk in ChunkDirtyGrid NativeList. The layer contains indexes of dirty chunks in DirtyChunks NativeParallelHashSet. To divide a layer into chunks, the layer must be initialized with a size of the layer (width and height) and a size of the chunks. Inheritance object DataLayer ChunkedDataLayer ArrayChunkedDataLayer<TItem> ListChunkedDataLayer<TItem> NativeArrayChunkedDataLayer<TItem> NativeListChunkedDataLayer<TItem> Implements IDisposable ICommitChanges Inherited Members DataLayer.IsDisposableItems DataLayer._readJobsDependency DataLayer.ReadDependency DataLayer._writeJobsDependency DataLayer.WriteDependency DataLayer.CombinedDependency DataLayer._isDirty DataLayer.IsDirty DataLayer._version DataLayer.Version DataLayer.Length DataLayer.AddReadDependency(JobHandle) DataLayer.AddWriteDependency(JobHandle) DataLayer.SetReadDependency(JobHandle) DataLayer.SetWriteDependency(JobHandle) DataLayer.PrepareToWrite() DataLayer.PrepareToRead() DataLayer.OpenToRead() DataLayer.OpenToWrite() DataLayer.CompleteReadJobs() DataLayer.CompleteWriteJobs() DataLayer.CompleteAllJobs() DataLayer.CommitChanges() DataLayer.SetDirty(bool) DataLayer.DisposeAllItems() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.Core.DataLayers Assembly: fwt.core.dll Syntax public abstract class ChunkedDataLayer : DataLayer, IDisposable, ICommitChanges Properties CellsGridSize Width and Height of the grid of cells. Declaration public abstract int2 CellsGridSize { get; } Property Value Type Description int2 ChunkDirtyGrid The grid of dirty flags for the chunks. Index in this list = chunk index. Declaration public NativeList<bool> ChunkDirtyGrid { get; } Property Value Type Description NativeList<bool> ChunkGridSize Width and Height of the grid of chunks. Declaration public abstract int2 ChunkGridSize { get; } Property Value Type Description int2 ChunkSize Width and Height of the chunk in cells. Declaration public abstract int2 ChunkSize { get; } Property Value Type Description int2 ChunksCount Returns the number of chunks in the layer. Declaration public virtual int ChunksCount { get; } Property Value Type Description int DirtyChunks The hash set of dirty chunks. Value = chunk index. Declaration public NativeParallelHashSet<int> DirtyChunks { get; } Property Value Type Description NativeParallelHashSet<int> IsConnectedHorizontally True if left and right edges of the chunk are connected (like in civilization games). Needed for wrapping the grid. If SetCellDirty(cellIndex, checkEdges) is called with checkEdges == true, the chunk of the cell is marked dirty and also all adjacent chunks are also marked dirty. So if the left edge is dirty, the right edge is also dirty. Declaration public abstract bool IsConnectedHorizontally { get; } Property Value Type Description bool IsConnectedVertically True if top and bottom edges of the chunk are connected (like in civilization games). Needed for wrapping the grid. If SetCellDirty(cellIndex, checkEdges) is called with checkEdges == true, the chunk of the cell is marked dirty and also all adjacent chunks are also marked dirty. So if the top edge is dirty, the bottom edge is also dirty. Declaration public abstract bool IsConnectedVertically { get; } Property Value Type Description bool Methods ClearAllChunksDirty() Clears dirty flag for all chunks in the layer immediately. Declaration public virtual void ClearAllChunksDirty() Dispose() Disposes the layer and calls DisposeAllItems() under the hood Declaration public override void Dispose() Overrides DataLayer.Dispose() GetCellCoord(int) Returns the cell coordinate (in a cells grid) for the provided cell index. Declaration protected virtual int2 GetCellCoord(int cellIndex) Parameters Type Name Description int cellIndex Cell index to calculate a cell coordinate for Returns Type Description int2 Coordinate of the cell with provided cell index (in a cells grid) GetCellIndex(int2) Returns the cell index for the provided cell coordinate. Declaration protected virtual int GetCellIndex(int2 cellCoord) Parameters Type Name Description int2 cellCoord Coordinate of the cell to calculate a cell index for Returns Type Description int Cell index (in a cells grid) of the cell at provided coordinate GetChunkCoord(int) Returns the chunk coordinate (in a chunks grid) for the provided chunk index. Declaration protected virtual int2 GetChunkCoord(int chunkIndex) Parameters Type Name Description int chunkIndex Chunk index to calculate a chunk coordinate for Returns Type Description int2 GetChunkCoord(int2) Returns the chunk coordinate (in a chunks grid) for the provided cell coordinate. Declaration protected virtual int2 GetChunkCoord(int2 cellCoord) Parameters Type Name Description int2 cellCoord Cell coordinate to calculate a chunk coordinate for Returns Type Description int2 Chunk coordinate of the cell with provided coordinate GetChunkIndex(int2) Returns the chunk index for the provided chunk coordinate. Declaration protected virtual int GetChunkIndex(int2 chunkCoord) Parameters Type Name Description int2 chunkCoord Chunk coordinate (in a chunks grid) to calculate a chunk index for Returns Type Description int Chunk index of the chunk at provided chunk coordinate (in a chunks grid) GetChunkIndexByCellIndex(int) Returns the chunk index for the cell index. Declaration protected virtual int GetChunkIndexByCellIndex(int cellIndex) Parameters Type Name Description int cellIndex cell index to calculate a chunk index for Returns Type Description int chunk index of the cell with provided cell index GetIsChunkDirty(int) Returns true if the chunk with provided index is dirty. Declaration public virtual bool GetIsChunkDirty(int chunkIndex) Parameters Type Name Description int chunkIndex Returns Type Description bool Init(int) Initializes/Reinitializes the layer with a size of the layer (cells count) and a size of the chunks. Declaration public virtual void Init(int layerSize) Parameters Type Name Description int layerSize Amount of items (cells) in the data layer MergeChunkDirtyGrids(ChunkedDataLayer, ChunkedDataLayer, ChunkedDataLayer, ChunkedDataLayer, JobHandle) Merges dirty chunks data with respective dirty chunks data from other layers. other layers must be the same size as this layer. Declaration public virtual JobHandle MergeChunkDirtyGrids(ChunkedDataLayer other1, ChunkedDataLayer other2, ChunkedDataLayer other3, ChunkedDataLayer other4, JobHandle inputDeps) Parameters Type Name Description ChunkedDataLayer other1 ChunkedDataLayer other2 ChunkedDataLayer other3 ChunkedDataLayer other4 JobHandle inputDeps Returns Type Description JobHandle MergeChunkDirtyGrids(ChunkedDataLayer, ChunkedDataLayer, ChunkedDataLayer, JobHandle) Merges dirty chunks data with respective dirty chunks data from other layers. other layers must be the same size as this layer. Declaration public virtual JobHandle MergeChunkDirtyGrids(ChunkedDataLayer other1, ChunkedDataLayer other2, ChunkedDataLayer other3, JobHandle inputDeps) Parameters Type Name Description ChunkedDataLayer other1 ChunkedDataLayer other2 ChunkedDataLayer other3 JobHandle inputDeps Returns Type Description JobHandle MergeChunkDirtyGrids(ChunkedDataLayer, ChunkedDataLayer, JobHandle) Merges dirty chunks data with respective dirty chunks data from other layers. other layers must be the same size as this layer. Declaration public virtual JobHandle MergeChunkDirtyGrids(ChunkedDataLayer other1, ChunkedDataLayer other2, JobHandle inputDeps) Parameters Type Name Description ChunkedDataLayer other1 ChunkedDataLayer other2 JobHandle inputDeps Returns Type Description JobHandle MergeChunkDirtyGrids(ChunkedDataLayer, JobHandle) Merges dirty chunks data with respective dirty chunks data from other layers. other layer must be the same size as this layer. Declaration public virtual JobHandle MergeChunkDirtyGrids(ChunkedDataLayer other1, JobHandle inputDeps) Parameters Type Name Description ChunkedDataLayer other1 JobHandle inputDeps Returns Type Description JobHandle ResolveCellCoord(int2) Resolves the cell coordinate (in a cells grid) for the provided cell coordinate taking in account if the grid is connected horizontally and/or vertically. If the edges of the grid are not connected, returns the cell coordinate as is. Declaration protected virtual int2 ResolveCellCoord(int2 cellCoord) Parameters Type Name Description int2 cellCoord Raw cell coordinate (for grids with connected edges may be off bounds) Returns Type Description int2 cell coordinate inside the cells grid bounds or raw cell coordinate if grid edges are not connected. ResolveChunkCoord(int2) Resolves the chunk coordinate (in a chunks grid) for the provided chunk coordinate taking in account if the grid is connected horizontally and/or vertically. If the edges of the grid are not connected, returns the chunk coordinate as is. Declaration protected virtual int2 ResolveChunkCoord(int2 chunkCoord) Parameters Type Name Description int2 chunkCoord Raw chunk coordinate (for grids with connected edges may be off bounds) Returns Type Description int2 chunk coordinate inside the chunks grid bounds or raw chunk coordinate if grid edges are not connected SetAllChunksDirty() Sets dirty flag for all chunks in the layer immediately. Declaration public virtual void SetAllChunksDirty() SetAllChunksDirty(bool) Sets dirty flag for all chunks in the layer. If isDirty is true, all chunks are marked dirty and added to the DirtyChunks hash set. If isDirty is false, marks all chunks not dirty and clears the DirtyChunks hash set. Declaration public virtual void SetAllChunksDirty(bool isDirty) Parameters Type Name Description bool isDirty IsDirty value to set for all chunks SetAllChunksDirtyAsync(bool, JobHandle) Sets dirty flag for all chunks in the layer in a corresponding job. Returns a job handle that can be used to wait for the job to complete. Declaration public virtual JobHandle SetAllChunksDirtyAsync(bool isDirty, JobHandle jobHandle) Parameters Type Name Description bool isDirty dirty value to set for all chunks JobHandle jobHandle job handle to put as dependency to FillDirtyChunksJob Returns Type Description JobHandle SetCellDirty(int) Sets the cell dirty and marks the chunk as dirty. Does not mark adjucent chunks as dirty, only marks the affected chunk dirty. Declaration public virtual bool SetCellDirty(int cellIndex) Parameters Type Name Description int cellIndex Returns Type Description bool SetCellDirty(int, bool) Sets the cell dirty and marks the chunk as dirty. Allows to mark adjucent chunks dirty. If the cell is on the edge of the chunk, the chunks adjacent to the cell are also marked dirty. If IsConnectedHorizontally or IsConnectedVertically is true, the respective chunks on the opposite side of the grid are also marked dirty. Declaration public virtual bool SetCellDirty(int cellIndex, bool checkEdges) Parameters Type Name Description int cellIndex bool checkEdges Returns Type Description bool SetChunkDirty(int, bool) Sets the chunk dirty flag. Returns the result of operation, true if the value was set, false otherwise Declaration public virtual bool SetChunkDirty(int chunkIndex, bool isDirty) Parameters Type Name Description int chunkIndex Index of the chunk to set a dirty flag for bool isDirty If true, marks a chunk dirty, adds the chunk index to the DirtyChunks hash set. If false - clears the dirty flag and removes the chunk id from the DirtyChunks set Returns Type Description bool True if value was set. Implements IDisposable ICommitChanges Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.DataLayers.ClearNativeParallelHashSetJob-1.html": {
    "href": "api/Fwt.Core.DataLayers.ClearNativeParallelHashSetJob-1.html",
    "title": "Struct ClearNativeParallelHashSetJob<TItem> | Hex Terrains",
    "summary": "Struct ClearNativeParallelHashSetJob<TItem> Job that clears the dirty chunks hash set. Used to schedule this operation after all jobs that read/write to the data layer are completed Implements IJob Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.Core.DataLayers Assembly: fwt.core.dll Syntax public struct ClearNativeParallelHashSetJob<TItem> : IJob where TItem : unmanaged, IEquatable<TItem> Type Parameters Name Description TItem Fields Items Declaration [WriteOnly] public NativeParallelHashSet<TItem> Items Field Value Type Description NativeParallelHashSet<TItem> Methods Execute() Implement this method to perform work on a worker thread. Declaration public void Execute() Implements Unity.Jobs.IJob Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.DataLayers.DataLayer.html": {
    "href": "api/Fwt.Core.DataLayers.DataLayer.html",
    "title": "Class DataLayer | Hex Terrains",
    "summary": "Class DataLayer Base class for all data layers. Data Layer is a container for data that can be read and written to. Data Layer allows for parallel reading and writing of data. It tracks dependencies for reading and writing jobs. If you want to read data immediately, call DataLayer.OpenToRead() before reading. If you want to write data immediately, call DataLayer.OpenToWrite() before writing. If you want to schedule a job that reads data, call DataLayer.PrepareToRead() before scheduling the job (returns a JobHandle to use as dependency in your job) If you want to schedule a job that writes data, call DataLayer.PrepareToWrite() before scheduling the job (returns a JobHandle to use as dependency in your job) Inheritance object DataLayer ArrayDataLayer<TItem> ChunkedDataLayer DictionaryDataLayer<TKey, TItem> HashSetDataLayer<TItem> ListDataLayer<TItem> NativeArrayDataLayer<TItem> NativeHashMapDataLayer<TKey, TItem> NativeHashSetDataLayer<TItem> NativeListDataLayer<TItem> NativeParallelHashMapDataLayer<TKey, TItem> NativeParallelHashSetDataLayer<TItem> NativeParallelMultiHashMapDataLayer<TKey, TItem> Implements IDisposable ICommitChanges Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.Core.DataLayers Assembly: fwt.core.dll Syntax public abstract class DataLayer : IDisposable, ICommitChanges Fields _isDirty Declaration protected bool _isDirty Field Value Type Description bool _readJobsDependency Declaration protected JobHandle _readJobsDependency Field Value Type Description JobHandle _version Declaration protected long _version Field Value Type Description long _writeJobsDependency Declaration protected JobHandle _writeJobsDependency Field Value Type Description JobHandle Properties CombinedDependency Returns a combined (Read+Write) dependency Declaration public JobHandle CombinedDependency { get; } Property Value Type Description JobHandle IsDirty True if the layer has been modified since the last time the flag was removed. To set a flag call SetDirty(isDirty) of the layer. Declaration public bool IsDirty { get; } Property Value Type Description bool IsDisposableItems If true, means when layer is resized or disposed, all items that are removed will be disposed (see nested classes description for details as the process may be different from layer to layer) Declaration public abstract bool IsDisposableItems { get; } Property Value Type Description bool Length Returns the number of items in the layer. Declaration public abstract int Length { get; } Property Value Type Description int ReadDependency Returns a dependency that must be completed before reading from the layer (Read dependency) Declaration public JobHandle ReadDependency { get; } Property Value Type Description JobHandle Version Every time the layer is set isDirty, the version is incremented. This allows to track changes in the layer and to invalidate caches that depend on the layer. If you see that the version is the same as your cached version, you can skip the update. Declaration public long Version { get; } Property Value Type Description long WriteDependency Returns a dependency that must be completed before writing to the layer (Write dependency) Declaration public JobHandle WriteDependency { get; } Property Value Type Description JobHandle Methods AddReadDependency(JobHandle) Adds a read dependency to the layer. If you schedule a job that reads from the layer, call this method with JobHandle of your job as a parameter. Declaration public virtual JobHandle AddReadDependency(JobHandle dependency) Parameters Type Name Description JobHandle dependency Read data JobHandle to be added to the ReadDependency Returns Type Description JobHandle AddWriteDependency(JobHandle) Adds a write dependency to the layer. If you schedule a job that writes to the layer, call this method with JobHandle of your job as a parameter. Declaration public virtual JobHandle AddWriteDependency(JobHandle dependency) Parameters Type Name Description JobHandle dependency Write data JobHandle to be added to the WriteDependency Returns Type Description JobHandle CommitChanges() Sets the isDirty flag to true and increments the version. Call this function after you have modified the layer and want to mark the layer isDirty. Declaration public virtual void CommitChanges() CompleteAllJobs() Completes all reading and writing jobs. Declaration public virtual void CompleteAllJobs() CompleteReadJobs() Completes all reading jobs. Declaration public virtual void CompleteReadJobs() CompleteWriteJobs() Completes all writing jobs. Declaration public virtual void CompleteWriteJobs() Dispose() Completes all jobs and disposes the layer. If IsDisposableItems is true, all items in the layer will be disposed. Declaration public virtual void Dispose() DisposeAllItems() Disposes all items in the layer. Called on Dispose() if IsDisposableItems is true. Declaration public abstract void DisposeAllItems() OpenToRead() Completes all writing jobs. Call this method if you want to read from the layer immediately. Declaration public virtual void OpenToRead() OpenToWrite() Completes all reading and writing jobs. Call this method if you want to write to the layer immediately. Declaration public virtual void OpenToWrite() PrepareToRead() Returns a dependency that must be completed before reading from the layer (Write dependency) Declaration public virtual JobHandle PrepareToRead() Returns Type Description JobHandle PrepareToWrite() Returns a dependency that must be completed before writing to the layer (Read and Write dependencies combined) Declaration public virtual JobHandle PrepareToWrite() Returns Type Description JobHandle SetDirty(bool) Sets the isDirty flag. If isDirty is true, the version is incremented. Declaration public virtual void SetDirty(bool isDirty) Parameters Type Name Description bool isDirty value to set a dirty flag to SetReadDependency(JobHandle) Ovewrites a read dependency with a provided one. Declaration public virtual void SetReadDependency(JobHandle dependency) Parameters Type Name Description JobHandle dependency JobHandle to ovewrite the ReadDependency with SetWriteDependency(JobHandle) Overwrites a write dependency with a provided one. Declaration public virtual void SetWriteDependency(JobHandle dependency) Parameters Type Name Description JobHandle dependency JobHandle to overwrite the WriteDependency with Implements IDisposable ICommitChanges Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.DataLayers.DictionaryDataLayer-2.html": {
    "href": "api/Fwt.Core.DataLayers.DictionaryDataLayer-2.html",
    "title": "Class DictionaryDataLayer<TKey, TItem> | Hex Terrains",
    "summary": "Class DictionaryDataLayer<TKey, TItem> Base class for all data layers that use a dictionary as a data structure. Inheritance object DataLayer DictionaryDataLayer<TKey, TItem> Implements IDisposable ICommitChanges Inherited Members DataLayer.IsDisposableItems DataLayer._readJobsDependency DataLayer.ReadDependency DataLayer._writeJobsDependency DataLayer.WriteDependency DataLayer.CombinedDependency DataLayer._isDirty DataLayer.IsDirty DataLayer._version DataLayer.Version DataLayer.AddReadDependency(JobHandle) DataLayer.AddWriteDependency(JobHandle) DataLayer.SetReadDependency(JobHandle) DataLayer.SetWriteDependency(JobHandle) DataLayer.PrepareToWrite() DataLayer.PrepareToRead() DataLayer.OpenToRead() DataLayer.OpenToWrite() DataLayer.CompleteReadJobs() DataLayer.CompleteWriteJobs() DataLayer.CompleteAllJobs() DataLayer.CommitChanges() DataLayer.SetDirty(bool) DataLayer.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.Core.DataLayers Assembly: fwt.core.dll Syntax public abstract class DictionaryDataLayer<TKey, TItem> : DataLayer, IDisposable, ICommitChanges where TKey : IEquatable<TItem> Type Parameters Name Description TKey type of the key in the underlying dictionary TItem type of the item to store as value in the underlying dictionary Fields _data Declaration protected Dictionary<TKey, TItem> _data Field Value Type Description Dictionary<TKey, TItem> Properties Data Container for the data of the layer Declaration public Dictionary<TKey, TItem> Data { get; } Property Value Type Description Dictionary<TKey, TItem> Length Returns the number of items in the layer. Declaration public override int Length { get; } Property Value Type Description int Overrides DataLayer.Length Methods DisposeAllItems() Disposes all items in the data layer by calling DisposeDataItem() for each item. Declaration public override void DisposeAllItems() Overrides DataLayer.DisposeAllItems() DisposeDataItem(TItem) Disposes the data item if it is IDisposable. Declaration protected virtual void DisposeDataItem(TItem item) Parameters Type Name Description TItem item GetData(TKey) Returns the data item at the given key. Declaration public virtual TItem GetData(TKey key) Parameters Type Name Description TKey key key to get data by Returns Type Description TItem data found in the layer by provided key Init(int, Allocator) Initializes/Reinitializes the data layer with a given size. Declaration public virtual void Init(int layerSize, Allocator allocator = Allocator.Persistent) Parameters Type Name Description int layerSize size of the data layer (cells count) Allocator allocator allocator to create internal collections. Used in classes inherited from this data layer SetData(TKey, TItem) Sets the data item at the given key. Declaration public virtual bool SetData(TKey key, TItem value) Parameters Type Name Description TKey key key to put data under TItem value data to put at the cell of provided key Returns Type Description bool TryGetData(TKey, out TItem) Tries to get the data item at the given key. If nothing is found, returns false and sets the value to default. Declaration public virtual bool TryGetData(TKey key, out TItem value) Parameters Type Name Description TKey key key to find data by TItem value data from data layer by provided key or default if nothing found Returns Type Description bool true if data was found, otherwise - false TrySetData(TKey, TItem) Tries to set the data item at the given key. Declaration public virtual bool TrySetData(TKey key, TItem value) Parameters Type Name Description TKey key key to put data under TItem value value to put under the provided key Returns Type Description bool true if value was set Implements IDisposable ICommitChanges Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.DataLayers.FillDirtyChunksJob.html": {
    "href": "api/Fwt.Core.DataLayers.FillDirtyChunksJob.html",
    "title": "Struct FillDirtyChunksJob | Hex Terrains",
    "summary": "Struct FillDirtyChunksJob Job that fills the dirty chunks list with chunk indexes. Implements IJobParallelFor Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.Core.DataLayers Assembly: fwt.core.dll Syntax public struct FillDirtyChunksJob : IJobParallelFor Fields DirtyChunks Declaration [WriteOnly] public NativeParallelHashSet<int>.ParallelWriter DirtyChunks Field Value Type Description NativeParallelHashSet<int>.ParallelWriter Methods Execute(int) Performs work against a specific iteration index. Declaration public void Execute(int index) Parameters Type Name Description int index The index of the Parallel for loop at which to perform work. Implements Unity.Jobs.IJobParallelFor Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.DataLayers.HashSetDataLayer-1.html": {
    "href": "api/Fwt.Core.DataLayers.HashSetDataLayer-1.html",
    "title": "Class HashSetDataLayer<TItem> | Hex Terrains",
    "summary": "Class HashSetDataLayer<TItem> Base class for all data layers that use HashSet as a data structure. Inheritance object DataLayer HashSetDataLayer<TItem> Implements IDisposable ICommitChanges Inherited Members DataLayer.IsDisposableItems DataLayer._readJobsDependency DataLayer.ReadDependency DataLayer._writeJobsDependency DataLayer.WriteDependency DataLayer.CombinedDependency DataLayer._isDirty DataLayer.IsDirty DataLayer._version DataLayer.Version DataLayer.AddReadDependency(JobHandle) DataLayer.AddWriteDependency(JobHandle) DataLayer.SetReadDependency(JobHandle) DataLayer.SetWriteDependency(JobHandle) DataLayer.PrepareToWrite() DataLayer.PrepareToRead() DataLayer.OpenToRead() DataLayer.OpenToWrite() DataLayer.CompleteReadJobs() DataLayer.CompleteWriteJobs() DataLayer.CompleteAllJobs() DataLayer.CommitChanges() DataLayer.SetDirty(bool) DataLayer.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.Core.DataLayers Assembly: fwt.core.dll Syntax public abstract class HashSetDataLayer<TItem> : DataLayer, IDisposable, ICommitChanges where TItem : IEquatable<TItem> Type Parameters Name Description TItem Fields _data Declaration protected HashSet<TItem> _data Field Value Type Description HashSet<TItem> Properties Data Container for the data of the layer Declaration public HashSet<TItem> Data { get; } Property Value Type Description HashSet<TItem> Length Returns the number of items in the layer. Declaration public override int Length { get; } Property Value Type Description int Overrides DataLayer.Length Methods Add(TItem) Adds data to the underlying hash set Declaration public virtual bool Add(TItem value) Parameters Type Name Description TItem value value to add Returns Type Description bool true if data was added Contains(TItem) Checks if the underlying hash set contains the value Declaration public virtual bool Contains(TItem value) Parameters Type Name Description TItem value value to check if layer contains Returns Type Description bool true if data is in the layer, otherwise - false DisposeAllItems() Disposes all items in the underlying hash set by calling DisposeDataItem() method for each item DisposeDataItem(TItem) Declaration public override void DisposeAllItems() Overrides DataLayer.DisposeAllItems() DisposeDataItem(TItem) Disposes provided item if it is IDisposable. Declaration protected virtual void DisposeDataItem(TItem item) Parameters Type Name Description TItem item item to dispose Init(int, Allocator) Initializes/Reinitializes the data layer with a given size. Declaration public virtual void Init(int layerSize, Allocator allocator = Allocator.Persistent) Parameters Type Name Description int layerSize size of the data layer (cells count) Allocator allocator allocator to create internal collections. Used in classes inherited from this data layer Remove(TItem) Removes data from the underlying hash set Declaration public virtual bool Remove(TItem value) Parameters Type Name Description TItem value value to remove from layer Returns Type Description bool true if data was in the data layer SafeAdd(TItem) Checks if the underlying hash set is not null. If hash set is not null, adds the value by calling Add() method Add(TItem). Declaration public virtual bool SafeAdd(TItem value) Parameters Type Name Description TItem value value to add into the underlying hash set Returns Type Description bool true if data was added SafeContains(TItem) Checks if the underlying hash set is not null. If hash set is not null, checks if it contains the value by calling Contains() method Contains(TItem). Declaration public virtual bool SafeContains(TItem value) Parameters Type Name Description TItem value value to check if it is present in the underlying hash set Returns Type Description bool true if data is in the hash set, otherwise - false SafeRemove(TItem) Checks if the underlying hash set is not null. If hash set is not null, removes the value by calling Remove() method Remove(TItem). Declaration public virtual bool SafeRemove(TItem value) Parameters Type Name Description TItem value value to remove from underlying hash set Returns Type Description bool true if data was in a data layer Implements IDisposable ICommitChanges Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.DataLayers.IListDataLayer-1.html": {
    "href": "api/Fwt.Core.DataLayers.IListDataLayer-1.html",
    "title": "Interface IListDataLayer<TItem> | Hex Terrains",
    "summary": "Interface IListDataLayer<TItem> Interface for all the data layers that have length and allows to get/set value. Namespace: Fwt.Core.DataLayers Assembly: fwt.core.dll Syntax public interface IListDataLayer<TItem> Type Parameters Name Description TItem Properties Length The length of the data layer. Declaration int Length { get; } Property Value Type Description int Methods GetData(int) Returns the data at the specified index. Declaration TItem GetData(int index) Parameters Type Name Description int index index to get data at Returns Type Description TItem data in a cell with provided index SetData(int, TItem) Sets the data at the specified index. Marks affected chunk as dirty. Declaration bool SetData(int index, TItem data) Parameters Type Name Description int index index of the cell to put data into TItem data data to put into the cell with provided index Returns Type Description bool true if value was set (not out of the bounds) TryGetData(int, out TItem) Tries to get the data at the specified index. if index is out of the bounds, returns false and data is set to default value. Declaration bool TryGetData(int index, out TItem data) Parameters Type Name Description int index index of cell to get data from TItem data filled with default value if index is out of bounds or contains data from cell with requested index Returns Type Description bool TrySetData(int, TItem) Tries to set the data at the specified index. If index is out of the bounds, returns false. Declaration bool TrySetData(int index, TItem data) Parameters Type Name Description int index index of cell to set data into TItem data data to put into a cell with provided index Returns Type Description bool true if value was set Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.DataLayers.ListChunkedDataLayer-1.html": {
    "href": "api/Fwt.Core.DataLayers.ListChunkedDataLayer-1.html",
    "title": "Class ListChunkedDataLayer<TItem> | Hex Terrains",
    "summary": "Class ListChunkedDataLayer<TItem> Base class for data layers that use Array{T} as a data storage and track changes per chunk. Inheritance object DataLayer ChunkedDataLayer ListChunkedDataLayer<TItem> HexTerrainListChunkedDataLayer<TItem> Implements IDisposable ICommitChanges IListDataLayer<TItem> Inherited Members ChunkedDataLayer.CellsGridSize ChunkedDataLayer.ChunkGridSize ChunkedDataLayer.ChunkSize ChunkedDataLayer.IsConnectedHorizontally ChunkedDataLayer.IsConnectedVertically ChunkedDataLayer.ChunksCount ChunkedDataLayer.ChunkDirtyGrid ChunkedDataLayer.DirtyChunks ChunkedDataLayer.SetCellDirty(int) ChunkedDataLayer.SetCellDirty(int, bool) ChunkedDataLayer.GetIsChunkDirty(int) ChunkedDataLayer.SetChunkDirty(int, bool) ChunkedDataLayer.SetAllChunksDirty(bool) ChunkedDataLayer.SetAllChunksDirtyAsync(bool, JobHandle) ChunkedDataLayer.SetAllChunksDirty() ChunkedDataLayer.ClearAllChunksDirty() ChunkedDataLayer.MergeChunkDirtyGrids(ChunkedDataLayer, JobHandle) ChunkedDataLayer.MergeChunkDirtyGrids(ChunkedDataLayer, ChunkedDataLayer, JobHandle) ChunkedDataLayer.MergeChunkDirtyGrids(ChunkedDataLayer, ChunkedDataLayer, ChunkedDataLayer, JobHandle) ChunkedDataLayer.MergeChunkDirtyGrids(ChunkedDataLayer, ChunkedDataLayer, ChunkedDataLayer, ChunkedDataLayer, JobHandle) ChunkedDataLayer.GetChunkIndexByCellIndex(int) ChunkedDataLayer.GetChunkCoord(int2) ChunkedDataLayer.GetChunkCoord(int) ChunkedDataLayer.GetChunkIndex(int2) ChunkedDataLayer.GetCellCoord(int) ChunkedDataLayer.GetCellIndex(int2) ChunkedDataLayer.ResolveCellCoord(int2) ChunkedDataLayer.ResolveChunkCoord(int2) DataLayer.IsDisposableItems DataLayer._readJobsDependency DataLayer.ReadDependency DataLayer._writeJobsDependency DataLayer.WriteDependency DataLayer.CombinedDependency DataLayer._isDirty DataLayer.IsDirty DataLayer._version DataLayer.Version DataLayer.Length DataLayer.AddReadDependency(JobHandle) DataLayer.AddWriteDependency(JobHandle) DataLayer.SetReadDependency(JobHandle) DataLayer.SetWriteDependency(JobHandle) DataLayer.PrepareToWrite() DataLayer.PrepareToRead() DataLayer.OpenToRead() DataLayer.OpenToWrite() DataLayer.CompleteReadJobs() DataLayer.CompleteWriteJobs() DataLayer.CompleteAllJobs() DataLayer.CommitChanges() DataLayer.SetDirty(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.Core.DataLayers Assembly: fwt.core.dll Syntax public abstract class ListChunkedDataLayer<TItem> : ChunkedDataLayer, IDisposable, ICommitChanges, IListDataLayer<TItem> Type Parameters Name Description TItem type of item stored in a data layer Fields _data Declaration protected List<TItem> _data Field Value Type Description List<TItem> Properties Data Container for layer data. Declaration public List<TItem> Data { get; } Property Value Type Description List<TItem> Methods Dispose() Disposes the data layer, calls DisposeAllItems() DisposeAllItems() Declaration public override void Dispose() Overrides ChunkedDataLayer.Dispose() DisposeAllItems() Disposes all items in the data layer by calling DisposeDataItem for each DisposeDataItem(TItem). Declaration public override void DisposeAllItems() Overrides DataLayer.DisposeAllItems() DisposeDataItem(TItem) Disposes data item if it is IDisposable. Declaration protected virtual void DisposeDataItem(TItem item) Parameters Type Name Description TItem item DisposeExcessItems(int) Disposes items at cells greater than layerSize Declaration public virtual void DisposeExcessItems(int layerSize) Parameters Type Name Description int layerSize items count to keep, dispose all other items GetData(int) Returns data from cell at provided index Declaration public virtual TItem GetData(int index) Parameters Type Name Description int index cell index to get data from Returns Type Description TItem data from cell at provided index GetDataOrDefault(int) Tries to get data from cell at provided index. Declaration public virtual TItem GetDataOrDefault(int index) Parameters Type Name Description int index cell index to get data from Returns Type Description TItem data found in cell at provided index or default if nothing was found Init(int) Intializes/Reinitializes the data layer Declaration public override void Init(int layerSize) Parameters Type Name Description int layerSize amount of cells in the data layer Overrides ChunkedDataLayer.Init(int) SetData(int, TItem) Sets data in cell at provided index. Declaration public virtual bool SetData(int index, TItem data) Parameters Type Name Description int index cell index to put data into TItem data data to put into the cell at provided index Returns Type Description bool true if data was set TryGetData(int, out TItem) Tries to get data from cell at provided index. Declaration public virtual bool TryGetData(int index, out TItem data) Parameters Type Name Description int index cell index to get data from TItem data data found in a cell at provided index Returns Type Description bool true if data was found TrySetData(int, TItem) Tries to set data in cell at provided index. Declaration public virtual bool TrySetData(int index, TItem data) Parameters Type Name Description int index cell index to put data into TItem data data to put into the cell at provided index Returns Type Description bool true if data was set Implements IDisposable ICommitChanges IListDataLayer<TItem> Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.DataLayers.ListDataLayer-1.html": {
    "href": "api/Fwt.Core.DataLayers.ListDataLayer-1.html",
    "title": "Class ListDataLayer<TItem> | Hex Terrains",
    "summary": "Class ListDataLayer<TItem> Base class for all data layers that are based on Array{T}. Inheritance object DataLayer ListDataLayer<TItem> Implements IDisposable ICommitChanges IListDataLayer<TItem> Inherited Members DataLayer.IsDisposableItems DataLayer._readJobsDependency DataLayer.ReadDependency DataLayer._writeJobsDependency DataLayer.WriteDependency DataLayer.CombinedDependency DataLayer._isDirty DataLayer.IsDirty DataLayer._version DataLayer.Version DataLayer.AddReadDependency(JobHandle) DataLayer.AddWriteDependency(JobHandle) DataLayer.SetReadDependency(JobHandle) DataLayer.SetWriteDependency(JobHandle) DataLayer.PrepareToWrite() DataLayer.PrepareToRead() DataLayer.OpenToRead() DataLayer.OpenToWrite() DataLayer.CompleteReadJobs() DataLayer.CompleteWriteJobs() DataLayer.CompleteAllJobs() DataLayer.CommitChanges() DataLayer.SetDirty(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.Core.DataLayers Assembly: fwt.core.dll Syntax public abstract class ListDataLayer<TItem> : DataLayer, IDisposable, ICommitChanges, IListDataLayer<TItem> Type Parameters Name Description TItem Type of the items stored in the data layer Fields _data Declaration protected List<TItem> _data Field Value Type Description List<TItem> Properties Data The container for data in the layer. Declaration public List<TItem> Data { get; } Property Value Type Description List<TItem> Length Returns the number of items in the layer. Declaration public override int Length { get; } Property Value Type Description int Overrides DataLayer.Length Methods Dispose() Disposes the data layer, calls DisposeAllItems() DisposeAllItems() Declaration public override void Dispose() Overrides DataLayer.Dispose() DisposeAllItems() Disposes all items in the data layer by calling DisposeDataItem() for each DisposeDataItem(TItem) Declaration public override void DisposeAllItems() Overrides DataLayer.DisposeAllItems() DisposeDataItem(TItem) Disposes the item in the data layer if it is IDisposable. Declaration protected virtual void DisposeDataItem(TItem item) Parameters Type Name Description TItem item DisposeExcessItems(int) Disposes items at cells greater than layerSize Declaration public virtual void DisposeExcessItems(int layerSize) Parameters Type Name Description int layerSize amount of items to keep, dispose remaining items GetData(int) Returns the data at the specified index. Declaration public virtual TItem GetData(int index) Parameters Type Name Description int index cell index to get data from Returns Type Description TItem data found in a cell at provided index Init(int, Allocator) Initializes/Reinitializes the data layer with the specified size. Declaration public virtual void Init(int layerSize, Allocator allocator = Allocator.Persistent) Parameters Type Name Description int layerSize amount of cells in the layer Allocator allocator allocator to create internal collections with. Used in a classes inherited from this data layer SetData(int, TItem) Sets the data at the specified index. Declaration public virtual bool SetData(int index, TItem data) Parameters Type Name Description int index cell index to put data into TItem data data to put into the cell at provided index Returns Type Description bool true if data was set TryGetData(int, out TItem) Tries to get the data at the specified index. Declaration public virtual bool TryGetData(int index, out TItem data) Parameters Type Name Description int index cell index to get data from TItem data data found into the cell at provided index Returns Type Description bool true if data was found TrySetData(int, TItem) Tries to set the data at the specified index. Declaration public bool TrySetData(int index, TItem data) Parameters Type Name Description int index cell index to put data into TItem data data to put into the cell at provided index Returns Type Description bool true if data was set Implements IDisposable ICommitChanges IListDataLayer<TItem> Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.DataLayers.MergeDataLayerDirtyGridsJob1.html": {
    "href": "api/Fwt.Core.DataLayers.MergeDataLayerDirtyGridsJob1.html",
    "title": "Struct MergeDataLayerDirtyGridsJob1 | Hex Terrains",
    "summary": "Struct MergeDataLayerDirtyGridsJob1 Job that merges dirty grids from 4 sources into a target grid. If the source or target grid is dirty, the target grid is marked as dirty. Implements IJobParallelFor Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.Core.DataLayers Assembly: fwt.core.dll Syntax [BurstCompile] public struct MergeDataLayerDirtyGridsJob1 : IJobParallelFor Fields SourceDirtyChunks1 Declaration [ReadOnly] public NativeParallelHashSet<int> SourceDirtyChunks1 Field Value Type Description NativeParallelHashSet<int> SourceDirtyGrid1 Declaration [ReadOnly] public NativeArray<bool> SourceDirtyGrid1 Field Value Type Description NativeArray<bool> TargetDirtyChunks Declaration public NativeParallelHashSet<int>.ParallelWriter TargetDirtyChunks Field Value Type Description NativeParallelHashSet<int>.ParallelWriter TargetDirtyGrid Declaration public NativeArray<bool> TargetDirtyGrid Field Value Type Description NativeArray<bool> Methods Execute(int) Performs work against a specific iteration index. Declaration public void Execute(int index) Parameters Type Name Description int index The index of the Parallel for loop at which to perform work. Implements Unity.Jobs.IJobParallelFor Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.DataLayers.MergeDataLayerDirtyGridsJob2.html": {
    "href": "api/Fwt.Core.DataLayers.MergeDataLayerDirtyGridsJob2.html",
    "title": "Struct MergeDataLayerDirtyGridsJob2 | Hex Terrains",
    "summary": "Struct MergeDataLayerDirtyGridsJob2 Job that merges dirty grids from 2 sources into a target grid. If any of the source/target grids is dirty, the target grid is marked as dirty. Implements IJobParallelFor Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.Core.DataLayers Assembly: fwt.core.dll Syntax [BurstCompile] public struct MergeDataLayerDirtyGridsJob2 : IJobParallelFor Fields SourceDirtyChunks1 Declaration [ReadOnly] public NativeParallelHashSet<int> SourceDirtyChunks1 Field Value Type Description NativeParallelHashSet<int> SourceDirtyChunks2 Declaration [ReadOnly] public NativeParallelHashSet<int> SourceDirtyChunks2 Field Value Type Description NativeParallelHashSet<int> SourceDirtyGrid1 Declaration [ReadOnly] public NativeArray<bool> SourceDirtyGrid1 Field Value Type Description NativeArray<bool> SourceDirtyGrid2 Declaration [ReadOnly] public NativeArray<bool> SourceDirtyGrid2 Field Value Type Description NativeArray<bool> TargetDirtyChunks Declaration public NativeParallelHashSet<int>.ParallelWriter TargetDirtyChunks Field Value Type Description NativeParallelHashSet<int>.ParallelWriter TargetDirtyGrid Declaration public NativeArray<bool> TargetDirtyGrid Field Value Type Description NativeArray<bool> Methods Execute(int) Performs work against a specific iteration index. Declaration public void Execute(int index) Parameters Type Name Description int index The index of the Parallel for loop at which to perform work. Implements Unity.Jobs.IJobParallelFor Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.DataLayers.MergeDataLayerDirtyGridsJob3.html": {
    "href": "api/Fwt.Core.DataLayers.MergeDataLayerDirtyGridsJob3.html",
    "title": "Struct MergeDataLayerDirtyGridsJob3 | Hex Terrains",
    "summary": "Struct MergeDataLayerDirtyGridsJob3 Job that merges dirty grids from 3 sources into a target grid. If any of the source/target grids is dirty, the target grid is marked as dirty. Implements IJobParallelFor Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.Core.DataLayers Assembly: fwt.core.dll Syntax [BurstCompile] public struct MergeDataLayerDirtyGridsJob3 : IJobParallelFor Fields SourceDirtyChunks1 Declaration [ReadOnly] public NativeParallelHashSet<int> SourceDirtyChunks1 Field Value Type Description NativeParallelHashSet<int> SourceDirtyChunks2 Declaration [ReadOnly] public NativeParallelHashSet<int> SourceDirtyChunks2 Field Value Type Description NativeParallelHashSet<int> SourceDirtyChunks3 Declaration [ReadOnly] public NativeParallelHashSet<int> SourceDirtyChunks3 Field Value Type Description NativeParallelHashSet<int> SourceDirtyGrid1 Declaration [ReadOnly] public NativeArray<bool> SourceDirtyGrid1 Field Value Type Description NativeArray<bool> SourceDirtyGrid2 Declaration [ReadOnly] public NativeArray<bool> SourceDirtyGrid2 Field Value Type Description NativeArray<bool> SourceDirtyGrid3 Declaration [ReadOnly] public NativeArray<bool> SourceDirtyGrid3 Field Value Type Description NativeArray<bool> TargetDirtyChunks Declaration public NativeParallelHashSet<int>.ParallelWriter TargetDirtyChunks Field Value Type Description NativeParallelHashSet<int>.ParallelWriter TargetDirtyGrid Declaration public NativeArray<bool> TargetDirtyGrid Field Value Type Description NativeArray<bool> Methods Execute(int) Performs work against a specific iteration index. Declaration public void Execute(int index) Parameters Type Name Description int index The index of the Parallel for loop at which to perform work. Implements Unity.Jobs.IJobParallelFor Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.DataLayers.MergeDataLayerDirtyGridsJob4.html": {
    "href": "api/Fwt.Core.DataLayers.MergeDataLayerDirtyGridsJob4.html",
    "title": "Struct MergeDataLayerDirtyGridsJob4 | Hex Terrains",
    "summary": "Struct MergeDataLayerDirtyGridsJob4 Job that merges dirty grids from 4 sources into a target grid. If any of the source/target grids is dirty, the target grid is marked as dirty. Implements IJobParallelFor Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.Core.DataLayers Assembly: fwt.core.dll Syntax [BurstCompile] public struct MergeDataLayerDirtyGridsJob4 : IJobParallelFor Fields SourceDirtyChunks1 Declaration [ReadOnly] public NativeParallelHashSet<int> SourceDirtyChunks1 Field Value Type Description NativeParallelHashSet<int> SourceDirtyChunks2 Declaration [ReadOnly] public NativeParallelHashSet<int> SourceDirtyChunks2 Field Value Type Description NativeParallelHashSet<int> SourceDirtyChunks3 Declaration [ReadOnly] public NativeParallelHashSet<int> SourceDirtyChunks3 Field Value Type Description NativeParallelHashSet<int> SourceDirtyChunks4 Declaration [ReadOnly] public NativeParallelHashSet<int> SourceDirtyChunks4 Field Value Type Description NativeParallelHashSet<int> SourceDirtyGrid1 Declaration [ReadOnly] public NativeArray<bool> SourceDirtyGrid1 Field Value Type Description NativeArray<bool> SourceDirtyGrid2 Declaration [ReadOnly] public NativeArray<bool> SourceDirtyGrid2 Field Value Type Description NativeArray<bool> SourceDirtyGrid3 Declaration [ReadOnly] public NativeArray<bool> SourceDirtyGrid3 Field Value Type Description NativeArray<bool> SourceDirtyGrid4 Declaration [ReadOnly] public NativeArray<bool> SourceDirtyGrid4 Field Value Type Description NativeArray<bool> TargetDirtyChunks Declaration public NativeParallelHashSet<int>.ParallelWriter TargetDirtyChunks Field Value Type Description NativeParallelHashSet<int>.ParallelWriter TargetDirtyEdgesGrid Declaration public NativeArray<bool4> TargetDirtyEdgesGrid Field Value Type Description NativeArray<bool4> TargetDirtyGrid Declaration public NativeArray<bool> TargetDirtyGrid Field Value Type Description NativeArray<bool> Methods Execute(int) Performs work against a specific iteration index. Declaration public void Execute(int index) Parameters Type Name Description int index The index of the Parallel for loop at which to perform work. Implements Unity.Jobs.IJobParallelFor Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.DataLayers.NativeArrayChunkedDataLayer-1.html": {
    "href": "api/Fwt.Core.DataLayers.NativeArrayChunkedDataLayer-1.html",
    "title": "Class NativeArrayChunkedDataLayer<TItem> | Hex Terrains",
    "summary": "Class NativeArrayChunkedDataLayer<TItem> Base class for data layers that use NativeArray{T} as a data storage and track changes per chunk. Inheritance object DataLayer ChunkedDataLayer NativeArrayChunkedDataLayer<TItem> Implements IDisposable ICommitChanges IListDataLayer<TItem> Inherited Members ChunkedDataLayer.CellsGridSize ChunkedDataLayer.ChunkGridSize ChunkedDataLayer.ChunkSize ChunkedDataLayer.IsConnectedHorizontally ChunkedDataLayer.IsConnectedVertically ChunkedDataLayer.ChunksCount ChunkedDataLayer.ChunkDirtyGrid ChunkedDataLayer.DirtyChunks ChunkedDataLayer.SetCellDirty(int) ChunkedDataLayer.SetCellDirty(int, bool) ChunkedDataLayer.GetIsChunkDirty(int) ChunkedDataLayer.SetChunkDirty(int, bool) ChunkedDataLayer.SetAllChunksDirty(bool) ChunkedDataLayer.SetAllChunksDirtyAsync(bool, JobHandle) ChunkedDataLayer.SetAllChunksDirty() ChunkedDataLayer.ClearAllChunksDirty() ChunkedDataLayer.MergeChunkDirtyGrids(ChunkedDataLayer, JobHandle) ChunkedDataLayer.MergeChunkDirtyGrids(ChunkedDataLayer, ChunkedDataLayer, JobHandle) ChunkedDataLayer.MergeChunkDirtyGrids(ChunkedDataLayer, ChunkedDataLayer, ChunkedDataLayer, JobHandle) ChunkedDataLayer.MergeChunkDirtyGrids(ChunkedDataLayer, ChunkedDataLayer, ChunkedDataLayer, ChunkedDataLayer, JobHandle) ChunkedDataLayer.GetChunkIndexByCellIndex(int) ChunkedDataLayer.GetChunkCoord(int2) ChunkedDataLayer.GetChunkCoord(int) ChunkedDataLayer.GetChunkIndex(int2) ChunkedDataLayer.GetCellCoord(int) ChunkedDataLayer.GetCellIndex(int2) ChunkedDataLayer.ResolveCellCoord(int2) ChunkedDataLayer.ResolveChunkCoord(int2) DataLayer.IsDisposableItems DataLayer._readJobsDependency DataLayer.ReadDependency DataLayer._writeJobsDependency DataLayer.WriteDependency DataLayer.CombinedDependency DataLayer._isDirty DataLayer.IsDirty DataLayer._version DataLayer.Version DataLayer.AddReadDependency(JobHandle) DataLayer.AddWriteDependency(JobHandle) DataLayer.SetReadDependency(JobHandle) DataLayer.SetWriteDependency(JobHandle) DataLayer.PrepareToWrite() DataLayer.PrepareToRead() DataLayer.OpenToRead() DataLayer.OpenToWrite() DataLayer.CompleteReadJobs() DataLayer.CompleteWriteJobs() DataLayer.CompleteAllJobs() DataLayer.CommitChanges() DataLayer.SetDirty(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.Core.DataLayers Assembly: fwt.core.dll Syntax public abstract class NativeArrayChunkedDataLayer<TItem> : ChunkedDataLayer, IDisposable, ICommitChanges, IListDataLayer<TItem> where TItem : unmanaged Type Parameters Name Description TItem type of item in data layer Fields _data Declaration protected NativeArray<TItem> _data Field Value Type Description NativeArray<TItem> Properties Data Declaration public NativeArray<TItem> Data { get; } Property Value Type Description NativeArray<TItem> Length Returns the number of items in the layer. Declaration public override int Length { get; } Property Value Type Description int Overrides DataLayer.Length Methods Dispose() Disposes the layer and calls DisposeAllItems() under the hood Declaration public override void Dispose() Overrides ChunkedDataLayer.Dispose() DisposeAllItems() Disposes all items in the layer. Called on Dispose() if IsDisposableItems is true. Declaration public override void DisposeAllItems() Overrides DataLayer.DisposeAllItems() DisposeDataItem(TItem) Declaration protected virtual void DisposeDataItem(TItem item) Parameters Type Name Description TItem item DisposeExcessItems(int) Declaration public virtual void DisposeExcessItems(int layerSize) Parameters Type Name Description int layerSize GetData(int) Returns the data at the specified index. Declaration public virtual TItem GetData(int index) Parameters Type Name Description int index index to get data at Returns Type Description TItem data in a cell with provided index Init(int) Initializes/Reinitializes the layer with a size of the layer (cells count) and a size of the chunks. Declaration public override void Init(int layerSize) Parameters Type Name Description int layerSize Amount of items (cells) in the data layer Overrides ChunkedDataLayer.Init(int) SetData(int, TItem) Sets the data at the specified index. Marks affected chunk as dirty. Declaration public virtual bool SetData(int index, TItem data) Parameters Type Name Description int index index of the cell to put data into TItem data data to put into the cell with provided index Returns Type Description bool true if value was set (not out of the bounds) TryGetData(int, out TItem) Tries to get the data at the specified index. if index is out of the bounds, returns false and data is set to default value. Declaration public virtual bool TryGetData(int index, out TItem data) Parameters Type Name Description int index index of cell to get data from TItem data filled with default value if index is out of bounds or contains data from cell with requested index Returns Type Description bool TrySetData(int, TItem) Tries to set the data at the specified index. If index is out of the bounds, returns false. Declaration public bool TrySetData(int index, TItem data) Parameters Type Name Description int index index of cell to set data into TItem data data to put into a cell with provided index Returns Type Description bool true if value was set Implements IDisposable ICommitChanges IListDataLayer<TItem> Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.DataLayers.NativeArrayDataLayer-1.html": {
    "href": "api/Fwt.Core.DataLayers.NativeArrayDataLayer-1.html",
    "title": "Class NativeArrayDataLayer<TItem> | Hex Terrains",
    "summary": "Class NativeArrayDataLayer<TItem> Base class for all data layers that are based on NativeArray{T}. Inheritance object DataLayer NativeArrayDataLayer<TItem> Implements IDisposable ICommitChanges IListDataLayer<TItem> Inherited Members DataLayer.IsDisposableItems DataLayer._readJobsDependency DataLayer.ReadDependency DataLayer._writeJobsDependency DataLayer.WriteDependency DataLayer.CombinedDependency DataLayer._isDirty DataLayer.IsDirty DataLayer._version DataLayer.Version DataLayer.AddReadDependency(JobHandle) DataLayer.AddWriteDependency(JobHandle) DataLayer.SetReadDependency(JobHandle) DataLayer.SetWriteDependency(JobHandle) DataLayer.PrepareToWrite() DataLayer.PrepareToRead() DataLayer.OpenToRead() DataLayer.OpenToWrite() DataLayer.CompleteReadJobs() DataLayer.CompleteWriteJobs() DataLayer.CompleteAllJobs() DataLayer.CommitChanges() DataLayer.SetDirty(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.Core.DataLayers Assembly: fwt.core.dll Syntax public abstract class NativeArrayDataLayer<TItem> : DataLayer, IDisposable, ICommitChanges, IListDataLayer<TItem> where TItem : unmanaged Type Parameters Name Description TItem type of data stored in the layer Fields _data Declaration protected NativeArray<TItem> _data Field Value Type Description NativeArray<TItem> Properties Data Container for data in the layer. Declaration public NativeArray<TItem> Data { get; } Property Value Type Description NativeArray<TItem> Length Number of items in the layer. Declaration public override int Length { get; } Property Value Type Description int Overrides DataLayer.Length Methods Dispose() Disposes the data layer, calls DisposeDataItems() DisposeAllItems() Declaration public override void Dispose() Overrides DataLayer.Dispose() DisposeAllItems() Disposes all items in the layer by calling DisposeDataItem for each DisposeDataItem(TItem) Declaration public override void DisposeAllItems() Overrides DataLayer.DisposeAllItems() DisposeDataItem(TItem) Disposes the item if it is IDisposable. Declaration protected virtual void DisposeDataItem(TItem item) Parameters Type Name Description TItem item DisposeExcessItems(int) Disposes items at cells with indexes greater than layerSize. Declaration public virtual void DisposeExcessItems(int layerSize) Parameters Type Name Description int layerSize GetData(int) Returns the data at the specified index. Declaration public virtual TItem GetData(int index) Parameters Type Name Description int index cell index to get data from Returns Type Description TItem Init(int, Allocator) Initializes/Reinitializes the data layer with the specified size. Declaration public virtual void Init(int layerSize, Allocator allocator = Allocator.Persistent) Parameters Type Name Description int layerSize amount of cells in the layer Allocator allocator allocator to create internal collections with SetData(int, TItem) Sets the data at the specified index. Declaration public virtual bool SetData(int index, TItem data) Parameters Type Name Description int index cell index to put data into TItem data data to put into the cell at provided index Returns Type Description bool true if data was set TryGetData(int, out TItem) Tries to get the data at the specified index. Declaration public virtual bool TryGetData(int index, out TItem data) Parameters Type Name Description int index cell index to get data from TItem data data found in a cell at provided index. Of nothing found - default Returns Type Description bool true if data was found, otherwise - false TrySetData(int, TItem) Tries to set the data at the specified index. Declaration public virtual bool TrySetData(int index, TItem data) Parameters Type Name Description int index cell index to put data into TItem data data to put into the cell at provided index Returns Type Description bool true if data was set Implements IDisposable ICommitChanges IListDataLayer<TItem> Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.DataLayers.NativeHashMapDataLayer-2.html": {
    "href": "api/Fwt.Core.DataLayers.NativeHashMapDataLayer-2.html",
    "title": "Class NativeHashMapDataLayer<TKey, TItem> | Hex Terrains",
    "summary": "Class NativeHashMapDataLayer<TKey, TItem> Base class for all data layers that are based on NativeHashMap{TItem, TItem}. Inheritance object DataLayer NativeHashMapDataLayer<TKey, TItem> Implements IDisposable ICommitChanges Inherited Members DataLayer.IsDisposableItems DataLayer._readJobsDependency DataLayer.ReadDependency DataLayer._writeJobsDependency DataLayer.WriteDependency DataLayer.CombinedDependency DataLayer._isDirty DataLayer.IsDirty DataLayer._version DataLayer.Version DataLayer.AddReadDependency(JobHandle) DataLayer.AddWriteDependency(JobHandle) DataLayer.SetReadDependency(JobHandle) DataLayer.SetWriteDependency(JobHandle) DataLayer.PrepareToWrite() DataLayer.PrepareToRead() DataLayer.OpenToRead() DataLayer.OpenToWrite() DataLayer.CompleteReadJobs() DataLayer.CompleteWriteJobs() DataLayer.CompleteAllJobs() DataLayer.CommitChanges() DataLayer.SetDirty(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.Core.DataLayers Assembly: fwt.core.dll Syntax public abstract class NativeHashMapDataLayer<TKey, TItem> : DataLayer, IDisposable, ICommitChanges where TKey : unmanaged, IEquatable<TKey> where TItem : unmanaged Type Parameters Name Description TKey key type to store data under TItem type of data stored in the layer Fields _data Declaration protected NativeHashMap<TKey, TItem> _data Field Value Type Description NativeHashMap<TKey, TItem> Properties Data Container for data in the layer. Declaration public NativeHashMap<TKey, TItem> Data { get; } Property Value Type Description NativeHashMap<TKey, TItem> Length Number of items in the layer. Declaration public override int Length { get; } Property Value Type Description int Overrides DataLayer.Length Methods Clear() Clears the data layer. Declaration public virtual void Clear() Dispose() Disposes the data layer, calls DisposeAllItems() DisposeAllItems() Declaration public override void Dispose() Overrides DataLayer.Dispose() DisposeAllItems() Disposes all items in the layer by calling DisposeDataItem for each DisposeDataItem(TItem) Declaration public override void DisposeAllItems() Overrides DataLayer.DisposeAllItems() DisposeDataItem(TItem) Disposes a data item if it is IDisposable. Declaration protected virtual void DisposeDataItem(TItem item) Parameters Type Name Description TItem item GetData(TKey) returns a data item stored under the key. Declaration public virtual TItem GetData(TKey key) Parameters Type Name Description TKey key key to get data under Returns Type Description TItem item stored under the provided key Init(int, Allocator) Initializes/Reinitializes the data layer. Requires a layer size because NativeHashMap{TItem, TItem} can not be resized in Jobs. Declaration public virtual void Init(int layerSize, Allocator allocator = Allocator.Persistent) Parameters Type Name Description int layerSize Allocator allocator RemoveData(TKey) Removes a data item stored under the key. Declaration public virtual void RemoveData(TKey key) Parameters Type Name Description TKey key key to remove data under SetData(TKey, TItem) Sets a data item under the key. Declaration public virtual bool SetData(TKey key, TItem value) Parameters Type Name Description TKey key key to store data under TItem value data to store under the provided key Returns Type Description bool true if data was set TryGetData(TKey, out TItem) Tries to get a data item stored under the key. Declaration public virtual bool TryGetData(TKey key, out TItem value) Parameters Type Name Description TKey key key to get data under TItem value data found under the provided key. If not found = default Returns Type Description bool true if data was found, otherwise - false TryRemoveData(TKey) Tries to remove a data item stored under the key. Declaration public virtual bool TryRemoveData(TKey key) Parameters Type Name Description TKey key key to remove data under Returns Type Description bool true if data was in the layer TrySetData(TKey, TItem) Tries to set a data item under the key. Declaration public virtual bool TrySetData(TKey key, TItem value) Parameters Type Name Description TKey key key to store data under TItem value data to put under the provided key Returns Type Description bool true if data was added Implements IDisposable ICommitChanges Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.DataLayers.NativeHashSetDataLayer-1.html": {
    "href": "api/Fwt.Core.DataLayers.NativeHashSetDataLayer-1.html",
    "title": "Class NativeHashSetDataLayer<TItem> | Hex Terrains",
    "summary": "Class NativeHashSetDataLayer<TItem> Base class for all data layers that are based on NativeHashSet{T}. Inheritance object DataLayer NativeHashSetDataLayer<TItem> Implements IDisposable ICommitChanges Inherited Members DataLayer.IsDisposableItems DataLayer._readJobsDependency DataLayer.ReadDependency DataLayer._writeJobsDependency DataLayer.WriteDependency DataLayer.CombinedDependency DataLayer._isDirty DataLayer.IsDirty DataLayer._version DataLayer.Version DataLayer.AddReadDependency(JobHandle) DataLayer.AddWriteDependency(JobHandle) DataLayer.SetReadDependency(JobHandle) DataLayer.SetWriteDependency(JobHandle) DataLayer.PrepareToWrite() DataLayer.PrepareToRead() DataLayer.OpenToRead() DataLayer.OpenToWrite() DataLayer.CompleteReadJobs() DataLayer.CompleteWriteJobs() DataLayer.CompleteAllJobs() DataLayer.CommitChanges() DataLayer.SetDirty(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.Core.DataLayers Assembly: fwt.core.dll Syntax public abstract class NativeHashSetDataLayer<TItem> : DataLayer, IDisposable, ICommitChanges where TItem : unmanaged, IEquatable<TItem> Type Parameters Name Description TItem type of data stored in the layer Fields _data Declaration protected NativeHashSet<TItem> _data Field Value Type Description NativeHashSet<TItem> Properties Data Container for data in the layer. Declaration public NativeHashSet<TItem> Data { get; } Property Value Type Description NativeHashSet<TItem> Length Number of items in the layer Declaration public override int Length { get; } Property Value Type Description int Overrides DataLayer.Length Methods Add(TItem) Adds an item to the layer. Declaration public virtual bool Add(TItem value) Parameters Type Name Description TItem value data to add into the layer Returns Type Description bool true if data was added, otherwise - false Contains(TItem) Checks if the layer contains the specified item. Declaration public virtual bool Contains(TItem value) Parameters Type Name Description TItem value data to check if it is in the layer Returns Type Description bool true if data was found Dispose() Disposes the layer, calls DisposeAllItems() DisposeAllItems() Declaration public override void Dispose() Overrides DataLayer.Dispose() DisposeAllItems() Disposes all items in the layer by calling DisposeDataItem for each DisposeDataItem(TItem) Declaration public override void DisposeAllItems() Overrides DataLayer.DisposeAllItems() DisposeDataItem(TItem) Disposes the specified item if it is IDisposable. Declaration protected virtual void DisposeDataItem(TItem item) Parameters Type Name Description TItem item Init(int, Allocator) Initializes/Reinitializes the data layer with the specified size. Declaration public virtual void Init(int layerSize, Allocator allocator = Allocator.Persistent) Parameters Type Name Description int layerSize Allocator allocator Remove(TItem) Removes an item from the layer. Declaration public virtual bool Remove(TItem value) Parameters Type Name Description TItem value data to remove from layer Returns Type Description bool true if data was in the layer SafeAdd(TItem) Adds an item to the layer if the layer is initialized. Declaration public virtual bool SafeAdd(TItem value) Parameters Type Name Description TItem value data to add into the layer Returns Type Description bool true if data was added SafeContains(TItem) Checks if the layer contains the specified item if the layer is initialized. Declaration public virtual bool SafeContains(TItem value) Parameters Type Name Description TItem value data to check if it is in the layer Returns Type Description bool true if data is in the layer SafeRemove(TItem) Removes an item from the layer if the layer is initialized. Declaration public virtual bool SafeRemove(TItem value) Parameters Type Name Description TItem value data to remove from layer Returns Type Description bool true if data was in the layer Implements IDisposable ICommitChanges Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.DataLayers.NativeListChunkedDataLayer-1.html": {
    "href": "api/Fwt.Core.DataLayers.NativeListChunkedDataLayer-1.html",
    "title": "Class NativeListChunkedDataLayer<TItem> | Hex Terrains",
    "summary": "Class NativeListChunkedDataLayer<TItem> Base class for all data layers that are based on NativeList{T}. Inheritance object DataLayer ChunkedDataLayer NativeListChunkedDataLayer<TItem> HexTerrainNativeListChunkedDataLayer<TItem> Implements IDisposable ICommitChanges IListDataLayer<TItem> Inherited Members ChunkedDataLayer.CellsGridSize ChunkedDataLayer.ChunkGridSize ChunkedDataLayer.ChunkSize ChunkedDataLayer.IsConnectedHorizontally ChunkedDataLayer.IsConnectedVertically ChunkedDataLayer.ChunksCount ChunkedDataLayer.ChunkDirtyGrid ChunkedDataLayer.DirtyChunks ChunkedDataLayer.SetCellDirty(int) ChunkedDataLayer.SetCellDirty(int, bool) ChunkedDataLayer.GetIsChunkDirty(int) ChunkedDataLayer.SetChunkDirty(int, bool) ChunkedDataLayer.SetAllChunksDirty(bool) ChunkedDataLayer.SetAllChunksDirtyAsync(bool, JobHandle) ChunkedDataLayer.SetAllChunksDirty() ChunkedDataLayer.ClearAllChunksDirty() ChunkedDataLayer.MergeChunkDirtyGrids(ChunkedDataLayer, JobHandle) ChunkedDataLayer.MergeChunkDirtyGrids(ChunkedDataLayer, ChunkedDataLayer, JobHandle) ChunkedDataLayer.MergeChunkDirtyGrids(ChunkedDataLayer, ChunkedDataLayer, ChunkedDataLayer, JobHandle) ChunkedDataLayer.MergeChunkDirtyGrids(ChunkedDataLayer, ChunkedDataLayer, ChunkedDataLayer, ChunkedDataLayer, JobHandle) ChunkedDataLayer.GetChunkIndexByCellIndex(int) ChunkedDataLayer.GetChunkCoord(int2) ChunkedDataLayer.GetChunkCoord(int) ChunkedDataLayer.GetChunkIndex(int2) ChunkedDataLayer.GetCellCoord(int) ChunkedDataLayer.GetCellIndex(int2) ChunkedDataLayer.ResolveCellCoord(int2) ChunkedDataLayer.ResolveChunkCoord(int2) DataLayer.IsDisposableItems DataLayer._readJobsDependency DataLayer.ReadDependency DataLayer._writeJobsDependency DataLayer.WriteDependency DataLayer.CombinedDependency DataLayer._isDirty DataLayer.IsDirty DataLayer._version DataLayer.Version DataLayer.AddReadDependency(JobHandle) DataLayer.AddWriteDependency(JobHandle) DataLayer.SetReadDependency(JobHandle) DataLayer.SetWriteDependency(JobHandle) DataLayer.PrepareToWrite() DataLayer.PrepareToRead() DataLayer.OpenToRead() DataLayer.OpenToWrite() DataLayer.CompleteReadJobs() DataLayer.CompleteWriteJobs() DataLayer.CompleteAllJobs() DataLayer.CommitChanges() DataLayer.SetDirty(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.Core.DataLayers Assembly: fwt.core.dll Syntax public abstract class NativeListChunkedDataLayer<TItem> : ChunkedDataLayer, IDisposable, ICommitChanges, IListDataLayer<TItem> where TItem : unmanaged Type Parameters Name Description TItem type of item stored in the layer Fields _data Declaration protected NativeList<TItem> _data Field Value Type Description NativeList<TItem> Properties Data Container for data in the layer. Declaration public NativeList<TItem> Data { get; } Property Value Type Description NativeList<TItem> Length Number of items in the layer. Declaration public override int Length { get; } Property Value Type Description int Overrides DataLayer.Length Methods Dispose() Disposes the data layer, calls DisposeAllItems() DisposeAllItems() Declaration public override void Dispose() Overrides ChunkedDataLayer.Dispose() DisposeAllItems() Disposes all items in the layer by calling DisposeDataItem() for each DisposeDataItem(TItem) Declaration public override void DisposeAllItems() Overrides DataLayer.DisposeAllItems() DisposeDataItem(TItem) Disposes the item in the layer if it is IDisposable. Declaration protected virtual void DisposeDataItem(TItem item) Parameters Type Name Description TItem item DisposeExcessItems(int) Disposes items in layer that are in cells of index greater than layerSize. Declaration public virtual void DisposeExcessItems(int layerSize) Parameters Type Name Description int layerSize items in cells at index greater than this value will be disposed FillData(TItem) Fills every cell of layer with provided data. Declaration public virtual bool FillData(TItem data) Parameters Type Name Description TItem data data to fill the layer with Returns Type Description bool true if successfull GetData(int) Gets the data at the specified index. Declaration public virtual TItem GetData(int index) Parameters Type Name Description int index cell index to get data from Returns Type Description TItem item from the cell at provided index Init(int) Initializes/Reinitializes the data layer with the specified size. Declaration public override void Init(int layerSize) Parameters Type Name Description int layerSize amount of cells in the data layer Overrides ChunkedDataLayer.Init(int) SetData(int, TItem) Sets the data at the specified index. Declaration public virtual bool SetData(int index, TItem data) Parameters Type Name Description int index cell index to put data into TItem data data to put into the cell at provided index Returns Type Description bool SetData(TItem[]) Sets data for all cells in the layer. If the provided array is bigger than the layer size, the layer will be resized. Declaration public virtual bool SetData(TItem[] source) Parameters Type Name Description TItem[] source source collection to copy data from Returns Type Description bool TryGetData(int, out TItem) Tries to get the data at the specified index. Declaration public virtual bool TryGetData(int index, out TItem data) Parameters Type Name Description int index cell index to get data from TItem data data from cell at provided index Returns Type Description bool true if data was found TrySetData(int, TItem) Tries to set the data at the specified index. Declaration public bool TrySetData(int index, TItem data) Parameters Type Name Description int index cell index to put data into TItem data data to put into the cell at provided index Returns Type Description bool true if data was set Implements IDisposable ICommitChanges IListDataLayer<TItem> Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.DataLayers.NativeListDataLayer-1.html": {
    "href": "api/Fwt.Core.DataLayers.NativeListDataLayer-1.html",
    "title": "Class NativeListDataLayer<TItem> | Hex Terrains",
    "summary": "Class NativeListDataLayer<TItem> Base class for all data layers that are based on NativeList{T}. Inheritance object DataLayer NativeListDataLayer<TItem> AreaSizesDataLayer Implements IDisposable ICommitChanges IListDataLayer<TItem> Inherited Members DataLayer.IsDisposableItems DataLayer._readJobsDependency DataLayer.ReadDependency DataLayer._writeJobsDependency DataLayer.WriteDependency DataLayer.CombinedDependency DataLayer._isDirty DataLayer.IsDirty DataLayer._version DataLayer.Version DataLayer.AddReadDependency(JobHandle) DataLayer.AddWriteDependency(JobHandle) DataLayer.SetReadDependency(JobHandle) DataLayer.SetWriteDependency(JobHandle) DataLayer.PrepareToWrite() DataLayer.PrepareToRead() DataLayer.OpenToRead() DataLayer.OpenToWrite() DataLayer.CompleteReadJobs() DataLayer.CompleteWriteJobs() DataLayer.CompleteAllJobs() DataLayer.CommitChanges() DataLayer.SetDirty(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.Core.DataLayers Assembly: fwt.core.dll Syntax public abstract class NativeListDataLayer<TItem> : DataLayer, IDisposable, ICommitChanges, IListDataLayer<TItem> where TItem : unmanaged Type Parameters Name Description TItem Fields _data Declaration protected NativeList<TItem> _data Field Value Type Description NativeList<TItem> Properties Data Container for data in the layer. Declaration public NativeList<TItem> Data { get; } Property Value Type Description NativeList<TItem> Length Returns the number of items in the layer. Declaration public override int Length { get; } Property Value Type Description int Overrides DataLayer.Length Methods Dispose() Disposes the data layer and all items in it by calling DisposeAllItems() DisposeAllItems() Declaration public override void Dispose() Overrides DataLayer.Dispose() DisposeAllItems() Disposes all items in the layer by calling DisposeDataItem() for each DisposeDataItem(TItem) Declaration public override void DisposeAllItems() Overrides DataLayer.DisposeAllItems() DisposeDataItem(TItem) Disposes the data item if it is IDisposable. Declaration protected virtual void DisposeDataItem(TItem item) Parameters Type Name Description TItem item DisposeExcessItems(int) When layer is resized, this method is called to dispose items in cells of index greater than layerSize. Declaration public virtual void DisposeExcessItems(int layerSize) Parameters Type Name Description int layerSize GetData(int) Gets the data at the specified index. Declaration public virtual TItem GetData(int index) Parameters Type Name Description int index index to get data under Returns Type Description TItem data from the cell at provided index Init(int, Allocator) Initializes/Reinitializes the data layer with the specified size. Declaration public virtual void Init(int layerSize, Allocator allocator = Allocator.Persistent) Parameters Type Name Description int layerSize items count in the layer Allocator allocator allocator to create internal collections under. SetData(int, TItem) Sets the data at the specified index. Declaration public virtual bool SetData(int index, TItem data) Parameters Type Name Description int index cell index to put data in TItem data data to put into the cell at provided index Returns Type Description bool TryGetData(int, out TItem) Tries to get the data at the specified index. Declaration public virtual bool TryGetData(int index, out TItem data) Parameters Type Name Description int index cell index to put data in TItem data data to put into the cell at provided index Returns Type Description bool true if data was added, otherwise - false TrySetData(int, TItem) Tries to set the data at the specified index. Declaration public bool TrySetData(int index, TItem data) Parameters Type Name Description int index cell index to put data in TItem data data to put into the cell at provided index Returns Type Description bool true if data was set, otherwise - false Implements IDisposable ICommitChanges IListDataLayer<TItem> Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.DataLayers.NativeParallelHashMapDataLayer-2.html": {
    "href": "api/Fwt.Core.DataLayers.NativeParallelHashMapDataLayer-2.html",
    "title": "Class NativeParallelHashMapDataLayer<TKey, TItem> | Hex Terrains",
    "summary": "Class NativeParallelHashMapDataLayer<TKey, TItem> Base class for all data layers that are based on NativeParallelHashMap{TItem, TItem}. Inheritance object DataLayer NativeParallelHashMapDataLayer<TKey, TItem> Implements IDisposable ICommitChanges Inherited Members DataLayer.IsDisposableItems DataLayer._readJobsDependency DataLayer.ReadDependency DataLayer._writeJobsDependency DataLayer.WriteDependency DataLayer.CombinedDependency DataLayer._isDirty DataLayer.IsDirty DataLayer._version DataLayer.Version DataLayer.AddReadDependency(JobHandle) DataLayer.AddWriteDependency(JobHandle) DataLayer.SetReadDependency(JobHandle) DataLayer.SetWriteDependency(JobHandle) DataLayer.PrepareToWrite() DataLayer.PrepareToRead() DataLayer.OpenToRead() DataLayer.OpenToWrite() DataLayer.CompleteReadJobs() DataLayer.CompleteWriteJobs() DataLayer.CompleteAllJobs() DataLayer.CommitChanges() DataLayer.SetDirty(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.Core.DataLayers Assembly: fwt.core.dll Syntax public abstract class NativeParallelHashMapDataLayer<TKey, TItem> : DataLayer, IDisposable, ICommitChanges where TKey : unmanaged, IEquatable<TKey> where TItem : unmanaged Type Parameters Name Description TKey type of the key to store data under TItem type of the data to store in the layer Fields _data Declaration protected NativeParallelHashMap<TKey, TItem> _data Field Value Type Description NativeParallelHashMap<TKey, TItem> Properties Data Container for the data of the layer. Declaration public NativeParallelHashMap<TKey, TItem> Data { get; } Property Value Type Description NativeParallelHashMap<TKey, TItem> Length Number of items in the layer. Declaration public override int Length { get; } Property Value Type Description int Overrides DataLayer.Length Methods Clear() Clears the data layer. Declaration public virtual void Clear() Dispose() Disposes the data layer, calls DisposeAllItems() DisposeAllItems() Declaration public override void Dispose() Overrides DataLayer.Dispose() DisposeAllItems() Disposes all items in the layer by calling DisposeDataItem() for each DisposeDataItem(TItem) Declaration public override void DisposeAllItems() Overrides DataLayer.DisposeAllItems() DisposeDataItem(TItem) Disposes the data item if it is IDisposable. Declaration protected virtual void DisposeDataItem(TItem item) Parameters Type Name Description TItem item data item to dispose GetData(TKey) Returns the data item stored under the specified key. Declaration public virtual TItem GetData(TKey key) Parameters Type Name Description TKey key key to get data under Returns Type Description TItem data stored under the provided key Init(int, Allocator) Initializes/Reinitializes the data layer with the specified size. Requires a layer size to be specified because NativeParallelHashMap{TItem, TItem} can't be resized in Jobs. Declaration public virtual void Init(int layerSize, Allocator allocator = Allocator.Persistent) Parameters Type Name Description int layerSize Max amount of data items in layer Allocator allocator allocator to create internal collections with RemoveData(TKey) Removes the data item stored under the specified key. Declaration public virtual void RemoveData(TKey key) Parameters Type Name Description TKey key key to remove data under SetData(TKey, TItem) Sets the data item under the specified key. Declaration public virtual bool SetData(TKey key, TItem value) Parameters Type Name Description TKey key key to store data under TItem value data to store under provided key Returns Type Description bool true if data was added, otherwise - false TryGetData(TKey, out TItem) Tries to get the data item stored under the specified key. Declaration public virtual bool TryGetData(TKey key, out TItem value) Parameters Type Name Description TKey key key to get data under TItem value value under the provided key. If nothing found - default Returns Type Description bool true if data was found, otherwise - false TryRemoveData(TKey) Tries to remove the data item stored under the specified key. Declaration public virtual bool TryRemoveData(TKey key) Parameters Type Name Description TKey key key to remove data under Returns Type Description bool true if data was in the layer, otherwise - false TrySetData(TKey, TItem) Tries to set the data item under the specified key. Declaration public virtual bool TrySetData(TKey key, TItem value) Parameters Type Name Description TKey key key to store data under TItem value data to store under the provided key Returns Type Description bool true if data was added, otherwise - false Implements IDisposable ICommitChanges Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.DataLayers.NativeParallelHashSetDataLayer-1.html": {
    "href": "api/Fwt.Core.DataLayers.NativeParallelHashSetDataLayer-1.html",
    "title": "Class NativeParallelHashSetDataLayer<TItem> | Hex Terrains",
    "summary": "Class NativeParallelHashSetDataLayer<TItem> Base class for all data layers that are based on NativeParallelHashSet{T}. Inheritance object DataLayer NativeParallelHashSetDataLayer<TItem> Implements IDisposable ICommitChanges Inherited Members DataLayer.IsDisposableItems DataLayer._readJobsDependency DataLayer.ReadDependency DataLayer._writeJobsDependency DataLayer.WriteDependency DataLayer.CombinedDependency DataLayer._isDirty DataLayer.IsDirty DataLayer._version DataLayer.Version DataLayer.AddReadDependency(JobHandle) DataLayer.AddWriteDependency(JobHandle) DataLayer.SetReadDependency(JobHandle) DataLayer.SetWriteDependency(JobHandle) DataLayer.PrepareToWrite() DataLayer.PrepareToRead() DataLayer.OpenToRead() DataLayer.OpenToWrite() DataLayer.CompleteReadJobs() DataLayer.CompleteWriteJobs() DataLayer.CompleteAllJobs() DataLayer.CommitChanges() DataLayer.SetDirty(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.Core.DataLayers Assembly: fwt.core.dll Syntax public abstract class NativeParallelHashSetDataLayer<TItem> : DataLayer, IDisposable, ICommitChanges where TItem : unmanaged, IEquatable<TItem> Type Parameters Name Description TItem Type of the items stored in the data layer Fields _data Declaration protected NativeParallelHashSet<TItem> _data Field Value Type Description NativeParallelHashSet<TItem> Properties Data Container for data in the layer Declaration public NativeParallelHashSet<TItem> Data { get; } Property Value Type Description NativeParallelHashSet<TItem> Length Returns the number of items in the layer. Declaration public override int Length { get; } Property Value Type Description int Overrides DataLayer.Length Methods Add(TItem) Adds an item to the data layer. Declaration public virtual bool Add(TItem value) Parameters Type Name Description TItem value item to add to the layer Returns Type Description bool true if value was added, otherwise - false Contains(TItem) Checks if the layer contains the specified item. Declaration public virtual bool Contains(TItem value) Parameters Type Name Description TItem value item to check if in the layer Returns Type Description bool true if item is present in the layer, otherwise - false Dispose() Disposes the data layer, calls DisposeAllItems() DisposeAllItems() Declaration public override void Dispose() Overrides DataLayer.Dispose() DisposeAllItems() Disposes every item in the data layer by calling DisposeDataItem() DisposeDataItem(TItem). Declaration public override void DisposeAllItems() Overrides DataLayer.DisposeAllItems() DisposeDataItem(TItem) Disposes the item if it is IDisposable. Declaration protected virtual void DisposeDataItem(TItem item) Parameters Type Name Description TItem item Init(int, Allocator) Initializes/Reinitializes the data layer with the specified size. Requires a layer size to be set because NativeParallelHashSet can't be resized in Jobs. Declaration public virtual void Init(int layerSize, Allocator allocator = Allocator.Persistent) Parameters Type Name Description int layerSize max amount of items in the layer Allocator allocator allocator to create internal collections with Remove(TItem) Removes an item from the data layer. Declaration public virtual bool Remove(TItem value) Parameters Type Name Description TItem value value to remove from layer Returns Type Description bool true if value was in the layer, otherwise - false SafeAdd(TItem) Adds an item to the data layer if the layer is created. Declaration public virtual bool SafeAdd(TItem value) Parameters Type Name Description TItem value data to add into the layer Returns Type Description bool true if data was added, otherwise - false SafeContains(TItem) Checks if the layer contains the specified item if the layer is created. Declaration public virtual bool SafeContains(TItem value) Parameters Type Name Description TItem value data to check if it is in the layer Returns Type Description bool true if data is present in the layer, otherwise - false SafeRemove(TItem) Removes an item from the data layer if the layer is created. Declaration public virtual bool SafeRemove(TItem value) Parameters Type Name Description TItem value data to remove from layer Returns Type Description bool true if data was in the layer, otherwise - false Implements IDisposable ICommitChanges Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.DataLayers.NativeParallelMultiHashMapDataLayer-2.html": {
    "href": "api/Fwt.Core.DataLayers.NativeParallelMultiHashMapDataLayer-2.html",
    "title": "Class NativeParallelMultiHashMapDataLayer<TKey, TItem> | Hex Terrains",
    "summary": "Class NativeParallelMultiHashMapDataLayer<TKey, TItem> Base class for all data layers that are based on NativeParallelMultiHashMap{TItem, TItem}. Inheritance object DataLayer NativeParallelMultiHashMapDataLayer<TKey, TItem> AreaCellsDataLayer Implements IDisposable ICommitChanges Inherited Members DataLayer.IsDisposableItems DataLayer._readJobsDependency DataLayer.ReadDependency DataLayer._writeJobsDependency DataLayer.WriteDependency DataLayer.CombinedDependency DataLayer._isDirty DataLayer.IsDirty DataLayer._version DataLayer.Version DataLayer.AddReadDependency(JobHandle) DataLayer.AddWriteDependency(JobHandle) DataLayer.SetReadDependency(JobHandle) DataLayer.SetWriteDependency(JobHandle) DataLayer.PrepareToWrite() DataLayer.PrepareToRead() DataLayer.OpenToRead() DataLayer.OpenToWrite() DataLayer.CompleteReadJobs() DataLayer.CompleteWriteJobs() DataLayer.CompleteAllJobs() DataLayer.CommitChanges() DataLayer.SetDirty(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.Core.DataLayers Assembly: fwt.core.dll Syntax public abstract class NativeParallelMultiHashMapDataLayer<TKey, TItem> : DataLayer, IDisposable, ICommitChanges where TKey : unmanaged, IEquatable<TKey> where TItem : unmanaged Type Parameters Name Description TKey Type of the key to store a data under TItem Type of the data to store in the layer Fields _data Declaration protected NativeParallelMultiHashMap<TKey, TItem> _data Field Value Type Description NativeParallelMultiHashMap<TKey, TItem> Properties Data The container for data in the layer Declaration public NativeParallelMultiHashMap<TKey, TItem> Data { get; } Property Value Type Description NativeParallelMultiHashMap<TKey, TItem> Length Number of items in the layer. Declaration public override int Length { get; } Property Value Type Description int Overrides DataLayer.Length Methods Clear() Clears the underlying multi hash map. Declaration public virtual void Clear() Dispose() Disposes the layer and all of it's data, calls DisposeAllItems() DisposeAllItems() Declaration public override void Dispose() Overrides DataLayer.Dispose() DisposeAllItems() Disposes all items in the layer by calling DisposeDataItem method for each item. DisposeDataItem(TItem) Declaration public override void DisposeAllItems() Overrides DataLayer.DisposeAllItems() DisposeDataItem(TItem) Disposes the item if it is IDisposable. Declaration protected virtual void DisposeDataItem(TItem item) Parameters Type Name Description TItem item Init(int, Allocator) Initializes/Reinitializes the data layer with the specified size. Requires a layer size, because in Jobs we need to know how much memory to allocate, so the underlying native multi hash map is created with capacity of layerSize. Declaration public virtual void Init(int layerSize, Allocator allocator = Allocator.Persistent) Parameters Type Name Description int layerSize max amount of cells in the layer Allocator allocator allocator to create an underlying collection with RemoveData(TKey) Removes a data stored under the provided key. Declaration public virtual void RemoveData(TKey key) Parameters Type Name Description TKey key key to remove a stored data under SetData(TKey, TItem) Puts a data under the provided key. Declaration public virtual void SetData(TKey key, TItem value) Parameters Type Name Description TKey key Key to put data under TItem value data to put under a provided key TryRemoveData(TKey) Tries to remove a data stored under the provided key. Declaration public virtual bool TryRemoveData(TKey key) Parameters Type Name Description TKey key key to remove a stored data under Returns Type Description bool true if data was in the layer TrySetData(TKey, TItem) Gets data stored under the provided key. Declaration public virtual bool TrySetData(TKey key, TItem value) Parameters Type Name Description TKey key key to search data under TItem value value found under provided key. If nothing is found, then default value Returns Type Description bool true if data was found, otherwise - false Implements IDisposable ICommitChanges Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.DataLayers.SetChunksDirtyJob.html": {
    "href": "api/Fwt.Core.DataLayers.SetChunksDirtyJob.html",
    "title": "Struct SetChunksDirtyJob | Hex Terrains",
    "summary": "Struct SetChunksDirtyJob Job that sets the dirty flag for the chunks with indexes provided in DirtyChunks collection. Implements IJob Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.Core.DataLayers Assembly: fwt.core.dll Syntax public struct SetChunksDirtyJob : IJob Fields DirtyChunks Declaration [ReadOnly] public NativeArray<int> DirtyChunks Field Value Type Description NativeArray<int> DirtyGrid Declaration [WriteOnly] public NativeArray<bool> DirtyGrid Field Value Type Description NativeArray<bool> IsClearDirtyChunks If true, after clearing chunks dirty grid clears DirtyChunks Declaration public bool IsClearDirtyChunks Field Value Type Description bool Value Declaration public bool Value Field Value Type Description bool Methods Execute() Implement this method to perform work on a worker thread. Declaration public void Execute() Implements Unity.Jobs.IJob Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.DataLayers.html": {
    "href": "api/Fwt.Core.DataLayers.html",
    "title": "Namespace Fwt.Core.DataLayers | Hex Terrains",
    "summary": "Namespace Fwt.Core.DataLayers Classes ArrayChunkedDataLayer<TItem> Base class for data layers that use array as a data storage and track changes per chunk. ArrayDataLayer<TItem> Base class for all data layers that use an array as a data container. ChunkedDataLayer Base class for all chunked data layers (DataLayer). Chunked data layer is a container for data that tracks changes per chunk. When intializing the data layer, it creates a grid of chunks. Each cell in this grid is a dirty flag for the chunk. When a cell is modified, the corresponding chunk is marked as dirty and also the whole layer is marked as dirty. The layer contains a dirty flags per chunk in ChunkDirtyGrid NativeList. The layer contains indexes of dirty chunks in DirtyChunks NativeParallelHashSet. To divide a layer into chunks, the layer must be initialized with a size of the layer (width and height) and a size of the chunks. DataLayer Base class for all data layers. Data Layer is a container for data that can be read and written to. Data Layer allows for parallel reading and writing of data. It tracks dependencies for reading and writing jobs. If you want to read data immediately, call DataLayer.OpenToRead() before reading. If you want to write data immediately, call DataLayer.OpenToWrite() before writing. If you want to schedule a job that reads data, call DataLayer.PrepareToRead() before scheduling the job (returns a JobHandle to use as dependency in your job) If you want to schedule a job that writes data, call DataLayer.PrepareToWrite() before scheduling the job (returns a JobHandle to use as dependency in your job) DictionaryDataLayer<TKey, TItem> Base class for all data layers that use a dictionary as a data structure. HashSetDataLayer<TItem> Base class for all data layers that use HashSet as a data structure. ListChunkedDataLayer<TItem> Base class for data layers that use Array{T} as a data storage and track changes per chunk. ListDataLayer<TItem> Base class for all data layers that are based on Array{T}. NativeArrayChunkedDataLayer<TItem> Base class for data layers that use NativeArray{T} as a data storage and track changes per chunk. NativeArrayDataLayer<TItem> Base class for all data layers that are based on NativeArray{T}. NativeHashMapDataLayer<TKey, TItem> Base class for all data layers that are based on NativeHashMap{TItem, TItem}. NativeHashSetDataLayer<TItem> Base class for all data layers that are based on NativeHashSet{T}. NativeListChunkedDataLayer<TItem> Base class for all data layers that are based on NativeList{T}. NativeListDataLayer<TItem> Base class for all data layers that are based on NativeList{T}. NativeParallelHashMapDataLayer<TKey, TItem> Base class for all data layers that are based on NativeParallelHashMap{TItem, TItem}. NativeParallelHashSetDataLayer<TItem> Base class for all data layers that are based on NativeParallelHashSet{T}. NativeParallelMultiHashMapDataLayer<TKey, TItem> Base class for all data layers that are based on NativeParallelMultiHashMap{TItem, TItem}. Structs ClearNativeParallelHashSetJob<TItem> Job that clears the dirty chunks hash set. Used to schedule this operation after all jobs that read/write to the data layer are completed FillDirtyChunksJob Job that fills the dirty chunks list with chunk indexes. MergeDataLayerDirtyGridsJob1 Job that merges dirty grids from 4 sources into a target grid. If the source or target grid is dirty, the target grid is marked as dirty. MergeDataLayerDirtyGridsJob2 Job that merges dirty grids from 2 sources into a target grid. If any of the source/target grids is dirty, the target grid is marked as dirty. MergeDataLayerDirtyGridsJob3 Job that merges dirty grids from 3 sources into a target grid. If any of the source/target grids is dirty, the target grid is marked as dirty. MergeDataLayerDirtyGridsJob4 Job that merges dirty grids from 4 sources into a target grid. If any of the source/target grids is dirty, the target grid is marked as dirty. SetChunksDirtyJob Job that sets the dirty flag for the chunks with indexes provided in DirtyChunks collection. Interfaces IListDataLayer<TItem> Interface for all the data layers that have length and allows to get/set value."
  },
  "api/Fwt.Core.Ecs.AssetsControl.SystemBase_AssetsControl-1.html": {
    "href": "api/Fwt.Core.Ecs.AssetsControl.SystemBase_AssetsControl-1.html",
    "title": "Class SystemBase_AssetsControl<TAsset> | Hex Terrains",
    "summary": "Class SystemBase_AssetsControl<TAsset> Inheritance object ComponentSystemBase SystemBase SystemBase_AssetsControl<TAsset> System_AssetsControl_GameObject System_AssetsControl_Material System_AssetsControl_Mesh System_AssetsControl_Object System_AssetsControl_Sprite System_AssetsControl_Texture2D Inherited Members SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.Core.Ecs.AssetsControl Assembly: fwt.core.ecs.dll Syntax public abstract class SystemBase_AssetsControl<TAsset> : SystemBase where TAsset : Object Type Parameters Name Description TAsset Fields Assets List of all registered assets Declaration public List<TAsset> Assets Field Value Type Description List<TAsset> EmptySlots list of indexes in Assets array that are considered as empty, so next time asset will be registered, it'll be added to empty slot (if any) instead of adding it to the end of Assets list Declaration public List<int> EmptySlots Field Value Type Description List<int> IndexByAsset Key: Asset, Value: index this asset is registered Declaration public Dictionary<TAsset, int> IndexByAsset Field Value Type Description Dictionary<TAsset, int> Methods GetAsset(int) Gets assets by index it's registered under Declaration public TAsset GetAsset(int index) Parameters Type Name Description int index Returns Type Description TAsset GetAssetIndex(TAsset) Returns Index given asset is registered under. Returns null if nothing found Declaration public int? GetAssetIndex(TAsset value) Parameters Type Name Description TAsset value Returns Type Description int? OnUpdate() Implement OnUpdate() to perform the major work of this system. Declaration protected override void OnUpdate() Overrides Unity.Entities.SystemBase.OnUpdate() Remarks By default, the system invokes `OnUpdate()` once every frame on the main thread. To skip OnUpdate if all of the system's [EntityQueries] are empty, use the [RequireMatchingQueriesForUpdateAttribute]. To limit when OnUpdate is invoked, you can specify components that must exist, or queries that match specific Entities. To do this, call Unity.Entities.ComponentSystemBase.RequireForUpdate<T>() or Unity.Entities.ComponentSystemBase.RequireForUpdate(Unity.Entities.EntityQuery) in the system's OnCreate method. For more information, see [ShouldRunSystem]. The [Entities.ForEach] and [Job.WithCode] constructions provide convenient mechanisms for defining jobs. You can also instantiate and schedule an Unity.Entities.IJobChunk instance; you can use the [C# Job System] or you can perform work on the main thread. If you call Unity.Entities.EntityManager methods that perform structural changes on the main thread, be sure to arrange the system order to minimize the performance impact of the resulting [sync points]. RegisterAsset(TAsset) Returns index given asset is registered under. If Asset is not registered, Registers it. Declaration public int? RegisterAsset(TAsset value) Parameters Type Name Description TAsset value Returns Type Description int? UnregisterAsset(int) Unregisters asset that is registered by given index Declaration public void UnregisterAsset(int index) Parameters Type Name Description int index UnregisterAsset(TAsset) Unregisters asset (if already registered) Declaration public void UnregisterAsset(TAsset asset) Parameters Type Name Description TAsset asset Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.Ecs.AssetsControl.System_AssetsControl_GameObject.html": {
    "href": "api/Fwt.Core.Ecs.AssetsControl.System_AssetsControl_GameObject.html",
    "title": "Class System_AssetsControl_GameObject | Hex Terrains",
    "summary": "Class System_AssetsControl_GameObject Inheritance object ComponentSystemBase SystemBase SystemBase_AssetsControl<GameObject> System_AssetsControl_GameObject Inherited Members SystemBase_AssetsControl<GameObject>.Assets SystemBase_AssetsControl<GameObject>.EmptySlots SystemBase_AssetsControl<GameObject>.IndexByAsset SystemBase_AssetsControl<GameObject>.GetAssetIndex(GameObject) SystemBase_AssetsControl<GameObject>.GetAsset(int) SystemBase_AssetsControl<GameObject>.RegisterAsset(GameObject) SystemBase_AssetsControl<GameObject>.UnregisterAsset(GameObject) SystemBase_AssetsControl<GameObject>.UnregisterAsset(int) SystemBase_AssetsControl<GameObject>.OnUpdate() SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.Core.Ecs.AssetsControl Assembly: fwt.core.ecs.dll Syntax public class System_AssetsControl_GameObject : SystemBase_AssetsControl<GameObject> Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.Ecs.AssetsControl.System_AssetsControl_Material.html": {
    "href": "api/Fwt.Core.Ecs.AssetsControl.System_AssetsControl_Material.html",
    "title": "Class System_AssetsControl_Material | Hex Terrains",
    "summary": "Class System_AssetsControl_Material Inheritance object ComponentSystemBase SystemBase SystemBase_AssetsControl<Material> System_AssetsControl_Material Inherited Members SystemBase_AssetsControl<Material>.Assets SystemBase_AssetsControl<Material>.EmptySlots SystemBase_AssetsControl<Material>.IndexByAsset SystemBase_AssetsControl<Material>.GetAssetIndex(Material) SystemBase_AssetsControl<Material>.GetAsset(int) SystemBase_AssetsControl<Material>.RegisterAsset(Material) SystemBase_AssetsControl<Material>.UnregisterAsset(Material) SystemBase_AssetsControl<Material>.UnregisterAsset(int) SystemBase_AssetsControl<Material>.OnUpdate() SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.Core.Ecs.AssetsControl Assembly: fwt.core.ecs.dll Syntax public class System_AssetsControl_Material : SystemBase_AssetsControl<Material> Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.Ecs.AssetsControl.System_AssetsControl_Mesh.html": {
    "href": "api/Fwt.Core.Ecs.AssetsControl.System_AssetsControl_Mesh.html",
    "title": "Class System_AssetsControl_Mesh | Hex Terrains",
    "summary": "Class System_AssetsControl_Mesh Inheritance object ComponentSystemBase SystemBase SystemBase_AssetsControl<Mesh> System_AssetsControl_Mesh Inherited Members SystemBase_AssetsControl<Mesh>.Assets SystemBase_AssetsControl<Mesh>.EmptySlots SystemBase_AssetsControl<Mesh>.IndexByAsset SystemBase_AssetsControl<Mesh>.GetAssetIndex(Mesh) SystemBase_AssetsControl<Mesh>.GetAsset(int) SystemBase_AssetsControl<Mesh>.RegisterAsset(Mesh) SystemBase_AssetsControl<Mesh>.UnregisterAsset(Mesh) SystemBase_AssetsControl<Mesh>.UnregisterAsset(int) SystemBase_AssetsControl<Mesh>.OnUpdate() SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.Core.Ecs.AssetsControl Assembly: fwt.core.ecs.dll Syntax public class System_AssetsControl_Mesh : SystemBase_AssetsControl<Mesh> Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.Ecs.AssetsControl.System_AssetsControl_Object.html": {
    "href": "api/Fwt.Core.Ecs.AssetsControl.System_AssetsControl_Object.html",
    "title": "Class System_AssetsControl_Object | Hex Terrains",
    "summary": "Class System_AssetsControl_Object Inheritance object ComponentSystemBase SystemBase SystemBase_AssetsControl<Object> System_AssetsControl_Object Inherited Members SystemBase_AssetsControl<Object>.Assets SystemBase_AssetsControl<Object>.EmptySlots SystemBase_AssetsControl<Object>.IndexByAsset SystemBase_AssetsControl<Object>.GetAssetIndex(Object) SystemBase_AssetsControl<Object>.GetAsset(int) SystemBase_AssetsControl<Object>.RegisterAsset(Object) SystemBase_AssetsControl<Object>.UnregisterAsset(Object) SystemBase_AssetsControl<Object>.UnregisterAsset(int) SystemBase_AssetsControl<Object>.OnUpdate() SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.Core.Ecs.AssetsControl Assembly: fwt.core.ecs.dll Syntax public class System_AssetsControl_Object : SystemBase_AssetsControl<Object> Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.Ecs.AssetsControl.System_AssetsControl_Sprite.html": {
    "href": "api/Fwt.Core.Ecs.AssetsControl.System_AssetsControl_Sprite.html",
    "title": "Class System_AssetsControl_Sprite | Hex Terrains",
    "summary": "Class System_AssetsControl_Sprite Inheritance object ComponentSystemBase SystemBase SystemBase_AssetsControl<Sprite> System_AssetsControl_Sprite Inherited Members SystemBase_AssetsControl<Sprite>.Assets SystemBase_AssetsControl<Sprite>.EmptySlots SystemBase_AssetsControl<Sprite>.IndexByAsset SystemBase_AssetsControl<Sprite>.GetAssetIndex(Sprite) SystemBase_AssetsControl<Sprite>.GetAsset(int) SystemBase_AssetsControl<Sprite>.RegisterAsset(Sprite) SystemBase_AssetsControl<Sprite>.UnregisterAsset(Sprite) SystemBase_AssetsControl<Sprite>.UnregisterAsset(int) SystemBase_AssetsControl<Sprite>.OnUpdate() SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.Core.Ecs.AssetsControl Assembly: fwt.core.ecs.dll Syntax public class System_AssetsControl_Sprite : SystemBase_AssetsControl<Sprite> Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.Ecs.AssetsControl.System_AssetsControl_Texture2D.html": {
    "href": "api/Fwt.Core.Ecs.AssetsControl.System_AssetsControl_Texture2D.html",
    "title": "Class System_AssetsControl_Texture2D | Hex Terrains",
    "summary": "Class System_AssetsControl_Texture2D Inheritance object ComponentSystemBase SystemBase SystemBase_AssetsControl<Texture2D> System_AssetsControl_Texture2D Inherited Members SystemBase_AssetsControl<Texture2D>.Assets SystemBase_AssetsControl<Texture2D>.EmptySlots SystemBase_AssetsControl<Texture2D>.IndexByAsset SystemBase_AssetsControl<Texture2D>.GetAssetIndex(Texture2D) SystemBase_AssetsControl<Texture2D>.GetAsset(int) SystemBase_AssetsControl<Texture2D>.RegisterAsset(Texture2D) SystemBase_AssetsControl<Texture2D>.UnregisterAsset(Texture2D) SystemBase_AssetsControl<Texture2D>.UnregisterAsset(int) SystemBase_AssetsControl<Texture2D>.OnUpdate() SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.Core.Ecs.AssetsControl Assembly: fwt.core.ecs.dll Syntax public class System_AssetsControl_Texture2D : SystemBase_AssetsControl<Texture2D> Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.Ecs.AssetsControl.html": {
    "href": "api/Fwt.Core.Ecs.AssetsControl.html",
    "title": "Namespace Fwt.Core.Ecs.AssetsControl | Hex Terrains",
    "summary": "Namespace Fwt.Core.Ecs.AssetsControl Classes SystemBase_AssetsControl<TAsset> System_AssetsControl_GameObject System_AssetsControl_Material System_AssetsControl_Mesh System_AssetsControl_Object System_AssetsControl_Sprite System_AssetsControl_Texture2D"
  },
  "api/Fwt.Core.EcsEntity.html": {
    "href": "api/Fwt.Core.EcsEntity.html",
    "title": "Struct EcsEntity | Hex Terrains",
    "summary": "Struct EcsEntity Struct that can replace Entity struct (to hold it in SharedData, for example) Implements IEquatable<Entity> IEquatable<EcsEntity> Inherited Members ValueType.Equals(object) ValueType.GetHashCode() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.Core Assembly: fwt.core.ecs.dll Syntax [Serializable] public struct EcsEntity : IEquatable<Entity>, IEquatable<EcsEntity> Fields Index Declaration public int Index Field Value Type Description int Version Declaration public int Version Field Value Type Description int Methods Equals(EcsEntity) Declaration public bool Equals(EcsEntity other) Parameters Type Name Description EcsEntity other Returns Type Description bool Equals(Entity) Declaration public bool Equals(Entity other) Parameters Type Name Description Entity other Returns Type Description bool ToString() Declaration public override string ToString() Returns Type Description string Overrides ValueType.ToString() Operators implicit operator Entity(EcsEntity) Declaration public static implicit operator Entity(EcsEntity source) Parameters Type Name Description EcsEntity source Returns Type Description Entity implicit operator EcsEntity(Entity) Declaration public static implicit operator EcsEntity(Entity source) Parameters Type Name Description Entity source Returns Type Description EcsEntity Implements IEquatable<T> IEquatable<T> Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.Extensions_Collections.ClearNativeHashMapJob-2.html": {
    "href": "api/Fwt.Core.Extensions_Collections.ClearNativeHashMapJob-2.html",
    "title": "Struct Extensions_Collections.ClearNativeHashMapJob<TKey, TValue> | Hex Terrains",
    "summary": "Struct Extensions_Collections.ClearNativeHashMapJob<TKey, TValue> Clears a collection Implements IJob Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.Core Assembly: fwt.core.dll Syntax public struct Extensions_Collections.ClearNativeHashMapJob<TKey, TValue> : IJob where TKey : unmanaged, IEquatable<TKey> where TValue : unmanaged Type Parameters Name Description TKey Type of key in a collection TValue Type of value in a collection Fields Items Collection to clear Declaration [WriteOnly] public NativeHashMap<TKey, TValue> Items Field Value Type Description NativeHashMap<TKey, TValue> Methods Execute() Implement this method to perform work on a worker thread. Declaration public void Execute() Implements Unity.Jobs.IJob Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.Extensions_Collections.ClearNativeHashSetJob-1.html": {
    "href": "api/Fwt.Core.Extensions_Collections.ClearNativeHashSetJob-1.html",
    "title": "Struct Extensions_Collections.ClearNativeHashSetJob<TItem> | Hex Terrains",
    "summary": "Struct Extensions_Collections.ClearNativeHashSetJob<TItem> Clears a collection Implements IJob Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.Core Assembly: fwt.core.dll Syntax public struct Extensions_Collections.ClearNativeHashSetJob<TItem> : IJob where TItem : unmanaged, IEquatable<TItem> Type Parameters Name Description TItem Type of items in the collection Fields Items Collection to clear Declaration [WriteOnly] public NativeHashSet<TItem> Items Field Value Type Description NativeHashSet<TItem> Methods Execute() Implement this method to perform work on a worker thread. Declaration public void Execute() Implements Unity.Jobs.IJob Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.Extensions_Collections.ClearNativeListJob-1.html": {
    "href": "api/Fwt.Core.Extensions_Collections.ClearNativeListJob-1.html",
    "title": "Struct Extensions_Collections.ClearNativeListJob<TItem> | Hex Terrains",
    "summary": "Struct Extensions_Collections.ClearNativeListJob<TItem> Clears a collection Implements IJob Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.Core Assembly: fwt.core.dll Syntax public struct Extensions_Collections.ClearNativeListJob<TItem> : IJob where TItem : unmanaged Type Parameters Name Description TItem Type of items in the collection Fields Items Collection to clear Declaration [WriteOnly] public NativeList<TItem> Items Field Value Type Description NativeList<TItem> Methods Execute() Implement this method to perform work on a worker thread. Declaration public void Execute() Implements Unity.Jobs.IJob Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.Extensions_Collections.ClearNativeParallelHashMapJob-2.html": {
    "href": "api/Fwt.Core.Extensions_Collections.ClearNativeParallelHashMapJob-2.html",
    "title": "Struct Extensions_Collections.ClearNativeParallelHashMapJob<TKey, TValue> | Hex Terrains",
    "summary": "Struct Extensions_Collections.ClearNativeParallelHashMapJob<TKey, TValue> Clears a collection Implements IJob Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.Core Assembly: fwt.core.dll Syntax public struct Extensions_Collections.ClearNativeParallelHashMapJob<TKey, TValue> : IJob where TKey : unmanaged, IEquatable<TKey> where TValue : unmanaged Type Parameters Name Description TKey Type of key in a collection TValue Type of value in a collection Fields Items Collection to clear Declaration [WriteOnly] public NativeParallelHashMap<TKey, TValue> Items Field Value Type Description NativeParallelHashMap<TKey, TValue> Methods Execute() Implement this method to perform work on a worker thread. Declaration public void Execute() Implements Unity.Jobs.IJob Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.Extensions_Collections.ClearNativeParallelHashSetJob-1.html": {
    "href": "api/Fwt.Core.Extensions_Collections.ClearNativeParallelHashSetJob-1.html",
    "title": "Struct Extensions_Collections.ClearNativeParallelHashSetJob<TItem> | Hex Terrains",
    "summary": "Struct Extensions_Collections.ClearNativeParallelHashSetJob<TItem> Clears a collection Implements IJob Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.Core Assembly: fwt.core.dll Syntax public struct Extensions_Collections.ClearNativeParallelHashSetJob<TItem> : IJob where TItem : unmanaged, IEquatable<TItem> Type Parameters Name Description TItem Type of items in the collection Fields Items Collection to clear Declaration [WriteOnly] public NativeParallelHashSet<TItem> Items Field Value Type Description NativeParallelHashSet<TItem> Methods Execute() Implement this method to perform work on a worker thread. Declaration public void Execute() Implements Unity.Jobs.IJob Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.Extensions_Collections.ClearNativeParallelMultiHashMapJob-2.html": {
    "href": "api/Fwt.Core.Extensions_Collections.ClearNativeParallelMultiHashMapJob-2.html",
    "title": "Struct Extensions_Collections.ClearNativeParallelMultiHashMapJob<TKey, TValue> | Hex Terrains",
    "summary": "Struct Extensions_Collections.ClearNativeParallelMultiHashMapJob<TKey, TValue> Clears a collection Implements IJob Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.Core Assembly: fwt.core.dll Syntax public struct Extensions_Collections.ClearNativeParallelMultiHashMapJob<TKey, TValue> : IJob where TKey : unmanaged, IEquatable<TKey> where TValue : unmanaged Type Parameters Name Description TKey Type of key in a collection TValue Type of value in a collection Fields Items Declaration [WriteOnly] public NativeParallelMultiHashMap<TKey, TValue> Items Field Value Type Description NativeParallelMultiHashMap<TKey, TValue> Methods Execute() Implement this method to perform work on a worker thread. Declaration public void Execute() Implements Unity.Jobs.IJob Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.Extensions_Collections.CopyToAndConvertJob-2.html": {
    "href": "api/Fwt.Core.Extensions_Collections.CopyToAndConvertJob-2.html",
    "title": "Struct Extensions_Collections.CopyToAndConvertJob<TSource, TTarget> | Hex Terrains",
    "summary": "Struct Extensions_Collections.CopyToAndConvertJob<TSource, TTarget> Copies items from one collection to another, converting values while copying. Implements IJobParallelFor Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.Core Assembly: fwt.core.dll Syntax public struct Extensions_Collections.CopyToAndConvertJob<TSource, TTarget> : IJobParallelFor where TSource : unmanaged where TTarget : unmanaged, IConvertableTo<TSource> Type Parameters Name Description TSource Type of source collection TTarget Type of target collection Fields Source Source collection to copy data from Declaration [ReadOnly] public NativeArray<TSource> Source Field Value Type Description NativeArray<TSource> Target Target collection to copy data to Declaration [WriteOnly] public NativeArray<TTarget> Target Field Value Type Description NativeArray<TTarget> Methods Execute(int) Performs work against a specific iteration index. Declaration public void Execute(int index) Parameters Type Name Description int index The index of the Parallel for loop at which to perform work. Implements Unity.Jobs.IJobParallelFor Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.Extensions_Collections.CopyToAndConvertJob_Reverse-2.html": {
    "href": "api/Fwt.Core.Extensions_Collections.CopyToAndConvertJob_Reverse-2.html",
    "title": "Struct Extensions_Collections.CopyToAndConvertJob_Reverse<TSource, TTarget> | Hex Terrains",
    "summary": "Struct Extensions_Collections.CopyToAndConvertJob_Reverse<TSource, TTarget> Copies items from one collection to another, converting values while copying. Copies data in reverse, so the last item in the source collection will be copied to the first item in the target collection. Implements IJobParallelFor Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.Core Assembly: fwt.core.dll Syntax public struct Extensions_Collections.CopyToAndConvertJob_Reverse<TSource, TTarget> : IJobParallelFor where TSource : unmanaged, IConvertableFrom<TSource, TTarget> where TTarget : unmanaged Type Parameters Name Description TSource Type of item in a source collection TTarget Type of item in a target collection Fields Source Source collection to copy data from Declaration [ReadOnly] public NativeArray<TSource> Source Field Value Type Description NativeArray<TSource> Target Target collection to copy data to Declaration [WriteOnly] public NativeArray<TTarget> Target Field Value Type Description NativeArray<TTarget> Methods Execute(int) Performs work against a specific iteration index. Declaration public void Execute(int index) Parameters Type Name Description int index The index of the Parallel for loop at which to perform work. Implements Unity.Jobs.IJobParallelFor Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.Extensions_Collections.FillNativeArrayJob-1.html": {
    "href": "api/Fwt.Core.Extensions_Collections.FillNativeArrayJob-1.html",
    "title": "Struct Extensions_Collections.FillNativeArrayJob<TItem> | Hex Terrains",
    "summary": "Struct Extensions_Collections.FillNativeArrayJob<TItem> Fills every cell in a collection with provided value. Implements IJobParallelFor Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.Core Assembly: fwt.core.dll Syntax public struct Extensions_Collections.FillNativeArrayJob<TItem> : IJobParallelFor where TItem : unmanaged Type Parameters Name Description TItem Type of item in a collection Fields Array Collection to fill Declaration [WriteOnly] public NativeArray<TItem> Array Field Value Type Description NativeArray<TItem> Value Value to put in every cell Declaration public TItem Value Field Value Type Description TItem Methods Execute(int) Performs work against a specific iteration index. Declaration public void Execute(int index) Parameters Type Name Description int index The index of the Parallel for loop at which to perform work. Implements Unity.Jobs.IJobParallelFor Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.Extensions_Collections.FillNativeListJob-1.html": {
    "href": "api/Fwt.Core.Extensions_Collections.FillNativeListJob-1.html",
    "title": "Struct Extensions_Collections.FillNativeListJob<TItem> | Hex Terrains",
    "summary": "Struct Extensions_Collections.FillNativeListJob<TItem> Fills every cell in a collection with provided value. Implements IJobParallelFor Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.Core Assembly: fwt.core.dll Syntax public struct Extensions_Collections.FillNativeListJob<TItem> : IJobParallelFor where TItem : unmanaged Type Parameters Name Description TItem Type of item in a collection Fields List Collection to fill Declaration [WriteOnly] public NativeList<TItem> List Field Value Type Description NativeList<TItem> Value Value to put in every cell Declaration public TItem Value Field Value Type Description TItem Methods Execute(int) Performs work against a specific iteration index. Declaration public void Execute(int index) Parameters Type Name Description int index The index of the Parallel for loop at which to perform work. Implements Unity.Jobs.IJobParallelFor Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.Extensions_Collections.SetItemsCountJob-1.html": {
    "href": "api/Fwt.Core.Extensions_Collections.SetItemsCountJob-1.html",
    "title": "Struct Extensions_Collections.SetItemsCountJob<TItem> | Hex Terrains",
    "summary": "Struct Extensions_Collections.SetItemsCountJob<TItem> Sets a count of items in a collection. If collection is smaller than count, it will add items to the collection. If collection is larger than count, it will remove items from the collection. Implements IJob Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.Core Assembly: fwt.core.dll Syntax public struct Extensions_Collections.SetItemsCountJob<TItem> : IJob where TItem : unmanaged Type Parameters Name Description TItem Type of items in the collection Fields Count Target count of items in the collection Declaration public int Count Field Value Type Description int DefaultValue Default value to put in every cell if collection is smaller than count Declaration public TItem DefaultValue Field Value Type Description TItem Items Collection to set a count of items Declaration [WriteOnly] public NativeList<TItem> Items Field Value Type Description NativeList<TItem> Methods Execute() Implement this method to perform work on a worker thread. Declaration public void Execute() Implements Unity.Jobs.IJob Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.Extensions_Collections.html": {
    "href": "api/Fwt.Core.Extensions_Collections.html",
    "title": "Class Extensions_Collections | Hex Terrains",
    "summary": "Class Extensions_Collections Extensions for collections (Clear, SetItemsCount, Fill, etc.) Inheritance object Extensions_Collections Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.Core Assembly: fwt.core.dll Syntax [BurstCompile] public static class Extensions_Collections Methods ClearNativeHashMapAsync<TKey, TItem>(NativeHashMap<TKey, TItem>, JobHandle) Clears a NativeList. Schedules a job and returns a JobHandle to it. Declaration [BurstCompile] public static JobHandle ClearNativeHashMapAsync<TKey, TItem>(this NativeHashMap<TKey, TItem> items, JobHandle dependency) where TKey : unmanaged, IEquatable<TKey> where TItem : unmanaged Parameters Type Name Description NativeHashMap<TKey, TItem> items the collection to clear JobHandle dependency dependency for a job that will be scheduled Returns Type Description JobHandle JobHandle to the scheduled job Type Parameters Name Description TKey Type of key in a HashMap TItem Type of item in a collection ClearNativeHashSetAsync<TKey>(NativeHashSet<TKey>, JobHandle) Clears a NativeList. Schedules a job and returns a JobHandle to it. Declaration [BurstCompile] public static JobHandle ClearNativeHashSetAsync<TKey>(this NativeHashSet<TKey> items, JobHandle dependency) where TKey : unmanaged, IEquatable<TKey> Parameters Type Name Description NativeHashSet<TKey> items the collection to clear JobHandle dependency dependency for a job that will be scheduled Returns Type Description JobHandle JobHandle to the scheduled job Type Parameters Name Description TKey Type of key in a HashSet ClearNativeParallelHashMapAsync<TKey, TItem>(NativeParallelHashMap<TKey, TItem>, JobHandle) Clears a NativeParallelHashMap. Schedules a job and returns a JobHandle to it. Declaration [BurstCompile] public static JobHandle ClearNativeParallelHashMapAsync<TKey, TItem>(this NativeParallelHashMap<TKey, TItem> items, JobHandle dependency) where TKey : unmanaged, IEquatable<TKey> where TItem : unmanaged Parameters Type Name Description NativeParallelHashMap<TKey, TItem> items the collection to clear JobHandle dependency dependency for a job that will be scheduled Returns Type Description JobHandle JobHandle to the scheduled job Type Parameters Name Description TKey Type of key in a HashMap TItem Type of item in a collection ClearNativeParallelHashSetAsync<TKey>(NativeParallelHashSet<TKey>, JobHandle) Clears a NativeParallelHashSet. Schedules a job and returns a JobHandle to it. Declaration [BurstCompile] public static JobHandle ClearNativeParallelHashSetAsync<TKey>(this NativeParallelHashSet<TKey> items, JobHandle dependency) where TKey : unmanaged, IEquatable<TKey> Parameters Type Name Description NativeParallelHashSet<TKey> items the collection to clear JobHandle dependency dependency for a job that will be scheduled Returns Type Description JobHandle JobHandle to the scheduled job Type Parameters Name Description TKey Type of key in a HashSet ClearNativeParallelMultiHashMapAsync<TKey, TItem>(NativeParallelMultiHashMap<TKey, TItem>, JobHandle) Clears a NativeParallelMultiHashMap. Schedules a job and returns a JobHandle to it. Declaration [BurstCompile] public static JobHandle ClearNativeParallelMultiHashMapAsync<TKey, TItem>(this NativeParallelMultiHashMap<TKey, TItem> items, JobHandle dependency) where TKey : unmanaged, IEquatable<TKey> where TItem : unmanaged Parameters Type Name Description NativeParallelMultiHashMap<TKey, TItem> items the collection to clear JobHandle dependency dependency for a job that will be scheduled Returns Type Description JobHandle JobHandle to the scheduled job Type Parameters Name Description TKey Type of key in a HashMap TItem Type of item in a collection Clone<TItem>(NativeArray<TItem>, Allocator) Clone a NativeArray to a new NativeArray with the same items Declaration [BurstCompile] public static NativeArray<TItem> Clone<TItem>(this NativeArray<TItem> source, Allocator allocator) where TItem : unmanaged Parameters Type Name Description NativeArray<TItem> source Where to copy data from Allocator allocator Allocator to create a new collection with Returns Type Description NativeArray<TItem> newly created collection Type Parameters Name Description TItem Type of items in the collection Clone<TItem>(NativeList<TItem>, Allocator) Clone a NativeList to a new NativeList with the same items Declaration [BurstCompile] public static NativeList<TItem> Clone<TItem>(this NativeList<TItem> source, Allocator allocator) where TItem : unmanaged Parameters Type Name Description NativeList<TItem> source Where to copy data from Allocator allocator Allocator to create a new collection with Returns Type Description NativeList<TItem> newly created collection Type Parameters Name Description TItem Type of items in the collection CopyToAndConvert_Reverse<TSource, TTarget>(NativeList<TSource>, NativeList<TTarget>) Tries to copy items from one collection to another, converting values while copying. If the collections are not created or have different lengths, it will do nothing. Copies data in reverse. Schedules a job and waits for it to complete. Declaration [BurstCompile] public static bool CopyToAndConvert_Reverse<TSource, TTarget>(this NativeList<TSource> source, NativeList<TTarget> target) where TSource : unmanaged, IConvertableFrom<TSource, TTarget> where TTarget : unmanaged Parameters Type Name Description NativeList<TSource> source source collection NativeList<TTarget> target target collection Returns Type Description bool true if successfull, otherwise - false Type Parameters Name Description TSource Type of item in a source collection TTarget Type of item in a target collection CopyToAndConvert_Reverse<TSource, TTarget>(NativeList<TSource>, NativeList<TTarget>, out JobHandle) Tries to copy items from one collection to another, converting values while copying. If the collections are not created or have different lengths, it will do nothing. Copies data in reverse. Schedules a job and waits for it to complete. Declaration [BurstCompile] public static bool CopyToAndConvert_Reverse<TSource, TTarget>(this NativeList<TSource> source, NativeList<TTarget> target, out JobHandle jobHandle) where TSource : unmanaged, IConvertableFrom<TSource, TTarget> where TTarget : unmanaged Parameters Type Name Description NativeList<TSource> source source collection NativeList<TTarget> target target collection JobHandle jobHandle Returns Type Description bool true if successfull, otherwise - false Type Parameters Name Description TSource Type of item in a source collection TTarget Type of item in a target collection CopyToAndConvert<TSource, TTarget>(NativeList<TSource>, NativeList<TTarget>) Tries to copy items from one collection to another, converting values while copying. If the collections are not created or have different lengths, it will do nothing. Declaration [BurstCompile] public static bool CopyToAndConvert<TSource, TTarget>(this NativeList<TSource> source, NativeList<TTarget> target) where TSource : unmanaged where TTarget : unmanaged, IConvertableTo<TSource> Parameters Type Name Description NativeList<TSource> source source collection to copy data FROM NativeList<TTarget> target target collection to copy data TO Returns Type Description bool True if successfull, otherwise - false Type Parameters Name Description TSource Type of item in a source collection TTarget Type of item in a target collection CopyToAndConvert<TSource, TTarget>(NativeList<TSource>, NativeList<TTarget>, out JobHandle) Tries to copy items from one collection to another, converting values while copying. If the collections are not created or have different lengths, it will do nothing. Declaration [BurstCompile] public static bool CopyToAndConvert<TSource, TTarget>(this NativeList<TSource> source, NativeList<TTarget> target, out JobHandle jobHandle) where TSource : unmanaged where TTarget : unmanaged, IConvertableTo<TSource> Parameters Type Name Description NativeList<TSource> source source collection to copy data FROM NativeList<TTarget> target target collection to copy data TO JobHandle jobHandle Schedules a job. This is a job handle of the scheduled job Returns Type Description bool True if successfull, otherwise - false Type Parameters Name Description TSource Type of item in a source collection TTarget Type of item in a target collection FillArrayAsync<TItem>(NativeArray<TItem>, TItem, JobHandle) Fill every cell in collection with provided value. Schedules a job and returns a JobHandle. Declaration [BurstCompile] public static JobHandle FillArrayAsync<TItem>(this NativeArray<TItem> target, TItem item, JobHandle dependency) where TItem : unmanaged Parameters Type Name Description NativeArray<TItem> target collection to fill TItem item item value to put in every cell JobHandle dependency function schedules a job, so this JobHandle is used as dependency in that job Returns Type Description JobHandle JobHandle to the job that fills a collection Type Parameters Name Description TItem Type of item in the collection FillArray<TItem>(NativeArray<TItem>, TItem, JobHandle) Fill every cell in collection with provided value. Schedules a job and waits for it to complete. Declaration [BurstCompile] public static void FillArray<TItem>(this NativeArray<TItem> target, TItem item, JobHandle dependency = default) where TItem : unmanaged Parameters Type Name Description NativeArray<TItem> target collection to fill TItem item item value to put in every cell JobHandle dependency function schedules a job, so this JobHandle is used as dependency in that job Type Parameters Name Description TItem Type of item in the collection FillListAsync<TItem>(NativeList<TItem>, TItem, JobHandle) Fill every cell in collection with provided value. Schedules a job and returns a JobHandle. Declaration [BurstCompile] public static JobHandle FillListAsync<TItem>(this NativeList<TItem> target, TItem item, JobHandle dependency) where TItem : unmanaged Parameters Type Name Description NativeList<TItem> target collection to fill TItem item item value to put in every cell JobHandle dependency function schedules a job, so this JobHandle is used as dependency in that job Returns Type Description JobHandle JobHandle to the job that fills a collection Type Parameters Name Description TItem Type of item in the collection FillList<TItem>(List<TItem>, TItem) Fill every cell in collection with provided value. Declaration public static void FillList<TItem>(this List<TItem> target, TItem item) Parameters Type Name Description List<TItem> target collection to fill TItem item item value to put in every cell Type Parameters Name Description TItem Type of item in the collection FillList<TItem>(NativeList<TItem>, TItem, JobHandle) Fill every cell in collection with provided value. Schedules a job and waits for it to complete. Declaration [BurstCompile] public static void FillList<TItem>(this NativeList<TItem> target, TItem item, JobHandle dependency = default) where TItem : unmanaged Parameters Type Name Description NativeList<TItem> target collection to fill TItem item item value to put in every cell JobHandle dependency function schedules a job, so this JobHandle is used as dependency in that job Type Parameters Name Description TItem Type of item in the collection GetRandom<TItem>(IList<TItem>) Get a random item from the list Declaration public static TItem GetRandom<TItem>(this IList<TItem> list) Parameters Type Name Description IList<TItem> list list to get an item from Returns Type Description TItem random item from the list. If list is null or empty, returns default Type Parameters Name Description TItem Type of item in the list SetItemsCount<TItem>(List<TItem>, int, bool) Set the count of items in a Array. If the count is less than the current length, it will remove items from the end. Declaration public static bool SetItemsCount<TItem>(this List<TItem> buffer, int count, bool changeCapacity = true) Parameters Type Name Description List<TItem> buffer collection to resize int count target count of items in the collection bool changeCapacity If true, sets the Capacity equals to the items count Returns Type Description bool True if succesfull, otherwise - false Type Parameters Name Description TItem Type of items in the collection SetItemsCount<TItem>(NativeList<TItem>, int, bool) Set the count of items in a NativeList. If the count is less than the current length, it will remove items from the end. Declaration [BurstCompile] public static bool SetItemsCount<TItem>(this NativeList<TItem> buffer, int count, bool changeCapacity = true) where TItem : unmanaged Parameters Type Name Description NativeList<TItem> buffer collection to resize int count target count of items in the collection bool changeCapacity If true, sets the Capacity equals to the items count Returns Type Description bool True if succesfull, otherwise - false Type Parameters Name Description TItem Type of items in the collection TryCloneToList<TItem>(NativeArray<TItem>, Allocator) Tries to clone a collection (if it is created) to a new collection with the same items. Declaration [BurstCompile] public static NativeList<TItem> TryCloneToList<TItem>(this NativeArray<TItem> source, Allocator allocator) where TItem : unmanaged Parameters Type Name Description NativeArray<TItem> source collection to clone Allocator allocator allocator to create a clone collection with Returns Type Description NativeList<TItem> newly created collection Type Parameters Name Description TItem Type of item in the collection TryClone<TItem>(NativeArray<TItem>, Allocator) Tries to clone a collection (if it is created) to a new collection with the same items. Declaration [BurstCompile] public static NativeArray<TItem> TryClone<TItem>(this NativeArray<TItem> source, Allocator allocator) where TItem : unmanaged Parameters Type Name Description NativeArray<TItem> source collection to clone Allocator allocator allocator to create a clone collection with Returns Type Description NativeArray<TItem> newly created collection Type Parameters Name Description TItem Type of item in the collection TryClone<TItem>(NativeList<TItem>, Allocator) Tries to clone a collection (if it is created) to a new collection with the same items. Declaration [BurstCompile] public static NativeList<TItem> TryClone<TItem>(this NativeList<TItem> source, Allocator allocator) where TItem : unmanaged Parameters Type Name Description NativeList<TItem> source collection to clone Allocator allocator allocator to create a clone collection with Returns Type Description NativeList<TItem> newly created collection Type Parameters Name Description TItem Type of item in the collection TryCopy<TItem>(NativeArray<TItem>, NativeArray<TItem>) Tries to copy items from one collection to another. If the collections are not created or have different lengths, it will do nothing. Declaration [BurstCompile] public static void TryCopy<TItem>(this NativeArray<TItem> target, NativeArray<TItem> source) where TItem : unmanaged Parameters Type Name Description NativeArray<TItem> target Collection to copy TO NativeArray<TItem> source Collection to copy FROM Type Parameters Name Description TItem Type of item in the collection TryCopy<TItem>(NativeList<TItem>, NativeArray<TItem>) Tries to copy items from one collection to another. If the collections are not created or have different lengths, it will do nothing. Declaration [BurstCompile] public static void TryCopy<TItem>(this NativeList<TItem> target, NativeArray<TItem> source) where TItem : unmanaged Parameters Type Name Description NativeList<TItem> target Collection to copy TO NativeArray<TItem> source Collection to copy FROM Type Parameters Name Description TItem Type of item in the collection TryCopy<TItem>(NativeList<TItem>, NativeList<TItem>) Tries to copy items from one collection to another. If the collections are not created or have different lengths, it will do nothing. Declaration [BurstCompile] public static void TryCopy<TItem>(this NativeList<TItem> target, NativeList<TItem> source) where TItem : unmanaged Parameters Type Name Description NativeList<TItem> target Collection to copy TO NativeList<TItem> source Collection to copy FROM Type Parameters Name Description TItem Type of item in the collection TryDispose<TItem>(NativeArray<TItem>) Try to dispose a NativeArray. If the array is not created, it will do nothing. Declaration [BurstCompile] public static void TryDispose<TItem>(this NativeArray<TItem> source) where TItem : unmanaged Parameters Type Name Description NativeArray<TItem> source collection to dispose Type Parameters Name Description TItem Type of item in the collection TryDispose<TItem>(NativeHashSet<TItem>) Try to dispose a NativeHashSet. If the set is not created, it will do nothing. Declaration [BurstCompile] public static void TryDispose<TItem>(this NativeHashSet<TItem> source) where TItem : unmanaged, IEquatable<TItem> Parameters Type Name Description NativeHashSet<TItem> source a collection to dispose Type Parameters Name Description TItem Type of item in a hash set TryDispose<TItem>(NativeList<TItem>) Try to dispose a NativeList. If the list is not created, it will do nothing. Declaration [BurstCompile] public static void TryDispose<TItem>(this NativeList<TItem> source) where TItem : unmanaged Parameters Type Name Description NativeList<TItem> source collection to dispose Type Parameters Name Description TItem Type of item in the collection TryDispose<TItem>(NativeParallelHashSet<TItem>) Try to dispose a NativeHashSet. If the set is not created, it will do nothing. Declaration [BurstCompile] public static void TryDispose<TItem>(this NativeParallelHashSet<TItem> source) where TItem : unmanaged, IEquatable<TItem> Parameters Type Name Description NativeParallelHashSet<TItem> source a collection to dispose Type Parameters Name Description TItem Type of item in a hash set TryDispose<TKey, TItem>(NativeHashMap<TKey, TItem>) Try to dispose a NativeHashMap. If the map is not created, it will do nothing. Declaration [BurstCompile] public static void TryDispose<TKey, TItem>(this NativeHashMap<TKey, TItem> source) where TKey : unmanaged, IEquatable<TKey> where TItem : unmanaged Parameters Type Name Description NativeHashMap<TKey, TItem> source a collection to dispose Type Parameters Name Description TKey Type of key in a hash set TItem Type of item in a hash set TryDispose<TKey, TItem>(NativeParallelHashMap<TKey, TItem>) Try to dispose a NativeHashMap. If the map is not created, it will do nothing. Declaration [BurstCompile] public static void TryDispose<TKey, TItem>(this NativeParallelHashMap<TKey, TItem> source) where TKey : unmanaged, IEquatable<TKey> where TItem : unmanaged Parameters Type Name Description NativeParallelHashMap<TKey, TItem> source a collection to dispose Type Parameters Name Description TKey Type of key in a hash set TItem Type of item in a hash set TryDispose<TKey, TItem>(NativeParallelMultiHashMap<TKey, TItem>) Try to dispose a NativeHashSet. If the set is not created, it will do nothing. Declaration [BurstCompile] public static void TryDispose<TKey, TItem>(this NativeParallelMultiHashMap<TKey, TItem> source) where TKey : unmanaged, IEquatable<TKey> where TItem : unmanaged Parameters Type Name Description NativeParallelMultiHashMap<TKey, TItem> source a collection to dispose Type Parameters Name Description TKey Type of key in a hash set TItem Type of item in a hash set TryGetItemOrDefault<TItem>(IList<TItem>, int) Tries to get an item from a collection. If the collection is not created or the index is out of range, it will return default(TItem). Declaration [BurstCompile] public static TItem TryGetItemOrDefault<TItem>(this IList<TItem> source, int index) Parameters Type Name Description IList<TItem> source collection to get an item from int index index of item to get Returns Type Description TItem item at requested index or default(TItem) if nothing found Type Parameters Name Description TItem Type of item in the collection TryGetItemOrDefault<TItem>(NativeArray<TItem>, int) Tries to get an item from a collection. If the collection is not created or the index is out of range, it will return default(TItem). Declaration [BurstCompile] public static TItem TryGetItemOrDefault<TItem>(this NativeArray<TItem> source, int index) where TItem : unmanaged Parameters Type Name Description NativeArray<TItem> source collection to get an item from int index index of item to get Returns Type Description TItem item at requested index or default(TItem) if nothing found Type Parameters Name Description TItem Type of item in the collection TryGetItemOrDefault<TItem>(NativeList<TItem>, int) Tries to get an item from a collection. If the collection is not created or the index is out of range, it will return default(TItem). Declaration [BurstCompile] public static TItem TryGetItemOrDefault<TItem>(this NativeList<TItem> source, int index) where TItem : unmanaged Parameters Type Name Description NativeList<TItem> source collection to get an item from int index index of item to get Returns Type Description TItem item at requested index or default(TItem) if nothing found Type Parameters Name Description TItem Type of item in the collection TryGetItemOrDefault<TItem>(TItem[], int) Tries to get an item from a collection. If the collection is not created or the index is out of range, it will return default(TItem). Declaration [BurstCompile] public static TItem TryGetItemOrDefault<TItem>(this TItem[] source, int index) Parameters Type Name Description TItem[] source collection to get an item from int index index of item to get Returns Type Description TItem item at requested index or default(TItem) if nothing found Type Parameters Name Description TItem Type of item in the collection TryGetItem<TItem>(IList<TItem>, int, out TItem) Tries to get an item from a collection. If the collection is not created or the index is out of range, it will return false. Declaration [BurstCompile] public static bool TryGetItem<TItem>(this IList<TItem> source, int index, out TItem item) Parameters Type Name Description IList<TItem> source collection to get an item from int index index of item to get TItem item result value. Default if nothing found Returns Type Description bool true if successfull, otherwise - false Type Parameters Name Description TItem Type of item in the collection TryGetItem<TItem>(NativeArray<TItem>, int, out TItem) Tries to get an item from a collection. If the collection is not created or the index is out of range, it will return false. Declaration [BurstCompile] public static bool TryGetItem<TItem>(this NativeArray<TItem> source, int index, out TItem item) where TItem : unmanaged Parameters Type Name Description NativeArray<TItem> source collection to get an item from int index index of item to get TItem item result value. Default if nothing found Returns Type Description bool true if successfull, otherwise - false Type Parameters Name Description TItem Type of item in the collection TryGetItem<TItem>(NativeList<TItem>, int, out TItem) Tries to get an item from a collection. If the collection is not created or the index is out of range, it will return false. Declaration [BurstCompile] public static bool TryGetItem<TItem>(this NativeList<TItem> source, int index, out TItem item) where TItem : unmanaged Parameters Type Name Description NativeList<TItem> source collection to get an item from int index index of item to get TItem item result value. Default if nothing found Returns Type Description bool true if successfull, otherwise - false Type Parameters Name Description TItem Type of item in the collection TryGetItem<TItem>(TItem[], int, out TItem) Tries to get an item from a collection. If the collection is not created or the index is out of range, it will return false. Declaration [BurstCompile] public static bool TryGetItem<TItem>(this TItem[] source, int index, out TItem item) Parameters Type Name Description TItem[] source collection to get an item from int index index of item to get TItem item result value. Default if nothing found Returns Type Description bool true if successfull, otherwise - false Type Parameters Name Description TItem Type of item in the collection"
  },
  "api/Fwt.Core.Extensions_Collections_Ecs.html": {
    "href": "api/Fwt.Core.Extensions_Collections_Ecs.html",
    "title": "Class Extensions_Collections_Ecs | Hex Terrains",
    "summary": "Class Extensions_Collections_Ecs Inheritance object Extensions_Collections_Ecs Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.Core Assembly: fwt.core.ecs.dll Syntax public static class Extensions_Collections_Ecs Methods CopyToAndConvert_Reverse<TSource, TTarget>(NativeList<TSource>, DynamicBuffer<TTarget>) Declaration public static bool CopyToAndConvert_Reverse<TSource, TTarget>(this NativeList<TSource> source, DynamicBuffer<TTarget> target) where TSource : unmanaged, IConvertableFrom<TSource, TTarget> where TTarget : unmanaged, IBufferElementData Parameters Type Name Description NativeList<TSource> source DynamicBuffer<TTarget> target Returns Type Description bool Type Parameters Name Description TSource TTarget CopyToAndConvert_Reverse<TSource, TTarget>(NativeList<TSource>, DynamicBuffer<TTarget>, out JobHandle) Declaration public static bool CopyToAndConvert_Reverse<TSource, TTarget>(this NativeList<TSource> source, DynamicBuffer<TTarget> target, out JobHandle jobHandle) where TSource : unmanaged, IConvertableFrom<TSource, TTarget> where TTarget : unmanaged, IBufferElementData Parameters Type Name Description NativeList<TSource> source DynamicBuffer<TTarget> target JobHandle jobHandle Returns Type Description bool Type Parameters Name Description TSource TTarget CopyToAndConvert_Reverse<TSource, TTarget>(DynamicBuffer<TSource>, DynamicBuffer<TTarget>) Declaration public static bool CopyToAndConvert_Reverse<TSource, TTarget>(this DynamicBuffer<TSource> source, DynamicBuffer<TTarget> target) where TSource : unmanaged, IBufferElementData, IConvertableFrom<TSource, TTarget> where TTarget : unmanaged, IBufferElementData Parameters Type Name Description DynamicBuffer<TSource> source DynamicBuffer<TTarget> target Returns Type Description bool Type Parameters Name Description TSource TTarget CopyToAndConvert_Reverse<TSource, TTarget>(DynamicBuffer<TSource>, DynamicBuffer<TTarget>, out JobHandle) Declaration public static bool CopyToAndConvert_Reverse<TSource, TTarget>(this DynamicBuffer<TSource> source, DynamicBuffer<TTarget> target, out JobHandle jobHandle) where TSource : unmanaged, IBufferElementData, IConvertableFrom<TSource, TTarget> where TTarget : unmanaged, IBufferElementData Parameters Type Name Description DynamicBuffer<TSource> source DynamicBuffer<TTarget> target JobHandle jobHandle Returns Type Description bool Type Parameters Name Description TSource TTarget CopyToAndConvert<TSource, TTarget>(NativeList<TSource>, DynamicBuffer<TTarget>) Declaration public static bool CopyToAndConvert<TSource, TTarget>(this NativeList<TSource> source, DynamicBuffer<TTarget> target) where TSource : unmanaged where TTarget : unmanaged, IBufferElementData, IConvertableTo<TSource> Parameters Type Name Description NativeList<TSource> source DynamicBuffer<TTarget> target Returns Type Description bool Type Parameters Name Description TSource TTarget CopyToAndConvert<TSource, TTarget>(NativeList<TSource>, DynamicBuffer<TTarget>, out JobHandle) Declaration public static bool CopyToAndConvert<TSource, TTarget>(this NativeList<TSource> source, DynamicBuffer<TTarget> target, out JobHandle jobHandle) where TSource : unmanaged where TTarget : unmanaged, IBufferElementData, IConvertableTo<TSource> Parameters Type Name Description NativeList<TSource> source DynamicBuffer<TTarget> target JobHandle jobHandle Returns Type Description bool Type Parameters Name Description TSource TTarget CopyToAndConvert<TSource, TTarget>(DynamicBuffer<TSource>, DynamicBuffer<TTarget>) Declaration public static bool CopyToAndConvert<TSource, TTarget>(this DynamicBuffer<TSource> source, DynamicBuffer<TTarget> target) where TSource : unmanaged, IBufferElementData where TTarget : unmanaged, IBufferElementData, IConvertableTo<TSource> Parameters Type Name Description DynamicBuffer<TSource> source DynamicBuffer<TTarget> target Returns Type Description bool Type Parameters Name Description TSource TTarget CopyToAndConvert<TSource, TTarget>(DynamicBuffer<TSource>, DynamicBuffer<TTarget>, out JobHandle) Declaration public static bool CopyToAndConvert<TSource, TTarget>(this DynamicBuffer<TSource> source, DynamicBuffer<TTarget> target, out JobHandle jobHandle) where TSource : unmanaged, IBufferElementData where TTarget : unmanaged, IBufferElementData, IConvertableTo<TSource> Parameters Type Name Description DynamicBuffer<TSource> source DynamicBuffer<TTarget> target JobHandle jobHandle Returns Type Description bool Type Parameters Name Description TSource TTarget FillBuffer<TLayer>(DynamicBuffer<TLayer>, TLayer) Declaration public static void FillBuffer<TLayer>(this DynamicBuffer<TLayer> layer, TLayer item) where TLayer : unmanaged, IBufferElementData Parameters Type Name Description DynamicBuffer<TLayer> layer TLayer item Type Parameters Name Description TLayer SetItemsCount<TItem>(DynamicBuffer<TItem>, int) Declaration public static void SetItemsCount<TItem>(this DynamicBuffer<TItem> buffer, int count) where TItem : unmanaged, IBufferElementData Parameters Type Name Description DynamicBuffer<TItem> buffer int count Type Parameters Name Description TItem"
  },
  "api/Fwt.Core.Extensions_Ecs.html": {
    "href": "api/Fwt.Core.Extensions_Ecs.html",
    "title": "Class Extensions_Ecs | Hex Terrains",
    "summary": "Class Extensions_Ecs Inheritance object Extensions_Ecs Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.Core Assembly: fwt.core.ecs.dll Syntax public static class Extensions_Ecs Methods TryDispose(EntityCommandBuffer) Declaration public static void TryDispose(this EntityCommandBuffer commandBuffer) Parameters Type Name Description EntityCommandBuffer commandBuffer TryDispose<TItem>(DynamicBuffer<TItem>) Declaration public static void TryDispose<TItem>(this DynamicBuffer<TItem> buffer) where TItem : unmanaged, IBufferElementData Parameters Type Name Description DynamicBuffer<TItem> buffer Type Parameters Name Description TItem"
  },
  "api/Fwt.Core.Extensions_EntityManager.html": {
    "href": "api/Fwt.Core.Extensions_EntityManager.html",
    "title": "Class Extensions_EntityManager | Hex Terrains",
    "summary": "Class Extensions_EntityManager Inheritance object Extensions_EntityManager Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.Core Assembly: fwt.core.ecs.dll Syntax public static class Extensions_EntityManager Methods GetComponentDataOrDefault<TComponent>(EntityManager, Entity) Declaration public static TComponent? GetComponentDataOrDefault<TComponent>(this EntityManager entityManager, Entity entity) where TComponent : unmanaged, IComponentData Parameters Type Name Description EntityManager entityManager Entity entity Returns Type Description TComponent? Type Parameters Name Description TComponent GetComponentObjectOrDefault<TObject>(EntityManager, Entity) Declaration public static TObject GetComponentObjectOrDefault<TObject>(this EntityManager entityManager, Entity entity) where TObject : class Parameters Type Name Description EntityManager entityManager Entity entity Returns Type Description TObject Type Parameters Name Description TObject GetOrCreateBuffer<TBuffer>(BufferLookup<TBuffer>, int, Entity, EntityCommandBuffer) Declaration public static DynamicBuffer<TBuffer> GetOrCreateBuffer<TBuffer>(this BufferLookup<TBuffer> bufferFromEntity, int itemsCount, Entity entity, EntityCommandBuffer commandBuffer) where TBuffer : unmanaged, IBufferElementData Parameters Type Name Description BufferLookup<TBuffer> bufferFromEntity int itemsCount Entity entity EntityCommandBuffer commandBuffer Returns Type Description DynamicBuffer<TBuffer> Type Parameters Name Description TBuffer GetOrCreateBuffer<TBuffer>(BufferLookup<TBuffer>, Entity, int, EntityManager) Declaration public static DynamicBuffer<TBuffer> GetOrCreateBuffer<TBuffer>(this BufferLookup<TBuffer> bufferFromEntity, Entity entity, int itemsCount, EntityManager entityManager) where TBuffer : unmanaged, IBufferElementData Parameters Type Name Description BufferLookup<TBuffer> bufferFromEntity Entity entity int itemsCount EntityManager entityManager Returns Type Description DynamicBuffer<TBuffer> Type Parameters Name Description TBuffer GetOrCreateBuffer<TBuffer>(BufferLookup<TBuffer>, Entity, EntityCommandBuffer) Declaration public static DynamicBuffer<TBuffer> GetOrCreateBuffer<TBuffer>(this BufferLookup<TBuffer> bufferFromEntity, Entity entity, EntityCommandBuffer commandBuffer) where TBuffer : unmanaged, IBufferElementData Parameters Type Name Description BufferLookup<TBuffer> bufferFromEntity Entity entity EntityCommandBuffer commandBuffer Returns Type Description DynamicBuffer<TBuffer> Type Parameters Name Description TBuffer GetOrCreateBuffer<TBuffer>(BufferLookup<TBuffer>, Entity, EntityManager) Declaration public static DynamicBuffer<TBuffer> GetOrCreateBuffer<TBuffer>(this BufferLookup<TBuffer> bufferFromEntity, Entity entity, EntityManager entityManager) where TBuffer : unmanaged, IBufferElementData Parameters Type Name Description BufferLookup<TBuffer> bufferFromEntity Entity entity EntityManager entityManager Returns Type Description DynamicBuffer<TBuffer> Type Parameters Name Description TBuffer GetOrCreateBuffer<TBuffer>(EntityManager, Entity) Declaration public static DynamicBuffer<TBuffer> GetOrCreateBuffer<TBuffer>(this EntityManager entityManager, Entity entity) where TBuffer : unmanaged, IBufferElementData Parameters Type Name Description EntityManager entityManager Entity entity Returns Type Description DynamicBuffer<TBuffer> Type Parameters Name Description TBuffer GetOrCreateBuffer<TBuffer>(EntityManager, Entity, int) Declaration public static DynamicBuffer<TBuffer> GetOrCreateBuffer<TBuffer>(this EntityManager entityManager, Entity entity, int itemsCount) where TBuffer : unmanaged, IBufferElementData Parameters Type Name Description EntityManager entityManager Entity entity int itemsCount Returns Type Description DynamicBuffer<TBuffer> Type Parameters Name Description TBuffer GetSharedComponentDataOrDefault<TSharedComponent>(EntityManager, Entity) Declaration public static TSharedComponent? GetSharedComponentDataOrDefault<TSharedComponent>(this EntityManager entityManager, Entity entity) where TSharedComponent : unmanaged, ISharedComponentData Parameters Type Name Description EntityManager entityManager Entity entity Returns Type Description TSharedComponent? Type Parameters Name Description TSharedComponent SetEntityNameSafe(EntityManager, Entity, string) Declaration public static void SetEntityNameSafe(this EntityManager entityManager, Entity entity, string entityName) Parameters Type Name Description EntityManager entityManager Entity entity string entityName TryGetBuffer<TBuffer>(EntityManager, Entity, bool, out DynamicBuffer<TBuffer>) Declaration public static bool TryGetBuffer<TBuffer>(this EntityManager entityManager, Entity entity, bool isReadOnly, out DynamicBuffer<TBuffer> result) where TBuffer : unmanaged, IBufferElementData Parameters Type Name Description EntityManager entityManager Entity entity bool isReadOnly DynamicBuffer<TBuffer> result Returns Type Description bool Type Parameters Name Description TBuffer TryGetBuffer<TBuffer>(EntityManager, Entity, out DynamicBuffer<TBuffer>) Declaration public static bool TryGetBuffer<TBuffer>(this EntityManager entityManager, Entity entity, out DynamicBuffer<TBuffer> result) where TBuffer : unmanaged, IBufferElementData Parameters Type Name Description EntityManager entityManager Entity entity DynamicBuffer<TBuffer> result Returns Type Description bool Type Parameters Name Description TBuffer TryGetComponentData<TComponentData>(EntityManager, Entity, out TComponentData) Declaration public static bool TryGetComponentData<TComponentData>(this EntityManager entityManager, Entity entity, out TComponentData result) where TComponentData : unmanaged, IComponentData Parameters Type Name Description EntityManager entityManager Entity entity TComponentData result Returns Type Description bool Type Parameters Name Description TComponentData TryGetComponentObject<TObject>(EntityManager, Entity, out TObject) Declaration public static bool TryGetComponentObject<TObject>(this EntityManager entityManager, Entity entity, out TObject result) where TObject : class Parameters Type Name Description EntityManager entityManager Entity entity TObject result Returns Type Description bool Type Parameters Name Description TObject TryGetSharedData<TSharedData>(EntityManager, Entity, out TSharedData) Declaration public static bool TryGetSharedData<TSharedData>(this EntityManager entityManager, Entity entity, out TSharedData result) where TSharedData : unmanaged, ISharedComponentData Parameters Type Name Description EntityManager entityManager Entity entity TSharedData result Returns Type Description bool Type Parameters Name Description TSharedData TryGetValue<TBuffer>(BufferLookup<TBuffer>, Entity, out DynamicBuffer<TBuffer>) Declaration public static bool TryGetValue<TBuffer>(this BufferLookup<TBuffer> bufferFromEntity, Entity entity, out DynamicBuffer<TBuffer> result) where TBuffer : unmanaged, IBufferElementData Parameters Type Name Description BufferLookup<TBuffer> bufferFromEntity Entity entity DynamicBuffer<TBuffer> result Returns Type Description bool Type Parameters Name Description TBuffer TryGetValue<TComponentData>(ComponentLookup<TComponentData>, Entity, out TComponentData) Declaration public static bool TryGetValue<TComponentData>(this ComponentLookup<TComponentData> dataFromEntity, Entity entity, out TComponentData result) where TComponentData : unmanaged, IComponentData Parameters Type Name Description ComponentLookup<TComponentData> dataFromEntity Entity entity TComponentData result Returns Type Description bool Type Parameters Name Description TComponentData"
  },
  "api/Fwt.Core.Extensions_EventSystem.html": {
    "href": "api/Fwt.Core.Extensions_EventSystem.html",
    "title": "Class Extensions_EventSystem | Hex Terrains",
    "summary": "Class Extensions_EventSystem Inheritance object Extensions_EventSystem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.Core Assembly: fwt.core.dll Syntax public static class Extensions_EventSystem Methods IsPointerOverUI(EventSystem) Declaration public static bool IsPointerOverUI(this EventSystem eventSystem) Parameters Type Name Description EventSystem eventSystem Returns Type Description bool"
  },
  "api/Fwt.Core.Extensions_LayerMask.html": {
    "href": "api/Fwt.Core.Extensions_LayerMask.html",
    "title": "Class Extensions_LayerMask | Hex Terrains",
    "summary": "Class Extensions_LayerMask Inheritance object Extensions_LayerMask Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.Core Assembly: fwt.core.dll Syntax public static class Extensions_LayerMask Methods Includes(LayerMask, int) Declaration public static bool Includes(this LayerMask mask, int layer) Parameters Type Name Description LayerMask mask int layer Returns Type Description bool"
  },
  "api/Fwt.Core.Extensions_UnityObject.html": {
    "href": "api/Fwt.Core.Extensions_UnityObject.html",
    "title": "Class Extensions_UnityObject | Hex Terrains",
    "summary": "Class Extensions_UnityObject Inheritance object Extensions_UnityObject Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.Core Assembly: fwt.core.dll Syntax public static class Extensions_UnityObject Methods GetComponentsInChildrenPreserveOrder<TComponent>(Transform, List<TComponent>) Loops through children of given tranform and searches requested Component. Found results is collected into components list. Provided components list is Cleared before usage. If provided components list is null, creates new list. returns null if there is no transform; Declaration public static List<TComponent> GetComponentsInChildrenPreserveOrder<TComponent>(this Transform transform, List<TComponent> components = null) where TComponent : MonoBehaviour Parameters Type Name Description Transform transform List<TComponent> components Returns Type Description List<TComponent> Type Parameters Name Description TComponent GetRootCanvas(Transform) Returns the root canvas of the whole hierarchy of the given transform. Declaration public static Canvas GetRootCanvas(this Transform transform) Parameters Type Name Description Transform transform Returns Type Description Canvas SmartDestroy(object) Declaration public static void SmartDestroy(this object instance) Parameters Type Name Description object instance SmartDestroy<TObject>(TObject) Destroys given object instance or it's GameObject (if it's MonoBehaviour). If Apllication is Playing (Play mode), calls Object.Destroy(); If Application is in Editor (Editor mode), calls Object.DestroyImmediate(); Checks given object to null. Declaration public static void SmartDestroy<TObject>(this TObject instance) where TObject : Object Parameters Type Name Description TObject instance Type Parameters Name Description TObject SmartDisableGameObject<TObject>(TObject) Declaration public static void SmartDisableGameObject<TObject>(this TObject instance) where TObject : Object Parameters Type Name Description TObject instance Type Parameters Name Description TObject SmartEnableGameObject<TObject>(TObject) Declaration public static void SmartEnableGameObject<TObject>(this TObject instance) where TObject : Object Parameters Type Name Description TObject instance Type Parameters Name Description TObject SmartGetComponent<TComponent>(object) If instance is TComponent, returns it as TComponent; If instance is GameObject or MonoBehaviour, calls GetComponentTComponent() at that GameObject Declaration public static TComponent SmartGetComponent<TComponent>(this object instance) Parameters Type Name Description object instance Returns Type Description TComponent Type Parameters Name Description TComponent SmartGetGameGameObject(object) if instance is GameObject, returns it as GameObject; if instance is MonoBehaviour, returns it's GameObject Declaration public static GameObject SmartGetGameGameObject(this object instance) Parameters Type Name Description object instance Returns Type Description GameObject"
  },
  "api/Fwt.Core.Features.FeatureBase.html": {
    "href": "api/Fwt.Core.Features.FeatureBase.html",
    "title": "Class FeatureBase | Hex Terrains",
    "summary": "Class FeatureBase Inheritance object ComponentSystemBase SystemBase ComponentSystemGroup FeatureBase ChildEntitiesFeature Inherited Members ComponentSystemGroup.EnableSystemSorting ComponentSystemGroup.Created ComponentSystemGroup.ManagedSystems ComponentSystemGroup.GetUnmanagedSystems(Allocator) ComponentSystemGroup.GetAllSystems(Allocator) ComponentSystemGroup.OnDestroy() ComponentSystemGroup.AddSystemToUpdateList(ComponentSystemBase) ComponentSystemGroup.AddSystemToUpdateList(SystemHandle) ComponentSystemGroup.RemoveSystemFromUpdateList(ComponentSystemBase) ComponentSystemGroup.RemoveSystemFromUpdateList(SystemHandle) ComponentSystemGroup.SortSystems() ComponentSystemGroup.FixedRateManager ComponentSystemGroup.RateManager ComponentSystemGroup.SetRateManagerCreateAllocator(IRateManager) ComponentSystemGroup.RateGroupAllocators ComponentSystemGroup.OnUpdate() SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.Core.Features Assembly: fwt.core.ecs.dll Syntax public abstract class FeatureBase : ComponentSystemGroup Methods CreateChildSystem<TSystem>() Gets or Creates (if none) a requested system Declaration protected TSystem CreateChildSystem<TSystem>() where TSystem : ComponentSystemBase Returns Type Description TSystem Type Parameters Name Description TSystem CreateChildSystem<TSystem>(ComponentSystemGroup) Gets or Creates (if none) a requested system and puts it to given ComponentSystemGroup's update list Declaration protected TSystem CreateChildSystem<TSystem>(ComponentSystemGroup systemGroup) where TSystem : ComponentSystemBase Parameters Type Name Description ComponentSystemGroup systemGroup Returns Type Description TSystem Type Parameters Name Description TSystem CreateChildSystems() Calls on OnCreate(); Creates child systems for a feature by calling CreateChildSystem() for each needed one Declaration protected abstract void CreateChildSystems() CreateSingletonEntity<TComponent>() Declaration protected virtual Entity CreateSingletonEntity<TComponent>() Returns Type Description Entity Type Parameters Name Description TComponent FindComponentObject<TObject>() Declaration public TObject FindComponentObject<TObject>() where TObject : MonoBehaviour Returns Type Description TObject Type Parameters Name Description TObject FindComponentObject<TObject>(out Entity, out TObject) Declaration public bool FindComponentObject<TObject>(out Entity entity, out TObject obj) where TObject : Object Parameters Type Name Description Entity entity TObject obj Returns Type Description bool Type Parameters Name Description TObject FindComponentObject<TObject>(ref TObject) Declaration public void FindComponentObject<TObject>(ref TObject obj) where TObject : MonoBehaviour Parameters Type Name Description TObject obj Type Parameters Name Description TObject GetOrCreateFeature<TSystem>(World) Get from or Creates (if none) TSystem in the given World under SimulationSystemGroup Declaration public static TSystem GetOrCreateFeature<TSystem>(World world) where TSystem : FeatureBase Parameters Type Name Description World world Returns Type Description TSystem Type Parameters Name Description TSystem GetOrCreateFeature<TSystem, TRootSystem>(World) Gets from or Creates (if none) TSystem in the given World under TRootSystem ComponentSystemGroup Declaration public static TSystem GetOrCreateFeature<TSystem, TRootSystem>(World world) where TSystem : FeatureBase where TRootSystem : ComponentSystemGroup Parameters Type Name Description World world Returns Type Description TSystem Type Parameters Name Description TSystem TRootSystem GetOrCreateSingletonEntity<TComponent>() Declaration protected virtual Entity GetOrCreateSingletonEntity<TComponent>() where TComponent : unmanaged Returns Type Description Entity Type Parameters Name Description TComponent GetOrFindComponentObject<TObject>(ref TObject) Declaration public TObject GetOrFindComponentObject<TObject>(ref TObject obj) where TObject : MonoBehaviour Parameters Type Name Description TObject obj Returns Type Description TObject Type Parameters Name Description TObject GetSingletonEntityName<TComponent>() Declaration protected virtual string GetSingletonEntityName<TComponent>() Returns Type Description string Type Parameters Name Description TComponent GetSingletonEntityOrDefault<TComponent>() Declaration public Entity? GetSingletonEntityOrDefault<TComponent>() where TComponent : unmanaged Returns Type Description Entity? Type Parameters Name Description TComponent Log(string) Declaration public virtual void Log(string message) Parameters Type Name Description string message LogError(string) Declaration public virtual void LogError(string message) Parameters Type Name Description string message LogException(Exception) Declaration public virtual void LogException(Exception exception) Parameters Type Name Description Exception exception LogWarning(string) Declaration public virtual void LogWarning(string message) Parameters Type Name Description string message OnCreate() Declaration protected override void OnCreate() Overrides Unity.Entities.ComponentSystemGroup.OnCreate() SetEntityName(Entity, string) Declaration public void SetEntityName(Entity entity, string entityName) Parameters Type Name Description Entity entity string entityName Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.Features.html": {
    "href": "api/Fwt.Core.Features.html",
    "title": "Namespace Fwt.Core.Features | Hex Terrains",
    "summary": "Namespace Fwt.Core.Features Classes FeatureBase"
  },
  "api/Fwt.Core.FileSystemUtils.html": {
    "href": "api/Fwt.Core.FileSystemUtils.html",
    "title": "Class FileSystemUtils | Hex Terrains",
    "summary": "Class FileSystemUtils Inheritance object FileSystemUtils Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.Core Assembly: fwt.core.dll Syntax public class FileSystemUtils Properties PersistentDataPath Declaration public static string PersistentDataPath { get; } Property Value Type Description string Methods CreateCacheFilePathInStorage(string) Declaration public static string CreateCacheFilePathInStorage(string fileNameWithoutExt) Parameters Type Name Description string fileNameWithoutExt Returns Type Description string Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.GeometryMath.html": {
    "href": "api/Fwt.Core.GeometryMath.html",
    "title": "Class GeometryMath | Hex Terrains",
    "summary": "Class GeometryMath Inheritance object GeometryMath Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.Core Assembly: fwt.core.dll Syntax public static class GeometryMath Methods IsInEllipse(float2, float2, float, float) Declaration public static bool IsInEllipse(float2 pointToCheck, float2 ellipseCenter, float minorRadius, float majourRadius) Parameters Type Name Description float2 pointToCheck float2 ellipseCenter float minorRadius float majourRadius Returns Type Description bool"
  },
  "api/Fwt.Core.HashExtensions.html": {
    "href": "api/Fwt.Core.HashExtensions.html",
    "title": "Class HashExtensions | Hex Terrains",
    "summary": "Class HashExtensions Inheritance object HashExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.Core Assembly: fwt.core.dll Syntax public static class HashExtensions Methods GetHashCode_RefType<TValue>(TValue, int) Declaration public static int GetHashCode_RefType<TValue>(this TValue value, int hash = 0) where TValue : class Parameters Type Name Description TValue value int hash Returns Type Description int Type Parameters Name Description TValue GetHashCode_ValueType<TValue>(TValue, int) Declaration public static int GetHashCode_ValueType<TValue>(this TValue value, int hash = 0) where TValue : struct Parameters Type Name Description TValue value int hash Returns Type Description int Type Parameters Name Description TValue"
  },
  "api/Fwt.Core.HexLayouts.html": {
    "href": "api/Fwt.Core.HexLayouts.html",
    "title": "Enum HexLayouts | Hex Terrains",
    "summary": "Enum HexLayouts Hexagon layouts (odd/even) Namespace: Fwt.Core Assembly: fwt.core.dll Syntax public enum HexLayouts Fields Name Description Even Odd Extension Methods HashExtensions.GetHashCode_ValueType<HexLayouts>(HexLayouts, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.HexMath.html": {
    "href": "api/Fwt.Core.HexMath.html",
    "title": "Class HexMath | Hex Terrains",
    "summary": "Class HexMath Hexagon math helper class. Coordinate conversions and hexagon geometry calculations. Supports axial, cube and offset coordinates. Supports flat top and pointy top hexagons. Supports odd and even layouts. Inheritance object HexMath Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.Core Assembly: fwt.core.dll Syntax [BurstCompile] public static class HexMath Fields Directions_Axial All directions for axial coordinates Declaration public static readonly FixedArray8<int2> Directions_Axial Field Value Type Description FixedArray8<int2> Directions_Cube All directions for cube coordinates Declaration public static readonly FixedArray8<int3> Directions_Cube Field Value Type Description FixedArray8<int3> Directions_Offset_Even_Flat All directions for even layout flat top hexagons Declaration public static readonly FixedArray16<int2> Directions_Offset_Even_Flat Field Value Type Description FixedArray16<int2> Directions_Offset_Even_Point All directions for even layout pointy top hexagons Declaration public static readonly FixedArray16<int2> Directions_Offset_Even_Point Field Value Type Description FixedArray16<int2> Directions_Offset_Odd_Flat All directions for odd layout flat top hexagons Declaration public static readonly FixedArray16<int2> Directions_Offset_Odd_Flat Field Value Type Description FixedArray16<int2> Directions_Offset_Odd_Point All directions for odd layout pointy top hexagons Declaration public static readonly FixedArray16<int2> Directions_Offset_Odd_Point Field Value Type Description FixedArray16<int2> Sqrt3 Square root of 3 (used for calculations with hexagons) Declaration public static readonly float Sqrt3 Field Value Type Description float Methods AxialToCube(in int2) Converts axial coordinates to cube coordinates Declaration public static int3 AxialToCube(in int2 axialCoord) Parameters Type Name Description int2 axialCoord Axial coordinate to be converted Returns Type Description int3 Converted cube coordinate AxialToPixel(in int2, in float, in HexRotations) Converts axial coordinates to pixel coordinates (point in world) Declaration public static float2 AxialToPixel(in int2 axial, in float sideSize, in HexRotations hexRotation) Parameters Type Name Description int2 axial axial coordinate float sideSize side length (radius) of hexagon HexRotations hexRotation rotation of hexagon (point/flat top) Returns Type Description float2 pixel coordinate (point in world) AxialToPixel(in int2, in float, in bool) Converts axial coordinates to pixel coordinates (point in world) Declaration public static float2 AxialToPixel(in int2 axial, in float sideSize, in bool isFlatTop) Parameters Type Name Description int2 axial axial coordinate float sideSize side length (radius) of hexagon bool isFlatTop true = flat top, false = point top Returns Type Description float2 pixel coordinate (point in world) CellCoordAdd_Cube(int3, int3) Adds offset to the cell coordinates (cube coordinates) Declaration public static int3 CellCoordAdd_Cube(int3 origin, int3 offset) Parameters Type Name Description int3 origin origin cube coordinates int3 offset target cube coordinates Returns Type Description int3 cube coordinate CubeToAxial(in int3) Converts cube coordinates to axial coordinates Declaration public static int2 CubeToAxial(in int3 cubeCoord) Parameters Type Name Description int3 cubeCoord Cube coordinate to be converted Returns Type Description int2 Converted axial coordinates CubeToOffset(in int3, in HexRotations, in HexLayouts) Converts cube coordinates to offset coordinates Declaration public static int2 CubeToOffset(in int3 cubeCoord, in HexRotations hexRotation, in HexLayouts hexLayout) Parameters Type Name Description int3 cubeCoord cube coordinate HexRotations hexRotation rotation of hexagon (point/flat top) HexLayouts hexLayout layout of hexagons (odd/even) Returns Type Description int2 offset coordinate CubeToOffset(in int3, in bool, in bool) Converts cube coordinates to offset coordinates Declaration public static int2 CubeToOffset(in int3 cubeCoord, in bool isFlatTop, in bool isOddLayout) Parameters Type Name Description int3 cubeCoord Cube coordinate bool isFlatTop if true - flat top, false - point top bool isOddLayout true - odd layout, flase - even layout Returns Type Description int2 offset coordinate CubeToPixel(in int3, in float, in HexRotations) Converts cube coordinates to pixel coordinates (point in world) Declaration public static float2 CubeToPixel(in int3 cube, in float sideSize, in HexRotations hexRotation) Parameters Type Name Description int3 cube cube coordinate float sideSize side length (radius) of hexagon HexRotations hexRotation rotation of hexagon (point/flat top) Returns Type Description float2 pixel coordinate (point in world) DistanceBetweenCells_Axial(in int2, in int2) Calculates distance between two cells in axial coordinates Declaration public static int DistanceBetweenCells_Axial(in int2 from_axial, in int2 to_axial) Parameters Type Name Description int2 from_axial origin axial coordinate int2 to_axial target axial coordinate Returns Type Description int Axial coordinate DistanceBetweenCells_Cube(in int3, in int3) Calculates distance between two cells in cube coordinates Declaration public static int DistanceBetweenCells_Cube(in int3 from_cube, in int3 to_cube) Parameters Type Name Description int3 from_cube origin cube coordinate int3 to_cube target cube coordinate Returns Type Description int cube coordinate DistanceBetweenCells_Offset(in int2, in int2, in HexRotations, in HexLayouts) Calculates distance between two cells in offset coordinates Declaration public static int DistanceBetweenCells_Offset(in int2 from_offset, in int2 to_offset, in HexRotations hexRotation, in HexLayouts hexLayout) Parameters Type Name Description int2 from_offset origin offset coordinate int2 to_offset target offset coordinate HexRotations hexRotation hexagon rotation (flat/point top) HexLayouts hexLayout laout rotation (odd/even) Returns Type Description int offset coordinate DistanceBetweenCells_Offset_F(in int2, in int2, in HexRotations, in HexLayouts) Calculates distance between two cells in offset coordinates Declaration public static float DistanceBetweenCells_Offset_F(in int2 from_offset, in int2 to_offset, in HexRotations hexRotation, in HexLayouts hexLayout) Parameters Type Name Description int2 from_offset origin offset coordinate int2 to_offset target offset coordinate HexRotations hexRotation hexagon rotation (point/flat top) HexLayouts hexLayout laoyout rotation (odd/even) Returns Type Description float offset coordinate GetAdjacentCell_Axial(in int2, in int) Returns adjacent cell for given cell and neighbour index Declaration public static int2 GetAdjacentCell_Axial(in int2 cell, in int neighbourIndex) Parameters Type Name Description int2 cell axial coordinate of the cell to find neighbour for int neighbourIndex index of neighbour (6 neighbors) Returns Type Description int2 axial coordinate of the neighbour GetAdjacentCell_Cube(in int3, in int) Returns adjacent cell for given cell and neighbour index Declaration public static int3 GetAdjacentCell_Cube(in int3 cell, in int neighbourIndex) Parameters Type Name Description int3 cell cube coordinate of the cell to find neighbour for int neighbourIndex index of neighbour (6 neighbors) Returns Type Description int3 cube coordinate of the neighbour GetAdjacentCell_Offset(in int2, in int, in HexRotations, in HexLayouts) Returns adjacent cell for given cell and neighbour index Declaration public static int2 GetAdjacentCell_Offset(in int2 cell, in int neighbourIndex, in HexRotations hexRotation, in HexLayouts hexLayout) Parameters Type Name Description int2 cell offset coordinate of the cell to get neighbour for int neighbourIndex index of neighbour (6 neighbors) HexRotations hexRotation hexagon rotation (point/flat top) HexLayouts hexLayout layout of hexagons (odd/even) Returns Type Description int2 offset coordinate of adjacent cell GetAdjacentCell_Offset(in int2, in int, in bool, in bool) Returns adjacent cell for given cell and neighbour index Declaration public static int2 GetAdjacentCell_Offset(in int2 cell, in int neighbourIndex, in bool isOddLayout, in bool isFlatTop) Parameters Type Name Description int2 cell offset coordinate of the cell to get neighbour for int neighbourIndex index of neighbour (6 neighbors) bool isOddLayout true = odd layout, false = even layout bool isFlatTop true = flat top, false = point top Returns Type Description int2 offset coordinate of adjacent cell GetCellsRange_Axial(in int2, int, Allocator) Creates a results list with given allocator, Calculates range and fills results list with them Declaration public static NativeList<int2> GetCellsRange_Axial(in int2 center, int rangeSize, Allocator allocator) Parameters Type Name Description int2 center int rangeSize Allocator allocator Returns Type Description NativeList<int2> axial coordinate GetCellsRange_Axial(in int2, int, NativeList<int2>) Calculates range and fills given list with coordinates. Returns filled list Declaration public static NativeList<int2> GetCellsRange_Axial(in int2 center, int rangeSize, NativeList<int2> results) Parameters Type Name Description int2 center int rangeSize NativeList<int2> results Returns Type Description NativeList<int2> axial coordinate GetCellsRange_Cube(in int3, int, Allocator) Creates a results list with given allocator, Calculates range and fills results list with them Declaration public static NativeList<int3> GetCellsRange_Cube(in int3 center, int rangeSize, Allocator allocator) Parameters Type Name Description int3 center int rangeSize Allocator allocator Returns Type Description NativeList<int3> cube coordinate GetCellsRange_Cube(in int3, int, NativeList<int3>) Calculates range and fills given list with coordinates. Returns filled list Declaration public static NativeList<int3> GetCellsRange_Cube(in int3 center, int rangeSize, NativeList<int3> results) Parameters Type Name Description int3 center int rangeSize NativeList<int3> results Returns Type Description NativeList<int3> cube coordinate GetCellsRange_Offset(in int2, int, in HexRotations, in HexLayouts, Allocator) Creates a results list with given allocator, Calculates range and fills results list with them Declaration public static NativeList<int2> GetCellsRange_Offset(in int2 center, int rangeSize, in HexRotations hexRotation, in HexLayouts hexLayout, Allocator allocator) Parameters Type Name Description int2 center int rangeSize HexRotations hexRotation HexLayouts hexLayout Allocator allocator Returns Type Description NativeList<int2> offset coordinate GetCellsRange_Offset(in int2, int, in HexRotations, in HexLayouts, NativeList<int2>) Calculates range and fills given list with coordinates. Returns filled list Declaration public static NativeList<int2> GetCellsRange_Offset(in int2 center, int rangeSize, in HexRotations hexRotation, in HexLayouts hexLayout, NativeList<int2> results) Parameters Type Name Description int2 center int rangeSize HexRotations hexRotation HexLayouts hexLayout NativeList<int2> results Returns Type Description NativeList<int2> offset coordinate GetDirection_Axial(in int) Returns direction for given cell and neighbour index Declaration public static int2 GetDirection_Axial(in int directionIndex) Parameters Type Name Description int directionIndex index of neihbour to find direction towards (6 neigbours) Returns Type Description int2 direction towards the adjacent cell GetDirection_Cube(in int) Returns direction for given cell and neighbour index Declaration public static int3 GetDirection_Cube(in int directionIndex) Parameters Type Name Description int directionIndex index of neighbour to find direction towards (6 neigbours) Returns Type Description int3 cube coordinate GetDirection_Offset(in int2, in int, in HexRotations, in HexLayouts) Returns direction for given cell and neighbour index Declaration public static int2 GetDirection_Offset(in int2 cell, in int neighbourIndex, in HexRotations hexRotation, in HexLayouts hexLayout) Parameters Type Name Description int2 cell offset coordinate of the cell to get neighbour for int neighbourIndex index of neighbour (6 neighbors) HexRotations hexRotation hexagon rotation (point/flat top) HexLayouts hexLayout layout of hexagon (odd/even) Returns Type Description int2 direction towards the adjacent cell GetDirection_Offset(in int2, in int, in bool, in bool) Returns direction for given cell and neighbour index Declaration public static int2 GetDirection_Offset(in int2 cell, in int neighbourIndex, in bool isOddLayout, in bool isFlatTop) Parameters Type Name Description int2 cell cell to find a direction from int neighbourIndex index of neighbour to find a direction towards (6 neigbours) bool isOddLayout true = odd layout, false = even layout bool isFlatTop true = flat top, false = point top Returns Type Description int2 direction towards the adjacent cell GetHexGridSize(in float, in int2, in HexRotations) Returns size of the rectangle for hexagon grid with given sideLength and hexCount Declaration public static float2 GetHexGridSize(in float sideLength, in int2 hexCount, in HexRotations hexRotation) Parameters Type Name Description float sideLength Side length (radius) of the hexagon int2 hexCount Size of the grid of hexagons HexRotations hexRotation hexagon rotation (point/flat top) Returns Type Description float2 size of the hexagons grid GetHexGridSize(in float, in int2, in bool) Returns size of the rectangle for hexagon grid with given sideLength and hexCount Declaration public static float2 GetHexGridSize(in float sideLength, in int2 hexCount, in bool isFlatTop) Parameters Type Name Description float sideLength Side length (radius) of the hexagon int2 hexCount Size of the grid of hexagons bool isFlatTop if true - flat top, false - point top Returns Type Description float2 size of the hexagons grid GetHexagonSize(in float, in HexRotations) Returns size of the rectangle for hexagon with provided sideLength Declaration public static float2 GetHexagonSize(in float sideLength, in HexRotations hexRotation) Parameters Type Name Description float sideLength Side length (radius) of the hexagon HexRotations hexRotation Rotation of the hexagon (point/flat top) Returns Type Description float2 Size of the hexagon GetHexagonSize(in float, in bool) Returns size of the rectangle for hexagon with gived sideLength Declaration public static float2 GetHexagonSize(in float sideLenght, in bool isFlatTop) Parameters Type Name Description float sideLenght bool isFlatTop Returns Type Description float2 size of the hexagon HexCornerPosition(in float2, in float, in int, in HexRotations) returns position of hexagon's corner of given index for flat top and pointy top hexagon orientation Declaration public static float2 HexCornerPosition(in float2 center, in float sideSize, in int cornerIndex, in HexRotations hexRotation) Parameters Type Name Description float2 center center of the hexagon float sideSize size of the side of the hexagon int cornerIndex every next corner adds 60 degrees from starting point HexRotations hexRotation rotation of the hexagon (point/flat top) Returns Type Description float2 corner position HexCornerPosition(in float2, in float, in int, in bool) returns position of hexagon's corner of given index for flat top and pointy top hexagon orientation Declaration public static float2 HexCornerPosition(in float2 center, in float sideSize, in int cornerIndex, in bool isFlatTop) Parameters Type Name Description float2 center center of the hexagon float sideSize size of the side of the hexagon int cornerIndex every next corner adds 60 degrees from starting point bool isFlatTop true - hexagon with flat top; false - hexagon with pointy top Returns Type Description float2 corner position HexCornerPosition(in float2, in float, in float) Gives position for hexagon corner (point on circle around center) with given angle in radians Declaration public static float2 HexCornerPosition(in float2 center, in float size, in float angle_rad) Parameters Type Name Description float2 center center of the circle float size radius of the circle float angle_rad angle of the point in radians Returns Type Description float2 corner position OffsetToAxial(in int2, in HexRotations, in HexLayouts) Converts offset coordinates to axial coordinates Declaration public static int2 OffsetToAxial(in int2 offset, in HexRotations hexRotation, in HexLayouts hexLayout) Parameters Type Name Description int2 offset offset coordinate HexRotations hexRotation hexagon rotation (point/flat top) HexLayouts hexLayout Returns Type Description int2 offset coordinate OffsetToAxial(in int2, in bool, in bool) Converts offset coordinates to axial coordinates Declaration public static int2 OffsetToAxial(in int2 offset, in bool isFlatTop, in bool isOddLayout) Parameters Type Name Description int2 offset bool isFlatTop bool isOddLayout Returns Type Description int2 offset coordinate OffsetToCube(in int2, in HexRotations, in HexLayouts) Converts offset coordinates to cube coordinates Declaration public static int3 OffsetToCube(in int2 offsetCoord, in HexRotations hexRotation, in HexLayouts hexLayout) Parameters Type Name Description int2 offsetCoord offset coordinate HexRotations hexRotation rotation of hexagons (point/flat top) HexLayouts hexLayout layout of hexagons (odd/even) Returns Type Description int3 cube coordinate OffsetToCube(in int2, in bool, in bool) Converts offset coordinates to cube coordinates Declaration public static int3 OffsetToCube(in int2 offsetCoord, in bool isFlatTop, in bool isOddLayout) Parameters Type Name Description int2 offsetCoord offset coordinate bool isFlatTop true = flat top, false = point top bool isOddLayout true = odd layout, false = even layout Returns Type Description int3 cube coordinate OffsetToPixel(in int2, in float, in HexRotations, in HexLayouts) Converts offset coordinates to pixel coordinates (point in world) Declaration public static float2 OffsetToPixel(in int2 offset, in float sideSize, in HexRotations hexRotation, in HexLayouts hexLayout) Parameters Type Name Description int2 offset offset coordinate float sideSize side length (radius) of hexagon HexRotations hexRotation rotation of hexagon (point/flat top) HexLayouts hexLayout layout of hexagon (odd/even) Returns Type Description float2 pixel coordinate (point in world) PixelToAxial(in float2, in float, in HexRotations) Converts pixel coordinates to axial coordinates Declaration public static int2 PixelToAxial(in float2 pixel, in float sideSize, in HexRotations hexRotation) Parameters Type Name Description float2 pixel pixel coordinate (point in the world) float sideSize side length (radius) of hexagon HexRotations hexRotation rotation of hexagon (point/flat top) Returns Type Description int2 axial coordinate PixelToAxial(in float2, in float, in bool) Converts pixel coordinates to axial coordinates Declaration public static int2 PixelToAxial(in float2 pixel, in float sideSize, in bool isFlatTop) Parameters Type Name Description float2 pixel pixel coordinate (point in the world) float sideSize side length (radius) of hexagon bool isFlatTop true = flat top, false = point top Returns Type Description int2 axial coordinate PixelToCube(in float2, in float, in HexRotations) Converts pixel coordinates to cube coordinates Declaration public static int3 PixelToCube(in float2 pixel, in float sideSize, in HexRotations hexRotation) Parameters Type Name Description float2 pixel pixel coordinate (point in the world) float sideSize side length (radius) of hexagon HexRotations hexRotation rotation of hexagon (point/flat top) Returns Type Description int3 cube coordinate PixelToOffset(in float2, in float, in HexRotations, in HexLayouts) Converts pixel coordinates to offset coordinates Declaration public static int2 PixelToOffset(in float2 pixel, in float sideSize, in HexRotations hexRotation, in HexLayouts hexLayout) Parameters Type Name Description float2 pixel pixel coordinate (point in the world) float sideSize side length (radius) of hexagon HexRotations hexRotation rotation of hexagon (point/flat top) HexLayouts hexLayout layout of hexagons (odd/even) Returns Type Description int2 offset coordinate"
  },
  "api/Fwt.Core.HexRotations.html": {
    "href": "api/Fwt.Core.HexRotations.html",
    "title": "Enum HexRotations | Hex Terrains",
    "summary": "Enum HexRotations Hexagon rotations (pointy/flat top) Namespace: Fwt.Core Assembly: fwt.core.dll Syntax public enum HexRotations Fields Name Description FlatTop PointTop Extension Methods HashExtensions.GetHashCode_ValueType<HexRotations>(HexRotations, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.ICommitChanges.html": {
    "href": "api/Fwt.Core.ICommitChanges.html",
    "title": "Interface ICommitChanges | Hex Terrains",
    "summary": "Interface ICommitChanges Namespace: Fwt.Core Assembly: fwt.core.dll Syntax public interface ICommitChanges Methods CommitChanges() Declaration void CommitChanges() Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.IConvertableFrom-2.html": {
    "href": "api/Fwt.Core.IConvertableFrom-2.html",
    "title": "Interface IConvertableFrom<TSource, TTarget> | Hex Terrains",
    "summary": "Interface IConvertableFrom<TSource, TTarget> Namespace: Fwt.Core Assembly: fwt.core.dll Syntax public interface IConvertableFrom<TSource, TTarget> Type Parameters Name Description TSource TTarget Methods Convert(TSource) Declaration TTarget Convert(TSource source) Parameters Type Name Description TSource source Returns Type Description TTarget Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.IConvertableTo-1.html": {
    "href": "api/Fwt.Core.IConvertableTo-1.html",
    "title": "Interface IConvertableTo<TTarget> | Hex Terrains",
    "summary": "Interface IConvertableTo<TTarget> Namespace: Fwt.Core Assembly: fwt.core.dll Syntax public interface IConvertableTo<TTarget> Type Parameters Name Description TTarget Methods Convert() Declaration TTarget Convert() Returns Type Description TTarget Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.ISubAssetsContainer.html": {
    "href": "api/Fwt.Core.ISubAssetsContainer.html",
    "title": "Interface ISubAssetsContainer | Hex Terrains",
    "summary": "Interface ISubAssetsContainer Used for Containers that provide ability to Save/Delete assets to/from Container's asset file (ScriptableObject, Prefab) Namespace: Fwt.Core Assembly: fwt.core.dll Syntax public interface ISubAssetsContainer Properties SubAssets Declaration List<Object> SubAssets { get; } Property Value Type Description List<Object> Methods DeleteSubAsset(Object) Removes Asset from file. DOES NOT destroy asset Declaration void DeleteSubAsset(Object asset) Parameters Type Name Description Object asset DestroyAllSubAssets() Declaration void DestroyAllSubAssets() DestroySubAsset(Object) Removes Asset from file and DESTROYS it Declaration void DestroySubAsset(Object asset) Parameters Type Name Description Object asset ReloadSubAssets() Declaration void ReloadSubAssets() SaveSubAsset(Object) Declaration void SaveSubAsset(Object asset) Parameters Type Name Description Object asset Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.MeshSource.html": {
    "href": "api/Fwt.Core.MeshSource.html",
    "title": "Struct MeshSource | Hex Terrains",
    "summary": "Struct MeshSource Burst friendly struct for storing mesh data that later can be used to create a Unity mesh. Meant to be used in a Jobs Implements IDisposable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.Core Assembly: fwt.core.dll Syntax public struct MeshSource : IDisposable Fields Allocator Declaration public Allocator Allocator Field Value Type Description Allocator Colors Colors per vertex of the mesh Declaration public NativeList<Color> Colors Field Value Type Description NativeList<Color> Indices 16 indices layers (submeshes) Declaration public FixedArray16<NativeList<int>> Indices Field Value Type Description FixedArray16<NativeList<int>> MeshTopology Declaration public MeshTopology MeshTopology Field Value Type Description MeshTopology Uvs 4 UV channels Declaration public FixedArray4<NativeList<Vector2>> Uvs Field Value Type Description FixedArray4<NativeList<Vector2>> Verts Vertexes of the mesh Declaration public NativeList<float3> Verts Field Value Type Description NativeList<float3> Properties IsEmpty Declaration public bool IsEmpty { get; } Property Value Type Description bool Methods AddColor(Color) Declaration public void AddColor(Color color) Parameters Type Name Description Color color AddIndice(int, int) Declaration public void AddIndice(int submeshIndex, int indice) Parameters Type Name Description int submeshIndex int indice AddIndice(int, NativeList<int>) Declaration public void AddIndice(int submeshIndex, NativeList<int> indices) Parameters Type Name Description int submeshIndex NativeList<int> indices AddQuad(int, int, float3, Vector3, Vector3, float3, Color, Color, Color, Color, Vector2, Vector2, Vector2, Vector2) Declaration public void AddQuad(int submeshIndex, int uvChannel, float3 vert0, Vector3 vert1, Vector3 vert2, float3 vert3, Color color0, Color color1, Color color2, Color color3, Vector2 uv0, Vector2 uv1, Vector2 uv2, Vector2 uv3) Parameters Type Name Description int submeshIndex int uvChannel float3 vert0 Vector3 vert1 Vector3 vert2 float3 vert3 Color color0 Color color1 Color color2 Color color3 Vector2 uv0 Vector2 uv1 Vector2 uv2 Vector2 uv3 AddQuad(int, float3, float3, float3, float3, Color, Color, Color, Color) Declaration public void AddQuad(int submeshIndex, float3 vert0, float3 vert1, float3 vert2, float3 vert3, Color color0, Color color1, Color color2, Color color3) Parameters Type Name Description int submeshIndex float3 vert0 float3 vert1 float3 vert2 float3 vert3 Color color0 Color color1 Color color2 Color color3 AddQuad(int, float3, Vector3, Vector3, Vector3, Color, Color, Color, Color, Vector2, Vector2, Vector2, Vector2, Vector2, Vector2, Vector2, Vector2, Vector2, Vector2, Vector2, Vector2, Vector2, Vector2, Vector2, Vector2) Declaration public void AddQuad(int submeshIndex, float3 vert0, Vector3 vert1, Vector3 vert2, Vector3 vert3, Color color0, Color color1, Color color2, Color color3, Vector2 uv0_0, Vector2 uv1_0, Vector2 uv2_0, Vector2 uv3_0, Vector2 uv0_1, Vector2 uv1_1, Vector2 uv2_1, Vector2 uv3_1, Vector2 uv0_2, Vector2 uv1_2, Vector2 uv2_2, Vector2 uv3_2, Vector2 uv0_3, Vector2 uv1_3, Vector2 uv2_3, Vector2 uv3_3) Parameters Type Name Description int submeshIndex float3 vert0 Vector3 vert1 Vector3 vert2 Vector3 vert3 Color color0 Color color1 Color color2 Color color3 Vector2 uv0_0 Vector2 uv1_0 Vector2 uv2_0 Vector2 uv3_0 Vector2 uv0_1 Vector2 uv1_1 Vector2 uv2_1 Vector2 uv3_1 Vector2 uv0_2 Vector2 uv1_2 Vector2 uv2_2 Vector2 uv3_2 Vector2 uv0_3 Vector2 uv1_3 Vector2 uv2_3 Vector2 uv3_3 AddTriangle(int, int, Vector3, Vector3, float3, Color, Color, Color, Vector2, Vector2, Vector2) Declaration public void AddTriangle(int submeshIndex, int uvChannel, Vector3 vert0, Vector3 vert1, float3 vert2, Color color0, Color color1, Color color2, Vector2 uv0, Vector2 uv1, Vector2 uv2) Parameters Type Name Description int submeshIndex int uvChannel Vector3 vert0 Vector3 vert1 float3 vert2 Color color0 Color color1 Color color2 Vector2 uv0 Vector2 uv1 Vector2 uv2 AddTriangle(int, float3, float3, float3, Color, Color, Color, Vector2, Vector2, Vector2, Vector2, Vector2, Vector2, Vector2, Vector2, Vector2, Vector2, Vector2, Vector2) Declaration public void AddTriangle(int submeshIndex, float3 vert0, float3 vert1, float3 vert2, Color color0, Color color1, Color color2, Vector2 uv0_0, Vector2 uv1_0, Vector2 uv2_0, Vector2 uv0_1, Vector2 uv1_1, Vector2 uv2_1, Vector2 uv0_2, Vector2 uv1_2, Vector2 uv2_2, Vector2 uv0_3, Vector2 uv1_3, Vector2 uv2_3) Parameters Type Name Description int submeshIndex float3 vert0 float3 vert1 float3 vert2 Color color0 Color color1 Color color2 Vector2 uv0_0 Vector2 uv1_0 Vector2 uv2_0 Vector2 uv0_1 Vector2 uv1_1 Vector2 uv2_1 Vector2 uv0_2 Vector2 uv1_2 Vector2 uv2_2 Vector2 uv0_3 Vector2 uv1_3 Vector2 uv2_3 AddTriangle(int, Vector3, float3, Vector3, Color, Color, Color) Declaration public void AddTriangle(int submeshIndex, Vector3 vert0, float3 vert1, Vector3 vert2, Color color0, Color color1, Color color2) Parameters Type Name Description int submeshIndex Vector3 vert0 float3 vert1 Vector3 vert2 Color color0 Color color1 Color color2 AddUv(int, NativeList<Vector2>) Declaration public void AddUv(int uvChannel, NativeList<Vector2> uv) Parameters Type Name Description int uvChannel NativeList<Vector2> uv AddUv(int, Vector2) Declaration public void AddUv(int uvChannel, Vector2 uv) Parameters Type Name Description int uvChannel Vector2 uv AddUv(int, Vector2, Vector2, Vector2) Declaration public void AddUv(int uvChannel, Vector2 uv0, Vector2 uv1, Vector2 uv2) Parameters Type Name Description int uvChannel Vector2 uv0 Vector2 uv1 Vector2 uv2 AddUv(int, Vector2, Vector2, Vector2, Vector2) Declaration public void AddUv(int uvChannel, Vector2 uv0, Vector2 uv1, Vector2 uv2, Vector2 uv3) Parameters Type Name Description int uvChannel Vector2 uv0 Vector2 uv1 Vector2 uv2 Vector2 uv3 AddVertex(float3) Declaration public void AddVertex(float3 vert) Parameters Type Name Description float3 vert AddVertex(float3, float3, float3) Declaration public void AddVertex(float3 v0, float3 v1, float3 v2) Parameters Type Name Description float3 v0 float3 v1 float3 v2 AddVertex(float3, float3, float3, float3) Declaration public void AddVertex(float3 v0, float3 v1, float3 v2, float3 v3) Parameters Type Name Description float3 v0 float3 v1 float3 v2 float3 v3 Clear() Declaration public void Clear() Dispose() Declaration public void Dispose() FillMesh(Mesh) Fills the provided mesh with data from the mesh source Declaration public void FillMesh(Mesh mesh) Parameters Type Name Description Mesh mesh InitAll(Allocator) Declaration public void InitAll(Allocator allocator) Parameters Type Name Description Allocator allocator IsInitialized() Declaration public bool IsInitialized() Returns Type Description bool Implements IDisposable Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.ObjectPoolSystem_GameObject.html": {
    "href": "api/Fwt.Core.ObjectPoolSystem_GameObject.html",
    "title": "Class ObjectPoolSystem_GameObject | Hex Terrains",
    "summary": "Class ObjectPoolSystem_GameObject Inheritance object ComponentSystemBase SystemBase System_ObjectPool<GameObject> ObjectPoolSystem_GameObject Inherited Members System_ObjectPool<GameObject>._maxObjectsInPool System_ObjectPool<GameObject>.MaxObjectsInPool System_ObjectPool<GameObject>.PoolObjectsRoot System_ObjectPool<GameObject>.PrefabIdByObjectId System_ObjectPool<GameObject>.ObjectsPool System_ObjectPool<GameObject>.Instantiate(GameObject, bool) System_ObjectPool<GameObject>.Instantiate(GameObject, Transform, bool) System_ObjectPool<GameObject>.ReleaseInstance(GameObject) System_ObjectPool<GameObject>.PutObjectToPoolOrDestroy(GameObject) System_ObjectPool<GameObject>.PutObjectToPool(GameObject) System_ObjectPool<GameObject>.PutObjectToPool(int, GameObject) System_ObjectPool<GameObject>.ExtractObjectFromPool(int) System_ObjectPool<GameObject>.GetPrefabId(GameObject) System_ObjectPool<GameObject>.GetPrefabId(int) System_ObjectPool<GameObject>.DestroyObject(GameObject) System_ObjectPool<GameObject>.CreateObjectsRootTransform() System_ObjectPool<GameObject>.RegisterCreatedInstance(int, int) System_ObjectPool<GameObject>.UnregisterCreatedInstance(GameObject) System_ObjectPool<GameObject>.UnregisterCreatedInstance(int) System_ObjectPool<GameObject>.OnUpdate() SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.Core Assembly: fwt.core.ecs.dll Syntax public class ObjectPoolSystem_GameObject : System_ObjectPool<GameObject> Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.Packages.Fwt.Core.Runtime.FpsCounter.html": {
    "href": "api/Fwt.Core.Packages.Fwt.Core.Runtime.FpsCounter.html",
    "title": "Class FpsCounter | Hex Terrains",
    "summary": "Class FpsCounter Inheritance object Object Component Behaviour MonoBehaviour FpsCounter Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Fwt.Core.Packages.Fwt.Core.Runtime Assembly: fwt.core.dll Syntax public class FpsCounter : MonoBehaviour Fields Offset Declaration public float Offset Field Value Type Description float Extension Methods Extensions_UnityObject.SmartDestroy<TObject>(TObject) Extensions_UnityObject.SmartDisableGameObject<TObject>(TObject) Extensions_UnityObject.SmartEnableGameObject<TObject>(TObject) HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.Packages.Fwt.Core.Runtime.html": {
    "href": "api/Fwt.Core.Packages.Fwt.Core.Runtime.html",
    "title": "Namespace Fwt.Core.Packages.Fwt.Core.Runtime | Hex Terrains",
    "summary": "Namespace Fwt.Core.Packages.Fwt.Core.Runtime Classes FpsCounter"
  },
  "api/Fwt.Core.RandomExtensions.html": {
    "href": "api/Fwt.Core.RandomExtensions.html",
    "title": "Class RandomExtensions | Hex Terrains",
    "summary": "Class RandomExtensions Inheritance object RandomExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.Core Assembly: fwt.core.dll Syntax public static class RandomExtensions Methods NextInt2(Random, int2, int2) Declaration public static int2 NextInt2(this Random random, int2 min, int2 max) Parameters Type Name Description Random random int2 min int2 max Returns Type Description int2"
  },
  "api/Fwt.Core.Registries.System_DataTag-1.html": {
    "href": "api/Fwt.Core.Registries.System_DataTag-1.html",
    "title": "Class System_DataTag<TComponent> | Hex Terrains",
    "summary": "Class System_DataTag<TComponent> Inheritance object ComponentSystemBase SystemBase System_DataTag<TComponent> System_DataTag_C<TComponent> System_DataTag_S<TComponent> Inherited Members SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.OnUpdate() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.Core.Registries Assembly: fwt.core.ecs.dll Syntax public abstract class System_DataTag<TComponent> : SystemBase Type Parameters Name Description TComponent Fields AllTags Declaration protected NativeList<ComponentType> AllTags Field Value Type Description NativeList<ComponentType> TagByData Declaration protected Dictionary<TComponent, ComponentType> TagByData Field Value Type Description Dictionary<TComponent, ComponentType> _query Declaration protected EntityQuery _query Field Value Type Description EntityQuery Methods CheckEntity(Entity, in TComponent, EntityCommandBuffer) Returns true if there was changes Declaration protected virtual bool CheckEntity(Entity entity, in TComponent data, EntityCommandBuffer commandBuffer) Parameters Type Name Description Entity entity TComponent data EntityCommandBuffer commandBuffer Returns Type Description bool OnCreate() Called when this system is created. Declaration protected override void OnCreate() Overrides Unity.Entities.ComponentSystemBase.OnCreate() Remarks Implement an OnCreate() function to set up system resources when it is created. OnCreate is invoked before the the first time Unity.Entities.ComponentSystemBase.OnStartRunning() and OnUpdate are invoked. OnDestroy() Called when this system is destroyed. Declaration protected override void OnDestroy() Overrides Unity.Entities.ComponentSystemBase.OnDestroy() Remarks Systems are destroyed when the application shuts down, the World is destroyed, or you call Unity.Entities.World.DestroySystem(Unity.Entities.SystemHandle). In the Unity Editor, system destruction occurs when you exit Play Mode and when scripts are reloaded. RegisterDataTag(TComponent, ComponentType) Declaration protected virtual void RegisterDataTag(TComponent data, ComponentType tag) Parameters Type Name Description TComponent data ComponentType tag RegisterDataTag<TDataTag>(TComponent) Declaration protected virtual void RegisterDataTag<TDataTag>(TComponent data) Parameters Type Name Description TComponent data Type Parameters Name Description TDataTag SetupDataTags() Declaration protected abstract void SetupDataTags() Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.Registries.System_DataTag_C-1.html": {
    "href": "api/Fwt.Core.Registries.System_DataTag_C-1.html",
    "title": "Class System_DataTag_C<TComponent> | Hex Terrains",
    "summary": "Class System_DataTag_C<TComponent> Inheritance object ComponentSystemBase SystemBase System_DataTag<TComponent> System_DataTag_C<TComponent> Inherited Members System_DataTag<TComponent>.TagByData System_DataTag<TComponent>.AllTags System_DataTag<TComponent>._query System_DataTag<TComponent>.OnDestroy() System_DataTag<TComponent>.SetupDataTags() System_DataTag<TComponent>.CheckEntity(Entity, in TComponent, EntityCommandBuffer) System_DataTag<TComponent>.RegisterDataTag(TComponent, ComponentType) System_DataTag<TComponent>.RegisterDataTag<TDataTag>(TComponent) SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.Core.Registries Assembly: fwt.core.ecs.dll Syntax public abstract class System_DataTag_C<TComponent> : System_DataTag<TComponent> where TComponent : unmanaged, IComponentData Type Parameters Name Description TComponent Methods OnCreate() Called when this system is created. Declaration protected override void OnCreate() Overrides System_DataTag<TComponent>.OnCreate() Remarks Implement an OnCreate() function to set up system resources when it is created. OnCreate is invoked before the the first time Unity.Entities.ComponentSystemBase.OnStartRunning() and OnUpdate are invoked. OnUpdate() Implement OnUpdate() to perform the major work of this system. Declaration protected override void OnUpdate() Overrides Unity.Entities.SystemBase.OnUpdate() Remarks By default, the system invokes `OnUpdate()` once every frame on the main thread. To skip OnUpdate if all of the system's [EntityQueries] are empty, use the [RequireMatchingQueriesForUpdateAttribute]. To limit when OnUpdate is invoked, you can specify components that must exist, or queries that match specific Entities. To do this, call Unity.Entities.ComponentSystemBase.RequireForUpdate<T>() or Unity.Entities.ComponentSystemBase.RequireForUpdate(Unity.Entities.EntityQuery) in the system's OnCreate method. For more information, see [ShouldRunSystem]. The [Entities.ForEach] and [Job.WithCode] constructions provide convenient mechanisms for defining jobs. You can also instantiate and schedule an Unity.Entities.IJobChunk instance; you can use the [C# Job System] or you can perform work on the main thread. If you call Unity.Entities.EntityManager methods that perform structural changes on the main thread, be sure to arrange the system order to minimize the performance impact of the resulting [sync points]. Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.Registries.System_DataTag_S-1.html": {
    "href": "api/Fwt.Core.Registries.System_DataTag_S-1.html",
    "title": "Class System_DataTag_S<TComponent> | Hex Terrains",
    "summary": "Class System_DataTag_S<TComponent> Inheritance object ComponentSystemBase SystemBase System_DataTag<TComponent> System_DataTag_S<TComponent> Inherited Members System_DataTag<TComponent>.TagByData System_DataTag<TComponent>.AllTags System_DataTag<TComponent>._query System_DataTag<TComponent>.OnDestroy() System_DataTag<TComponent>.SetupDataTags() System_DataTag<TComponent>.CheckEntity(Entity, in TComponent, EntityCommandBuffer) System_DataTag<TComponent>.RegisterDataTag(TComponent, ComponentType) System_DataTag<TComponent>.RegisterDataTag<TDataTag>(TComponent) SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.Core.Registries Assembly: fwt.core.ecs.dll Syntax public abstract class System_DataTag_S<TComponent> : System_DataTag<TComponent> where TComponent : unmanaged, ISharedComponentData Type Parameters Name Description TComponent Methods OnCreate() Called when this system is created. Declaration protected override void OnCreate() Overrides System_DataTag<TComponent>.OnCreate() Remarks Implement an OnCreate() function to set up system resources when it is created. OnCreate is invoked before the the first time Unity.Entities.ComponentSystemBase.OnStartRunning() and OnUpdate are invoked. OnUpdate() Implement OnUpdate() to perform the major work of this system. Declaration protected override void OnUpdate() Overrides Unity.Entities.SystemBase.OnUpdate() Remarks By default, the system invokes `OnUpdate()` once every frame on the main thread. To skip OnUpdate if all of the system's [EntityQueries] are empty, use the [RequireMatchingQueriesForUpdateAttribute]. To limit when OnUpdate is invoked, you can specify components that must exist, or queries that match specific Entities. To do this, call Unity.Entities.ComponentSystemBase.RequireForUpdate<T>() or Unity.Entities.ComponentSystemBase.RequireForUpdate(Unity.Entities.EntityQuery) in the system's OnCreate method. For more information, see [ShouldRunSystem]. The [Entities.ForEach] and [Job.WithCode] constructions provide convenient mechanisms for defining jobs. You can also instantiate and schedule an Unity.Entities.IJobChunk instance; you can use the [C# Job System] or you can perform work on the main thread. If you call Unity.Entities.EntityManager methods that perform structural changes on the main thread, be sure to arrange the system order to minimize the performance impact of the resulting [sync points]. Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.Registries.html": {
    "href": "api/Fwt.Core.Registries.html",
    "title": "Namespace Fwt.Core.Registries | Hex Terrains",
    "summary": "Namespace Fwt.Core.Registries Classes System_DataTag_C<TComponent> System_DataTag_S<TComponent> System_DataTag<TComponent>"
  },
  "api/Fwt.Core.RenderEntities.ExtractTransformsForKeyJob.html": {
    "href": "api/Fwt.Core.RenderEntities.ExtractTransformsForKeyJob.html",
    "title": "Struct ExtractTransformsForKeyJob | Hex Terrains",
    "summary": "Struct ExtractTransformsForKeyJob Implements IJob Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.Core.RenderEntities Assembly: fwt.core.dll Syntax [BurstCompile] public struct ExtractTransformsForKeyJob : IJob Fields IteratorIndex Declaration public NativeArray<int> IteratorIndex Field Value Type Description NativeArray<int> Key Declaration public RenderEntitySettings Key Field Value Type Description RenderEntitySettings Keys Declaration [ReadOnly] public NativeArray<RenderEntitySettings> Keys Field Value Type Description NativeArray<RenderEntitySettings> Transforms Declaration [WriteOnly] public NativeList<Matrix4x4> Transforms Field Value Type Description NativeList<Matrix4x4> Values Declaration [ReadOnly] public NativeArray<RenderEntity> Values Field Value Type Description NativeArray<RenderEntity> Methods Execute() Implement this method to perform work on a worker thread. Declaration public void Execute() Implements Unity.Jobs.IJob Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.RenderEntities.ExtractTransformsJobFast.html": {
    "href": "api/Fwt.Core.RenderEntities.ExtractTransformsJobFast.html",
    "title": "Struct ExtractTransformsJobFast | Hex Terrains",
    "summary": "Struct ExtractTransformsJobFast Implements IJob Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.Core.RenderEntities Assembly: fwt.core.dll Syntax [BurstCompile] public struct ExtractTransformsJobFast : IJob Fields Key Declaration public RenderEntitySettings Key Field Value Type Description RenderEntitySettings RenderEntities Declaration [ReadOnly] public NativeParallelMultiHashMap<RenderEntitySettings, RenderEntity> RenderEntities Field Value Type Description NativeParallelMultiHashMap<RenderEntitySettings, RenderEntity> Transforms Declaration [WriteOnly] public NativeList<Matrix4x4> Transforms Field Value Type Description NativeList<Matrix4x4> Methods Execute() Implement this method to perform work on a worker thread. Declaration public void Execute() Implements Unity.Jobs.IJob Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.RenderEntities.ExtractTransformsJobOld.html": {
    "href": "api/Fwt.Core.RenderEntities.ExtractTransformsJobOld.html",
    "title": "Struct ExtractTransformsJobOld | Hex Terrains",
    "summary": "Struct ExtractTransformsJobOld Implements IJob Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.Core.RenderEntities Assembly: fwt.core.dll Syntax [BurstCompile] public struct ExtractTransformsJobOld : IJob Fields Key Declaration public RenderEntitySettings Key Field Value Type Description RenderEntitySettings RenderEntities Declaration [ReadOnly] public NativeParallelMultiHashMap<RenderEntitySettings, RenderEntity> RenderEntities Field Value Type Description NativeParallelMultiHashMap<RenderEntitySettings, RenderEntity> Transforms Declaration [WriteOnly] public NativeList<Matrix4x4> Transforms Field Value Type Description NativeList<Matrix4x4> Methods Execute() Implement this method to perform work on a worker thread. Declaration public void Execute() Implements Unity.Jobs.IJob Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.RenderEntities.MaterialProperties.html": {
    "href": "api/Fwt.Core.RenderEntities.MaterialProperties.html",
    "title": "Struct MaterialProperties | Hex Terrains",
    "summary": "Struct MaterialProperties Implements IEquatable<MaterialProperties> Inherited Members ValueType.Equals(object) ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.Core.RenderEntities Assembly: fwt.core.dll Syntax [Serializable] public struct MaterialProperties : IEquatable<MaterialProperties> Fields Colors Declaration public List<MaterialProperty_Color> Colors Field Value Type Description List<MaterialProperty_Color> Floats Declaration public List<MaterialProperty_Float> Floats Field Value Type Description List<MaterialProperty_Float> Matrices Declaration public List<MaterialProperty_Matrix> Matrices Field Value Type Description List<MaterialProperty_Matrix> Textures Declaration public List<MaterialProperty_Texture> Textures Field Value Type Description List<MaterialProperty_Texture> Vectors Declaration public List<MaterialProperty_Vector> Vectors Field Value Type Description List<MaterialProperty_Vector> Properties IsEmpty Declaration public bool IsEmpty { get; } Property Value Type Description bool Methods CalcHashCode() Declaration public int CalcHashCode() Returns Type Description int CreateMaterialPropertyBlock() Declaration public MaterialPropertyBlock CreateMaterialPropertyBlock() Returns Type Description MaterialPropertyBlock Equals(MaterialProperties) Declaration public bool Equals(MaterialProperties other) Parameters Type Name Description MaterialProperties other Returns Type Description bool Equals<TValue>(IList<TValue>, IList<TValue>) Declaration public bool Equals<TValue>(IList<TValue> first, IList<TValue> second) Parameters Type Name Description IList<TValue> first IList<TValue> second Returns Type Description bool Type Parameters Name Description TValue GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides ValueType.GetHashCode() GetHashCode<TValue>(IList<TValue>) Declaration public int GetHashCode<TValue>(IList<TValue> list) Parameters Type Name Description IList<TValue> list Returns Type Description int Type Parameters Name Description TValue RecalcHashCode() Declaration public void RecalcHashCode() Implements IEquatable<T> Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.RenderEntities.MaterialProperty_Color.html": {
    "href": "api/Fwt.Core.RenderEntities.MaterialProperty_Color.html",
    "title": "Struct MaterialProperty_Color | Hex Terrains",
    "summary": "Struct MaterialProperty_Color Implements IEquatable<MaterialProperty_Color> Inherited Members ValueType.Equals(object) ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.Core.RenderEntities Assembly: fwt.core.dll Syntax [Serializable] public struct MaterialProperty_Color : IEquatable<MaterialProperty_Color> Fields Name Declaration public string Name Field Value Type Description string Value Declaration public Color Value Field Value Type Description Color Methods Equals(MaterialProperty_Color) Declaration public bool Equals(MaterialProperty_Color other) Parameters Type Name Description MaterialProperty_Color other Returns Type Description bool GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides ValueType.GetHashCode() Implements IEquatable<T> Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.RenderEntities.MaterialProperty_Float.html": {
    "href": "api/Fwt.Core.RenderEntities.MaterialProperty_Float.html",
    "title": "Struct MaterialProperty_Float | Hex Terrains",
    "summary": "Struct MaterialProperty_Float Implements IEquatable<MaterialProperty_Float> Inherited Members ValueType.Equals(object) ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.Core.RenderEntities Assembly: fwt.core.dll Syntax [Serializable] public struct MaterialProperty_Float : IEquatable<MaterialProperty_Float> Fields Name Declaration public string Name Field Value Type Description string Value Declaration public float Value Field Value Type Description float Methods Equals(MaterialProperty_Float) Declaration public bool Equals(MaterialProperty_Float other) Parameters Type Name Description MaterialProperty_Float other Returns Type Description bool GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides ValueType.GetHashCode() Implements IEquatable<T> Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.RenderEntities.MaterialProperty_Matrix.html": {
    "href": "api/Fwt.Core.RenderEntities.MaterialProperty_Matrix.html",
    "title": "Struct MaterialProperty_Matrix | Hex Terrains",
    "summary": "Struct MaterialProperty_Matrix Implements IEquatable<MaterialProperty_Matrix> Inherited Members ValueType.Equals(object) ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.Core.RenderEntities Assembly: fwt.core.dll Syntax [Serializable] public struct MaterialProperty_Matrix : IEquatable<MaterialProperty_Matrix> Fields Name Declaration public string Name Field Value Type Description string Value Declaration public Matrix4x4 Value Field Value Type Description Matrix4x4 Methods Equals(MaterialProperty_Matrix) Declaration public bool Equals(MaterialProperty_Matrix other) Parameters Type Name Description MaterialProperty_Matrix other Returns Type Description bool GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides ValueType.GetHashCode() Implements IEquatable<T> Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.RenderEntities.MaterialProperty_Texture.html": {
    "href": "api/Fwt.Core.RenderEntities.MaterialProperty_Texture.html",
    "title": "Struct MaterialProperty_Texture | Hex Terrains",
    "summary": "Struct MaterialProperty_Texture Implements IEquatable<MaterialProperty_Texture> Inherited Members ValueType.Equals(object) ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.Core.RenderEntities Assembly: fwt.core.dll Syntax [Serializable] public struct MaterialProperty_Texture : IEquatable<MaterialProperty_Texture> Fields Name Declaration public string Name Field Value Type Description string Value Declaration public Texture Value Field Value Type Description Texture Methods Equals(MaterialProperty_Texture) Declaration public bool Equals(MaterialProperty_Texture other) Parameters Type Name Description MaterialProperty_Texture other Returns Type Description bool GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides ValueType.GetHashCode() Implements IEquatable<T> Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.RenderEntities.MaterialProperty_Vector.html": {
    "href": "api/Fwt.Core.RenderEntities.MaterialProperty_Vector.html",
    "title": "Struct MaterialProperty_Vector | Hex Terrains",
    "summary": "Struct MaterialProperty_Vector Implements IEquatable<MaterialProperty_Vector> Inherited Members ValueType.Equals(object) ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.Core.RenderEntities Assembly: fwt.core.dll Syntax [Serializable] public struct MaterialProperty_Vector : IEquatable<MaterialProperty_Vector> Fields Name Declaration public string Name Field Value Type Description string Value Declaration public Vector4 Value Field Value Type Description Vector4 Methods Equals(MaterialProperty_Vector) Declaration public bool Equals(MaterialProperty_Vector other) Parameters Type Name Description MaterialProperty_Vector other Returns Type Description bool GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides ValueType.GetHashCode() Implements IEquatable<T> Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.RenderEntities.RenderEntitiesConfig.html": {
    "href": "api/Fwt.Core.RenderEntities.RenderEntitiesConfig.html",
    "title": "Class RenderEntitiesConfig | Hex Terrains",
    "summary": "Class RenderEntitiesConfig Config for render meshes in bulk. Contains meshes, materials and property blocks. Inheritance object Object ScriptableObject RenderEntitiesConfig Inherited Members ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Fwt.Core.RenderEntities Assembly: fwt.core.dll Syntax [CreateAssetMenu(menuName = \"Fwt/Configs/Render Entities\")] public class RenderEntitiesConfig : ScriptableObject Fields AddedMaterialProperties Declaration protected Dictionary<int, int> AddedMaterialProperties Field Value Type Description Dictionary<int, int> AddedMaterials Declaration protected Dictionary<int, int> AddedMaterials Field Value Type Description Dictionary<int, int> AddedMeshes Declaration protected Dictionary<int, int> AddedMeshes Field Value Type Description Dictionary<int, int> AddedPropertyBlocks Declaration protected Dictionary<int, int> AddedPropertyBlocks Field Value Type Description Dictionary<int, int> Materials Declaration public List<Material> Materials Field Value Type Description List<Material> Meshes Declaration public List<Mesh> Meshes Field Value Type Description List<Mesh> PropertyBlocks Declaration public List<MaterialPropertyBlock> PropertyBlocks Field Value Type Description List<MaterialPropertyBlock> _maxTransformsPerPass Declaration protected const int _maxTransformsPerPass = 1023 Field Value Type Description int _transforms Declaration protected List<Matrix4x4> _transforms Field Value Type Description List<Matrix4x4> Methods ClearAll() Clears everything Declaration public virtual void ClearAll() InitAll() Ensures all lists and dictionaries are created Declaration public virtual void InitAll() OnDisable() Declaration protected virtual void OnDisable() OnEnable() Declaration protected virtual void OnEnable() RecalcAssetIndexes() Goes over materials and meshes and recalculates the mesh index for every of them Declaration [ContextMenu(\"Recalculate Asset Indexes\")] public virtual void RecalcAssetIndexes() RegisterMaterial(Material) Registers a material. Returns the index of material it's registered under. Returns -1 if failed Declaration public virtual int RegisterMaterial(Material material) Parameters Type Name Description Material material Returns Type Description int RegisterMaterialProperties(MaterialProperties) Registers a material property block created from given material properties. Creates a material property block from given materialProperties Declaration public virtual int RegisterMaterialProperties(MaterialProperties materialProperties) Parameters Type Name Description MaterialProperties materialProperties Returns Type Description int RegisterMesh(Mesh) Registers a mesh. Returns the index of mesh it's registered under. Returns -1 if failed Declaration public virtual int RegisterMesh(Mesh mesh) Parameters Type Name Description Mesh mesh Returns Type Description int RegisterPropertyBlock(MaterialPropertyBlock) Registers a property block. Returns the index of property block it's registered under. Returns -1 if failed Declaration public virtual int RegisterPropertyBlock(MaterialPropertyBlock propertyBlock) Parameters Type Name Description MaterialPropertyBlock propertyBlock Returns Type Description int RegisterRenderer(Renderer, MeshFilter, IList<RenderEntitySettings>, int, int, int) Fills the \"result\" list with render result extracted from given renderer. Returns the amount of render entities added (assuming it can fill not empty results list) Declaration public virtual int RegisterRenderer(Renderer renderer, MeshFilter meshFilter, IList<RenderEntitySettings> result, int maxSubmeshCount = -1, int maxMaterials = -1, int maxRenderEntities = -1) Parameters Type Name Description Renderer renderer MeshFilter meshFilter IList<RenderEntitySettings> result int maxSubmeshCount int maxMaterials int maxRenderEntities Returns Type Description int Render(Camera, RenderEntitySettings, List<Matrix4x4>) Renders Instanced the mesh from given settings on given camera using transforms list as a list of render transforms Declaration protected virtual void Render(Camera camera, RenderEntitySettings settings, List<Matrix4x4> transforms) Parameters Type Name Description Camera camera RenderEntitySettings settings List<Matrix4x4> transforms Render(Camera, RenderEntitySettings, NativeList<Matrix4x4>, Bounds) Renders Instanced the mesh from given settings on given camera using transforms list as a list of render transforms Declaration protected virtual void Render(Camera camera, RenderEntitySettings settings, NativeList<Matrix4x4> transforms, Bounds worldBounds) Parameters Type Name Description Camera camera RenderEntitySettings settings NativeList<Matrix4x4> transforms Bounds worldBounds RenderEntities(NativeList<RenderEntity>, Camera, JobHandle) Sorts and renders entities. Depndency is passed to SortRenderEntitiesJob Declaration public virtual void RenderEntities(NativeList<RenderEntity> renderEntities, Camera camera, JobHandle dependency = default) Parameters Type Name Description NativeList<RenderEntity> renderEntities Camera camera JobHandle dependency RenderEntities(NativeParallelMultiHashMap<RenderEntitySettings, RenderEntity>, Camera) Renders sorted entities Declaration public virtual void RenderEntities(NativeParallelMultiHashMap<RenderEntitySettings, RenderEntity> renderEntities, Camera camera) Parameters Type Name Description NativeParallelMultiHashMap<RenderEntitySettings, RenderEntity> renderEntities Camera camera RenderEntities(NativeParallelMultiHashMap<RenderEntitySettings, RenderEntity>, Camera, Bounds, int) Renders sorted entities. maxEntitiesPerKey is used to limit the amount of entities per key (it will not render more entities per key than this value). Needed for allocating memory for extract transforms job. -1 means no limit (equals to renderEntities.Count()) Declaration public virtual void RenderEntities(NativeParallelMultiHashMap<RenderEntitySettings, RenderEntity> renderEntities, Camera camera, Bounds worldBounds, int maxEntitiesPerKey = -1) Parameters Type Name Description NativeParallelMultiHashMap<RenderEntitySettings, RenderEntity> renderEntities Camera camera Bounds worldBounds int maxEntitiesPerKey RenderEntitiesFast(NativeParallelMultiHashMap<RenderEntitySettings, RenderEntity>, Camera, Bounds, int) Renders sorted entities. maxEntitiesPerKey is used to limit the amount of entities per key (it will not render more entities per key than this value). Needed for allocating memory for extract transforms job. -1 means no limit (equals to renderEntities.Count()) Declaration public virtual void RenderEntitiesFast(NativeParallelMultiHashMap<RenderEntitySettings, RenderEntity> renderEntities, Camera camera, Bounds worldBounds, int maxEntitiesPerKey = -1) Parameters Type Name Description NativeParallelMultiHashMap<RenderEntitySettings, RenderEntity> renderEntities Camera camera Bounds worldBounds int maxEntitiesPerKey RenderEntitiesFastSlow(NativeParallelMultiHashMap<RenderEntitySettings, RenderEntity>, Camera, Bounds, int) Renders sorted entities. maxEntitiesPerKey is used to limit the amount of entities per key (it will not render more entities per key than this value). Needed for allocating memory for extract transforms job. -1 means no limit (equals to renderEntities.Count()) Declaration public virtual void RenderEntitiesFastSlow(NativeParallelMultiHashMap<RenderEntitySettings, RenderEntity> renderEntities, Camera camera, Bounds worldBounds, int maxEntitiesPerKey = -1) Parameters Type Name Description NativeParallelMultiHashMap<RenderEntitySettings, RenderEntity> renderEntities Camera camera Bounds worldBounds int maxEntitiesPerKey SortEntities(NativeList<RenderEntity>, NativeParallelMultiHashMap<RenderEntitySettings, RenderEntity>, JobHandle) Sorts given entities and puts them into sorted entities multi hash map Declaration protected virtual JobHandle SortEntities(NativeList<RenderEntity> renderEntities, NativeParallelMultiHashMap<RenderEntitySettings, RenderEntity> sortedEntities, JobHandle dependency = default) Parameters Type Name Description NativeList<RenderEntity> renderEntities NativeParallelMultiHashMap<RenderEntitySettings, RenderEntity> sortedEntities JobHandle dependency Returns Type Description JobHandle Extension Methods Extensions_UnityObject.SmartDestroy<TObject>(TObject) Extensions_UnityObject.SmartDisableGameObject<TObject>(TObject) Extensions_UnityObject.SmartEnableGameObject<TObject>(TObject) HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.RenderEntities.RenderEntitiesUtils.html": {
    "href": "api/Fwt.Core.RenderEntities.RenderEntitiesUtils.html",
    "title": "Class RenderEntitiesUtils | Hex Terrains",
    "summary": "Class RenderEntitiesUtils Inheritance object RenderEntitiesUtils Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.Core.RenderEntities Assembly: fwt.core.dll Syntax public static class RenderEntitiesUtils Methods Render(RenderEntitySettings, List<Matrix4x4>, List<Mesh>, List<Material>, MaterialPropertyBlock, Camera) Render given entity Declaration public static void Render(RenderEntitySettings settings, List<Matrix4x4> transforms, List<Mesh> meshes, List<Material> materials, MaterialPropertyBlock properties, Camera camera) Parameters Type Name Description RenderEntitySettings settings List<Matrix4x4> transforms List<Mesh> meshes List<Material> materials MaterialPropertyBlock properties Camera camera Render(RenderEntitySettings, NativeList<Matrix4x4>, List<Mesh>, List<Material>, MaterialPropertyBlock, Camera, Bounds, LightProbeUsage, MotionVectorGenerationMode, ReflectionProbeUsage, int, uint) Render given entity Declaration public static void Render(RenderEntitySettings settings, NativeList<Matrix4x4> transforms, List<Mesh> meshes, List<Material> materials, MaterialPropertyBlock properties, Camera camera, Bounds worldBounds, LightProbeUsage lightProbeUsage = LightProbeUsage.Off, MotionVectorGenerationMode motionVectorMode = MotionVectorGenerationMode.ForceNoMotion, ReflectionProbeUsage reflectionProbeUsage = ReflectionProbeUsage.Off, int rendererPriority = 0, uint renderingLayerMask = 1) Parameters Type Name Description RenderEntitySettings settings NativeList<Matrix4x4> transforms List<Mesh> meshes List<Material> materials MaterialPropertyBlock properties Camera camera Bounds worldBounds LightProbeUsage lightProbeUsage MotionVectorGenerationMode motionVectorMode ReflectionProbeUsage reflectionProbeUsage int rendererPriority uint renderingLayerMask"
  },
  "api/Fwt.Core.RenderEntities.RenderEntity.html": {
    "href": "api/Fwt.Core.RenderEntities.RenderEntity.html",
    "title": "Struct RenderEntity | Hex Terrains",
    "summary": "Struct RenderEntity Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.Core.RenderEntities Assembly: fwt.core.dll Syntax public struct RenderEntity Fields Settings Declaration public RenderEntitySettings Settings Field Value Type Description RenderEntitySettings Transform Declaration public Matrix4x4 Transform Field Value Type Description Matrix4x4 Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.RenderEntities.RenderEntitySettings.html": {
    "href": "api/Fwt.Core.RenderEntities.RenderEntitySettings.html",
    "title": "Struct RenderEntitySettings | Hex Terrains",
    "summary": "Struct RenderEntitySettings Implements IEquatable<RenderEntitySettings> IComparable<RenderEntitySettings> Inherited Members ValueType.Equals(object) ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.Core.RenderEntities Assembly: fwt.core.dll Syntax public struct RenderEntitySettings : IEquatable<RenderEntitySettings>, IComparable<RenderEntitySettings> Fields Layer Declaration public int Layer Field Value Type Description int MaterialIndex Declaration public int MaterialIndex Field Value Type Description int MeshIndex Declaration public int MeshIndex Field Value Type Description int PropertyBlockIndex Declaration public int PropertyBlockIndex Field Value Type Description int ReceiveShadows Declaration public bool ReceiveShadows Field Value Type Description bool ShadowMode Declaration public ShadowCastingMode ShadowMode Field Value Type Description ShadowCastingMode SubmeshIndex Declaration public int SubmeshIndex Field Value Type Description int Methods CompareTo(RenderEntitySettings) Declaration public int CompareTo(RenderEntitySettings other) Parameters Type Name Description RenderEntitySettings other Returns Type Description int Equals(RenderEntitySettings) Declaration public bool Equals(RenderEntitySettings other) Parameters Type Name Description RenderEntitySettings other Returns Type Description bool GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides ValueType.GetHashCode() Implements IEquatable<T> IComparable<T> Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.RenderEntities.SortRenderEntitiesJob.html": {
    "href": "api/Fwt.Core.RenderEntities.SortRenderEntitiesJob.html",
    "title": "Struct SortRenderEntitiesJob | Hex Terrains",
    "summary": "Struct SortRenderEntitiesJob Implements IJobParallelFor Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.Core.RenderEntities Assembly: fwt.core.dll Syntax [BurstCompile] public struct SortRenderEntitiesJob : IJobParallelFor Fields RenderEntities Declaration public NativeList<RenderEntity> RenderEntities Field Value Type Description NativeList<RenderEntity> SortedEntities Declaration public NativeParallelMultiHashMap<RenderEntitySettings, RenderEntity>.ParallelWriter SortedEntities Field Value Type Description NativeParallelMultiHashMap<RenderEntitySettings, RenderEntity>.ParallelWriter Methods Execute(int) Performs work against a specific iteration index. Declaration public void Execute(int index) Parameters Type Name Description int index The index of the Parallel for loop at which to perform work. Implements Unity.Jobs.IJobParallelFor Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.RenderEntities.html": {
    "href": "api/Fwt.Core.RenderEntities.html",
    "title": "Namespace Fwt.Core.RenderEntities | Hex Terrains",
    "summary": "Namespace Fwt.Core.RenderEntities Classes RenderEntitiesConfig Config for render meshes in bulk. Contains meshes, materials and property blocks. RenderEntitiesUtils Structs ExtractTransformsForKeyJob ExtractTransformsJobFast MaterialProperties MaterialProperty_Color MaterialProperty_Float MaterialProperty_Matrix MaterialProperty_Texture MaterialProperty_Vector RenderEntity RenderEntitySettings SortRenderEntitiesJob"
  },
  "api/Fwt.Core.SpriteUv.html": {
    "href": "api/Fwt.Core.SpriteUv.html",
    "title": "Struct SpriteUv | Hex Terrains",
    "summary": "Struct SpriteUv Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.Core Assembly: fwt.core.dll Syntax public struct SpriteUv Fields UvMax Declaration public float2 UvMax Field Value Type Description float2 UvMin Declaration public float2 UvMin Field Value Type Description float2 Methods FromSprite(Sprite, out SpriteUv) Declaration public static bool FromSprite(Sprite sprite, out SpriteUv spriteUv) Parameters Type Name Description Sprite sprite SpriteUv spriteUv Returns Type Description bool Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.StateMachines.AutoTickStateMachineMb.html": {
    "href": "api/Fwt.Core.StateMachines.AutoTickStateMachineMb.html",
    "title": "Class AutoTickStateMachineMb | Hex Terrains",
    "summary": "Class AutoTickStateMachineMb Inheritance object Object Component Behaviour MonoBehaviour StateMachineMb AutoTickStateMachineMb Implements IStateMachine Inherited Members StateMachineMb.States StateMachineMb.SortedStates StateMachineMb.CurrentState StateMachineMb.SwitchState<TState>() StateMachineMb.SwitchState<TState, TContext>(TContext) StateMachineMb.SwitchState(int) StateMachineMb.SwitchState<TState, TContext>(TState, TContext) StateMachineMb.SwitchState(ISmState) StateMachineMb.GetState<TState>(Type) StateMachineMb.GetState(int) StateMachineMb.GetState(Type) StateMachineMb.Tick() StateMachineMb.Awake() StateMachineMb.Start() StateMachineMb.OnValidateStates() MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Fwt.Core.StateMachines Assembly: fwt.core.dll Syntax public class AutoTickStateMachineMb : StateMachineMb, IStateMachine Methods Update() Declaration protected virtual void Update() Implements IStateMachine Extension Methods Extensions_UnityObject.SmartDestroy<TObject>(TObject) Extensions_UnityObject.SmartDisableGameObject<TObject>(TObject) Extensions_UnityObject.SmartEnableGameObject<TObject>(TObject) HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.StateMachines.ISmState.html": {
    "href": "api/Fwt.Core.StateMachines.ISmState.html",
    "title": "Interface ISmState | Hex Terrains",
    "summary": "Interface ISmState Namespace: Fwt.Core.StateMachines Assembly: fwt.core.dll Syntax public interface ISmState Methods PrepareToRun() Declaration void PrepareToRun() PrepareToStop() Declaration void PrepareToStop() Tick() Declaration void Tick() Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.StateMachines.ISmStateWithContext-1.html": {
    "href": "api/Fwt.Core.StateMachines.ISmStateWithContext-1.html",
    "title": "Interface ISmStateWithContext<TContext> | Hex Terrains",
    "summary": "Interface ISmStateWithContext<TContext> Inherited Members ISmState.PrepareToRun() ISmState.PrepareToStop() ISmState.Tick() Namespace: Fwt.Core.StateMachines Assembly: fwt.core.dll Syntax public interface ISmStateWithContext<TContext> : ISmState Type Parameters Name Description TContext Properties Context Declaration TContext Context { get; set; } Property Value Type Description TContext Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.StateMachines.IStateMachine.html": {
    "href": "api/Fwt.Core.StateMachines.IStateMachine.html",
    "title": "Interface IStateMachine | Hex Terrains",
    "summary": "Interface IStateMachine Namespace: Fwt.Core.StateMachines Assembly: fwt.core.dll Syntax public interface IStateMachine Methods GetState(int) Declaration ISmState GetState(int stateIndex) Parameters Type Name Description int stateIndex Returns Type Description ISmState GetState(Type) Declaration ISmState GetState(Type type) Parameters Type Name Description Type type Returns Type Description ISmState GetState<TState>(Type) Declaration TState GetState<TState>(Type type) where TState : ISmState Parameters Type Name Description Type type Returns Type Description TState Type Parameters Name Description TState SwitchState(ISmState) Declaration void SwitchState(ISmState newState) Parameters Type Name Description ISmState newState SwitchState(int) Declaration ISmState SwitchState(int stateIndex) Parameters Type Name Description int stateIndex Returns Type Description ISmState SwitchState<TState>() Declaration TState SwitchState<TState>() where TState : ISmState Returns Type Description TState Type Parameters Name Description TState SwitchState<TState, TContext>(TState, TContext) Declaration void SwitchState<TState, TContext>(TState newState, TContext context) where TState : ISmStateWithContext<TContext> Parameters Type Name Description TState newState TContext context Type Parameters Name Description TState TContext SwitchState<TState, TContext>(TContext) Declaration TState SwitchState<TState, TContext>(TContext context) where TState : ISmStateWithContext<TContext> Parameters Type Name Description TContext context Returns Type Description TState Type Parameters Name Description TState TContext Tick() Declaration void Tick() Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.StateMachines.SmState-1.html": {
    "href": "api/Fwt.Core.StateMachines.SmState-1.html",
    "title": "Class SmState<TContext> | Hex Terrains",
    "summary": "Class SmState<TContext> Inheritance object SmState SmState<TContext> Implements ISmStateWithContext<TContext> ISmState Inherited Members SmState.PrepareToRun() SmState.PrepareToStop() SmState.Tick() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.Core.StateMachines Assembly: fwt.core.dll Syntax public abstract class SmState<TContext> : SmState, ISmStateWithContext<TContext>, ISmState Type Parameters Name Description TContext Properties Context Declaration public virtual TContext Context { get; set; } Property Value Type Description TContext Implements ISmStateWithContext<TContext> ISmState Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.StateMachines.SmState.html": {
    "href": "api/Fwt.Core.StateMachines.SmState.html",
    "title": "Class SmState | Hex Terrains",
    "summary": "Class SmState Inheritance object SmState SmStateMachine SmState<TContext> UserToolState Implements ISmState Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.Core.StateMachines Assembly: fwt.core.dll Syntax public abstract class SmState : ISmState Methods PrepareToRun() Declaration public abstract void PrepareToRun() PrepareToStop() Declaration public abstract void PrepareToStop() Tick() Declaration public abstract void Tick() Implements ISmState Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.StateMachines.SmStateMachine.html": {
    "href": "api/Fwt.Core.StateMachines.SmStateMachine.html",
    "title": "Class SmStateMachine | Hex Terrains",
    "summary": "Class SmStateMachine Inheritance object SmState SmStateMachine UserToolStateMachine Implements ISmState IStateMachine Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.Core.StateMachines Assembly: fwt.core.dll Syntax public class SmStateMachine : SmState, ISmState, IStateMachine Fields CurrentState Declaration public ISmState CurrentState Field Value Type Description ISmState SortedStates Declaration public Dictionary<Type, ISmState> SortedStates Field Value Type Description Dictionary<Type, ISmState> States Declaration public List<ISmState> States Field Value Type Description List<ISmState> Methods AddState(ISmState) Declaration public virtual void AddState(ISmState state) Parameters Type Name Description ISmState state AddState<TState>(TState) Declaration public virtual void AddState<TState>(TState state) where TState : ISmState Parameters Type Name Description TState state Type Parameters Name Description TState GetState(int) Declaration public virtual ISmState GetState(int stateIndex) Parameters Type Name Description int stateIndex Returns Type Description ISmState GetState(Type) Declaration public virtual ISmState GetState(Type type) Parameters Type Name Description Type type Returns Type Description ISmState GetState<TState>(Type) Declaration public virtual TState GetState<TState>(Type type) where TState : ISmState Parameters Type Name Description Type type Returns Type Description TState Type Parameters Name Description TState PrepareToRun() Declaration public override void PrepareToRun() Overrides SmState.PrepareToRun() PrepareToStop() Declaration public override void PrepareToStop() Overrides SmState.PrepareToStop() SwitchState(ISmState) Declaration public virtual void SwitchState(ISmState newState) Parameters Type Name Description ISmState newState SwitchState(int) Declaration public virtual ISmState SwitchState(int stateIndex) Parameters Type Name Description int stateIndex Returns Type Description ISmState SwitchState<TState>() Declaration public virtual TState SwitchState<TState>() where TState : ISmState Returns Type Description TState Type Parameters Name Description TState SwitchState<TState, TContext>(TState, TContext) Declaration public virtual void SwitchState<TState, TContext>(TState newState, TContext context) where TState : ISmStateWithContext<TContext> Parameters Type Name Description TState newState TContext context Type Parameters Name Description TState TContext SwitchState<TState, TContext>(TContext) Declaration public virtual TState SwitchState<TState, TContext>(TContext context) where TState : ISmStateWithContext<TContext> Parameters Type Name Description TContext context Returns Type Description TState Type Parameters Name Description TState TContext Tick() Declaration public override void Tick() Overrides SmState.Tick() Implements ISmState IStateMachine Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.StateMachines.SmStateMb-1.html": {
    "href": "api/Fwt.Core.StateMachines.SmStateMb-1.html",
    "title": "Class SmStateMb<TContext> | Hex Terrains",
    "summary": "Class SmStateMb<TContext> Inheritance object Object Component Behaviour MonoBehaviour SmStateMb SmStateMb<TContext> Implements ISmStateWithContext<TContext> ISmState Inherited Members SmStateMb.ParentStateMachine SmStateMb.PrepareToRun() SmStateMb.Tick() SmStateMb.PrepareToStop() SmStateMb.Awake() SmStateMb.OnDestroy() MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Fwt.Core.StateMachines Assembly: fwt.core.dll Syntax public abstract class SmStateMb<TContext> : SmStateMb, ISmStateWithContext<TContext>, ISmState Type Parameters Name Description TContext Properties Context Declaration public virtual TContext Context { get; set; } Property Value Type Description TContext Implements ISmStateWithContext<TContext> ISmState Extension Methods Extensions_UnityObject.SmartDestroy<TObject>(TObject) Extensions_UnityObject.SmartDisableGameObject<TObject>(TObject) Extensions_UnityObject.SmartEnableGameObject<TObject>(TObject) HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.StateMachines.SmStateMb.html": {
    "href": "api/Fwt.Core.StateMachines.SmStateMb.html",
    "title": "Class SmStateMb | Hex Terrains",
    "summary": "Class SmStateMb Inheritance object Object Component Behaviour MonoBehaviour SmStateMb SmStateMb<TContext> Implements ISmState Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Fwt.Core.StateMachines Assembly: fwt.core.dll Syntax public abstract class SmStateMb : MonoBehaviour, ISmState Fields ParentStateMachine Declaration public StateMachineMb ParentStateMachine Field Value Type Description StateMachineMb Methods Awake() Declaration protected virtual void Awake() OnDestroy() Declaration protected virtual void OnDestroy() PrepareToRun() Declaration public abstract void PrepareToRun() PrepareToStop() Declaration public abstract void PrepareToStop() Tick() Declaration public abstract void Tick() Implements ISmState Extension Methods Extensions_UnityObject.SmartDestroy<TObject>(TObject) Extensions_UnityObject.SmartDisableGameObject<TObject>(TObject) Extensions_UnityObject.SmartEnableGameObject<TObject>(TObject) HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.StateMachines.StateMachineMb.html": {
    "href": "api/Fwt.Core.StateMachines.StateMachineMb.html",
    "title": "Class StateMachineMb | Hex Terrains",
    "summary": "Class StateMachineMb Inheritance object Object Component Behaviour MonoBehaviour StateMachineMb AutoTickStateMachineMb Implements IStateMachine Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Fwt.Core.StateMachines Assembly: fwt.core.dll Syntax public abstract class StateMachineMb : MonoBehaviour, IStateMachine Fields CurrentState Declaration public ISmState CurrentState Field Value Type Description ISmState SortedStates Declaration public Dictionary<Type, SmStateMb> SortedStates Field Value Type Description Dictionary<Type, SmStateMb> States Declaration public List<SmStateMb> States Field Value Type Description List<SmStateMb> Methods Awake() Declaration protected virtual void Awake() GetState(int) Declaration public ISmState GetState(int stateIndex) Parameters Type Name Description int stateIndex Returns Type Description ISmState GetState(Type) Declaration public ISmState GetState(Type type) Parameters Type Name Description Type type Returns Type Description ISmState GetState<TState>(Type) Declaration public TState GetState<TState>(Type type) where TState : ISmState Parameters Type Name Description Type type Returns Type Description TState Type Parameters Name Description TState OnValidateStates() Declaration [ContextMenu(\"Setup States\")] protected virtual void OnValidateStates() Start() Declaration protected virtual void Start() SwitchState(ISmState) Declaration public void SwitchState(ISmState newState) Parameters Type Name Description ISmState newState SwitchState(int) Declaration public ISmState SwitchState(int stateIndex) Parameters Type Name Description int stateIndex Returns Type Description ISmState SwitchState<TState>() Declaration public TState SwitchState<TState>() where TState : ISmState Returns Type Description TState Type Parameters Name Description TState SwitchState<TState, TContext>(TState, TContext) Declaration public void SwitchState<TState, TContext>(TState newState, TContext context) where TState : ISmStateWithContext<TContext> Parameters Type Name Description TState newState TContext context Type Parameters Name Description TState TContext SwitchState<TState, TContext>(TContext) Declaration public TState SwitchState<TState, TContext>(TContext context) where TState : ISmStateWithContext<TContext> Parameters Type Name Description TContext context Returns Type Description TState Type Parameters Name Description TState TContext Tick() Declaration public virtual void Tick() Implements IStateMachine Extension Methods Extensions_UnityObject.SmartDestroy<TObject>(TObject) Extensions_UnityObject.SmartDisableGameObject<TObject>(TObject) Extensions_UnityObject.SmartEnableGameObject<TObject>(TObject) HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.StateMachines.html": {
    "href": "api/Fwt.Core.StateMachines.html",
    "title": "Namespace Fwt.Core.StateMachines | Hex Terrains",
    "summary": "Namespace Fwt.Core.StateMachines Classes AutoTickStateMachineMb SmState SmStateMachine SmStateMb SmStateMb<TContext> SmState<TContext> StateMachineMb Interfaces ISmState ISmStateWithContext<TContext> IStateMachine"
  },
  "api/Fwt.Core.SubAssetsComponent.html": {
    "href": "api/Fwt.Core.SubAssetsComponent.html",
    "title": "Class SubAssetsComponent | Hex Terrains",
    "summary": "Class SubAssetsComponent Base class for MonoBehaviour that holds a list of Assets (for instnce, Meshes) and controls their Saving within Asset file (if present) and controls their Destroying from Asset file (if saved) Inheritance object Object Component Behaviour MonoBehaviour SubAssetsComponent Implements ISubAssetsContainer Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Fwt.Core Assembly: fwt.core.dll Syntax public abstract class SubAssetsComponent : MonoBehaviour, ISubAssetsContainer Properties SubAssets Declaration public List<Object> SubAssets { get; } Property Value Type Description List<Object> Methods Awake() Declaration protected virtual void Awake() DeleteSubAsset(Object) Removes provided asset from file of the current Scriptable Object. Removes provided asset from cache. DOES NOT DESTROY asset OBJECT! Only removes it from file and cache. Declaration public virtual void DeleteSubAsset(Object asset) Parameters Type Name Description Object asset DestroyAllSubAssets() Declaration [ContextMenu(\"Destroy All Sub Assets\")] public virtual void DestroyAllSubAssets() DestroySubAsset(Object) Removes Asset from file and DESTROYS it Declaration public virtual void DestroySubAsset(Object asset) Parameters Type Name Description Object asset ReloadSubAssets() Declaration [ContextMenu(\"Reload Sub Assets\")] public virtual void ReloadSubAssets() SaveSubAsset(Object) Adds provided asset to file of the current Scriptable Object. Adds provided asset to cache. Declaration public virtual void SaveSubAsset(Object asset) Parameters Type Name Description Object asset Implements ISubAssetsContainer Extension Methods Extensions_UnityObject.SmartDestroy<TObject>(TObject) Extensions_UnityObject.SmartDisableGameObject<TObject>(TObject) Extensions_UnityObject.SmartEnableGameObject<TObject>(TObject) HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.SubAssetsScriptableObject.html": {
    "href": "api/Fwt.Core.SubAssetsScriptableObject.html",
    "title": "Class SubAssetsScriptableObject | Hex Terrains",
    "summary": "Class SubAssetsScriptableObject Base class for Scriptable Object that holds a list of Assets (for instnce, Meshes) and controls their Saving within Asset file (if present) and controls their Destroying from Asset file (if saved) Inheritance object Object ScriptableObject SubAssetsScriptableObject Implements ISubAssetsContainer Inherited Members ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Fwt.Core Assembly: fwt.core.dll Syntax public abstract class SubAssetsScriptableObject : ScriptableObject, ISubAssetsContainer Fields IsSaveAssetsSeparately Declaration [Tooltip(\"If true, assets will be saved one by one to separate files in folder with name of this ScriptableAsset next to it in file system\")] public bool IsSaveAssetsSeparately Field Value Type Description bool MeshAssetFileExtension Declaration [Tooltip(\"Meshes are saved to file with this extension (asset, obj, etc)\")] public string MeshAssetFileExtension Field Value Type Description string Properties SubAssets Declaration public List<Object> SubAssets { get; } Property Value Type Description List<Object> Methods DeleteSubAsset(Object) Removes provided asset from file of the current Scriptable Object. Removes provided asset from cache. DOES NOT DESTROY asset OBJECT! Only removes it from file and cache. Declaration public virtual void DeleteSubAsset(Object asset) Parameters Type Name Description Object asset DestroyAllSubAssets() Declaration [ContextMenu(\"Destroy All Sub Assets\")] public virtual void DestroyAllSubAssets() DestroySubAsset(Object) Removes Asset from file and DESTROYS it Declaration public virtual void DestroySubAsset(Object asset) Parameters Type Name Description Object asset OnEnable() Declaration protected virtual void OnEnable() ReloadSubAssets() Declaration [ContextMenu(\"Reload Sub Assets\")] public virtual void ReloadSubAssets() SaveSubAsset(Object) Adds provided asset to file of the current Scriptable Object. Adds provided asset to cache. Declaration public virtual void SaveSubAsset(Object asset) Parameters Type Name Description Object asset Implements ISubAssetsContainer Extension Methods Extensions_UnityObject.SmartDestroy<TObject>(TObject) Extensions_UnityObject.SmartDisableGameObject<TObject>(TObject) Extensions_UnityObject.SmartEnableGameObject<TObject>(TObject) HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.System_ObjectPool-1.html": {
    "href": "api/Fwt.Core.System_ObjectPool-1.html",
    "title": "Class System_ObjectPool<TObject> | Hex Terrains",
    "summary": "Class System_ObjectPool<TObject> Inheritance object ComponentSystemBase SystemBase System_ObjectPool<TObject> ObjectPoolSystem_GameObject Inherited Members SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.Core Assembly: fwt.core.ecs.dll Syntax public abstract class System_ObjectPool<TObject> : SystemBase where TObject : Object Type Parameters Name Description TObject Fields _maxObjectsInPool Declaration protected int _maxObjectsInPool Field Value Type Description int Properties MaxObjectsInPool Declaration public virtual int MaxObjectsInPool { get; set; } Property Value Type Description int ObjectsPool Declaration public Dictionary<int, List<TObject>> ObjectsPool { get; } Property Value Type Description Dictionary<int, List<TObject>> PoolObjectsRoot Declaration protected Transform PoolObjectsRoot { get; } Property Value Type Description Transform PrefabIdByObjectId Declaration public Dictionary<int, int> PrefabIdByObjectId { get; } Property Value Type Description Dictionary<int, int> Methods CreateObjectsRootTransform() Declaration protected virtual Transform CreateObjectsRootTransform() Returns Type Description Transform DestroyObject(TObject) Declaration protected void DestroyObject(TObject obj) Parameters Type Name Description TObject obj ExtractObjectFromPool(int) Declaration protected TObject ExtractObjectFromPool(int prefabId) Parameters Type Name Description int prefabId Returns Type Description TObject GetPrefabId(int) Declaration protected int? GetPrefabId(int objectId) Parameters Type Name Description int objectId Returns Type Description int? GetPrefabId(TObject) Declaration protected int? GetPrefabId(TObject obj) Parameters Type Name Description TObject obj Returns Type Description int? Instantiate(TObject, bool) Declaration public TObject Instantiate(TObject prefab, bool isWorldPositionStays) Parameters Type Name Description TObject prefab bool isWorldPositionStays Returns Type Description TObject Instantiate(TObject, Transform, bool) Declaration public TObject Instantiate(TObject prefab, Transform parent, bool isWorldPositionStays) Parameters Type Name Description TObject prefab Transform parent bool isWorldPositionStays Returns Type Description TObject OnUpdate() Implement OnUpdate() to perform the major work of this system. Declaration protected override void OnUpdate() Overrides Unity.Entities.SystemBase.OnUpdate() Remarks By default, the system invokes `OnUpdate()` once every frame on the main thread. To skip OnUpdate if all of the system's [EntityQueries] are empty, use the [RequireMatchingQueriesForUpdateAttribute]. To limit when OnUpdate is invoked, you can specify components that must exist, or queries that match specific Entities. To do this, call Unity.Entities.ComponentSystemBase.RequireForUpdate<T>() or Unity.Entities.ComponentSystemBase.RequireForUpdate(Unity.Entities.EntityQuery) in the system's OnCreate method. For more information, see [ShouldRunSystem]. The [Entities.ForEach] and [Job.WithCode] constructions provide convenient mechanisms for defining jobs. You can also instantiate and schedule an Unity.Entities.IJobChunk instance; you can use the [C# Job System] or you can perform work on the main thread. If you call Unity.Entities.EntityManager methods that perform structural changes on the main thread, be sure to arrange the system order to minimize the performance impact of the resulting [sync points]. PutObjectToPool(int, TObject) Declaration protected bool PutObjectToPool(int prefabId, TObject instance) Parameters Type Name Description int prefabId TObject instance Returns Type Description bool PutObjectToPool(TObject) Declaration protected bool PutObjectToPool(TObject obj) Parameters Type Name Description TObject obj Returns Type Description bool PutObjectToPoolOrDestroy(TObject) Declaration protected void PutObjectToPoolOrDestroy(TObject obj) Parameters Type Name Description TObject obj RegisterCreatedInstance(int, int) Declaration protected virtual void RegisterCreatedInstance(int prefabId, int instanceId) Parameters Type Name Description int prefabId int instanceId ReleaseInstance(TObject) Declaration public bool ReleaseInstance(TObject instance) Parameters Type Name Description TObject instance Returns Type Description bool UnregisterCreatedInstance(int) Declaration protected virtual void UnregisterCreatedInstance(int instanceId) Parameters Type Name Description int instanceId UnregisterCreatedInstance(TObject) Declaration protected virtual void UnregisterCreatedInstance(TObject instance) Parameters Type Name Description TObject instance Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.System_TrackComponentObject-2.html": {
    "href": "api/Fwt.Core.System_TrackComponentObject-2.html",
    "title": "Class System_TrackComponentObject<TObject, TCache> | Hex Terrains",
    "summary": "Class System_TrackComponentObject<TObject, TCache> Inheritance object ComponentSystemBase SystemBase System_TrackComponentObject<TObject, TCache> Inherited Members SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.Core Assembly: fwt.core.ecs.dll Syntax public abstract class System_TrackComponentObject<TObject, TCache> : SystemBase where TObject : Object where TCache : unmanaged, ICleanupComponentData Type Parameters Name Description TObject TCache Fields IsDestroyObjectWithEntity Declaration public bool IsDestroyObjectWithEntity Field Value Type Description bool IsSendRemoveObjectsToPool If true, system will try to send released objects to game objects pool instead of destroying them. If sending to pool failed, system destroys game object Declaration public bool IsSendRemoveObjectsToPool Field Value Type Description bool PoolExclusions Entities in this hash set will remove their Views with opposite rule than we have by IsSendRemoveObjectsToPool Declaration protected HashSet<Entity> PoolExclusions Field Value Type Description HashSet<Entity> _cachedItems Declaration protected Dictionary<Entity, TObject> _cachedItems Field Value Type Description Dictionary<Entity, TObject> _removedEntities Declaration protected EntityQuery _removedEntities Field Value Type Description EntityQuery _removedObjects Declaration protected List<Entity> _removedObjects Field Value Type Description List<Entity> Properties IsDestroyComponentGameObject Declaration public virtual bool IsDestroyComponentGameObject { get; } Property Value Type Description bool PoolSystem Declaration public ObjectPoolSystem_GameObject PoolSystem { get; } Property Value Type Description ObjectPoolSystem_GameObject Methods AttachObjectToEntity(Entity, TObject) Declaration public virtual void AttachObjectToEntity(Entity entity, TObject obj) Parameters Type Name Description Entity entity TObject obj AttachObjectToEntityInversePolicy(Entity, TObject) Works like AttachObjectToEntity, but alters cleanup behaviour for this entity. If we have IsSendRemoveObjectsToPool == true, this particular entity will ignore it. If IsSendRemoveObjectsToPool, this particular entity will send object to pool, despite general system setup Declaration public virtual void AttachObjectToEntityInversePolicy(Entity entity, TObject obj) Parameters Type Name Description Entity entity TObject obj DestroyCachedObject(Entity) Declaration protected virtual void DestroyCachedObject(Entity entity) Parameters Type Name Description Entity entity DestroyCachedObject(TObject, bool) Declaration protected virtual void DestroyCachedObject(TObject obj, bool inverseSendRemoveObjectsPolicy) Parameters Type Name Description TObject obj bool inverseSendRemoveObjectsPolicy OnCreate() Called when this system is created. Declaration protected override void OnCreate() Overrides Unity.Entities.ComponentSystemBase.OnCreate() Remarks Implement an OnCreate() function to set up system resources when it is created. OnCreate is invoked before the the first time Unity.Entities.ComponentSystemBase.OnStartRunning() and OnUpdate are invoked. OnUpdate() Implement OnUpdate() to perform the major work of this system. Declaration protected override void OnUpdate() Overrides Unity.Entities.SystemBase.OnUpdate() Remarks By default, the system invokes `OnUpdate()` once every frame on the main thread. To skip OnUpdate if all of the system's [EntityQueries] are empty, use the [RequireMatchingQueriesForUpdateAttribute]. To limit when OnUpdate is invoked, you can specify components that must exist, or queries that match specific Entities. To do this, call Unity.Entities.ComponentSystemBase.RequireForUpdate<T>() or Unity.Entities.ComponentSystemBase.RequireForUpdate(Unity.Entities.EntityQuery) in the system's OnCreate method. For more information, see [ShouldRunSystem]. The [Entities.ForEach] and [Job.WithCode] constructions provide convenient mechanisms for defining jobs. You can also instantiate and schedule an Unity.Entities.IJobChunk instance; you can use the [C# Job System] or you can perform work on the main thread. If you call Unity.Entities.EntityManager methods that perform structural changes on the main thread, be sure to arrange the system order to minimize the performance impact of the resulting [sync points]. Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.TransformData.html": {
    "href": "api/Fwt.Core.TransformData.html",
    "title": "Struct TransformData | Hex Terrains",
    "summary": "Struct TransformData Implements IEquatable<TransformData> Inherited Members ValueType.Equals(object) object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.Core Assembly: fwt.core.dll Syntax [Serializable] public struct TransformData : IEquatable<TransformData> Fields Identity Declaration public static TransformData Identity Field Value Type Description TransformData Position Declaration public float3 Position Field Value Type Description float3 Rotation Declaration public quaternion Rotation Field Value Type Description quaternion Scale Declaration public float3 Scale Field Value Type Description float3 Methods ApplyToTransform(Transform, bool) Declaration public void ApplyToTransform(Transform transform, bool isLocalValues) Parameters Type Name Description Transform transform bool isLocalValues Equals(TransformData) Declaration public bool Equals(TransformData other) Parameters Type Name Description TransformData other Returns Type Description bool FromTransform(Transform, bool) Declaration public static TransformData FromTransform(Transform transform, bool isLocalValues) Parameters Type Name Description Transform transform bool isLocalValues Returns Type Description TransformData GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides ValueType.GetHashCode() Lerp(TransformData, TransformData, float) Declaration public static TransformData Lerp(TransformData a, TransformData b, float t) Parameters Type Name Description TransformData a TransformData b float t Returns Type Description TransformData Lerp(TransformData, TransformData, float, float3) Declaration public static TransformData Lerp(TransformData a, TransformData b, float t, float3 scale) Parameters Type Name Description TransformData a TransformData b float t float3 scale Returns Type Description TransformData ToString() Declaration public override string ToString() Returns Type Description string Overrides ValueType.ToString() Implements IEquatable<T> Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.UI.IClickCallbackableView.html": {
    "href": "api/Fwt.Core.UI.IClickCallbackableView.html",
    "title": "Interface IClickCallbackableView | Hex Terrains",
    "summary": "Interface IClickCallbackableView Namespace: Fwt.Core.UI Assembly: fwt.core.dll Syntax public interface IClickCallbackableView Properties ItemIndex Used as param when called OnClickCallback Declaration int ItemIndex { get; set; } Property Value Type Description int Methods SetOnClickCallback(Action<int>) Sets the callback that should be called when view is clicked Declaration void SetOnClickCallback(Action<int> callback) Parameters Type Name Description Action<int> callback Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.UI.IRefreshableView.html": {
    "href": "api/Fwt.Core.UI.IRefreshableView.html",
    "title": "Interface IRefreshableView | Hex Terrains",
    "summary": "Interface IRefreshableView Namespace: Fwt.Core.UI Assembly: fwt.core.dll Syntax public interface IRefreshableView Methods RefreshView() Declaration void RefreshView() Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.UI.ISelectableView.html": {
    "href": "api/Fwt.Core.UI.ISelectableView.html",
    "title": "Interface ISelectableView | Hex Terrains",
    "summary": "Interface ISelectableView Namespace: Fwt.Core.UI Assembly: fwt.core.dll Syntax public interface ISelectableView Properties IsSelected Declaration bool IsSelected { get; set; } Property Value Type Description bool Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.UI.IViewDataReceiver-1.html": {
    "href": "api/Fwt.Core.UI.IViewDataReceiver-1.html",
    "title": "Interface IViewDataReceiver<TViewData> | Hex Terrains",
    "summary": "Interface IViewDataReceiver<TViewData> Namespace: Fwt.Core.UI Assembly: fwt.core.dll Syntax public interface IViewDataReceiver<TViewData> Type Parameters Name Description TViewData Methods SetViewData(TViewData) Declaration void SetViewData(TViewData viewData) Parameters Type Name Description TViewData viewData Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.UI.IViewDataReceiver.html": {
    "href": "api/Fwt.Core.UI.IViewDataReceiver.html",
    "title": "Interface IViewDataReceiver | Hex Terrains",
    "summary": "Interface IViewDataReceiver Reciever of view data of given type Namespace: Fwt.Core.UI Assembly: fwt.core.dll Syntax public interface IViewDataReceiver Properties MessageName Declaration string MessageName { get; } Property Value Type Description string Methods SendMessage(string, object, SendMessageOptions) Declaration void SendMessage(string methodName, object value, SendMessageOptions options) Parameters Type Name Description string methodName object value SendMessageOptions options Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.UI.Screens.UIConfigAsset.html": {
    "href": "api/Fwt.Core.UI.Screens.UIConfigAsset.html",
    "title": "Class UIConfigAsset | Hex Terrains",
    "summary": "Class UIConfigAsset Inheritance object Object ScriptableObject UIConfigAsset Inherited Members ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Fwt.Core.UI.Screens Assembly: fwt.core.ecs.dll Syntax [CreateAssetMenu(menuName = \"Fwt/Configs/UI\", fileName = \"UIConfig\")] public class UIConfigAsset : ScriptableObject Fields ScreenPrefabs Declaration public List<UIScreen> ScreenPrefabs Field Value Type Description List<UIScreen> Extension Methods Extensions_UnityObject.SmartDestroy<TObject>(TObject) Extensions_UnityObject.SmartDisableGameObject<TObject>(TObject) Extensions_UnityObject.SmartEnableGameObject<TObject>(TObject) HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.UI.Screens.UIDocumentView-1.html": {
    "href": "api/Fwt.Core.UI.Screens.UIDocumentView-1.html",
    "title": "Class UIDocumentView<TViewData> | Hex Terrains",
    "summary": "Class UIDocumentView<TViewData> Inheritance object Object Component Behaviour MonoBehaviour UIView UIDocumentView UIDocumentView<TViewData> Implements IViewDataReceiver<TViewData> Inherited Members UIDocumentView.UIDocument UIDocumentView.Start() UIDocumentView.OnValidate() UIDocumentView.OnEnable() UIDocumentView.OnDisable() UIDocumentView.TryGetRootElement(out VisualElement) UIDocumentView.FindUIDocument() UIDocumentView.DisposeUI() UIDocumentView.AssignButtonClickEvent(VisualElement, string, Action) UIDocumentView.InitIntegerField(VisualElement, string, EventCallback<ChangeEvent<int>>, int) UIDocumentView.InitFloatField(VisualElement, string, EventCallback<ChangeEvent<float>>, float) UIDocumentView.InitTextField(VisualElement, string, EventCallback<ChangeEvent<string>>, string) UIDocumentView.InitSlider(VisualElement, string, EventCallback<ChangeEvent<int>>, int) UIDocumentView.InitSlider(VisualElement, string, EventCallback<ChangeEvent<float>>, int) UIDocumentView.InitVector2Field(VisualElement, string, EventCallback<ChangeEvent<Vector2>>, Vector2) UIDocumentView.InitVector2IntField(VisualElement, string, EventCallback<ChangeEvent<Vector2Int>>, Vector2Int) UIView.Transform UIView.RectTransform UIView.Awake() UIView.OnDestroy() MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Fwt.Core.UI.Screens Assembly: fwt.core.ecs.dll Syntax public class UIDocumentView<TViewData> : UIDocumentView, IViewDataReceiver<TViewData> Type Parameters Name Description TViewData Properties ViewData Declaration public TViewData ViewData { get; } Property Value Type Description TViewData Methods InitUI() Declaration protected override void InitUI() Overrides UIDocumentView.InitUI() SetViewData(TViewData) Declaration public virtual void SetViewData(TViewData viewData) Parameters Type Name Description TViewData viewData Implements IViewDataReceiver<TViewData> Extension Methods Extensions_UnityObject.SmartDestroy<TObject>(TObject) Extensions_UnityObject.SmartDisableGameObject<TObject>(TObject) Extensions_UnityObject.SmartEnableGameObject<TObject>(TObject) HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.UI.Screens.UIDocumentView.html": {
    "href": "api/Fwt.Core.UI.Screens.UIDocumentView.html",
    "title": "Class UIDocumentView | Hex Terrains",
    "summary": "Class UIDocumentView Inheritance object Object Component Behaviour MonoBehaviour UIView UIDocumentView UIDocumentView<TViewData> UIScreen Inherited Members UIView.Transform UIView.RectTransform UIView.Awake() UIView.OnDestroy() MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Fwt.Core.UI.Screens Assembly: fwt.core.ecs.dll Syntax public class UIDocumentView : UIView Fields UIDocument Declaration public UIDocument UIDocument Field Value Type Description UIDocument Methods AssignButtonClickEvent(VisualElement, string, Action) Declaration protected virtual void AssignButtonClickEvent(VisualElement rootElement, string buttonId, Action onButtonClick) Parameters Type Name Description VisualElement rootElement string buttonId Action onButtonClick DisposeUI() Declaration protected virtual void DisposeUI() FindUIDocument() Declaration protected virtual void FindUIDocument() InitFloatField(VisualElement, string, EventCallback<ChangeEvent<float>>, float) Declaration protected virtual FloatField InitFloatField(VisualElement rootElement, string fieldId, EventCallback<ChangeEvent<float>> onValueChanged, float defaultValue) Parameters Type Name Description VisualElement rootElement string fieldId EventCallback<ChangeEvent<float>> onValueChanged float defaultValue Returns Type Description FloatField InitIntegerField(VisualElement, string, EventCallback<ChangeEvent<int>>, int) Declaration protected virtual IntegerField InitIntegerField(VisualElement rootElement, string fieldId, EventCallback<ChangeEvent<int>> onValueChanged, int defaultValue) Parameters Type Name Description VisualElement rootElement string fieldId EventCallback<ChangeEvent<int>> onValueChanged int defaultValue Returns Type Description IntegerField InitSlider(VisualElement, string, EventCallback<ChangeEvent<int>>, int) Declaration protected virtual SliderInt InitSlider(VisualElement rootElement, string sliderId, EventCallback<ChangeEvent<int>> onValueChanged, int defaultValue) Parameters Type Name Description VisualElement rootElement string sliderId EventCallback<ChangeEvent<int>> onValueChanged int defaultValue Returns Type Description SliderInt InitSlider(VisualElement, string, EventCallback<ChangeEvent<float>>, int) Declaration protected virtual Slider InitSlider(VisualElement rootElement, string sliderId, EventCallback<ChangeEvent<float>> onValueChanged, int defaultValue) Parameters Type Name Description VisualElement rootElement string sliderId EventCallback<ChangeEvent<float>> onValueChanged int defaultValue Returns Type Description Slider InitTextField(VisualElement, string, EventCallback<ChangeEvent<string>>, string) Declaration protected virtual TextField InitTextField(VisualElement rootElement, string fieldId, EventCallback<ChangeEvent<string>> onValueChanged, string defaultValue) Parameters Type Name Description VisualElement rootElement string fieldId EventCallback<ChangeEvent<string>> onValueChanged string defaultValue Returns Type Description TextField InitUI() Declaration protected virtual void InitUI() InitVector2Field(VisualElement, string, EventCallback<ChangeEvent<Vector2>>, Vector2) Declaration protected virtual Vector2Field InitVector2Field(VisualElement rootElement, string fieldId, EventCallback<ChangeEvent<Vector2>> onValueChanged, Vector2 defaultValue) Parameters Type Name Description VisualElement rootElement string fieldId EventCallback<ChangeEvent<Vector2>> onValueChanged Vector2 defaultValue Returns Type Description Vector2Field InitVector2IntField(VisualElement, string, EventCallback<ChangeEvent<Vector2Int>>, Vector2Int) Declaration protected virtual Vector2IntField InitVector2IntField(VisualElement rootElement, string fieldId, EventCallback<ChangeEvent<Vector2Int>> onValueChanged, Vector2Int defaultValue) Parameters Type Name Description VisualElement rootElement string fieldId EventCallback<ChangeEvent<Vector2Int>> onValueChanged Vector2Int defaultValue Returns Type Description Vector2IntField OnDisable() Declaration protected override void OnDisable() Overrides UIView.OnDisable() OnEnable() Declaration protected override void OnEnable() Overrides UIView.OnEnable() OnValidate() Declaration protected override void OnValidate() Overrides UIView.OnValidate() Start() Declaration protected override void Start() Overrides UIView.Start() TryGetRootElement(out VisualElement) Declaration protected bool TryGetRootElement(out VisualElement rootElement) Parameters Type Name Description VisualElement rootElement Returns Type Description bool Extension Methods Extensions_UnityObject.SmartDestroy<TObject>(TObject) Extensions_UnityObject.SmartDisableGameObject<TObject>(TObject) Extensions_UnityObject.SmartEnableGameObject<TObject>(TObject) HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.UI.Screens.UIRoot.html": {
    "href": "api/Fwt.Core.UI.Screens.UIRoot.html",
    "title": "Class UIRoot | Hex Terrains",
    "summary": "Class UIRoot Inheritance object Object Component Behaviour MonoBehaviour UIRoot Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Fwt.Core.UI.Screens Assembly: fwt.core.ecs.dll Syntax public class UIRoot : MonoBehaviour Fields UIScreensRoot Declaration public Transform UIScreensRoot Field Value Type Description Transform Extension Methods Extensions_UnityObject.SmartDestroy<TObject>(TObject) Extensions_UnityObject.SmartDisableGameObject<TObject>(TObject) Extensions_UnityObject.SmartEnableGameObject<TObject>(TObject) HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.UI.Screens.UIScreen-1.html": {
    "href": "api/Fwt.Core.UI.Screens.UIScreen-1.html",
    "title": "Class UIScreen<TViewData> | Hex Terrains",
    "summary": "Class UIScreen<TViewData> Inheritance object Object Component Behaviour MonoBehaviour UIView UIDocumentView UIScreen UIScreen<TViewData> UserToolsScreen CreateNewTerrainScreenBase LoadFileScreenBase MinimapScreenBase ResizeTerrainScreenBase SaveFileScreenBase Inherited Members UIScreen.Name UIScreen.Show() UIScreen.Hide() UIDocumentView.UIDocument UIDocumentView.Start() UIDocumentView.OnValidate() UIDocumentView.OnEnable() UIDocumentView.OnDisable() UIDocumentView.TryGetRootElement(out VisualElement) UIDocumentView.FindUIDocument() UIDocumentView.DisposeUI() UIDocumentView.AssignButtonClickEvent(VisualElement, string, Action) UIDocumentView.InitIntegerField(VisualElement, string, EventCallback<ChangeEvent<int>>, int) UIDocumentView.InitFloatField(VisualElement, string, EventCallback<ChangeEvent<float>>, float) UIDocumentView.InitTextField(VisualElement, string, EventCallback<ChangeEvent<string>>, string) UIDocumentView.InitSlider(VisualElement, string, EventCallback<ChangeEvent<int>>, int) UIDocumentView.InitSlider(VisualElement, string, EventCallback<ChangeEvent<float>>, int) UIDocumentView.InitVector2Field(VisualElement, string, EventCallback<ChangeEvent<Vector2>>, Vector2) UIDocumentView.InitVector2IntField(VisualElement, string, EventCallback<ChangeEvent<Vector2Int>>, Vector2Int) UIView.Transform UIView.RectTransform UIView.Awake() UIView.OnDestroy() MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Fwt.Core.UI.Screens Assembly: fwt.core.ecs.dll Syntax public class UIScreen<TViewData> : UIScreen Type Parameters Name Description TViewData Properties ViewData Declaration public TViewData ViewData { get; } Property Value Type Description TViewData Methods InitUI() Declaration protected override void InitUI() Overrides UIDocumentView.InitUI() SetUIDocumentViewData(TViewData) Declaration protected void SetUIDocumentViewData(TViewData viewData) Parameters Type Name Description TViewData viewData SetViewData(TViewData) Declaration public virtual void SetViewData(TViewData viewData) Parameters Type Name Description TViewData viewData Extension Methods Extensions_UnityObject.SmartDestroy<TObject>(TObject) Extensions_UnityObject.SmartDisableGameObject<TObject>(TObject) Extensions_UnityObject.SmartEnableGameObject<TObject>(TObject) HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.UI.Screens.UIScreen.html": {
    "href": "api/Fwt.Core.UI.Screens.UIScreen.html",
    "title": "Class UIScreen | Hex Terrains",
    "summary": "Class UIScreen Inheritance object Object Component Behaviour MonoBehaviour UIView UIDocumentView UIScreen UIScreen<TViewData> ToolSettingsScreen Inherited Members UIDocumentView.UIDocument UIDocumentView.Start() UIDocumentView.OnValidate() UIDocumentView.OnEnable() UIDocumentView.OnDisable() UIDocumentView.TryGetRootElement(out VisualElement) UIDocumentView.FindUIDocument() UIDocumentView.InitUI() UIDocumentView.DisposeUI() UIDocumentView.AssignButtonClickEvent(VisualElement, string, Action) UIDocumentView.InitIntegerField(VisualElement, string, EventCallback<ChangeEvent<int>>, int) UIDocumentView.InitFloatField(VisualElement, string, EventCallback<ChangeEvent<float>>, float) UIDocumentView.InitTextField(VisualElement, string, EventCallback<ChangeEvent<string>>, string) UIDocumentView.InitSlider(VisualElement, string, EventCallback<ChangeEvent<int>>, int) UIDocumentView.InitSlider(VisualElement, string, EventCallback<ChangeEvent<float>>, int) UIDocumentView.InitVector2Field(VisualElement, string, EventCallback<ChangeEvent<Vector2>>, Vector2) UIDocumentView.InitVector2IntField(VisualElement, string, EventCallback<ChangeEvent<Vector2Int>>, Vector2Int) UIView.Transform UIView.RectTransform UIView.Awake() UIView.OnDestroy() MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Fwt.Core.UI.Screens Assembly: fwt.core.ecs.dll Syntax public class UIScreen : UIDocumentView Fields Name Declaration public string Name Field Value Type Description string Methods Hide() Declaration public virtual void Hide() Show() Declaration public virtual void Show() Extension Methods Extensions_UnityObject.SmartDestroy<TObject>(TObject) Extensions_UnityObject.SmartDisableGameObject<TObject>(TObject) Extensions_UnityObject.SmartEnableGameObject<TObject>(TObject) HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.UI.Screens.UISystemBase.html": {
    "href": "api/Fwt.Core.UI.Screens.UISystemBase.html",
    "title": "Class UISystemBase | Hex Terrains",
    "summary": "Class UISystemBase Base class for System that controls UI screens. To use it, create a new class that inherits from UISystemBase. If you want the system to collect all existing screens from scene, override IsCollectUIScreensFromSceneOnStart property IsCollectUIScreensFromSceneOnStart. Call an ApplyConfig() method to make the UI system be able to create screens by request (it uses prefabs copied from the list provided into this method) ApplyConfig(IList<UIScreen>). Inheritance object ComponentSystemBase SystemBase UISystemBase SamplesUISystem Inherited Members SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.Core.UI.Screens Assembly: fwt.core.ecs.dll Syntax public abstract class UISystemBase : SystemBase Fields AllScreens List of all screens system knows about (created by the system or found in the scene). Declaration public List<UIScreen> AllScreens Field Value Type Description List<UIScreen> ScreenPrefabByName Dictionary of all prefabs of the UI Screens this system can create. Key - Screen name. This dictionary is filled when AddScreenPrefab() is called AddScreenPrefab(UIScreen). ApplyConfig(IList<UIScreen>) Declaration public Dictionary<string, UIScreen> ScreenPrefabByName Field Value Type Description Dictionary<string, UIScreen> ScreenPrefabByType Dictionary of all prefabs of the UI Screens this system can create. Key - Screen type. this dictionary is filled when AddScreenPrefab() is called AddScreenPrefab(UIScreen). ApplyConfig(IList<UIScreen>) Declaration public Dictionary<Type, UIScreen> ScreenPrefabByType Field Value Type Description Dictionary<Type, UIScreen> ScreenPrefabs List of all prefabs of the UI Screens this system can create. This list is filled when AddScreenPrefab() is called AddScreenPrefab(UIScreen). ApplyConfig(IList<UIScreen>) Declaration public List<UIScreen> ScreenPrefabs Field Value Type Description List<UIScreen> ScreensByName Dictionary of all screens system knows about (created by the system or found in the scene). Key - Screen name. CreateScreen(string) Declaration public Dictionary<string, UIScreen> ScreensByName Field Value Type Description Dictionary<string, UIScreen> ScreensByType Dictionary of all screens system knows about (created by the system or found in the scene). Key - Screen type. CreateScreen(Type) Declaration public Dictionary<Type, UIScreen> ScreensByType Field Value Type Description Dictionary<Type, UIScreen> Properties IsCollectUIScreensFromSceneOnStart If true, OnCreate will collect all UIScreens from the scene using Objecct.FindAllObjectsOfType Declaration public abstract bool IsCollectUIScreensFromSceneOnStart { get; } Property Value Type Description bool UIRoot Root object of the UI system. This object is created if none is found in the scene. Declaration public UIRoot UIRoot { get; } Property Value Type Description UIRoot UIScreenRoot Root transforms for place a UIScreen when it is created. The transform of the UIRoot UIRoot Declaration public Transform UIScreenRoot { get; } Property Value Type Description Transform Methods AddScreenPrefab(UIScreen) Declaration public virtual void AddScreenPrefab(UIScreen screenPrefab) Parameters Type Name Description UIScreen screenPrefab ApplyConfig(IList<UIScreen>) Copies the provided list of screen prefabs into the system, so it can use those prefabs to create screens on request. Declaration public virtual void ApplyConfig(IList<UIScreen> screenPrefabs) Parameters Type Name Description IList<UIScreen> screenPrefabs CollectUIScreensFromScene() Declaration protected virtual void CollectUIScreensFromScene() CreateScreen(UIScreen) Declaration public virtual UIScreen CreateScreen(UIScreen screenPrefab) Parameters Type Name Description UIScreen screenPrefab Returns Type Description UIScreen CreateScreen(string) Creates a new screen of the specified name. Takes a prefab in the ScreenPrefabByName dictionary ScreenPrefabByName Declaration public virtual UIScreen CreateScreen(string screenName) Parameters Type Name Description string screenName name of the UIScreen taken from UIScreen.Name when importing prefabsName Returns Type Description UIScreen created UIScreen instance CreateScreen(Type) Creates a new screen of the specified type. Takes a prefab in the ScreenPrefabByType dictionary ScreenPrefabByType Declaration public virtual UIScreen CreateScreen(Type screenType) Parameters Type Name Description Type screenType type of the screen to create (looks for prefab in ScreenPrefabByType dictionary) Returns Type Description UIScreen created UIScreen instance CreateScreen<TScreen>() Declaration public virtual TScreen CreateScreen<TScreen>() where TScreen : UIScreen Returns Type Description TScreen Type Parameters Name Description TScreen CreateScreen<TScreen>(string) Creates a new screen of the specified type. Declaration public virtual TScreen CreateScreen<TScreen>(string screenName) where TScreen : UIScreen Parameters Type Name Description string screenName Returns Type Description TScreen screen instance Type Parameters Name Description TScreen type of the screen to create DeleteAllScreenPrefabs() Declaration public virtual void DeleteAllScreenPrefabs() DeleteScreenPrefab(UIScreen) Declaration public virtual void DeleteScreenPrefab(UIScreen screenPrefab) Parameters Type Name Description UIScreen screenPrefab DeleteScreenPrefab(string) Declaration public virtual void DeleteScreenPrefab(string screenName) Parameters Type Name Description string screenName DeleteScreenPrefab<TScreen>() Declaration public virtual void DeleteScreenPrefab<TScreen>() where TScreen : UIScreen Type Parameters Name Description TScreen DestroyAllScreens() Destroys all UIScreen instances known by the system AllScreens. Declaration public virtual void DestroyAllScreens() DestroyScreen(UIScreen) Destroys the specified screen instance. Declaration public virtual bool DestroyScreen(UIScreen screen) Parameters Type Name Description UIScreen screen screen instance to destroy Returns Type Description bool true if the screen was destroyed successfully; otherwise, false DestroyScreen(string) Declaration public virtual void DestroyScreen(string screenName) Parameters Type Name Description string screenName DestroyScreen(Type) Declaration public virtual bool DestroyScreen(Type screenType) Parameters Type Name Description Type screenType Returns Type Description bool DestroyScreen<TScreen>() Destroys the specified screen. Declaration public virtual bool DestroyScreen<TScreen>() where TScreen : UIScreen Returns Type Description bool true if the screen was destroyed successfully; otherwise, false Type Parameters Name Description TScreen type of a screen to destroy FindObjectOnScene<TObject>(ref TObject, FindObjectsInactive) Declaration public virtual TObject FindObjectOnScene<TObject>(ref TObject obj, FindObjectsInactive filter = FindObjectsInactive.Include) where TObject : MonoBehaviour Parameters Type Name Description TObject obj FindObjectsInactive filter Returns Type Description TObject Type Parameters Name Description TObject GetOrCreateScreen(string) Declaration public virtual UIScreen GetOrCreateScreen(string screenName) Parameters Type Name Description string screenName Returns Type Description UIScreen GetOrCreateScreen(Type) Declaration public virtual UIScreen GetOrCreateScreen(Type screenType) Parameters Type Name Description Type screenType Returns Type Description UIScreen GetOrCreateScreen<TScreen>() Gets an existing screen of the specified type, or creates a new one if it doesn't exist. Declaration public virtual TScreen GetOrCreateScreen<TScreen>() where TScreen : UIScreen Returns Type Description TScreen screen instance Type Parameters Name Description TScreen type of the screen to get or create GetOrCreateScreen<TScreen>(string) Declaration public virtual TScreen GetOrCreateScreen<TScreen>(string screenName) where TScreen : UIScreen Parameters Type Name Description string screenName Returns Type Description TScreen Type Parameters Name Description TScreen GetScreen(string) Declaration public virtual UIScreen GetScreen(string screenName) Parameters Type Name Description string screenName Returns Type Description UIScreen GetScreen(Type) Declaration public virtual UIScreen GetScreen(Type screenType) Parameters Type Name Description Type screenType Returns Type Description UIScreen GetScreenPrefab(string) Declaration public virtual UIScreen GetScreenPrefab(string screenName) Parameters Type Name Description string screenName Returns Type Description UIScreen GetScreenPrefab(Type) Declaration public virtual UIScreen GetScreenPrefab(Type screenType) Parameters Type Name Description Type screenType Returns Type Description UIScreen GetScreenPrefab<TScreen>() Declaration public virtual TScreen GetScreenPrefab<TScreen>() where TScreen : UIScreen Returns Type Description TScreen Type Parameters Name Description TScreen GetScreenPrefab<TScreen>(string) Declaration public virtual TScreen GetScreenPrefab<TScreen>(string screenName) where TScreen : UIScreen Parameters Type Name Description string screenName Returns Type Description TScreen Type Parameters Name Description TScreen GetScreen<TScreen>() Gets an existing screen of the specified type if found. Declaration public virtual TScreen GetScreen<TScreen>() where TScreen : UIScreen Returns Type Description TScreen Type Parameters Name Description TScreen type of the screen to get IsCursorOverUI() Returns true if some UI element is under the cursor. Uses the Declaration public virtual bool IsCursorOverUI() Returns Type Description bool OnCreate() Called when this system is created. Declaration protected override void OnCreate() Overrides Unity.Entities.ComponentSystemBase.OnCreate() Remarks Implement an OnCreate() function to set up system resources when it is created. OnCreate is invoked before the the first time Unity.Entities.ComponentSystemBase.OnStartRunning() and OnUpdate are invoked. OnUpdate() Implement OnUpdate() to perform the major work of this system. Declaration protected override void OnUpdate() Overrides Unity.Entities.SystemBase.OnUpdate() Remarks By default, the system invokes `OnUpdate()` once every frame on the main thread. To skip OnUpdate if all of the system's [EntityQueries] are empty, use the [RequireMatchingQueriesForUpdateAttribute]. To limit when OnUpdate is invoked, you can specify components that must exist, or queries that match specific Entities. To do this, call Unity.Entities.ComponentSystemBase.RequireForUpdate<T>() or Unity.Entities.ComponentSystemBase.RequireForUpdate(Unity.Entities.EntityQuery) in the system's OnCreate method. For more information, see [ShouldRunSystem]. The [Entities.ForEach] and [Job.WithCode] constructions provide convenient mechanisms for defining jobs. You can also instantiate and schedule an Unity.Entities.IJobChunk instance; you can use the [C# Job System] or you can perform work on the main thread. If you call Unity.Entities.EntityManager methods that perform structural changes on the main thread, be sure to arrange the system order to minimize the performance impact of the resulting [sync points]. Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.UI.Screens.UIView.html": {
    "href": "api/Fwt.Core.UI.Screens.UIView.html",
    "title": "Class UIView | Hex Terrains",
    "summary": "Class UIView Inheritance object Object Component Behaviour MonoBehaviour UIView UIDocumentView Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Fwt.Core.UI.Screens Assembly: fwt.core.ecs.dll Syntax public class UIView : MonoBehaviour Properties RectTransform Declaration public RectTransform RectTransform { get; } Property Value Type Description RectTransform Transform Declaration public Transform Transform { get; } Property Value Type Description Transform Methods Awake() Declaration protected virtual void Awake() OnDestroy() Declaration protected virtual void OnDestroy() OnDisable() Declaration protected virtual void OnDisable() OnEnable() Declaration protected virtual void OnEnable() OnValidate() Declaration protected virtual void OnValidate() Start() Declaration protected virtual void Start() Extension Methods Extensions_UnityObject.SmartDestroy<TObject>(TObject) Extensions_UnityObject.SmartDisableGameObject<TObject>(TObject) Extensions_UnityObject.SmartEnableGameObject<TObject>(TObject) HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.UI.Screens.html": {
    "href": "api/Fwt.Core.UI.Screens.html",
    "title": "Namespace Fwt.Core.UI.Screens | Hex Terrains",
    "summary": "Namespace Fwt.Core.UI.Screens Classes UIConfigAsset UIDocumentView UIDocumentView<TViewData> UIRoot UIScreen UIScreen<TViewData> UISystemBase Base class for System that controls UI screens. To use it, create a new class that inherits from UISystemBase. If you want the system to collect all existing screens from scene, override IsCollectUIScreensFromSceneOnStart property IsCollectUIScreensFromSceneOnStart. Call an ApplyConfig() method to make the UI system be able to create screens by request (it uses prefabs copied from the list provided into this method) ApplyConfig(IList<UIScreen>). UIView"
  },
  "api/Fwt.Core.UI.html": {
    "href": "api/Fwt.Core.UI.html",
    "title": "Namespace Fwt.Core.UI | Hex Terrains",
    "summary": "Namespace Fwt.Core.UI Interfaces IClickCallbackableView IRefreshableView ISelectableView IViewDataReceiver Reciever of view data of given type IViewDataReceiver<TViewData>"
  },
  "api/Fwt.Core.Utils_Geometry.html": {
    "href": "api/Fwt.Core.Utils_Geometry.html",
    "title": "Class Utils_Geometry | Hex Terrains",
    "summary": "Class Utils_Geometry Inheritance object Utils_Geometry Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.Core Assembly: fwt.core.dll Syntax public static class Utils_Geometry Methods CalculateFrustumPlanes(Camera, Allocator, Plane[]) Calculates frustum planes of given camera and saves data to the newly created native array of 6 planes. Can use provided array parameter to avoid allocations. Declaration public static NativeArray<Plane> CalculateFrustumPlanes(this Camera camera, Allocator allocator, Plane[] planes = null) Parameters Type Name Description Camera camera Allocator allocator Plane[] planes An array of 6 Planes Returns Type Description NativeArray<Plane> CalculateFrustumPlanes(Camera, NativeArray<Plane>, Plane[]) Calculates frustum planes of given camera and saves data to the provided native array of 6 planes. Can use provided array parameter to avoid allocations. Declaration public static NativeArray<Plane> CalculateFrustumPlanes(this Camera camera, NativeArray<Plane> result6items, Plane[] planes = null) Parameters Type Name Description Camera camera NativeArray<Plane> result6items Plane[] planes An array of 6 Planes Returns Type Description NativeArray<Plane> CalculateFrustumPlanes(Camera, Plane[]) Calculates frustum planes of given camera and saves data to the provided native array of 6 planes. Can use provided array parameter to avoid allocations. Declaration public static FixedArray8<Plane> CalculateFrustumPlanes(this Camera camera, Plane[] planes = null) Parameters Type Name Description Camera camera Plane[] planes An array of 6 Planes Returns Type Description FixedArray8<Plane> LineLineIntersection(out float3, float3, float3, float3, float3) Declaration public static bool LineLineIntersection(out float3 intersection, float3 linePoint1, float3 lineVec1, float3 linePoint2, float3 lineVec2) Parameters Type Name Description float3 intersection float3 linePoint1 float3 lineVec1 float3 linePoint2 float3 lineVec2 Returns Type Description bool TestPlanesAABB(FixedArray8<Plane>, Bounds) Declaration [BurstCompile] public static bool TestPlanesAABB(FixedArray8<Plane> planes, Bounds bounds) Parameters Type Name Description FixedArray8<Plane> planes Bounds bounds Returns Type Description bool TestPlanesAABB(NativeArray<Plane>, Bounds) Declaration [BurstCompile] public static bool TestPlanesAABB(NativeArray<Plane> planes, Bounds bounds) Parameters Type Name Description NativeArray<Plane> planes Bounds bounds Returns Type Description bool"
  },
  "api/Fwt.Core.Utils_PlayerPrefs.html": {
    "href": "api/Fwt.Core.Utils_PlayerPrefs.html",
    "title": "Class Utils_PlayerPrefs | Hex Terrains",
    "summary": "Class Utils_PlayerPrefs Inheritance object Utils_PlayerPrefs Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.Core Assembly: fwt.core.dll Syntax public static class Utils_PlayerPrefs Methods TryGetFloat(string, out float) Declaration public static bool TryGetFloat(string key, out float result) Parameters Type Name Description string key float result Returns Type Description bool TryGetInt(string, out int) Declaration public static bool TryGetInt(string key, out int result) Parameters Type Name Description string key int result Returns Type Description bool TryGetString(string, out string) Declaration public static bool TryGetString(string key, out string result) Parameters Type Name Description string key string result Returns Type Description bool"
  },
  "api/Fwt.Core.VersionValue-1.html": {
    "href": "api/Fwt.Core.VersionValue-1.html",
    "title": "Struct VersionValue<T> | Hex Terrains",
    "summary": "Struct VersionValue<T> Wrapper around a value with a version number and dirty flag. Whenever the value is set, the version number is incremented and the dirty flag is set to true. Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.Core Assembly: fwt.core.dll Syntax public struct VersionValue<T> Type Parameters Name Description T Type of value this wrapper is for Fields IsDirty Flag indicating whether the value has been modified since this flag was last reset. Declaration public bool IsDirty Field Value Type Description bool Value The value itself. This is the value that is being wrapped. Declaration public T Value Field Value Type Description T Version Version number of the value. This number is incremented whenever the value is set. Declaration public long Version Field Value Type Description long Methods ResetVersion() Resets the dirty flag and version number. Declaration public void ResetVersion() SetDirty(bool) Sets the dirty flag and increments the version number if the flag is set to true. Declaration public void SetDirty(bool isDirty) Parameters Type Name Description bool isDirty if true, sets the dirty flag and increments verison. If false, resets the dirty flag SetValue(T) Sets the value and increments the version number. Declaration public void SetValue(T value) Parameters Type Name Description T value value to set Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.ViewBase.html": {
    "href": "api/Fwt.Core.ViewBase.html",
    "title": "Class ViewBase | Hex Terrains",
    "summary": "Class ViewBase Base class for Views that have RefreshView() function Inheritance object Object Component Behaviour MonoBehaviour ViewBase Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Fwt.Core Assembly: fwt.core.dll Syntax public abstract class ViewBase : MonoBehaviour Properties Transform Declaration public Transform Transform { get; } Property Value Type Description Transform Methods Awake() Declaration protected virtual void Awake() OnDestroy() Declaration protected virtual void OnDestroy() Start() Declaration protected virtual void Start() ToggleVisibility() Declaration public virtual void ToggleVisibility() Extension Methods Extensions_UnityObject.SmartDestroy<TObject>(TObject) Extensions_UnityObject.SmartDisableGameObject<TObject>(TObject) Extensions_UnityObject.SmartEnableGameObject<TObject>(TObject) HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.Core.html": {
    "href": "api/Fwt.Core.html",
    "title": "Namespace Fwt.Core | Hex Terrains",
    "summary": "Namespace Fwt.Core Classes BinaryReaderExtensions BinaryWriterExtensions Component_SaveCameraImage CurveMath CustomLogger Extensions_Collections Extensions for collections (Clear, SetItemsCount, Fill, etc.) Extensions_Collections_Ecs Extensions_Ecs Extensions_EntityManager Extensions_EventSystem Extensions_LayerMask Extensions_UnityObject FileSystemUtils GeometryMath HashExtensions HexMath Hexagon math helper class. Coordinate conversions and hexagon geometry calculations. Supports axial, cube and offset coordinates. Supports flat top and pointy top hexagons. Supports odd and even layouts. ObjectPoolSystem_GameObject RandomExtensions SubAssetsComponent Base class for MonoBehaviour that holds a list of Assets (for instnce, Meshes) and controls their Saving within Asset file (if present) and controls their Destroying from Asset file (if saved) SubAssetsScriptableObject Base class for Scriptable Object that holds a list of Assets (for instnce, Meshes) and controls their Saving within Asset file (if present) and controls their Destroying from Asset file (if saved) System_ObjectPool<TObject> System_TrackComponentObject<TObject, TCache> Utils_Geometry Utils_PlayerPrefs ViewBase Base class for Views that have RefreshView() function Structs CameraViewPortData Struct that is used to cache the Camera data (Transform, IsOrtographic, Size e.g. Field of view or Ortographic size depending on camera settings) EcsEntity Struct that can replace Entity struct (to hold it in SharedData, for example) Extensions_Collections.ClearNativeHashMapJob<TKey, TValue> Clears a collection Extensions_Collections.ClearNativeHashSetJob<TItem> Clears a collection Extensions_Collections.ClearNativeListJob<TItem> Clears a collection Extensions_Collections.ClearNativeParallelHashMapJob<TKey, TValue> Clears a collection Extensions_Collections.ClearNativeParallelHashSetJob<TItem> Clears a collection Extensions_Collections.ClearNativeParallelMultiHashMapJob<TKey, TValue> Clears a collection Extensions_Collections.CopyToAndConvertJob_Reverse<TSource, TTarget> Copies items from one collection to another, converting values while copying. Copies data in reverse, so the last item in the source collection will be copied to the first item in the target collection. Extensions_Collections.CopyToAndConvertJob<TSource, TTarget> Copies items from one collection to another, converting values while copying. Extensions_Collections.FillNativeArrayJob<TItem> Fills every cell in a collection with provided value. Extensions_Collections.FillNativeListJob<TItem> Fills every cell in a collection with provided value. Extensions_Collections.SetItemsCountJob<TItem> Sets a count of items in a collection. If collection is smaller than count, it will add items to the collection. If collection is larger than count, it will remove items from the collection. MeshSource Burst friendly struct for storing mesh data that later can be used to create a Unity mesh. Meant to be used in a Jobs SpriteUv TransformData VersionValue<T> Wrapper around a value with a version number and dirty flag. Whenever the value is set, the version number is incremented and the dirty flag is set to true. Interfaces ICommitChanges IConvertableFrom<TSource, TTarget> IConvertableTo<TTarget> ISubAssetsContainer Used for Containers that provide ability to Save/Delete assets to/from Container's asset file (ScriptableObject, Prefab) Enums HexLayouts Hexagon layouts (odd/even) HexRotations Hexagon rotations (pointy/flat top)"
  },
  "api/Fwt.HexTerrains.Areas.Data.CountryColorPalette.html": {
    "href": "api/Fwt.HexTerrains.Areas.Data.CountryColorPalette.html",
    "title": "Struct CountryColorPalette | Hex Terrains",
    "summary": "Struct CountryColorPalette Implements IBufferElementData Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.Areas.Data Assembly: fwt.hexterrains.dll Syntax public struct CountryColorPalette : IBufferElementData Fields Color Declaration public Color32 Color Field Value Type Description Color32 Implements Unity.Entities.IBufferElementData Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Areas.Data.CreateHexTerrainCountriesRequest.html": {
    "href": "api/Fwt.HexTerrains.Areas.Data.CreateHexTerrainCountriesRequest.html",
    "title": "Struct CreateHexTerrainCountriesRequest | Hex Terrains",
    "summary": "Struct CreateHexTerrainCountriesRequest Implements IComponentData IQueryTypeParameter Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.Areas.Data Assembly: fwt.hexterrains.dll Syntax public struct CreateHexTerrainCountriesRequest : IComponentData, IQueryTypeParameter Fields ColorMapTextureIndex Declaration public int ColorMapTextureIndex Field Value Type Description int IsFillRandomValues Declaration public bool IsFillRandomValues Field Value Type Description bool MaxRandomValue Declaration public byte MaxRandomValue Field Value Type Description byte MinRandomValue Declaration public byte MinRandomValue Field Value Type Description byte Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Areas.Data.CreateHexTerrainProvincesRequest.html": {
    "href": "api/Fwt.HexTerrains.Areas.Data.CreateHexTerrainProvincesRequest.html",
    "title": "Struct CreateHexTerrainProvincesRequest | Hex Terrains",
    "summary": "Struct CreateHexTerrainProvincesRequest Implements IComponentData IQueryTypeParameter Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.Areas.Data Assembly: fwt.hexterrains.dll Syntax public struct CreateHexTerrainProvincesRequest : IComponentData, IQueryTypeParameter Fields ColorMapTextureIndex Declaration public int ColorMapTextureIndex Field Value Type Description int IsFillRandomValues Declaration public bool IsFillRandomValues Field Value Type Description bool MaxRandomValue Declaration public byte MaxRandomValue Field Value Type Description byte MinRandomValue Declaration public byte MinRandomValue Field Value Type Description byte Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Areas.Data.HexCountriesData.html": {
    "href": "api/Fwt.HexTerrains.Areas.Data.HexCountriesData.html",
    "title": "Class HexCountriesData | Hex Terrains",
    "summary": "Class HexCountriesData HexTerrainAreasData for countries Inheritance object HexTerrainAreasData HexCountriesData Implements IDisposable IComponentData IQueryTypeParameter Inherited Members HexTerrainAreasData.Settings HexTerrainAreasData.CellAreaMap HexTerrainAreasData.AreasColorMap HexTerrainAreasData.AreaSizes HexTerrainAreasData.AreaCells HexTerrainAreasData.AreaColors HexTerrainAreasData.ColorMapTextureIndex HexTerrainAreasData.Init(HexTerrainSettings, NativeArray<Color32>) HexTerrainAreasData.Init(HexTerrainSettings) HexTerrainAreasData.InitAreaColors(NativeArray<Color32>) HexTerrainAreasData.Resize(int2) HexTerrainAreasData.CompleteAllJobs() HexTerrainAreasData.GetCellArea(int) HexTerrainAreasData.SetCellArea(int, byte) HexTerrainAreasData.SetAllCellsArea(byte) HexTerrainAreasData.SetAllDirty(bool) HexTerrainAreasData.Cleanup() HexTerrainAreasData.CleanupAsync() HexTerrainAreasData.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Areas.Data Assembly: fwt.hexterrains.dll Syntax public class HexCountriesData : HexTerrainAreasData, IDisposable, IComponentData, IQueryTypeParameter Implements IDisposable Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Areas.Data.HexProvincesData.html": {
    "href": "api/Fwt.HexTerrains.Areas.Data.HexProvincesData.html",
    "title": "Class HexProvincesData | Hex Terrains",
    "summary": "Class HexProvincesData HexTerrainAreasData for provinces Inheritance object HexTerrainAreasData HexProvincesData Implements IDisposable IComponentData IQueryTypeParameter Inherited Members HexTerrainAreasData.Settings HexTerrainAreasData.CellAreaMap HexTerrainAreasData.AreasColorMap HexTerrainAreasData.AreaSizes HexTerrainAreasData.AreaCells HexTerrainAreasData.AreaColors HexTerrainAreasData.ColorMapTextureIndex HexTerrainAreasData.Init(HexTerrainSettings, NativeArray<Color32>) HexTerrainAreasData.Init(HexTerrainSettings) HexTerrainAreasData.InitAreaColors(NativeArray<Color32>) HexTerrainAreasData.Resize(int2) HexTerrainAreasData.CompleteAllJobs() HexTerrainAreasData.GetCellArea(int) HexTerrainAreasData.SetCellArea(int, byte) HexTerrainAreasData.SetAllCellsArea(byte) HexTerrainAreasData.SetAllDirty(bool) HexTerrainAreasData.Cleanup() HexTerrainAreasData.CleanupAsync() HexTerrainAreasData.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Areas.Data Assembly: fwt.hexterrains.dll Syntax public class HexProvincesData : HexTerrainAreasData, IDisposable, IComponentData, IQueryTypeParameter Implements IDisposable Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Areas.Data.HexTerrainAreasData.html": {
    "href": "api/Fwt.HexTerrains.Areas.Data.HexTerrainAreasData.html",
    "title": "Class HexTerrainAreasData | Hex Terrains",
    "summary": "Class HexTerrainAreasData Base class for HexTerrain layers that have a byte value per cell Inheritance object HexTerrainAreasData HexCountriesData HexProvincesData Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Areas.Data Assembly: fwt.hexterrains.dll Syntax public abstract class HexTerrainAreasData : IDisposable Fields Settings Settings of the HexTerrain this area is attached to Declaration public HexTerrainSettings Settings Field Value Type Description HexTerrainSettings Properties AreaCells Cell indexes per area Declaration public AreaCellsDataLayer AreaCells { get; set; } Property Value Type Description AreaCellsDataLayer AreaColors Palette of colors for the areas. Index in this list = area index. Used to calculate the AreasColorMap data layer AreasColorMap, which is used to fill a ColorTexture to be placed on UI or in terrain materials. Declaration public NativeList<Color32> AreaColors { get; set; } Property Value Type Description NativeList<Color32> AreaSizes Size per area Declaration public AreaSizesDataLayer AreaSizes { get; set; } Property Value Type Description AreaSizesDataLayer AreasColorMap Cell Area color per cell Declaration public CellColorsDataLayer AreasColorMap { get; set; } Property Value Type Description CellColorsDataLayer CellAreaMap Area index per cell Declaration public CellAreaDataLayer CellAreaMap { get; set; } Property Value Type Description CellAreaDataLayer ColorMapTextureIndex Index of the texture in the list of ColorMapTextures. Used externally in systems. Systems read this value to know which texture to fill with colors from AreasColorMap data layer AreasColorMap. That texture is expected to be used in materials or/and UI like minimap. Declaration public int ColorMapTextureIndex { get; set; } Property Value Type Description int Methods Cleanup() Every frame there is a cleanup stage. This function is called. Usually used to clean the dirty flags. Declaration public virtual void Cleanup() CleanupAsync() Async version of Cleanup() Cleanup() Difference between regular Cleanup() is that it schedules jobs that clean up data layers, so you don't have to wait for the results and can continue working. Every frame there is a cleanup stage. This function is called. Usually used to clean the dirty flags. Declaration public virtual void CleanupAsync() CompleteAllJobs() Completes all jobs that affect data layers. Declaration public virtual void CompleteAllJobs() Dispose() Declaration public virtual void Dispose() GetCellArea(int) Returns the area index of the cell. Declaration public virtual byte? GetCellArea(int cellIndex) Parameters Type Name Description int cellIndex cell index to take area index from Returns Type Description byte? area index if found, otherwise - null Init(HexTerrainSettings) Initializes/Reinitializes the area data. Declaration public virtual void Init(HexTerrainSettings settings) Parameters Type Name Description HexTerrainSettings settings new terrain settings Init(HexTerrainSettings, NativeArray<Color32>) Initializes/Reinitializes the areas data. Calls InitAreaColors() internally to copy the color palette from the given array InitAreaColors(NativeArray<Color32>). Only copies data from the copyAreaColorsFrom array, does not change or cache, so it is safe to dispose it after this call. Declaration public virtual void Init(HexTerrainSettings settings, NativeArray<Color32> copyAreaColorsFrom) Parameters Type Name Description HexTerrainSettings settings new terrain settings NativeArray<Color32> copyAreaColorsFrom array of colors per area to copy a AreaColors palette from InitAreaColors(NativeArray<Color32>) Copies an AreaColors palette from the given array AreaColors. Does not change or cache the array, so it is safe to dispose it after this call. copyFrom array is expected to have the areas count length, so there is one color per possible area index. AreaIndex == index in copyFrom array. Declaration public virtual void InitAreaColors(NativeArray<Color32> copyFrom) Parameters Type Name Description NativeArray<Color32> copyFrom array of colors to copy into the AreaColors palette Resize(int2) Resizes the terrain to a new size. Internally calls Init() to reinitialize the data layers. Declaration public virtual void Resize(int2 terrainSize) Parameters Type Name Description int2 terrainSize SetAllCellsArea(byte) Sets the area index of all cells to the given value. Declaration public virtual bool SetAllCellsArea(byte value) Parameters Type Name Description byte value area index to set for every cell Returns Type Description bool true if data vas set, otherwise - false SetAllDirty(bool) Sets all data layers dirty value. If isDirty is true, all data layers will be marked as dirty and will be recalculated on the next frame. If isDirty is false, all data layers will be marked as clean and will not be recalculated on the next frame. Declaration public void SetAllDirty(bool isDirty) Parameters Type Name Description bool isDirty SetCellArea(int, byte) Sets the area index of the cell. Declaration public virtual bool SetCellArea(int cellIndex, byte value) Parameters Type Name Description int cellIndex cell index to put area index to byte value area index to put into the cell Returns Type Description bool true if data has been set, otherwise - false Implements IDisposable Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Areas.Data.ProvinceColorPalette.html": {
    "href": "api/Fwt.HexTerrains.Areas.Data.ProvinceColorPalette.html",
    "title": "Struct ProvinceColorPalette | Hex Terrains",
    "summary": "Struct ProvinceColorPalette Implements IBufferElementData Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.Areas.Data Assembly: fwt.hexterrains.dll Syntax public struct ProvinceColorPalette : IBufferElementData Fields Color Declaration public Color32 Color Field Value Type Description Color32 Implements Unity.Entities.IBufferElementData Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Areas.Data.html": {
    "href": "api/Fwt.HexTerrains.Areas.Data.html",
    "title": "Namespace Fwt.HexTerrains.Areas.Data | Hex Terrains",
    "summary": "Namespace Fwt.HexTerrains.Areas.Data Classes HexCountriesData HexTerrainAreasData for countries HexProvincesData HexTerrainAreasData for provinces HexTerrainAreasData Base class for HexTerrain layers that have a byte value per cell Structs CountryColorPalette CreateHexTerrainCountriesRequest CreateHexTerrainProvincesRequest ProvinceColorPalette"
  },
  "api/Fwt.HexTerrains.Areas.DataLayers.AreaCellsDataLayer.html": {
    "href": "api/Fwt.HexTerrains.Areas.DataLayers.AreaCellsDataLayer.html",
    "title": "Class AreaCellsDataLayer | Hex Terrains",
    "summary": "Class AreaCellsDataLayer cell indexes sorted by area index Inheritance object DataLayer NativeParallelMultiHashMapDataLayer<byte, uint> AreaCellsDataLayer Implements IDisposable ICommitChanges Inherited Members NativeParallelMultiHashMapDataLayer<byte, uint>._data NativeParallelMultiHashMapDataLayer<byte, uint>.Data NativeParallelMultiHashMapDataLayer<byte, uint>.Length NativeParallelMultiHashMapDataLayer<byte, uint>.Init(int, Allocator) NativeParallelMultiHashMapDataLayer<byte, uint>.SetData(byte, uint) NativeParallelMultiHashMapDataLayer<byte, uint>.TrySetData(byte, uint) NativeParallelMultiHashMapDataLayer<byte, uint>.Clear() NativeParallelMultiHashMapDataLayer<byte, uint>.RemoveData(byte) NativeParallelMultiHashMapDataLayer<byte, uint>.TryRemoveData(byte) NativeParallelMultiHashMapDataLayer<byte, uint>.DisposeAllItems() NativeParallelMultiHashMapDataLayer<byte, uint>.DisposeDataItem(uint) NativeParallelMultiHashMapDataLayer<byte, uint>.Dispose() DataLayer._readJobsDependency DataLayer.ReadDependency DataLayer._writeJobsDependency DataLayer.WriteDependency DataLayer.CombinedDependency DataLayer._isDirty DataLayer.IsDirty DataLayer._version DataLayer.Version DataLayer.Length DataLayer.AddReadDependency(JobHandle) DataLayer.AddWriteDependency(JobHandle) DataLayer.SetReadDependency(JobHandle) DataLayer.SetWriteDependency(JobHandle) DataLayer.PrepareToWrite() DataLayer.PrepareToRead() DataLayer.OpenToRead() DataLayer.OpenToWrite() DataLayer.CompleteReadJobs() DataLayer.CompleteWriteJobs() DataLayer.CompleteAllJobs() DataLayer.CommitChanges() DataLayer.SetDirty(bool) DataLayer.DisposeAllItems() DataLayer.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Areas.DataLayers Assembly: fwt.hexterrains.dll Syntax public class AreaCellsDataLayer : NativeParallelMultiHashMapDataLayer<byte, uint>, IDisposable, ICommitChanges Properties IsDisposableItems If true, means when layer is resized or disposed, all items that are removed will be disposed (see nested classes description for details as the process may be different from layer to layer) Declaration public override bool IsDisposableItems { get; } Property Value Type Description bool Overrides DataLayer.IsDisposableItems Implements IDisposable ICommitChanges Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Areas.DataLayers.AreaSizesDataLayer.html": {
    "href": "api/Fwt.HexTerrains.Areas.DataLayers.AreaSizesDataLayer.html",
    "title": "Class AreaSizesDataLayer | Hex Terrains",
    "summary": "Class AreaSizesDataLayer Index = area index, value = cells count of the area Inheritance object DataLayer NativeListDataLayer<uint> AreaSizesDataLayer Implements IDisposable ICommitChanges IListDataLayer<uint> Inherited Members NativeListDataLayer<uint>._data NativeListDataLayer<uint>.Data NativeListDataLayer<uint>.Length NativeListDataLayer<uint>.Init(int, Allocator) NativeListDataLayer<uint>.GetData(int) NativeListDataLayer<uint>.SetData(int, uint) NativeListDataLayer<uint>.TryGetData(int, out uint) NativeListDataLayer<uint>.TrySetData(int, uint) NativeListDataLayer<uint>.DisposeAllItems() NativeListDataLayer<uint>.DisposeExcessItems(int) NativeListDataLayer<uint>.DisposeDataItem(uint) NativeListDataLayer<uint>.Dispose() DataLayer._readJobsDependency DataLayer.ReadDependency DataLayer._writeJobsDependency DataLayer.WriteDependency DataLayer.CombinedDependency DataLayer._isDirty DataLayer.IsDirty DataLayer._version DataLayer.Version DataLayer.AddReadDependency(JobHandle) DataLayer.AddWriteDependency(JobHandle) DataLayer.SetReadDependency(JobHandle) DataLayer.SetWriteDependency(JobHandle) DataLayer.PrepareToWrite() DataLayer.PrepareToRead() DataLayer.OpenToRead() DataLayer.OpenToWrite() DataLayer.CompleteReadJobs() DataLayer.CompleteWriteJobs() DataLayer.CompleteAllJobs() DataLayer.CommitChanges() DataLayer.SetDirty(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Areas.DataLayers Assembly: fwt.hexterrains.dll Syntax public class AreaSizesDataLayer : NativeListDataLayer<uint>, IDisposable, ICommitChanges, IListDataLayer<uint> Properties IsDisposableItems If true, means when layer is resized or disposed, all items that are removed will be disposed (see nested classes description for details as the process may be different from layer to layer) Declaration public override bool IsDisposableItems { get; } Property Value Type Description bool Overrides DataLayer.IsDisposableItems Methods Cleanup() Declaration public virtual void Cleanup() CleanupAsync() Declaration public virtual void CleanupAsync() Implements IDisposable ICommitChanges IListDataLayer<TItem> Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Areas.DataLayers.CellAreaDataLayer.html": {
    "href": "api/Fwt.HexTerrains.Areas.DataLayers.CellAreaDataLayer.html",
    "title": "Class CellAreaDataLayer | Hex Terrains",
    "summary": "Class CellAreaDataLayer value = area index of the cell Inheritance object DataLayer ChunkedDataLayer NativeListChunkedDataLayer<byte> HexTerrainNativeListChunkedDataLayer<byte> CellAreaDataLayer Implements IDisposable ICommitChanges IListDataLayer<byte> Inherited Members HexTerrainNativeListChunkedDataLayer<byte>._settings HexTerrainNativeListChunkedDataLayer<byte>.Settings HexTerrainNativeListChunkedDataLayer<byte>.CellsGridSize HexTerrainNativeListChunkedDataLayer<byte>.ChunkGridSize HexTerrainNativeListChunkedDataLayer<byte>.ChunkSize HexTerrainNativeListChunkedDataLayer<byte>.IsConnectedHorizontally HexTerrainNativeListChunkedDataLayer<byte>.IsConnectedVertically HexTerrainNativeListChunkedDataLayer<byte>.Init(int, HexTerrainSettings) NativeListChunkedDataLayer<byte>._data NativeListChunkedDataLayer<byte>.Data NativeListChunkedDataLayer<byte>.Length NativeListChunkedDataLayer<byte>.Init(int) NativeListChunkedDataLayer<byte>.GetData(int) NativeListChunkedDataLayer<byte>.SetData(int, byte) NativeListChunkedDataLayer<byte>.SetData(byte[]) NativeListChunkedDataLayer<byte>.FillData(byte) NativeListChunkedDataLayer<byte>.TryGetData(int, out byte) NativeListChunkedDataLayer<byte>.TrySetData(int, byte) NativeListChunkedDataLayer<byte>.DisposeAllItems() NativeListChunkedDataLayer<byte>.DisposeExcessItems(int) NativeListChunkedDataLayer<byte>.DisposeDataItem(byte) NativeListChunkedDataLayer<byte>.Dispose() ChunkedDataLayer.ChunksCount ChunkedDataLayer.ChunkDirtyGrid ChunkedDataLayer.DirtyChunks ChunkedDataLayer.SetCellDirty(int) ChunkedDataLayer.SetCellDirty(int, bool) ChunkedDataLayer.GetIsChunkDirty(int) ChunkedDataLayer.SetChunkDirty(int, bool) ChunkedDataLayer.SetAllChunksDirty(bool) ChunkedDataLayer.SetAllChunksDirtyAsync(bool, JobHandle) ChunkedDataLayer.SetAllChunksDirty() ChunkedDataLayer.ClearAllChunksDirty() ChunkedDataLayer.MergeChunkDirtyGrids(ChunkedDataLayer, JobHandle) ChunkedDataLayer.MergeChunkDirtyGrids(ChunkedDataLayer, ChunkedDataLayer, JobHandle) ChunkedDataLayer.MergeChunkDirtyGrids(ChunkedDataLayer, ChunkedDataLayer, ChunkedDataLayer, JobHandle) ChunkedDataLayer.MergeChunkDirtyGrids(ChunkedDataLayer, ChunkedDataLayer, ChunkedDataLayer, ChunkedDataLayer, JobHandle) ChunkedDataLayer.GetChunkIndexByCellIndex(int) ChunkedDataLayer.GetChunkCoord(int2) ChunkedDataLayer.GetChunkCoord(int) ChunkedDataLayer.GetChunkIndex(int2) ChunkedDataLayer.GetCellCoord(int) ChunkedDataLayer.GetCellIndex(int2) ChunkedDataLayer.ResolveCellCoord(int2) ChunkedDataLayer.ResolveChunkCoord(int2) DataLayer._readJobsDependency DataLayer.ReadDependency DataLayer._writeJobsDependency DataLayer.WriteDependency DataLayer.CombinedDependency DataLayer._isDirty DataLayer.IsDirty DataLayer._version DataLayer.Version DataLayer.AddReadDependency(JobHandle) DataLayer.AddWriteDependency(JobHandle) DataLayer.SetReadDependency(JobHandle) DataLayer.SetWriteDependency(JobHandle) DataLayer.PrepareToWrite() DataLayer.PrepareToRead() DataLayer.OpenToRead() DataLayer.OpenToWrite() DataLayer.CompleteReadJobs() DataLayer.CompleteWriteJobs() DataLayer.CompleteAllJobs() DataLayer.CommitChanges() DataLayer.SetDirty(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Areas.DataLayers Assembly: fwt.hexterrains.dll Syntax public class CellAreaDataLayer : HexTerrainNativeListChunkedDataLayer<byte>, IDisposable, ICommitChanges, IListDataLayer<byte> Properties IsDisposableItems If true, means when layer is resized or disposed, all items that are removed will be disposed (see nested classes description for details as the process may be different from layer to layer) Declaration public override bool IsDisposableItems { get; } Property Value Type Description bool Overrides DataLayer.IsDisposableItems Methods Cleanup() Declaration public override void Cleanup() Overrides HexTerrainNativeListChunkedDataLayer<byte>.Cleanup() CleanupAsync() Declaration public override JobHandle CleanupAsync() Returns Type Description JobHandle Overrides HexTerrainNativeListChunkedDataLayer<byte>.CleanupAsync() Implements IDisposable ICommitChanges IListDataLayer<TItem> Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Areas.DataLayers.html": {
    "href": "api/Fwt.HexTerrains.Areas.DataLayers.html",
    "title": "Namespace Fwt.HexTerrains.Areas.DataLayers | Hex Terrains",
    "summary": "Namespace Fwt.HexTerrains.Areas.DataLayers Classes AreaCellsDataLayer cell indexes sorted by area index AreaSizesDataLayer Index = area index, value = cells count of the area CellAreaDataLayer value = area index of the cell"
  },
  "api/Fwt.HexTerrains.Areas.HexTerrainAreasAuthoring.html": {
    "href": "api/Fwt.HexTerrains.Areas.HexTerrainAreasAuthoring.html",
    "title": "Class HexTerrainAreasAuthoring | Hex Terrains",
    "summary": "Class HexTerrainAreasAuthoring Base class for authoring components of hex terrain areas. Inheritance object Object Component Behaviour MonoBehaviour HexTerrainAreasAuthoring HexTerrainCountriesAuthoring HexTerrainProvincesAuthoring Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.Areas Assembly: fwt.hexterrains.dll Syntax public abstract class HexTerrainAreasAuthoring : MonoBehaviour Fields ColorPalette Colors of the areas. Index in this list corresponds to the area index. Declaration [Tooltip(\"Colors of the areas. Index in this list corresponds to the area index.\")] public List<Color> ColorPalette Field Value Type Description List<Color> Extension Methods Extensions_UnityObject.SmartDestroy<TObject>(TObject) Extensions_UnityObject.SmartDisableGameObject<TObject>(TObject) Extensions_UnityObject.SmartEnableGameObject<TObject>(TObject) HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Areas.HexTerrainAreasBaker-1.html": {
    "href": "api/Fwt.HexTerrains.Areas.HexTerrainAreasBaker-1.html",
    "title": "Class HexTerrainAreasBaker<TAuthoring> | Hex Terrains",
    "summary": "Class HexTerrainAreasBaker<TAuthoring> Inheritance object IBaker Baker<TAuthoring> HexTerrainAreasBaker<TAuthoring> HexTerrainCountriesBaker HexTerrainProvincesBaker Inherited Members Baker<TAuthoring>.Bake(TAuthoring) IBaker.GetSceneGUID() IBaker.GetComponent<T>() IBaker.GetComponent<T>(Component) IBaker.GetComponent<T>(GameObject) IBaker.GetComponents<T>(List<T>) IBaker.GetComponents<T>(Component, List<T>) IBaker.GetComponents<T>(GameObject, List<T>) IBaker.GetComponents<T>() IBaker.GetComponents<T>(Component) IBaker.GetComponents<T>(GameObject) IBaker.GetComponentInParent<T>() IBaker.GetComponentInParent<T>(Component) IBaker.GetComponentInParent<T>(GameObject) IBaker.GetComponentsInParent<T>(List<T>) IBaker.GetComponentsInParent<T>(Component, List<T>) IBaker.GetComponentsInParent<T>(GameObject, List<T>) IBaker.GetComponentsInParent<T>() IBaker.GetComponentsInParent<T>(Component) IBaker.GetComponentsInParent<T>(GameObject) IBaker.GetComponentInChildren<T>() IBaker.GetComponentInChildren<T>(Component) IBaker.GetComponentInChildren<T>(GameObject) IBaker.GetComponentsInChildren<T>(List<T>) IBaker.GetComponentsInChildren<T>(Component, List<T>) IBaker.GetComponentsInChildren<T>(GameObject, List<T>) IBaker.GetComponentsInChildren<T>() IBaker.GetComponentsInChildren<T>(Component) IBaker.GetComponentsInChildren<T>(GameObject) IBaker.GetParent() IBaker.GetParent(Component) IBaker.GetParent(GameObject) IBaker.GetParents() IBaker.GetParents(Component) IBaker.GetParents(GameObject) IBaker.GetParents(List<GameObject>) IBaker.GetParents(Component, List<GameObject>) IBaker.GetParents(GameObject, List<GameObject>) IBaker.GetChild(int) IBaker.GetChild(Component, int) IBaker.GetChild(GameObject, int) IBaker.GetChildren(bool) IBaker.GetChildren(Component, bool) IBaker.GetChildren(GameObject, bool) IBaker.GetChildren(List<GameObject>, bool) IBaker.GetChildren(Component, List<GameObject>, bool) IBaker.GetChildren(GameObject, List<GameObject>, bool) IBaker.GetChildCount() IBaker.GetChildCount(Component) IBaker.GetChildCount(GameObject) IBaker.GetName() IBaker.GetName(Component) IBaker.GetName(GameObject) IBaker.GetLayer() IBaker.GetLayer(Component) IBaker.GetLayer(GameObject) IBaker.GetTag() IBaker.GetTag(Component) IBaker.GetTag(GameObject) IBaker.GetEntity() IBaker.GetEntity(GameObject) IBaker.GetEntity(Component) IBaker.GetEntity(TransformUsageFlags) IBaker.GetEntity(GameObject, TransformUsageFlags) IBaker.GetEntity(Component, TransformUsageFlags) IBaker.GetEntityWithoutDependency() IBaker.IsActive() IBaker.IsActive(Component) IBaker.IsActive(GameObject) IBaker.IsActiveAndEnabled() IBaker.IsActiveAndEnabled(Component) IBaker.IsStatic() IBaker.IsStatic(Component) IBaker.IsStatic(GameObject) IBaker.IsClient() IBaker.IsServer() IBaker.DependsOn<T>(T) IBaker.DependsOnComponentInParent<T>() IBaker.DependsOnComponentInParent<T>(Component) IBaker.DependsOnComponentInParent<T>(GameObject) IBaker.DependsOnComponentsInParent<T>() IBaker.DependsOnComponentsInParent<T>(Component) IBaker.DependsOnComponentsInParent<T>(GameObject) IBaker.DependsOnComponentInChildren<T>() IBaker.DependsOnComponentInChildren<T>(Component) IBaker.DependsOnComponentInChildren<T>(GameObject) IBaker.DependsOnComponentsInChildren<T>() IBaker.DependsOnComponentsInChildren<T>(GameObject) IBaker.DependsOnComponentsInChildren<T>(Component) IBaker.DependsOnLightBaking() IBaker.AddBlobAsset<T>(ref BlobAssetReference<T>, out Hash128) IBaker.AddBlobAssetWithCustomHash<T>(ref BlobAssetReference<T>, Hash128) IBaker.TryGetBlobAssetReference<T>(Hash128, out BlobAssetReference<T>) IBaker.AddComponent<T>() IBaker.AddComponent<T>(in T) IBaker.AddComponent<T>(Entity) IBaker.AddComponent<T>(Entity, in T) IBaker.AddComponent(ComponentType) IBaker.AddComponent(Entity, ComponentType) IBaker.AddComponent(in ComponentTypeSet) IBaker.AddComponent(Entity, in ComponentTypeSet) IBaker.AddComponentObject<T>(T) IBaker.AddComponentObject<T>(Entity, T) IBaker.AddSharedComponentManaged<T>(T) IBaker.AddSharedComponentManaged<T>(Entity, T) IBaker.AddSharedComponent<T>(T) IBaker.AddSharedComponent<T>(Entity, T) IBaker.AddBuffer<T>() IBaker.AddBuffer<T>(Entity) IBaker.SetComponent<T>(Entity, in T) IBaker.SetComponentEnabled<T>(Entity, bool) IBaker.SetComponentEnabled<T>(bool) IBaker.SetSharedComponentManaged<T>(Entity, in T) IBaker.SetSharedComponent<T>(Entity, in T) IBaker.SetBuffer<T>() IBaker.SetBuffer<T>(Entity) IBaker.AppendToBuffer<T>(T) IBaker.AppendToBuffer<T>(Entity, T) IBaker.CreateAdditionalEntity() IBaker.CreateAdditionalEntity(TransformUsageFlags, bool, string) IBaker.CreateAdditionalEntities(NativeArray<Entity>, TransformUsageFlags, bool) IBaker.RegisterPrefabForBaking(GameObject) IBaker.AddTransformUsageFlags(TransformUsageFlags) IBaker.AddTransformUsageFlags(Entity, TransformUsageFlags) IBaker.IsBakingForEditor() IBaker.GetDotsSettings() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Areas Assembly: fwt.hexterrains.dll Syntax public abstract class HexTerrainAreasBaker<TAuthoring> : Baker<TAuthoring> where TAuthoring : HexTerrainAreasAuthoring Type Parameters Name Description TAuthoring Methods BakeData(TAuthoring) Declaration public virtual void BakeData(TAuthoring authoring) Parameters Type Name Description TAuthoring authoring Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Areas.HexTerrainCountriesAuthoring.html": {
    "href": "api/Fwt.HexTerrains.Areas.HexTerrainCountriesAuthoring.html",
    "title": "Class HexTerrainCountriesAuthoring | Hex Terrains",
    "summary": "Class HexTerrainCountriesAuthoring Authoring component for hex terrain countries. Inheritance object Object Component Behaviour MonoBehaviour HexTerrainAreasAuthoring HexTerrainCountriesAuthoring Inherited Members HexTerrainAreasAuthoring.ColorPalette MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.Areas Assembly: fwt.hexterrains.dll Syntax public class HexTerrainCountriesAuthoring : HexTerrainAreasAuthoring Fields ColorMapTextureIndex Index of the ColorTexture to copy colors from the ColorMap. Declaration [Tooltip(\"Index of the ColorTexture to copy colors from the ColorMap.\")] public int ColorMapTextureIndex Field Value Type Description int IsFillWithRandomData Whether to fill the countries with random data. Declaration [Tooltip(\"Whether to fill the countries with random data.\")] public bool IsFillWithRandomData Field Value Type Description bool MaxRandomValue Maximum random value for the countries. Declaration [Tooltip(\"Maximum random value for the countries.\")] public int MaxRandomValue Field Value Type Description int MinRandomValue Minimum random value for the countries. Declaration [Tooltip(\"Minimum random value for the countries.\")] public int MinRandomValue Field Value Type Description int Extension Methods Extensions_UnityObject.SmartDestroy<TObject>(TObject) Extensions_UnityObject.SmartDisableGameObject<TObject>(TObject) Extensions_UnityObject.SmartEnableGameObject<TObject>(TObject) HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Areas.HexTerrainCountriesBaker.html": {
    "href": "api/Fwt.HexTerrains.Areas.HexTerrainCountriesBaker.html",
    "title": "Class HexTerrainCountriesBaker | Hex Terrains",
    "summary": "Class HexTerrainCountriesBaker Inheritance object IBaker Baker<HexTerrainCountriesAuthoring> HexTerrainAreasBaker<HexTerrainCountriesAuthoring> HexTerrainCountriesBaker Inherited Members HexTerrainAreasBaker<HexTerrainCountriesAuthoring>.BakeData(HexTerrainCountriesAuthoring) IBaker.GetSceneGUID() IBaker.GetComponent<T>() IBaker.GetComponent<T>(Component) IBaker.GetComponent<T>(GameObject) IBaker.GetComponents<T>(List<T>) IBaker.GetComponents<T>(Component, List<T>) IBaker.GetComponents<T>(GameObject, List<T>) IBaker.GetComponents<T>() IBaker.GetComponents<T>(Component) IBaker.GetComponents<T>(GameObject) IBaker.GetComponentInParent<T>() IBaker.GetComponentInParent<T>(Component) IBaker.GetComponentInParent<T>(GameObject) IBaker.GetComponentsInParent<T>(List<T>) IBaker.GetComponentsInParent<T>(Component, List<T>) IBaker.GetComponentsInParent<T>(GameObject, List<T>) IBaker.GetComponentsInParent<T>() IBaker.GetComponentsInParent<T>(Component) IBaker.GetComponentsInParent<T>(GameObject) IBaker.GetComponentInChildren<T>() IBaker.GetComponentInChildren<T>(Component) IBaker.GetComponentInChildren<T>(GameObject) IBaker.GetComponentsInChildren<T>(List<T>) IBaker.GetComponentsInChildren<T>(Component, List<T>) IBaker.GetComponentsInChildren<T>(GameObject, List<T>) IBaker.GetComponentsInChildren<T>() IBaker.GetComponentsInChildren<T>(Component) IBaker.GetComponentsInChildren<T>(GameObject) IBaker.GetParent() IBaker.GetParent(Component) IBaker.GetParent(GameObject) IBaker.GetParents() IBaker.GetParents(Component) IBaker.GetParents(GameObject) IBaker.GetParents(List<GameObject>) IBaker.GetParents(Component, List<GameObject>) IBaker.GetParents(GameObject, List<GameObject>) IBaker.GetChild(int) IBaker.GetChild(Component, int) IBaker.GetChild(GameObject, int) IBaker.GetChildren(bool) IBaker.GetChildren(Component, bool) IBaker.GetChildren(GameObject, bool) IBaker.GetChildren(List<GameObject>, bool) IBaker.GetChildren(Component, List<GameObject>, bool) IBaker.GetChildren(GameObject, List<GameObject>, bool) IBaker.GetChildCount() IBaker.GetChildCount(Component) IBaker.GetChildCount(GameObject) IBaker.GetName() IBaker.GetName(Component) IBaker.GetName(GameObject) IBaker.GetLayer() IBaker.GetLayer(Component) IBaker.GetLayer(GameObject) IBaker.GetTag() IBaker.GetTag(Component) IBaker.GetTag(GameObject) IBaker.GetEntity() IBaker.GetEntity(GameObject) IBaker.GetEntity(Component) IBaker.GetEntity(TransformUsageFlags) IBaker.GetEntity(GameObject, TransformUsageFlags) IBaker.GetEntity(Component, TransformUsageFlags) IBaker.GetEntityWithoutDependency() IBaker.IsActive() IBaker.IsActive(Component) IBaker.IsActive(GameObject) IBaker.IsActiveAndEnabled() IBaker.IsActiveAndEnabled(Component) IBaker.IsStatic() IBaker.IsStatic(Component) IBaker.IsStatic(GameObject) IBaker.IsClient() IBaker.IsServer() IBaker.DependsOn<T>(T) IBaker.DependsOnComponentInParent<T>() IBaker.DependsOnComponentInParent<T>(Component) IBaker.DependsOnComponentInParent<T>(GameObject) IBaker.DependsOnComponentsInParent<T>() IBaker.DependsOnComponentsInParent<T>(Component) IBaker.DependsOnComponentsInParent<T>(GameObject) IBaker.DependsOnComponentInChildren<T>() IBaker.DependsOnComponentInChildren<T>(Component) IBaker.DependsOnComponentInChildren<T>(GameObject) IBaker.DependsOnComponentsInChildren<T>() IBaker.DependsOnComponentsInChildren<T>(GameObject) IBaker.DependsOnComponentsInChildren<T>(Component) IBaker.DependsOnLightBaking() IBaker.AddBlobAsset<T>(ref BlobAssetReference<T>, out Hash128) IBaker.AddBlobAssetWithCustomHash<T>(ref BlobAssetReference<T>, Hash128) IBaker.TryGetBlobAssetReference<T>(Hash128, out BlobAssetReference<T>) IBaker.AddComponent<T>() IBaker.AddComponent<T>(in T) IBaker.AddComponent<T>(Entity) IBaker.AddComponent<T>(Entity, in T) IBaker.AddComponent(ComponentType) IBaker.AddComponent(Entity, ComponentType) IBaker.AddComponent(in ComponentTypeSet) IBaker.AddComponent(Entity, in ComponentTypeSet) IBaker.AddComponentObject<T>(T) IBaker.AddComponentObject<T>(Entity, T) IBaker.AddSharedComponentManaged<T>(T) IBaker.AddSharedComponentManaged<T>(Entity, T) IBaker.AddSharedComponent<T>(T) IBaker.AddSharedComponent<T>(Entity, T) IBaker.AddBuffer<T>() IBaker.AddBuffer<T>(Entity) IBaker.SetComponent<T>(Entity, in T) IBaker.SetComponentEnabled<T>(Entity, bool) IBaker.SetComponentEnabled<T>(bool) IBaker.SetSharedComponentManaged<T>(Entity, in T) IBaker.SetSharedComponent<T>(Entity, in T) IBaker.SetBuffer<T>() IBaker.SetBuffer<T>(Entity) IBaker.AppendToBuffer<T>(T) IBaker.AppendToBuffer<T>(Entity, T) IBaker.CreateAdditionalEntity() IBaker.CreateAdditionalEntity(TransformUsageFlags, bool, string) IBaker.CreateAdditionalEntities(NativeArray<Entity>, TransformUsageFlags, bool) IBaker.RegisterPrefabForBaking(GameObject) IBaker.AddTransformUsageFlags(TransformUsageFlags) IBaker.AddTransformUsageFlags(Entity, TransformUsageFlags) IBaker.IsBakingForEditor() IBaker.GetDotsSettings() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Areas Assembly: fwt.hexterrains.dll Syntax public class HexTerrainCountriesBaker : HexTerrainAreasBaker<HexTerrainCountriesAuthoring> Methods Bake(HexTerrainCountriesAuthoring) Called in the baking process to bake the authoring component Declaration public override void Bake(HexTerrainCountriesAuthoring authoring) Parameters Type Name Description HexTerrainCountriesAuthoring authoring The authoring component to bake Overrides Baker<HexTerrainCountriesAuthoring>.Bake(HexTerrainCountriesAuthoring) Remarks This method will be called for every instance of TAuthoringType in order to bake that instance. Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Areas.HexTerrainProvincesAuthoring.html": {
    "href": "api/Fwt.HexTerrains.Areas.HexTerrainProvincesAuthoring.html",
    "title": "Class HexTerrainProvincesAuthoring | Hex Terrains",
    "summary": "Class HexTerrainProvincesAuthoring Authoring component for hex terrain provinces. Inheritance object Object Component Behaviour MonoBehaviour HexTerrainAreasAuthoring HexTerrainProvincesAuthoring Inherited Members HexTerrainAreasAuthoring.ColorPalette MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.Areas Assembly: fwt.hexterrains.dll Syntax public class HexTerrainProvincesAuthoring : HexTerrainAreasAuthoring Fields ColorMapTextureIndex Index of the ColorTexture to copy colors from the ColorMap. Declaration [Tooltip(\"Index of the ColorTexture to copy colors from the ColorMap.\")] public int ColorMapTextureIndex Field Value Type Description int IsFillWithRandomData Whether to fill the provinces with random data. Declaration [Tooltip(\"Whether to fill the provinces with random data.\")] public bool IsFillWithRandomData Field Value Type Description bool MaxRandomValue Maximum random value for the provinces. Declaration [Tooltip(\"Maximum random value for the provinces.\")] public int MaxRandomValue Field Value Type Description int MinRandomValue Minimum random value for the provinces. Declaration [Tooltip(\"Minimum random value for the provinces.\")] public int MinRandomValue Field Value Type Description int Extension Methods Extensions_UnityObject.SmartDestroy<TObject>(TObject) Extensions_UnityObject.SmartDisableGameObject<TObject>(TObject) Extensions_UnityObject.SmartEnableGameObject<TObject>(TObject) HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Areas.HexTerrainProvincesBaker.html": {
    "href": "api/Fwt.HexTerrains.Areas.HexTerrainProvincesBaker.html",
    "title": "Class HexTerrainProvincesBaker | Hex Terrains",
    "summary": "Class HexTerrainProvincesBaker Inheritance object IBaker Baker<HexTerrainProvincesAuthoring> HexTerrainAreasBaker<HexTerrainProvincesAuthoring> HexTerrainProvincesBaker Inherited Members HexTerrainAreasBaker<HexTerrainProvincesAuthoring>.BakeData(HexTerrainProvincesAuthoring) IBaker.GetSceneGUID() IBaker.GetComponent<T>() IBaker.GetComponent<T>(Component) IBaker.GetComponent<T>(GameObject) IBaker.GetComponents<T>(List<T>) IBaker.GetComponents<T>(Component, List<T>) IBaker.GetComponents<T>(GameObject, List<T>) IBaker.GetComponents<T>() IBaker.GetComponents<T>(Component) IBaker.GetComponents<T>(GameObject) IBaker.GetComponentInParent<T>() IBaker.GetComponentInParent<T>(Component) IBaker.GetComponentInParent<T>(GameObject) IBaker.GetComponentsInParent<T>(List<T>) IBaker.GetComponentsInParent<T>(Component, List<T>) IBaker.GetComponentsInParent<T>(GameObject, List<T>) IBaker.GetComponentsInParent<T>() IBaker.GetComponentsInParent<T>(Component) IBaker.GetComponentsInParent<T>(GameObject) IBaker.GetComponentInChildren<T>() IBaker.GetComponentInChildren<T>(Component) IBaker.GetComponentInChildren<T>(GameObject) IBaker.GetComponentsInChildren<T>(List<T>) IBaker.GetComponentsInChildren<T>(Component, List<T>) IBaker.GetComponentsInChildren<T>(GameObject, List<T>) IBaker.GetComponentsInChildren<T>() IBaker.GetComponentsInChildren<T>(Component) IBaker.GetComponentsInChildren<T>(GameObject) IBaker.GetParent() IBaker.GetParent(Component) IBaker.GetParent(GameObject) IBaker.GetParents() IBaker.GetParents(Component) IBaker.GetParents(GameObject) IBaker.GetParents(List<GameObject>) IBaker.GetParents(Component, List<GameObject>) IBaker.GetParents(GameObject, List<GameObject>) IBaker.GetChild(int) IBaker.GetChild(Component, int) IBaker.GetChild(GameObject, int) IBaker.GetChildren(bool) IBaker.GetChildren(Component, bool) IBaker.GetChildren(GameObject, bool) IBaker.GetChildren(List<GameObject>, bool) IBaker.GetChildren(Component, List<GameObject>, bool) IBaker.GetChildren(GameObject, List<GameObject>, bool) IBaker.GetChildCount() IBaker.GetChildCount(Component) IBaker.GetChildCount(GameObject) IBaker.GetName() IBaker.GetName(Component) IBaker.GetName(GameObject) IBaker.GetLayer() IBaker.GetLayer(Component) IBaker.GetLayer(GameObject) IBaker.GetTag() IBaker.GetTag(Component) IBaker.GetTag(GameObject) IBaker.GetEntity() IBaker.GetEntity(GameObject) IBaker.GetEntity(Component) IBaker.GetEntity(TransformUsageFlags) IBaker.GetEntity(GameObject, TransformUsageFlags) IBaker.GetEntity(Component, TransformUsageFlags) IBaker.GetEntityWithoutDependency() IBaker.IsActive() IBaker.IsActive(Component) IBaker.IsActive(GameObject) IBaker.IsActiveAndEnabled() IBaker.IsActiveAndEnabled(Component) IBaker.IsStatic() IBaker.IsStatic(Component) IBaker.IsStatic(GameObject) IBaker.IsClient() IBaker.IsServer() IBaker.DependsOn<T>(T) IBaker.DependsOnComponentInParent<T>() IBaker.DependsOnComponentInParent<T>(Component) IBaker.DependsOnComponentInParent<T>(GameObject) IBaker.DependsOnComponentsInParent<T>() IBaker.DependsOnComponentsInParent<T>(Component) IBaker.DependsOnComponentsInParent<T>(GameObject) IBaker.DependsOnComponentInChildren<T>() IBaker.DependsOnComponentInChildren<T>(Component) IBaker.DependsOnComponentInChildren<T>(GameObject) IBaker.DependsOnComponentsInChildren<T>() IBaker.DependsOnComponentsInChildren<T>(GameObject) IBaker.DependsOnComponentsInChildren<T>(Component) IBaker.DependsOnLightBaking() IBaker.AddBlobAsset<T>(ref BlobAssetReference<T>, out Hash128) IBaker.AddBlobAssetWithCustomHash<T>(ref BlobAssetReference<T>, Hash128) IBaker.TryGetBlobAssetReference<T>(Hash128, out BlobAssetReference<T>) IBaker.AddComponent<T>() IBaker.AddComponent<T>(in T) IBaker.AddComponent<T>(Entity) IBaker.AddComponent<T>(Entity, in T) IBaker.AddComponent(ComponentType) IBaker.AddComponent(Entity, ComponentType) IBaker.AddComponent(in ComponentTypeSet) IBaker.AddComponent(Entity, in ComponentTypeSet) IBaker.AddComponentObject<T>(T) IBaker.AddComponentObject<T>(Entity, T) IBaker.AddSharedComponentManaged<T>(T) IBaker.AddSharedComponentManaged<T>(Entity, T) IBaker.AddSharedComponent<T>(T) IBaker.AddSharedComponent<T>(Entity, T) IBaker.AddBuffer<T>() IBaker.AddBuffer<T>(Entity) IBaker.SetComponent<T>(Entity, in T) IBaker.SetComponentEnabled<T>(Entity, bool) IBaker.SetComponentEnabled<T>(bool) IBaker.SetSharedComponentManaged<T>(Entity, in T) IBaker.SetSharedComponent<T>(Entity, in T) IBaker.SetBuffer<T>() IBaker.SetBuffer<T>(Entity) IBaker.AppendToBuffer<T>(T) IBaker.AppendToBuffer<T>(Entity, T) IBaker.CreateAdditionalEntity() IBaker.CreateAdditionalEntity(TransformUsageFlags, bool, string) IBaker.CreateAdditionalEntities(NativeArray<Entity>, TransformUsageFlags, bool) IBaker.RegisterPrefabForBaking(GameObject) IBaker.AddTransformUsageFlags(TransformUsageFlags) IBaker.AddTransformUsageFlags(Entity, TransformUsageFlags) IBaker.IsBakingForEditor() IBaker.GetDotsSettings() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Areas Assembly: fwt.hexterrains.dll Syntax public class HexTerrainProvincesBaker : HexTerrainAreasBaker<HexTerrainProvincesAuthoring> Methods Bake(HexTerrainProvincesAuthoring) Called in the baking process to bake the authoring component Declaration public override void Bake(HexTerrainProvincesAuthoring authoring) Parameters Type Name Description HexTerrainProvincesAuthoring authoring The authoring component to bake Overrides Baker<HexTerrainProvincesAuthoring>.Bake(HexTerrainProvincesAuthoring) Remarks This method will be called for every instance of TAuthoringType in order to bake that instance. Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Areas.Jobs.CalculateAreaCellsJob.html": {
    "href": "api/Fwt.HexTerrains.Areas.Jobs.CalculateAreaCellsJob.html",
    "title": "Struct CalculateAreaCellsJob | Hex Terrains",
    "summary": "Struct CalculateAreaCellsJob Job to calculate the area cells. It fills the multi hash map with Key = area index, values = all cell indexes of that area. Implements IJobParallelFor Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.Areas.Jobs Assembly: fwt.hexterrains.dll Syntax [BurstCompile] public struct CalculateAreaCellsJob : IJobParallelFor Fields CellValuesMap The map of cell values. Value = area index, Key = cell index. Declaration [ReadOnly] public NativeList<byte> CellValuesMap Field Value Type Description NativeList<byte> SortedValues The multi hash map to store the area cell indexes. Declaration [WriteOnly] public NativeParallelMultiHashMap<byte, uint>.ParallelWriter SortedValues Field Value Type Description NativeParallelMultiHashMap<byte, uint>.ParallelWriter Methods Execute(int) Performs work against a specific iteration index. Declaration public void Execute(int index) Parameters Type Name Description int index The index of the Parallel for loop at which to perform work. Implements Unity.Jobs.IJobParallelFor Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Areas.Jobs.CalculateAreaColorMapJob.html": {
    "href": "api/Fwt.HexTerrains.Areas.Jobs.CalculateAreaColorMapJob.html",
    "title": "Struct CalculateAreaColorMapJob | Hex Terrains",
    "summary": "Struct CalculateAreaColorMapJob Job to calculate the color map for the areas. Implements IJobParallelFor Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.Areas.Jobs Assembly: fwt.hexterrains.dll Syntax [BurstCompile] public struct CalculateAreaColorMapJob : IJobParallelFor Fields CellColorMap Map of cell colors. Value = color for the cell. Job fills this array with colors. Declaration [WriteOnly] public NativeArray<Color32> CellColorMap Field Value Type Description NativeArray<Color32> CellValuesMap Map of cell values. Value = area index. Declaration [ReadOnly] public NativeList<byte> CellValuesMap Field Value Type Description NativeList<byte> ChunkDirtyGrid Grid of dirty flags for the chunks. Index in this list = chunk index. Value = true if the chunk is dirty. Declaration [ReadOnly] public NativeList<bool> ChunkDirtyGrid Field Value Type Description NativeList<bool> Colors Color palette for the areas. Index in this list = value in the cell value map. Declaration [ReadOnly] public NativeList<Color32> Colors Field Value Type Description NativeList<Color32> DefaultColor Default color for the cells if none found in the color palette. Declaration public Color32 DefaultColor Field Value Type Description Color32 Settings Settings for the hex terrain. Declaration public HexTerrainSettings Settings Field Value Type Description HexTerrainSettings Methods Execute(int) Performs work against a specific iteration index. Declaration public void Execute(int index) Parameters Type Name Description int index The index of the Parallel for loop at which to perform work. Implements Unity.Jobs.IJobParallelFor Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Areas.Jobs.CalculateAreasSizeJob.html": {
    "href": "api/Fwt.HexTerrains.Areas.Jobs.CalculateAreasSizeJob.html",
    "title": "Struct CalculateAreasSizeJob | Hex Terrains",
    "summary": "Struct CalculateAreasSizeJob Job to calculate the size of each area on the terrain. Implements IJob Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.Areas.Jobs Assembly: fwt.hexterrains.dll Syntax [BurstCompile] public struct CalculateAreasSizeJob : IJob Fields AreaSizes The sizes of each area, where the index corresponds to the area index. Declaration public NativeArray<uint> AreaSizes Field Value Type Description NativeArray<uint> CellAreaMap The map of cell values, where each value represents an area index. Declaration [ReadOnly] public NativeList<byte> CellAreaMap Field Value Type Description NativeList<byte> Methods Execute() Implement this method to perform work on a worker thread. Declaration public void Execute() Implements Unity.Jobs.IJob Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Areas.Jobs.html": {
    "href": "api/Fwt.HexTerrains.Areas.Jobs.html",
    "title": "Namespace Fwt.HexTerrains.Areas.Jobs | Hex Terrains",
    "summary": "Namespace Fwt.HexTerrains.Areas.Jobs Structs CalculateAreaCellsJob Job to calculate the area cells. It fills the multi hash map with Key = area index, values = all cell indexes of that area. CalculateAreaColorMapJob Job to calculate the color map for the areas. CalculateAreasSizeJob Job to calculate the size of each area on the terrain."
  },
  "api/Fwt.HexTerrains.Areas.Systems.CalcHexTerrainAreaCellsSystem.html": {
    "href": "api/Fwt.HexTerrains.Areas.Systems.CalcHexTerrainAreaCellsSystem.html",
    "title": "Class CalcHexTerrainAreaCellsSystem | Hex Terrains",
    "summary": "Class CalcHexTerrainAreaCellsSystem Base class for Systems that calculate area cells (cell indexes collection per area index) Inheritance object ComponentSystemBase SystemBase CalcHexTerrainAreaCellsSystem CalcHexTerrainCountryCellsSystem CalcHexTerrainProvinceCellsSystem Inherited Members SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.OnUpdate() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Areas.Systems Assembly: fwt.hexterrains.dll Syntax public abstract class CalcHexTerrainAreaCellsSystem : SystemBase Methods UpdateData(in Entity, in HexTerrainAreasData) Declaration public virtual void UpdateData(in Entity entity, in HexTerrainAreasData areaData) Parameters Type Name Description Entity entity HexTerrainAreasData areaData Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Areas.Systems.CalcHexTerrainAreaColorsSystem.html": {
    "href": "api/Fwt.HexTerrains.Areas.Systems.CalcHexTerrainAreaColorsSystem.html",
    "title": "Class CalcHexTerrainAreaColorsSystem | Hex Terrains",
    "summary": "Class CalcHexTerrainAreaColorsSystem Base class for systems that calculate the ColorMap for the HexTerrain areas. Inheritance object ComponentSystemBase SystemBase CalcHexTerrainAreaColorsSystem CalcHexTerrainCountryColorsSystem CalcHexTerrainProvinceColorsSystem Inherited Members SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.OnUpdate() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Areas.Systems Assembly: fwt.hexterrains.dll Syntax public abstract class CalcHexTerrainAreaColorsSystem : SystemBase Methods UpdateData(in Entity, in HexTerrainAreasData) Declaration public virtual void UpdateData(in Entity entity, in HexTerrainAreasData areaData) Parameters Type Name Description Entity entity HexTerrainAreasData areaData Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Areas.Systems.CalcHexTerrainAreasDataSystem.html": {
    "href": "api/Fwt.HexTerrains.Areas.Systems.CalcHexTerrainAreasDataSystem.html",
    "title": "Class CalcHexTerrainAreasDataSystem | Hex Terrains",
    "summary": "Class CalcHexTerrainAreasDataSystem Base class for systems that calculate the size of each area on the HexTerrain. Inheritance object ComponentSystemBase SystemBase CalcHexTerrainAreasDataSystem CalcHexTerrainCountriesDataSystem CalcHexTerrainProvincesDataSystem Inherited Members SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.OnUpdate() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Areas.Systems Assembly: fwt.hexterrains.dll Syntax public abstract class CalcHexTerrainAreasDataSystem : SystemBase Methods UpdateData(in Entity, in HexTerrainAreasData) Declaration public virtual void UpdateData(in Entity entity, in HexTerrainAreasData areaData) Parameters Type Name Description Entity entity HexTerrainAreasData areaData Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Areas.Systems.CalcHexTerrainCountriesDataSystem.html": {
    "href": "api/Fwt.HexTerrains.Areas.Systems.CalcHexTerrainCountriesDataSystem.html",
    "title": "Class CalcHexTerrainCountriesDataSystem | Hex Terrains",
    "summary": "Class CalcHexTerrainCountriesDataSystem System that calculates the countries data for the HexTerrain. Inheritance object ComponentSystemBase SystemBase CalcHexTerrainAreasDataSystem CalcHexTerrainCountriesDataSystem Inherited Members CalcHexTerrainAreasDataSystem.UpdateData(in Entity, in HexTerrainAreasData) SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Areas.Systems Assembly: fwt.hexterrains.dll Syntax [UpdateInGroup(typeof(HexTerrainsInitializationGroup))] public class CalcHexTerrainCountriesDataSystem : CalcHexTerrainAreasDataSystem Methods OnCreateForCompiler() Declaration protected override void OnCreateForCompiler() Overrides Unity.Entities.ComponentSystemBase.OnCreateForCompiler() OnUpdate() Implement OnUpdate() to perform the major work of this system. Declaration protected override void OnUpdate() Overrides Unity.Entities.SystemBase.OnUpdate() Remarks By default, the system invokes `OnUpdate()` once every frame on the main thread. To skip OnUpdate if all of the system's [EntityQueries] are empty, use the [RequireMatchingQueriesForUpdateAttribute]. To limit when OnUpdate is invoked, you can specify components that must exist, or queries that match specific Entities. To do this, call Unity.Entities.ComponentSystemBase.RequireForUpdate<T>() or Unity.Entities.ComponentSystemBase.RequireForUpdate(Unity.Entities.EntityQuery) in the system's OnCreate method. For more information, see [ShouldRunSystem]. The [Entities.ForEach] and [Job.WithCode] constructions provide convenient mechanisms for defining jobs. You can also instantiate and schedule an Unity.Entities.IJobChunk instance; you can use the [C# Job System] or you can perform work on the main thread. If you call Unity.Entities.EntityManager methods that perform structural changes on the main thread, be sure to arrange the system order to minimize the performance impact of the resulting [sync points]. Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Areas.Systems.CalcHexTerrainCountryCellsSystem.html": {
    "href": "api/Fwt.HexTerrains.Areas.Systems.CalcHexTerrainCountryCellsSystem.html",
    "title": "Class CalcHexTerrainCountryCellsSystem | Hex Terrains",
    "summary": "Class CalcHexTerrainCountryCellsSystem System that calculates country cells (cell indexes collection per country index) Inheritance object ComponentSystemBase SystemBase CalcHexTerrainAreaCellsSystem CalcHexTerrainCountryCellsSystem Inherited Members CalcHexTerrainAreaCellsSystem.UpdateData(in Entity, in HexTerrainAreasData) SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Areas.Systems Assembly: fwt.hexterrains.dll Syntax [UpdateInGroup(typeof(HexTerrainsInitializationGroup))] public class CalcHexTerrainCountryCellsSystem : CalcHexTerrainAreaCellsSystem Methods OnCreateForCompiler() Declaration protected override void OnCreateForCompiler() Overrides Unity.Entities.ComponentSystemBase.OnCreateForCompiler() OnUpdate() Implement OnUpdate() to perform the major work of this system. Declaration protected override void OnUpdate() Overrides Unity.Entities.SystemBase.OnUpdate() Remarks By default, the system invokes `OnUpdate()` once every frame on the main thread. To skip OnUpdate if all of the system's [EntityQueries] are empty, use the [RequireMatchingQueriesForUpdateAttribute]. To limit when OnUpdate is invoked, you can specify components that must exist, or queries that match specific Entities. To do this, call Unity.Entities.ComponentSystemBase.RequireForUpdate<T>() or Unity.Entities.ComponentSystemBase.RequireForUpdate(Unity.Entities.EntityQuery) in the system's OnCreate method. For more information, see [ShouldRunSystem]. The [Entities.ForEach] and [Job.WithCode] constructions provide convenient mechanisms for defining jobs. You can also instantiate and schedule an Unity.Entities.IJobChunk instance; you can use the [C# Job System] or you can perform work on the main thread. If you call Unity.Entities.EntityManager methods that perform structural changes on the main thread, be sure to arrange the system order to minimize the performance impact of the resulting [sync points]. Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Areas.Systems.CalcHexTerrainCountryColorsSystem.html": {
    "href": "api/Fwt.HexTerrains.Areas.Systems.CalcHexTerrainCountryColorsSystem.html",
    "title": "Class CalcHexTerrainCountryColorsSystem | Hex Terrains",
    "summary": "Class CalcHexTerrainCountryColorsSystem System that calculates the ColorMap for the HexTerrain countries. Inheritance object ComponentSystemBase SystemBase CalcHexTerrainAreaColorsSystem CalcHexTerrainCountryColorsSystem Inherited Members CalcHexTerrainAreaColorsSystem.UpdateData(in Entity, in HexTerrainAreasData) SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Areas.Systems Assembly: fwt.hexterrains.dll Syntax [UpdateInGroup(typeof(HexTerrainsInitializationGroup))] public class CalcHexTerrainCountryColorsSystem : CalcHexTerrainAreaColorsSystem Methods OnCreateForCompiler() Declaration protected override void OnCreateForCompiler() Overrides Unity.Entities.ComponentSystemBase.OnCreateForCompiler() OnUpdate() Implement OnUpdate() to perform the major work of this system. Declaration protected override void OnUpdate() Overrides Unity.Entities.SystemBase.OnUpdate() Remarks By default, the system invokes `OnUpdate()` once every frame on the main thread. To skip OnUpdate if all of the system's [EntityQueries] are empty, use the [RequireMatchingQueriesForUpdateAttribute]. To limit when OnUpdate is invoked, you can specify components that must exist, or queries that match specific Entities. To do this, call Unity.Entities.ComponentSystemBase.RequireForUpdate<T>() or Unity.Entities.ComponentSystemBase.RequireForUpdate(Unity.Entities.EntityQuery) in the system's OnCreate method. For more information, see [ShouldRunSystem]. The [Entities.ForEach] and [Job.WithCode] constructions provide convenient mechanisms for defining jobs. You can also instantiate and schedule an Unity.Entities.IJobChunk instance; you can use the [C# Job System] or you can perform work on the main thread. If you call Unity.Entities.EntityManager methods that perform structural changes on the main thread, be sure to arrange the system order to minimize the performance impact of the resulting [sync points]. Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Areas.Systems.CalcHexTerrainProvinceCellsSystem.html": {
    "href": "api/Fwt.HexTerrains.Areas.Systems.CalcHexTerrainProvinceCellsSystem.html",
    "title": "Class CalcHexTerrainProvinceCellsSystem | Hex Terrains",
    "summary": "Class CalcHexTerrainProvinceCellsSystem System that calculates province cells (cell indexes collection per province index) Inheritance object ComponentSystemBase SystemBase CalcHexTerrainAreaCellsSystem CalcHexTerrainProvinceCellsSystem Inherited Members CalcHexTerrainAreaCellsSystem.UpdateData(in Entity, in HexTerrainAreasData) SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Areas.Systems Assembly: fwt.hexterrains.dll Syntax [UpdateInGroup(typeof(HexTerrainsInitializationGroup))] public class CalcHexTerrainProvinceCellsSystem : CalcHexTerrainAreaCellsSystem Methods OnCreateForCompiler() Declaration protected override void OnCreateForCompiler() Overrides Unity.Entities.ComponentSystemBase.OnCreateForCompiler() OnUpdate() Implement OnUpdate() to perform the major work of this system. Declaration protected override void OnUpdate() Overrides Unity.Entities.SystemBase.OnUpdate() Remarks By default, the system invokes `OnUpdate()` once every frame on the main thread. To skip OnUpdate if all of the system's [EntityQueries] are empty, use the [RequireMatchingQueriesForUpdateAttribute]. To limit when OnUpdate is invoked, you can specify components that must exist, or queries that match specific Entities. To do this, call Unity.Entities.ComponentSystemBase.RequireForUpdate<T>() or Unity.Entities.ComponentSystemBase.RequireForUpdate(Unity.Entities.EntityQuery) in the system's OnCreate method. For more information, see [ShouldRunSystem]. The [Entities.ForEach] and [Job.WithCode] constructions provide convenient mechanisms for defining jobs. You can also instantiate and schedule an Unity.Entities.IJobChunk instance; you can use the [C# Job System] or you can perform work on the main thread. If you call Unity.Entities.EntityManager methods that perform structural changes on the main thread, be sure to arrange the system order to minimize the performance impact of the resulting [sync points]. Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Areas.Systems.CalcHexTerrainProvinceColorsSystem.html": {
    "href": "api/Fwt.HexTerrains.Areas.Systems.CalcHexTerrainProvinceColorsSystem.html",
    "title": "Class CalcHexTerrainProvinceColorsSystem | Hex Terrains",
    "summary": "Class CalcHexTerrainProvinceColorsSystem System that calculates the colors of each province on the HexTerrain. Inheritance object ComponentSystemBase SystemBase CalcHexTerrainAreaColorsSystem CalcHexTerrainProvinceColorsSystem Inherited Members CalcHexTerrainAreaColorsSystem.UpdateData(in Entity, in HexTerrainAreasData) SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Areas.Systems Assembly: fwt.hexterrains.dll Syntax [UpdateInGroup(typeof(HexTerrainsInitializationGroup))] public class CalcHexTerrainProvinceColorsSystem : CalcHexTerrainAreaColorsSystem Methods OnCreateForCompiler() Declaration protected override void OnCreateForCompiler() Overrides Unity.Entities.ComponentSystemBase.OnCreateForCompiler() OnUpdate() Implement OnUpdate() to perform the major work of this system. Declaration protected override void OnUpdate() Overrides Unity.Entities.SystemBase.OnUpdate() Remarks By default, the system invokes `OnUpdate()` once every frame on the main thread. To skip OnUpdate if all of the system's [EntityQueries] are empty, use the [RequireMatchingQueriesForUpdateAttribute]. To limit when OnUpdate is invoked, you can specify components that must exist, or queries that match specific Entities. To do this, call Unity.Entities.ComponentSystemBase.RequireForUpdate<T>() or Unity.Entities.ComponentSystemBase.RequireForUpdate(Unity.Entities.EntityQuery) in the system's OnCreate method. For more information, see [ShouldRunSystem]. The [Entities.ForEach] and [Job.WithCode] constructions provide convenient mechanisms for defining jobs. You can also instantiate and schedule an Unity.Entities.IJobChunk instance; you can use the [C# Job System] or you can perform work on the main thread. If you call Unity.Entities.EntityManager methods that perform structural changes on the main thread, be sure to arrange the system order to minimize the performance impact of the resulting [sync points]. Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Areas.Systems.CalcHexTerrainProvincesDataSystem.html": {
    "href": "api/Fwt.HexTerrains.Areas.Systems.CalcHexTerrainProvincesDataSystem.html",
    "title": "Class CalcHexTerrainProvincesDataSystem | Hex Terrains",
    "summary": "Class CalcHexTerrainProvincesDataSystem System that calculates the size of each province on the HexTerrain. Inheritance object ComponentSystemBase SystemBase CalcHexTerrainAreasDataSystem CalcHexTerrainProvincesDataSystem Inherited Members CalcHexTerrainAreasDataSystem.UpdateData(in Entity, in HexTerrainAreasData) SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Areas.Systems Assembly: fwt.hexterrains.dll Syntax [UpdateInGroup(typeof(HexTerrainsInitializationGroup))] public class CalcHexTerrainProvincesDataSystem : CalcHexTerrainAreasDataSystem Methods OnCreateForCompiler() Declaration protected override void OnCreateForCompiler() Overrides Unity.Entities.ComponentSystemBase.OnCreateForCompiler() OnUpdate() Implement OnUpdate() to perform the major work of this system. Declaration protected override void OnUpdate() Overrides Unity.Entities.SystemBase.OnUpdate() Remarks By default, the system invokes `OnUpdate()` once every frame on the main thread. To skip OnUpdate if all of the system's [EntityQueries] are empty, use the [RequireMatchingQueriesForUpdateAttribute]. To limit when OnUpdate is invoked, you can specify components that must exist, or queries that match specific Entities. To do this, call Unity.Entities.ComponentSystemBase.RequireForUpdate<T>() or Unity.Entities.ComponentSystemBase.RequireForUpdate(Unity.Entities.EntityQuery) in the system's OnCreate method. For more information, see [ShouldRunSystem]. The [Entities.ForEach] and [Job.WithCode] constructions provide convenient mechanisms for defining jobs. You can also instantiate and schedule an Unity.Entities.IJobChunk instance; you can use the [C# Job System] or you can perform work on the main thread. If you call Unity.Entities.EntityManager methods that perform structural changes on the main thread, be sure to arrange the system order to minimize the performance impact of the resulting [sync points]. Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Areas.Systems.CleanupHexTerrainAreasSystem.html": {
    "href": "api/Fwt.HexTerrains.Areas.Systems.CleanupHexTerrainAreasSystem.html",
    "title": "Class CleanupHexTerrainAreasSystem | Hex Terrains",
    "summary": "Class CleanupHexTerrainAreasSystem Base class for systems that clean up HexTerrainAreasData every frame at cleanup stage. Usually the cleanup clears the dirty flags. Inheritance object ComponentSystemBase SystemBase CleanupHexTerrainAreasSystem CleanupHexTerrainCountriesDataSystem CleanupHexTerrainProvincesDataSystem Inherited Members SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.OnUpdate() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Areas.Systems Assembly: fwt.hexterrains.dll Syntax [UpdateInGroup(typeof(HexTerrainsCleanupGroup))] public abstract class CleanupHexTerrainAreasSystem : SystemBase Methods CleanupData(HexTerrainAreasData) Declaration public virtual void CleanupData(HexTerrainAreasData areasData) Parameters Type Name Description HexTerrainAreasData areasData Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Areas.Systems.CleanupHexTerrainCountriesDataSystem.html": {
    "href": "api/Fwt.HexTerrains.Areas.Systems.CleanupHexTerrainCountriesDataSystem.html",
    "title": "Class CleanupHexTerrainCountriesDataSystem | Hex Terrains",
    "summary": "Class CleanupHexTerrainCountriesDataSystem System that cleans up HexTerrainCountriesData every frame at cleanup stage. Usually the cleanup clears the dirty flags. Inheritance object ComponentSystemBase SystemBase CleanupHexTerrainAreasSystem CleanupHexTerrainCountriesDataSystem Inherited Members CleanupHexTerrainAreasSystem.CleanupData(HexTerrainAreasData) SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Areas.Systems Assembly: fwt.hexterrains.dll Syntax [UpdateInGroup(typeof(HexTerrainsCleanupGroup))] public class CleanupHexTerrainCountriesDataSystem : CleanupHexTerrainAreasSystem Methods OnCreateForCompiler() Declaration protected override void OnCreateForCompiler() Overrides Unity.Entities.ComponentSystemBase.OnCreateForCompiler() OnUpdate() Implement OnUpdate() to perform the major work of this system. Declaration protected override void OnUpdate() Overrides Unity.Entities.SystemBase.OnUpdate() Remarks By default, the system invokes `OnUpdate()` once every frame on the main thread. To skip OnUpdate if all of the system's [EntityQueries] are empty, use the [RequireMatchingQueriesForUpdateAttribute]. To limit when OnUpdate is invoked, you can specify components that must exist, or queries that match specific Entities. To do this, call Unity.Entities.ComponentSystemBase.RequireForUpdate<T>() or Unity.Entities.ComponentSystemBase.RequireForUpdate(Unity.Entities.EntityQuery) in the system's OnCreate method. For more information, see [ShouldRunSystem]. The [Entities.ForEach] and [Job.WithCode] constructions provide convenient mechanisms for defining jobs. You can also instantiate and schedule an Unity.Entities.IJobChunk instance; you can use the [C# Job System] or you can perform work on the main thread. If you call Unity.Entities.EntityManager methods that perform structural changes on the main thread, be sure to arrange the system order to minimize the performance impact of the resulting [sync points]. Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Areas.Systems.CleanupHexTerrainProvincesDataSystem.html": {
    "href": "api/Fwt.HexTerrains.Areas.Systems.CleanupHexTerrainProvincesDataSystem.html",
    "title": "Class CleanupHexTerrainProvincesDataSystem | Hex Terrains",
    "summary": "Class CleanupHexTerrainProvincesDataSystem System that cleans up HexTerrainProvincesData every frame at cleanup stage. Usually the cleanup clears the dirty flags. Inheritance object ComponentSystemBase SystemBase CleanupHexTerrainAreasSystem CleanupHexTerrainProvincesDataSystem Inherited Members CleanupHexTerrainAreasSystem.CleanupData(HexTerrainAreasData) SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Areas.Systems Assembly: fwt.hexterrains.dll Syntax [UpdateInGroup(typeof(HexTerrainsCleanupGroup))] public class CleanupHexTerrainProvincesDataSystem : CleanupHexTerrainAreasSystem Methods OnCreateForCompiler() Declaration protected override void OnCreateForCompiler() Overrides Unity.Entities.ComponentSystemBase.OnCreateForCompiler() OnUpdate() Implement OnUpdate() to perform the major work of this system. Declaration protected override void OnUpdate() Overrides Unity.Entities.SystemBase.OnUpdate() Remarks By default, the system invokes `OnUpdate()` once every frame on the main thread. To skip OnUpdate if all of the system's [EntityQueries] are empty, use the [RequireMatchingQueriesForUpdateAttribute]. To limit when OnUpdate is invoked, you can specify components that must exist, or queries that match specific Entities. To do this, call Unity.Entities.ComponentSystemBase.RequireForUpdate<T>() or Unity.Entities.ComponentSystemBase.RequireForUpdate(Unity.Entities.EntityQuery) in the system's OnCreate method. For more information, see [ShouldRunSystem]. The [Entities.ForEach] and [Job.WithCode] constructions provide convenient mechanisms for defining jobs. You can also instantiate and schedule an Unity.Entities.IJobChunk instance; you can use the [C# Job System] or you can perform work on the main thread. If you call Unity.Entities.EntityManager methods that perform structural changes on the main thread, be sure to arrange the system order to minimize the performance impact of the resulting [sync points]. Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Areas.Systems.CreateHexTerrainCountriesDataSystem.html": {
    "href": "api/Fwt.HexTerrains.Areas.Systems.CreateHexTerrainCountriesDataSystem.html",
    "title": "Class CreateHexTerrainCountriesDataSystem | Hex Terrains",
    "summary": "Class CreateHexTerrainCountriesDataSystem System that creates a HexCountriesData component for terrain entities that have CreateHexTerrainCountriesRequest component. CreateHexTerrainCountriesRequest, HexCountriesData Inheritance object ComponentSystemBase SystemBase CreateHexTerrainCountriesDataSystem Inherited Members SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Areas.Systems Assembly: fwt.hexterrains.dll Syntax [UpdateInGroup(typeof(CreateHexTerrainsGroup))] [UpdateAfter(typeof(CreateHexGroundDataSystem))] public class CreateHexTerrainCountriesDataSystem : SystemBase Methods FillWithRandomValues(HexCountriesData, CreateHexTerrainCountriesRequest) Declaration protected void FillWithRandomValues(HexCountriesData data, CreateHexTerrainCountriesRequest request) Parameters Type Name Description HexCountriesData data CreateHexTerrainCountriesRequest request OnCreateForCompiler() Declaration protected override void OnCreateForCompiler() Overrides Unity.Entities.ComponentSystemBase.OnCreateForCompiler() OnUpdate() Implement OnUpdate() to perform the major work of this system. Declaration protected override void OnUpdate() Overrides Unity.Entities.SystemBase.OnUpdate() Remarks By default, the system invokes `OnUpdate()` once every frame on the main thread. To skip OnUpdate if all of the system's [EntityQueries] are empty, use the [RequireMatchingQueriesForUpdateAttribute]. To limit when OnUpdate is invoked, you can specify components that must exist, or queries that match specific Entities. To do this, call Unity.Entities.ComponentSystemBase.RequireForUpdate<T>() or Unity.Entities.ComponentSystemBase.RequireForUpdate(Unity.Entities.EntityQuery) in the system's OnCreate method. For more information, see [ShouldRunSystem]. The [Entities.ForEach] and [Job.WithCode] constructions provide convenient mechanisms for defining jobs. You can also instantiate and schedule an Unity.Entities.IJobChunk instance; you can use the [C# Job System] or you can perform work on the main thread. If you call Unity.Entities.EntityManager methods that perform structural changes on the main thread, be sure to arrange the system order to minimize the performance impact of the resulting [sync points]. Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Areas.Systems.CreateHexTerrainProvincesDataSystem.html": {
    "href": "api/Fwt.HexTerrains.Areas.Systems.CreateHexTerrainProvincesDataSystem.html",
    "title": "Class CreateHexTerrainProvincesDataSystem | Hex Terrains",
    "summary": "Class CreateHexTerrainProvincesDataSystem System that creates a HexProvincesData component for terrain entities that have CreateHexTerrainProvincesRequest component. CreateHexTerrainProvincesRequest, HexProvincesData Inheritance object ComponentSystemBase SystemBase CreateHexTerrainProvincesDataSystem Inherited Members SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Areas.Systems Assembly: fwt.hexterrains.dll Syntax [UpdateInGroup(typeof(CreateHexTerrainsGroup))] [UpdateAfter(typeof(CreateHexGroundDataSystem))] public class CreateHexTerrainProvincesDataSystem : SystemBase Methods FillWithRandomValues(HexProvincesData, CreateHexTerrainProvincesRequest) Declaration protected void FillWithRandomValues(HexProvincesData data, CreateHexTerrainProvincesRequest request) Parameters Type Name Description HexProvincesData data CreateHexTerrainProvincesRequest request OnCreateForCompiler() Declaration protected override void OnCreateForCompiler() Overrides Unity.Entities.ComponentSystemBase.OnCreateForCompiler() OnUpdate() Implement OnUpdate() to perform the major work of this system. Declaration protected override void OnUpdate() Overrides Unity.Entities.SystemBase.OnUpdate() Remarks By default, the system invokes `OnUpdate()` once every frame on the main thread. To skip OnUpdate if all of the system's [EntityQueries] are empty, use the [RequireMatchingQueriesForUpdateAttribute]. To limit when OnUpdate is invoked, you can specify components that must exist, or queries that match specific Entities. To do this, call Unity.Entities.ComponentSystemBase.RequireForUpdate<T>() or Unity.Entities.ComponentSystemBase.RequireForUpdate(Unity.Entities.EntityQuery) in the system's OnCreate method. For more information, see [ShouldRunSystem]. The [Entities.ForEach] and [Job.WithCode] constructions provide convenient mechanisms for defining jobs. You can also instantiate and schedule an Unity.Entities.IJobChunk instance; you can use the [C# Job System] or you can perform work on the main thread. If you call Unity.Entities.EntityManager methods that perform structural changes on the main thread, be sure to arrange the system order to minimize the performance impact of the resulting [sync points]. Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Areas.Systems.html": {
    "href": "api/Fwt.HexTerrains.Areas.Systems.html",
    "title": "Namespace Fwt.HexTerrains.Areas.Systems | Hex Terrains",
    "summary": "Namespace Fwt.HexTerrains.Areas.Systems Classes CalcHexTerrainAreaCellsSystem Base class for Systems that calculate area cells (cell indexes collection per area index) CalcHexTerrainAreaColorsSystem Base class for systems that calculate the ColorMap for the HexTerrain areas. CalcHexTerrainAreasDataSystem Base class for systems that calculate the size of each area on the HexTerrain. CalcHexTerrainCountriesDataSystem System that calculates the countries data for the HexTerrain. CalcHexTerrainCountryCellsSystem System that calculates country cells (cell indexes collection per country index) CalcHexTerrainCountryColorsSystem System that calculates the ColorMap for the HexTerrain countries. CalcHexTerrainProvinceCellsSystem System that calculates province cells (cell indexes collection per province index) CalcHexTerrainProvinceColorsSystem System that calculates the colors of each province on the HexTerrain. CalcHexTerrainProvincesDataSystem System that calculates the size of each province on the HexTerrain. CleanupHexTerrainAreasSystem Base class for systems that clean up HexTerrainAreasData every frame at cleanup stage. Usually the cleanup clears the dirty flags. CleanupHexTerrainCountriesDataSystem System that cleans up HexTerrainCountriesData every frame at cleanup stage. Usually the cleanup clears the dirty flags. CleanupHexTerrainProvincesDataSystem System that cleans up HexTerrainProvincesData every frame at cleanup stage. Usually the cleanup clears the dirty flags. CreateHexTerrainCountriesDataSystem System that creates a HexCountriesData component for terrain entities that have CreateHexTerrainCountriesRequest component. CreateHexTerrainCountriesRequest, HexCountriesData CreateHexTerrainProvincesDataSystem System that creates a HexProvincesData component for terrain entities that have CreateHexTerrainProvincesRequest component. CreateHexTerrainProvincesRequest, HexProvincesData"
  },
  "api/Fwt.HexTerrains.Areas.html": {
    "href": "api/Fwt.HexTerrains.Areas.html",
    "title": "Namespace Fwt.HexTerrains.Areas | Hex Terrains",
    "summary": "Namespace Fwt.HexTerrains.Areas Classes HexTerrainAreasAuthoring Base class for authoring components of hex terrain areas. HexTerrainAreasBaker<TAuthoring> HexTerrainCountriesAuthoring Authoring component for hex terrain countries. HexTerrainCountriesBaker HexTerrainProvincesAuthoring Authoring component for hex terrain provinces. HexTerrainProvincesBaker"
  },
  "api/Fwt.HexTerrains.Brushes.CreateHexTerrainBrushViewRequest.html": {
    "href": "api/Fwt.HexTerrains.Brushes.CreateHexTerrainBrushViewRequest.html",
    "title": "Struct CreateHexTerrainBrushViewRequest | Hex Terrains",
    "summary": "Struct CreateHexTerrainBrushViewRequest Implements IComponentData IQueryTypeParameter Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.Brushes Assembly: fwt.hexterrains.dll Syntax public struct CreateHexTerrainBrushViewRequest : IComponentData, IQueryTypeParameter Fields Prefab Declaration public UnityObjectRef<GameObject> Prefab Field Value Type Description UnityObjectRef<GameObject> Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Brushes.CreateHexTerrainBrushViewSystem.html": {
    "href": "api/Fwt.HexTerrains.Brushes.CreateHexTerrainBrushViewSystem.html",
    "title": "Class CreateHexTerrainBrushViewSystem | Hex Terrains",
    "summary": "Class CreateHexTerrainBrushViewSystem Inheritance object ComponentSystemBase SystemBase CreateHexTerrainBrushViewSystem Inherited Members SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Brushes Assembly: fwt.hexterrains.dll Syntax [UpdateInGroup(typeof(CreateHexTerrainsGroup))] public class CreateHexTerrainBrushViewSystem : SystemBase Methods OnCreateForCompiler() Declaration protected override void OnCreateForCompiler() Overrides Unity.Entities.ComponentSystemBase.OnCreateForCompiler() OnUpdate() Implement OnUpdate() to perform the major work of this system. Declaration protected override void OnUpdate() Overrides Unity.Entities.SystemBase.OnUpdate() Remarks By default, the system invokes `OnUpdate()` once every frame on the main thread. To skip OnUpdate if all of the system's [EntityQueries] are empty, use the [RequireMatchingQueriesForUpdateAttribute]. To limit when OnUpdate is invoked, you can specify components that must exist, or queries that match specific Entities. To do this, call Unity.Entities.ComponentSystemBase.RequireForUpdate<T>() or Unity.Entities.ComponentSystemBase.RequireForUpdate(Unity.Entities.EntityQuery) in the system's OnCreate method. For more information, see [ShouldRunSystem]. The [Entities.ForEach] and [Job.WithCode] constructions provide convenient mechanisms for defining jobs. You can also instantiate and schedule an Unity.Entities.IJobChunk instance; you can use the [C# Job System] or you can perform work on the main thread. If you call Unity.Entities.EntityManager methods that perform structural changes on the main thread, be sure to arrange the system order to minimize the performance impact of the resulting [sync points]. Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Brushes.DestroyHexTerrainBrushViewSystem.html": {
    "href": "api/Fwt.HexTerrains.Brushes.DestroyHexTerrainBrushViewSystem.html",
    "title": "Class DestroyHexTerrainBrushViewSystem | Hex Terrains",
    "summary": "Class DestroyHexTerrainBrushViewSystem Inheritance object ComponentSystemBase SystemBase DestroyHexTerrainBrushViewSystem Inherited Members SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Brushes Assembly: fwt.hexterrains.dll Syntax [UpdateInGroup(typeof(HexTerrainsRenderGroup))] public class DestroyHexTerrainBrushViewSystem : SystemBase Methods OnCreateForCompiler() Declaration protected override void OnCreateForCompiler() Overrides Unity.Entities.ComponentSystemBase.OnCreateForCompiler() OnUpdate() Implement OnUpdate() to perform the major work of this system. Declaration protected override void OnUpdate() Overrides Unity.Entities.SystemBase.OnUpdate() Remarks By default, the system invokes `OnUpdate()` once every frame on the main thread. To skip OnUpdate if all of the system's [EntityQueries] are empty, use the [RequireMatchingQueriesForUpdateAttribute]. To limit when OnUpdate is invoked, you can specify components that must exist, or queries that match specific Entities. To do this, call Unity.Entities.ComponentSystemBase.RequireForUpdate<T>() or Unity.Entities.ComponentSystemBase.RequireForUpdate(Unity.Entities.EntityQuery) in the system's OnCreate method. For more information, see [ShouldRunSystem]. The [Entities.ForEach] and [Job.WithCode] constructions provide convenient mechanisms for defining jobs. You can also instantiate and schedule an Unity.Entities.IJobChunk instance; you can use the [C# Job System] or you can perform work on the main thread. If you call Unity.Entities.EntityManager methods that perform structural changes on the main thread, be sure to arrange the system order to minimize the performance impact of the resulting [sync points]. Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Brushes.HexTerrainBrush.html": {
    "href": "api/Fwt.HexTerrains.Brushes.HexTerrainBrush.html",
    "title": "Struct HexTerrainBrush | Hex Terrains",
    "summary": "Struct HexTerrainBrush Brush data. Contains brush size, opacity, color and visibility. Implements IComponentData IQueryTypeParameter Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.Brushes Assembly: fwt.hexterrains.dll Syntax public struct HexTerrainBrush : IComponentData, IQueryTypeParameter Fields Color Declaration public Color32 Color Field Value Type Description Color32 IsResizable Declaration public bool IsResizable Field Value Type Description bool IsVisible Declaration public bool IsVisible Field Value Type Description bool Opacity Declaration public float Opacity Field Value Type Description float Size Declaration public int Size Field Value Type Description int Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Brushes.HexTerrainBrushAuthoring.html": {
    "href": "api/Fwt.HexTerrains.Brushes.HexTerrainBrushAuthoring.html",
    "title": "Class HexTerrainBrushAuthoring | Hex Terrains",
    "summary": "Class HexTerrainBrushAuthoring Inheritance object Object Component Behaviour MonoBehaviour HexTerrainBrushAuthoring Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.Brushes Assembly: fwt.hexterrains.dll Syntax public class HexTerrainBrushAuthoring : MonoBehaviour Fields Color Declaration public Color32 Color Field Value Type Description Color32 IsCreateView Declaration public bool IsCreateView Field Value Type Description bool IsResizable Declaration public bool IsResizable Field Value Type Description bool IsVisible Declaration public bool IsVisible Field Value Type Description bool Opacity Declaration public float Opacity Field Value Type Description float Size Declaration public int Size Field Value Type Description int ViewPrefab Declaration public HexTerrainBrushView ViewPrefab Field Value Type Description HexTerrainBrushView Extension Methods Extensions_UnityObject.SmartDestroy<TObject>(TObject) Extensions_UnityObject.SmartDisableGameObject<TObject>(TObject) Extensions_UnityObject.SmartEnableGameObject<TObject>(TObject) HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Brushes.HexTerrainBrushBaker.html": {
    "href": "api/Fwt.HexTerrains.Brushes.HexTerrainBrushBaker.html",
    "title": "Class HexTerrainBrushBaker | Hex Terrains",
    "summary": "Class HexTerrainBrushBaker Inheritance object IBaker Baker<HexTerrainBrushAuthoring> HexTerrainBrushBaker Inherited Members IBaker.GetSceneGUID() IBaker.GetComponent<T>() IBaker.GetComponent<T>(Component) IBaker.GetComponent<T>(GameObject) IBaker.GetComponents<T>(List<T>) IBaker.GetComponents<T>(Component, List<T>) IBaker.GetComponents<T>(GameObject, List<T>) IBaker.GetComponents<T>() IBaker.GetComponents<T>(Component) IBaker.GetComponents<T>(GameObject) IBaker.GetComponentInParent<T>() IBaker.GetComponentInParent<T>(Component) IBaker.GetComponentInParent<T>(GameObject) IBaker.GetComponentsInParent<T>(List<T>) IBaker.GetComponentsInParent<T>(Component, List<T>) IBaker.GetComponentsInParent<T>(GameObject, List<T>) IBaker.GetComponentsInParent<T>() IBaker.GetComponentsInParent<T>(Component) IBaker.GetComponentsInParent<T>(GameObject) IBaker.GetComponentInChildren<T>() IBaker.GetComponentInChildren<T>(Component) IBaker.GetComponentInChildren<T>(GameObject) IBaker.GetComponentsInChildren<T>(List<T>) IBaker.GetComponentsInChildren<T>(Component, List<T>) IBaker.GetComponentsInChildren<T>(GameObject, List<T>) IBaker.GetComponentsInChildren<T>() IBaker.GetComponentsInChildren<T>(Component) IBaker.GetComponentsInChildren<T>(GameObject) IBaker.GetParent() IBaker.GetParent(Component) IBaker.GetParent(GameObject) IBaker.GetParents() IBaker.GetParents(Component) IBaker.GetParents(GameObject) IBaker.GetParents(List<GameObject>) IBaker.GetParents(Component, List<GameObject>) IBaker.GetParents(GameObject, List<GameObject>) IBaker.GetChild(int) IBaker.GetChild(Component, int) IBaker.GetChild(GameObject, int) IBaker.GetChildren(bool) IBaker.GetChildren(Component, bool) IBaker.GetChildren(GameObject, bool) IBaker.GetChildren(List<GameObject>, bool) IBaker.GetChildren(Component, List<GameObject>, bool) IBaker.GetChildren(GameObject, List<GameObject>, bool) IBaker.GetChildCount() IBaker.GetChildCount(Component) IBaker.GetChildCount(GameObject) IBaker.GetName() IBaker.GetName(Component) IBaker.GetName(GameObject) IBaker.GetLayer() IBaker.GetLayer(Component) IBaker.GetLayer(GameObject) IBaker.GetTag() IBaker.GetTag(Component) IBaker.GetTag(GameObject) IBaker.GetEntity() IBaker.GetEntity(GameObject) IBaker.GetEntity(Component) IBaker.GetEntity(TransformUsageFlags) IBaker.GetEntity(GameObject, TransformUsageFlags) IBaker.GetEntity(Component, TransformUsageFlags) IBaker.GetEntityWithoutDependency() IBaker.IsActive() IBaker.IsActive(Component) IBaker.IsActive(GameObject) IBaker.IsActiveAndEnabled() IBaker.IsActiveAndEnabled(Component) IBaker.IsStatic() IBaker.IsStatic(Component) IBaker.IsStatic(GameObject) IBaker.IsClient() IBaker.IsServer() IBaker.DependsOn<T>(T) IBaker.DependsOnComponentInParent<T>() IBaker.DependsOnComponentInParent<T>(Component) IBaker.DependsOnComponentInParent<T>(GameObject) IBaker.DependsOnComponentsInParent<T>() IBaker.DependsOnComponentsInParent<T>(Component) IBaker.DependsOnComponentsInParent<T>(GameObject) IBaker.DependsOnComponentInChildren<T>() IBaker.DependsOnComponentInChildren<T>(Component) IBaker.DependsOnComponentInChildren<T>(GameObject) IBaker.DependsOnComponentsInChildren<T>() IBaker.DependsOnComponentsInChildren<T>(GameObject) IBaker.DependsOnComponentsInChildren<T>(Component) IBaker.DependsOnLightBaking() IBaker.AddBlobAsset<T>(ref BlobAssetReference<T>, out Hash128) IBaker.AddBlobAssetWithCustomHash<T>(ref BlobAssetReference<T>, Hash128) IBaker.TryGetBlobAssetReference<T>(Hash128, out BlobAssetReference<T>) IBaker.AddComponent<T>() IBaker.AddComponent<T>(in T) IBaker.AddComponent<T>(Entity) IBaker.AddComponent<T>(Entity, in T) IBaker.AddComponent(ComponentType) IBaker.AddComponent(Entity, ComponentType) IBaker.AddComponent(in ComponentTypeSet) IBaker.AddComponent(Entity, in ComponentTypeSet) IBaker.AddComponentObject<T>(T) IBaker.AddComponentObject<T>(Entity, T) IBaker.AddSharedComponentManaged<T>(T) IBaker.AddSharedComponentManaged<T>(Entity, T) IBaker.AddSharedComponent<T>(T) IBaker.AddSharedComponent<T>(Entity, T) IBaker.AddBuffer<T>() IBaker.AddBuffer<T>(Entity) IBaker.SetComponent<T>(Entity, in T) IBaker.SetComponentEnabled<T>(Entity, bool) IBaker.SetComponentEnabled<T>(bool) IBaker.SetSharedComponentManaged<T>(Entity, in T) IBaker.SetSharedComponent<T>(Entity, in T) IBaker.SetBuffer<T>() IBaker.SetBuffer<T>(Entity) IBaker.AppendToBuffer<T>(T) IBaker.AppendToBuffer<T>(Entity, T) IBaker.CreateAdditionalEntity() IBaker.CreateAdditionalEntity(TransformUsageFlags, bool, string) IBaker.CreateAdditionalEntities(NativeArray<Entity>, TransformUsageFlags, bool) IBaker.RegisterPrefabForBaking(GameObject) IBaker.AddTransformUsageFlags(TransformUsageFlags) IBaker.AddTransformUsageFlags(Entity, TransformUsageFlags) IBaker.IsBakingForEditor() IBaker.GetDotsSettings() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Brushes Assembly: fwt.hexterrains.dll Syntax public class HexTerrainBrushBaker : Baker<HexTerrainBrushAuthoring> Methods Bake(HexTerrainBrushAuthoring) Called in the baking process to bake the authoring component Declaration public override void Bake(HexTerrainBrushAuthoring authoring) Parameters Type Name Description HexTerrainBrushAuthoring authoring The authoring component to bake Overrides Baker<HexTerrainBrushAuthoring>.Bake(HexTerrainBrushAuthoring) Remarks This method will be called for every instance of TAuthoringType in order to bake that instance. Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Brushes.HexTerrainBrushView.html": {
    "href": "api/Fwt.HexTerrains.Brushes.HexTerrainBrushView.html",
    "title": "Class HexTerrainBrushView | Hex Terrains",
    "summary": "Class HexTerrainBrushView Inheritance object Object Component Behaviour MonoBehaviour HexTerrainBrushView Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.Brushes Assembly: fwt.hexterrains.dll Syntax public class HexTerrainBrushView : MonoBehaviour Fields BaseRotationAngle Declaration public float BaseRotationAngle Field Value Type Description float CursorView Declaration public HexTerrainCursorViewBase CursorView Field Value Type Description HexTerrainCursorViewBase Methods SetBrushColor(Color32) Declaration public virtual bool SetBrushColor(Color32 color) Parameters Type Name Description Color32 color Returns Type Description bool SetBrushOpacity(float) Declaration public virtual bool SetBrushOpacity(float opacity) Parameters Type Name Description float opacity Returns Type Description bool SetBrushPosition(float2) Declaration public virtual bool SetBrushPosition(float2 position) Parameters Type Name Description float2 position Returns Type Description bool SetBrushSize(int) Declaration public virtual bool SetBrushSize(int brushSize) Parameters Type Name Description int brushSize Returns Type Description bool SetIsVisible(bool) Declaration public virtual bool SetIsVisible(bool isVisible) Parameters Type Name Description bool isVisible Returns Type Description bool SetTerrainSettings(HexTerrainSettings) Declaration public virtual bool SetTerrainSettings(HexTerrainSettings settings) Parameters Type Name Description HexTerrainSettings settings Returns Type Description bool UpdateBrush() Declaration public virtual void UpdateBrush() Extension Methods Extensions_UnityObject.SmartDestroy<TObject>(TObject) Extensions_UnityObject.SmartDisableGameObject<TObject>(TObject) Extensions_UnityObject.SmartEnableGameObject<TObject>(TObject) HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Brushes.HexTerrainBrushViewCache.html": {
    "href": "api/Fwt.HexTerrains.Brushes.HexTerrainBrushViewCache.html",
    "title": "Struct HexTerrainBrushViewCache | Hex Terrains",
    "summary": "Struct HexTerrainBrushViewCache Implements ICleanupComponentData IComponentData IQueryTypeParameter Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.Brushes Assembly: fwt.hexterrains.dll Syntax public struct HexTerrainBrushViewCache : ICleanupComponentData, IComponentData, IQueryTypeParameter Fields Instance Declaration public UnityObjectRef<HexTerrainBrushView> Instance Field Value Type Description UnityObjectRef<HexTerrainBrushView> Implements Unity.Entities.ICleanupComponentData Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Brushes.HexTerrainCursorViewBase.html": {
    "href": "api/Fwt.HexTerrains.Brushes.HexTerrainCursorViewBase.html",
    "title": "Class HexTerrainCursorViewBase | Hex Terrains",
    "summary": "Class HexTerrainCursorViewBase Base class for the HexTerrainCursorView. This is a game object that is used to visualize the brush on the terrain. Expected to use a Projector to project the brush material on the terrain. Inheritance object Object Component Behaviour MonoBehaviour HexTerrainCursorViewBase HexTerrainCursorView Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.Brushes Assembly: fwt.hexterrains.dll Syntax public abstract class HexTerrainCursorViewBase : MonoBehaviour Fields BaseRotationAngle Base rotation angle of the brush in degrees (initial rotation of the brush). If brush size is more than 1, the brush is rotated by 30 degrees (for visual purposes). Because the hexagon that covers an area of hexagons is rotated by 30 degrees relative to the single hexagon. Declaration public float BaseRotationAngle Field Value Type Description float SizeMultiplier Size of the brush will be multiplied by this value Declaration public int SizeMultiplier Field Value Type Description int _brushColor The brush color. Declaration [SerializeField] protected Color32 _brushColor Field Value Type Description Color32 _brushOpacity The brush opacity (0-1). Declaration [SerializeField] protected int _brushOpacity Field Value Type Description int _brushSize The brush size in cells. Declaration [SerializeField] protected int _brushSize Field Value Type Description int _isResizable The brush is resizable if this value is true. Declaration [SerializeField] protected bool _isResizable Field Value Type Description bool _terrainSettings Settings of the terrain this brush is painted on. Declaration [SerializeField] protected HexTerrainSettings _terrainSettings Field Value Type Description HexTerrainSettings Methods GetBrushColor() Returns the brush color. Declaration public virtual Color32 GetBrushColor() Returns Type Description Color32 Color of the brush GetBrushMaterial() Returns the brush material (used to set color and opacity). Declaration public virtual Material GetBrushMaterial() Returns Type Description Material Material from the brush GetBrushOpacity() Returns the brush opacity (0-1). Declaration public virtual float GetBrushOpacity() Returns Type Description float Opacity of the brush (0-1) GetBrushSize() Returns the size of the brush in cells. Declaration public virtual int GetBrushSize() Returns Type Description int GetIsResizable() Returns true if the brush is resizable, otherwise - false Declaration public virtual bool GetIsResizable() Returns Type Description bool True if brush is resizable, othewise - false SetBrushColor(Color32) Sets the brush color. Declaration public virtual bool SetBrushColor(Color32 color) Parameters Type Name Description Color32 color Returns Type Description bool true if value wa set, otherwise - false SetBrushMaterial(Material) Returns true if value has been changed Declaration public virtual bool SetBrushMaterial(Material material) Parameters Type Name Description Material material Returns Type Description bool SetBrushOpacity(float) Sets the brush opacity (0-1). Declaration public virtual bool SetBrushOpacity(float opacity) Parameters Type Name Description float opacity Returns Type Description bool true if value wa set, otherwise - false SetBrushSize(int) Returns true if value has been changed Declaration public virtual bool SetBrushSize(int brushSize) Parameters Type Name Description int brushSize Returns Type Description bool SetIsResizable(bool) Sets the brush resizable property. Declaration public virtual bool SetIsResizable(bool isResizable) Parameters Type Name Description bool isResizable new value for IsResizable brush Returns Type Description bool true if data was set SetTerrainSettings(HexTerrainSettings) Returns the settings of the terrain this brush is painted on. Declaration public virtual bool SetTerrainSettings(HexTerrainSettings settings) Parameters Type Name Description HexTerrainSettings settings Returns Type Description bool true if value wa set, otherwise - false Extension Methods Extensions_UnityObject.SmartDestroy<TObject>(TObject) Extensions_UnityObject.SmartDisableGameObject<TObject>(TObject) Extensions_UnityObject.SmartEnableGameObject<TObject>(TObject) HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Brushes.UpdateHexTerrainBrushViewSystem.html": {
    "href": "api/Fwt.HexTerrains.Brushes.UpdateHexTerrainBrushViewSystem.html",
    "title": "Class UpdateHexTerrainBrushViewSystem | Hex Terrains",
    "summary": "Class UpdateHexTerrainBrushViewSystem Inheritance object ComponentSystemBase SystemBase UpdateHexTerrainBrushViewSystem Inherited Members SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Brushes Assembly: fwt.hexterrains.dll Syntax [UpdateInGroup(typeof(HexTerrainsRenderGroup))] public class UpdateHexTerrainBrushViewSystem : SystemBase Methods OnCreateForCompiler() Declaration protected override void OnCreateForCompiler() Overrides Unity.Entities.ComponentSystemBase.OnCreateForCompiler() OnUpdate() Implement OnUpdate() to perform the major work of this system. Declaration protected override void OnUpdate() Overrides Unity.Entities.SystemBase.OnUpdate() Remarks By default, the system invokes `OnUpdate()` once every frame on the main thread. To skip OnUpdate if all of the system's [EntityQueries] are empty, use the [RequireMatchingQueriesForUpdateAttribute]. To limit when OnUpdate is invoked, you can specify components that must exist, or queries that match specific Entities. To do this, call Unity.Entities.ComponentSystemBase.RequireForUpdate<T>() or Unity.Entities.ComponentSystemBase.RequireForUpdate(Unity.Entities.EntityQuery) in the system's OnCreate method. For more information, see [ShouldRunSystem]. The [Entities.ForEach] and [Job.WithCode] constructions provide convenient mechanisms for defining jobs. You can also instantiate and schedule an Unity.Entities.IJobChunk instance; you can use the [C# Job System] or you can perform work on the main thread. If you call Unity.Entities.EntityManager methods that perform structural changes on the main thread, be sure to arrange the system order to minimize the performance impact of the resulting [sync points]. Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Brushes.html": {
    "href": "api/Fwt.HexTerrains.Brushes.html",
    "title": "Namespace Fwt.HexTerrains.Brushes | Hex Terrains",
    "summary": "Namespace Fwt.HexTerrains.Brushes Classes CreateHexTerrainBrushViewSystem DestroyHexTerrainBrushViewSystem HexTerrainBrushAuthoring HexTerrainBrushBaker HexTerrainBrushView HexTerrainCursorViewBase Base class for the HexTerrainCursorView. This is a game object that is used to visualize the brush on the terrain. Expected to use a Projector to project the brush material on the terrain. UpdateHexTerrainBrushViewSystem Structs CreateHexTerrainBrushViewRequest HexTerrainBrush Brush data. Contains brush size, opacity, color and visibility. HexTerrainBrushViewCache"
  },
  "api/Fwt.HexTerrains.Cameras.CameraControllerAuthoring.html": {
    "href": "api/Fwt.HexTerrains.Cameras.CameraControllerAuthoring.html",
    "title": "Class CameraControllerAuthoring | Hex Terrains",
    "summary": "Class CameraControllerAuthoring Inheritance object Object Component Behaviour MonoBehaviour CameraControllerAuthoring Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.Cameras Assembly: fwt.hexterrains.dll Syntax public class CameraControllerAuthoring : MonoBehaviour Fields AccelerationKey Declaration public KeyCode AccelerationKey Field Value Type Description KeyCode AccelerationMultiplier Declaration public float AccelerationMultiplier Field Value Type Description float IsConnectedHorizontally Declaration public bool IsConnectedHorizontally Field Value Type Description bool IsConnectedVertically Declaration public bool IsConnectedVertically Field Value Type Description bool IsFindCameraControllerComponentOnScene Declaration public bool IsFindCameraControllerComponentOnScene Field Value Type Description bool MoveDownKey Declaration public KeyCode MoveDownKey Field Value Type Description KeyCode MoveLeftKey Declaration public KeyCode MoveLeftKey Field Value Type Description KeyCode MoveRightKey Declaration public KeyCode MoveRightKey Field Value Type Description KeyCode MoveUpKey Declaration public KeyCode MoveUpKey Field Value Type Description KeyCode MovementSpeed Declaration public float MovementSpeed Field Value Type Description float Extension Methods Extensions_UnityObject.SmartDestroy<TObject>(TObject) Extensions_UnityObject.SmartDisableGameObject<TObject>(TObject) Extensions_UnityObject.SmartEnableGameObject<TObject>(TObject) HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Cameras.CameraControllerBaker.html": {
    "href": "api/Fwt.HexTerrains.Cameras.CameraControllerBaker.html",
    "title": "Class CameraControllerBaker | Hex Terrains",
    "summary": "Class CameraControllerBaker Inheritance object IBaker Baker<CameraControllerAuthoring> CameraControllerBaker Inherited Members IBaker.GetSceneGUID() IBaker.GetComponent<T>() IBaker.GetComponent<T>(Component) IBaker.GetComponent<T>(GameObject) IBaker.GetComponents<T>(List<T>) IBaker.GetComponents<T>(Component, List<T>) IBaker.GetComponents<T>(GameObject, List<T>) IBaker.GetComponents<T>() IBaker.GetComponents<T>(Component) IBaker.GetComponents<T>(GameObject) IBaker.GetComponentInParent<T>() IBaker.GetComponentInParent<T>(Component) IBaker.GetComponentInParent<T>(GameObject) IBaker.GetComponentsInParent<T>(List<T>) IBaker.GetComponentsInParent<T>(Component, List<T>) IBaker.GetComponentsInParent<T>(GameObject, List<T>) IBaker.GetComponentsInParent<T>() IBaker.GetComponentsInParent<T>(Component) IBaker.GetComponentsInParent<T>(GameObject) IBaker.GetComponentInChildren<T>() IBaker.GetComponentInChildren<T>(Component) IBaker.GetComponentInChildren<T>(GameObject) IBaker.GetComponentsInChildren<T>(List<T>) IBaker.GetComponentsInChildren<T>(Component, List<T>) IBaker.GetComponentsInChildren<T>(GameObject, List<T>) IBaker.GetComponentsInChildren<T>() IBaker.GetComponentsInChildren<T>(Component) IBaker.GetComponentsInChildren<T>(GameObject) IBaker.GetParent() IBaker.GetParent(Component) IBaker.GetParent(GameObject) IBaker.GetParents() IBaker.GetParents(Component) IBaker.GetParents(GameObject) IBaker.GetParents(List<GameObject>) IBaker.GetParents(Component, List<GameObject>) IBaker.GetParents(GameObject, List<GameObject>) IBaker.GetChild(int) IBaker.GetChild(Component, int) IBaker.GetChild(GameObject, int) IBaker.GetChildren(bool) IBaker.GetChildren(Component, bool) IBaker.GetChildren(GameObject, bool) IBaker.GetChildren(List<GameObject>, bool) IBaker.GetChildren(Component, List<GameObject>, bool) IBaker.GetChildren(GameObject, List<GameObject>, bool) IBaker.GetChildCount() IBaker.GetChildCount(Component) IBaker.GetChildCount(GameObject) IBaker.GetName() IBaker.GetName(Component) IBaker.GetName(GameObject) IBaker.GetLayer() IBaker.GetLayer(Component) IBaker.GetLayer(GameObject) IBaker.GetTag() IBaker.GetTag(Component) IBaker.GetTag(GameObject) IBaker.GetEntity() IBaker.GetEntity(GameObject) IBaker.GetEntity(Component) IBaker.GetEntity(TransformUsageFlags) IBaker.GetEntity(GameObject, TransformUsageFlags) IBaker.GetEntity(Component, TransformUsageFlags) IBaker.GetEntityWithoutDependency() IBaker.IsActive() IBaker.IsActive(Component) IBaker.IsActive(GameObject) IBaker.IsActiveAndEnabled() IBaker.IsActiveAndEnabled(Component) IBaker.IsStatic() IBaker.IsStatic(Component) IBaker.IsStatic(GameObject) IBaker.IsClient() IBaker.IsServer() IBaker.DependsOn<T>(T) IBaker.DependsOnComponentInParent<T>() IBaker.DependsOnComponentInParent<T>(Component) IBaker.DependsOnComponentInParent<T>(GameObject) IBaker.DependsOnComponentsInParent<T>() IBaker.DependsOnComponentsInParent<T>(Component) IBaker.DependsOnComponentsInParent<T>(GameObject) IBaker.DependsOnComponentInChildren<T>() IBaker.DependsOnComponentInChildren<T>(Component) IBaker.DependsOnComponentInChildren<T>(GameObject) IBaker.DependsOnComponentsInChildren<T>() IBaker.DependsOnComponentsInChildren<T>(GameObject) IBaker.DependsOnComponentsInChildren<T>(Component) IBaker.DependsOnLightBaking() IBaker.AddBlobAsset<T>(ref BlobAssetReference<T>, out Hash128) IBaker.AddBlobAssetWithCustomHash<T>(ref BlobAssetReference<T>, Hash128) IBaker.TryGetBlobAssetReference<T>(Hash128, out BlobAssetReference<T>) IBaker.AddComponent<T>() IBaker.AddComponent<T>(in T) IBaker.AddComponent<T>(Entity) IBaker.AddComponent<T>(Entity, in T) IBaker.AddComponent(ComponentType) IBaker.AddComponent(Entity, ComponentType) IBaker.AddComponent(in ComponentTypeSet) IBaker.AddComponent(Entity, in ComponentTypeSet) IBaker.AddComponentObject<T>(T) IBaker.AddComponentObject<T>(Entity, T) IBaker.AddSharedComponentManaged<T>(T) IBaker.AddSharedComponentManaged<T>(Entity, T) IBaker.AddSharedComponent<T>(T) IBaker.AddSharedComponent<T>(Entity, T) IBaker.AddBuffer<T>() IBaker.AddBuffer<T>(Entity) IBaker.SetComponent<T>(Entity, in T) IBaker.SetComponentEnabled<T>(Entity, bool) IBaker.SetComponentEnabled<T>(bool) IBaker.SetSharedComponentManaged<T>(Entity, in T) IBaker.SetSharedComponent<T>(Entity, in T) IBaker.SetBuffer<T>() IBaker.SetBuffer<T>(Entity) IBaker.AppendToBuffer<T>(T) IBaker.AppendToBuffer<T>(Entity, T) IBaker.CreateAdditionalEntity() IBaker.CreateAdditionalEntity(TransformUsageFlags, bool, string) IBaker.CreateAdditionalEntities(NativeArray<Entity>, TransformUsageFlags, bool) IBaker.RegisterPrefabForBaking(GameObject) IBaker.AddTransformUsageFlags(TransformUsageFlags) IBaker.AddTransformUsageFlags(Entity, TransformUsageFlags) IBaker.IsBakingForEditor() IBaker.GetDotsSettings() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Cameras Assembly: fwt.hexterrains.dll Syntax public class CameraControllerBaker : Baker<CameraControllerAuthoring> Methods Bake(CameraControllerAuthoring) Called in the baking process to bake the authoring component Declaration public override void Bake(CameraControllerAuthoring authoring) Parameters Type Name Description CameraControllerAuthoring authoring The authoring component to bake Overrides Baker<CameraControllerAuthoring>.Bake(CameraControllerAuthoring) Remarks This method will be called for every instance of TAuthoringType in order to bake that instance. Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Cameras.CameraControllerComponentBase.html": {
    "href": "api/Fwt.HexTerrains.Cameras.CameraControllerComponentBase.html",
    "title": "Class CameraControllerComponentBase | Hex Terrains",
    "summary": "Class CameraControllerComponentBase Inheritance object Object Component Behaviour MonoBehaviour CameraControllerComponentBase SamplesCameraControllerComponent Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.Cameras Assembly: fwt.hexterrains.dll Syntax public abstract class CameraControllerComponentBase : MonoBehaviour Fields AccelerationKey Declaration public KeyCode AccelerationKey Field Value Type Description KeyCode AccelerationMultiplier Declaration public float AccelerationMultiplier Field Value Type Description float CurrentZoom Declaration public float CurrentZoom Field Value Type Description float MaxZoomOffset Declaration public Vector3 MaxZoomOffset Field Value Type Description Vector3 MinZoomOffset Declaration public Vector3 MinZoomOffset Field Value Type Description Vector3 ZoomSpeed Declaration public float ZoomSpeed Field Value Type Description float Properties CurrentZoomOffset Declaration public Vector3 CurrentZoomOffset { get; } Property Value Type Description Vector3 Methods SetTarget(Transform) Declaration public abstract void SetTarget(Transform targetTransform) Parameters Type Name Description Transform targetTransform UpdatePosition() Declaration public abstract void UpdatePosition() Extension Methods Extensions_UnityObject.SmartDestroy<TObject>(TObject) Extensions_UnityObject.SmartDisableGameObject<TObject>(TObject) Extensions_UnityObject.SmartEnableGameObject<TObject>(TObject) HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Cameras.Data.CameraControllerTarget.html": {
    "href": "api/Fwt.HexTerrains.Cameras.Data.CameraControllerTarget.html",
    "title": "Struct CameraControllerTarget | Hex Terrains",
    "summary": "Struct CameraControllerTarget Implements ICleanupComponentData IComponentData IQueryTypeParameter Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.Cameras.Data Assembly: fwt.hexterrains.dll Syntax public struct CameraControllerTarget : ICleanupComponentData, IComponentData, IQueryTypeParameter Fields AccelerationKey Declaration public KeyCode AccelerationKey Field Value Type Description KeyCode AccelerationMultiplier Declaration public float AccelerationMultiplier Field Value Type Description float CameraControllerComponent Declaration public UnityObjectRef<CameraControllerComponentBase> CameraControllerComponent Field Value Type Description UnityObjectRef<CameraControllerComponentBase> IsConnectedHorizontally Declaration public bool IsConnectedHorizontally Field Value Type Description bool IsConnectedVertically Declaration public bool IsConnectedVertically Field Value Type Description bool LocalPosition Declaration public float2 LocalPosition Field Value Type Description float2 MoveDownKey Declaration public KeyCode MoveDownKey Field Value Type Description KeyCode MoveLeftKey Declaration public KeyCode MoveLeftKey Field Value Type Description KeyCode MoveRightKey Declaration public KeyCode MoveRightKey Field Value Type Description KeyCode MoveUpKey Declaration public KeyCode MoveUpKey Field Value Type Description KeyCode MovementSpeed Declaration public float MovementSpeed Field Value Type Description float Target Declaration public UnityObjectRef<Transform> Target Field Value Type Description UnityObjectRef<Transform> Implements Unity.Entities.ICleanupComponentData Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Cameras.Data.CreateCameraControllerRequest.html": {
    "href": "api/Fwt.HexTerrains.Cameras.Data.CreateCameraControllerRequest.html",
    "title": "Struct CreateCameraControllerRequest | Hex Terrains",
    "summary": "Struct CreateCameraControllerRequest Implements IComponentData IQueryTypeParameter Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.Cameras.Data Assembly: fwt.hexterrains.dll Syntax public struct CreateCameraControllerRequest : IComponentData, IQueryTypeParameter Fields AccelerationKey Declaration public KeyCode AccelerationKey Field Value Type Description KeyCode AccelerationMultiplier Declaration public float AccelerationMultiplier Field Value Type Description float IsConnectedHorizontally Declaration public bool IsConnectedHorizontally Field Value Type Description bool IsConnectedVertically Declaration public bool IsConnectedVertically Field Value Type Description bool IsFindCameraControllerComponentOnScene Declaration public bool IsFindCameraControllerComponentOnScene Field Value Type Description bool MoveDownKey Declaration public KeyCode MoveDownKey Field Value Type Description KeyCode MoveLeftKey Declaration public KeyCode MoveLeftKey Field Value Type Description KeyCode MoveRightKey Declaration public KeyCode MoveRightKey Field Value Type Description KeyCode MoveUpKey Declaration public KeyCode MoveUpKey Field Value Type Description KeyCode MovementSpeed Declaration public float MovementSpeed Field Value Type Description float Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Cameras.Data.html": {
    "href": "api/Fwt.HexTerrains.Cameras.Data.html",
    "title": "Namespace Fwt.HexTerrains.Cameras.Data | Hex Terrains",
    "summary": "Namespace Fwt.HexTerrains.Cameras.Data Structs CameraControllerTarget CreateCameraControllerRequest"
  },
  "api/Fwt.HexTerrains.Cameras.Systems.CreateCameraControllerSystem.html": {
    "href": "api/Fwt.HexTerrains.Cameras.Systems.CreateCameraControllerSystem.html",
    "title": "Class CreateCameraControllerSystem | Hex Terrains",
    "summary": "Class CreateCameraControllerSystem Inheritance object ComponentSystemBase SystemBase CreateCameraControllerSystem Inherited Members SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Cameras.Systems Assembly: fwt.hexterrains.dll Syntax [UpdateInGroup(typeof(HexTerrainsInitializationGroup))] [UpdateBefore(typeof(CalcChunkVisibilitySystem))] public class CreateCameraControllerSystem : SystemBase Methods OnCreateForCompiler() Declaration protected override void OnCreateForCompiler() Overrides Unity.Entities.ComponentSystemBase.OnCreateForCompiler() OnUpdate() Implement OnUpdate() to perform the major work of this system. Declaration protected override void OnUpdate() Overrides Unity.Entities.SystemBase.OnUpdate() Remarks By default, the system invokes `OnUpdate()` once every frame on the main thread. To skip OnUpdate if all of the system's [EntityQueries] are empty, use the [RequireMatchingQueriesForUpdateAttribute]. To limit when OnUpdate is invoked, you can specify components that must exist, or queries that match specific Entities. To do this, call Unity.Entities.ComponentSystemBase.RequireForUpdate<T>() or Unity.Entities.ComponentSystemBase.RequireForUpdate(Unity.Entities.EntityQuery) in the system's OnCreate method. For more information, see [ShouldRunSystem]. The [Entities.ForEach] and [Job.WithCode] constructions provide convenient mechanisms for defining jobs. You can also instantiate and schedule an Unity.Entities.IJobChunk instance; you can use the [C# Job System] or you can perform work on the main thread. If you call Unity.Entities.EntityManager methods that perform structural changes on the main thread, be sure to arrange the system order to minimize the performance impact of the resulting [sync points]. Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Cameras.Systems.DestroyCameraControllerSystem.html": {
    "href": "api/Fwt.HexTerrains.Cameras.Systems.DestroyCameraControllerSystem.html",
    "title": "Class DestroyCameraControllerSystem | Hex Terrains",
    "summary": "Class DestroyCameraControllerSystem Inheritance object ComponentSystemBase SystemBase DestroyCameraControllerSystem Inherited Members SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Cameras.Systems Assembly: fwt.hexterrains.dll Syntax [UpdateInGroup(typeof(HexTerrainsCleanupGroup))] public class DestroyCameraControllerSystem : SystemBase Methods OnCreateForCompiler() Declaration protected override void OnCreateForCompiler() Overrides Unity.Entities.ComponentSystemBase.OnCreateForCompiler() OnUpdate() Implement OnUpdate() to perform the major work of this system. Declaration protected override void OnUpdate() Overrides Unity.Entities.SystemBase.OnUpdate() Remarks By default, the system invokes `OnUpdate()` once every frame on the main thread. To skip OnUpdate if all of the system's [EntityQueries] are empty, use the [RequireMatchingQueriesForUpdateAttribute]. To limit when OnUpdate is invoked, you can specify components that must exist, or queries that match specific Entities. To do this, call Unity.Entities.ComponentSystemBase.RequireForUpdate<T>() or Unity.Entities.ComponentSystemBase.RequireForUpdate(Unity.Entities.EntityQuery) in the system's OnCreate method. For more information, see [ShouldRunSystem]. The [Entities.ForEach] and [Job.WithCode] constructions provide convenient mechanisms for defining jobs. You can also instantiate and schedule an Unity.Entities.IJobChunk instance; you can use the [C# Job System] or you can perform work on the main thread. If you call Unity.Entities.EntityManager methods that perform structural changes on the main thread, be sure to arrange the system order to minimize the performance impact of the resulting [sync points]. Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Cameras.Systems.UpdateCameraControllerSystemBase.html": {
    "href": "api/Fwt.HexTerrains.Cameras.Systems.UpdateCameraControllerSystemBase.html",
    "title": "Class UpdateCameraControllerSystemBase | Hex Terrains",
    "summary": "Class UpdateCameraControllerSystemBase Inheritance object ComponentSystemBase SystemBase UpdateCameraControllerSystemBase UpdateSamplesCameraControllerSystem Inherited Members SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Cameras.Systems Assembly: fwt.hexterrains.dll Syntax [UpdateInGroup(typeof(HexTerrainsInitializationGroup))] [UpdateAfter(typeof(CreateCameraControllerSystem))] [UpdateBefore(typeof(CalcChunkVisibilitySystem))] public abstract class UpdateCameraControllerSystemBase : SystemBase Methods GetMinimapScreen(Entity) Declaration public abstract IMinimapScreen GetMinimapScreen(Entity terrainEntity) Parameters Type Name Description Entity terrainEntity Returns Type Description IMinimapScreen OnCreateForCompiler() Declaration protected override void OnCreateForCompiler() Overrides Unity.Entities.ComponentSystemBase.OnCreateForCompiler() OnUpdate() Implement OnUpdate() to perform the major work of this system. Declaration protected override void OnUpdate() Overrides Unity.Entities.SystemBase.OnUpdate() Remarks By default, the system invokes `OnUpdate()` once every frame on the main thread. To skip OnUpdate if all of the system's [EntityQueries] are empty, use the [RequireMatchingQueriesForUpdateAttribute]. To limit when OnUpdate is invoked, you can specify components that must exist, or queries that match specific Entities. To do this, call Unity.Entities.ComponentSystemBase.RequireForUpdate<T>() or Unity.Entities.ComponentSystemBase.RequireForUpdate(Unity.Entities.EntityQuery) in the system's OnCreate method. For more information, see [ShouldRunSystem]. The [Entities.ForEach] and [Job.WithCode] constructions provide convenient mechanisms for defining jobs. You can also instantiate and schedule an Unity.Entities.IJobChunk instance; you can use the [C# Job System] or you can perform work on the main thread. If you call Unity.Entities.EntityManager methods that perform structural changes on the main thread, be sure to arrange the system order to minimize the performance impact of the resulting [sync points]. UpdateMinimapScreen(Entity, CameraControllerTarget, HexTerrainSettings) Declaration protected virtual void UpdateMinimapScreen(Entity terrainEntity, CameraControllerTarget target, HexTerrainSettings terrainSettings) Parameters Type Name Description Entity terrainEntity CameraControllerTarget target HexTerrainSettings terrainSettings Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Cameras.Systems.html": {
    "href": "api/Fwt.HexTerrains.Cameras.Systems.html",
    "title": "Namespace Fwt.HexTerrains.Cameras.Systems | Hex Terrains",
    "summary": "Namespace Fwt.HexTerrains.Cameras.Systems Classes CreateCameraControllerSystem DestroyCameraControllerSystem UpdateCameraControllerSystemBase"
  },
  "api/Fwt.HexTerrains.Cameras.html": {
    "href": "api/Fwt.HexTerrains.Cameras.html",
    "title": "Namespace Fwt.HexTerrains.Cameras | Hex Terrains",
    "summary": "Namespace Fwt.HexTerrains.Cameras Classes CameraControllerAuthoring CameraControllerBaker CameraControllerComponentBase"
  },
  "api/Fwt.HexTerrains.CellEntities.CellEntityPropsDataAuthoring.html": {
    "href": "api/Fwt.HexTerrains.CellEntities.CellEntityPropsDataAuthoring.html",
    "title": "Class CellEntityPropsDataAuthoring | Hex Terrains",
    "summary": "Class CellEntityPropsDataAuthoring CellEntity props HexTerrain layer authoring component. Allows to add a CellEntity Props data layer on the terrain. Inheritance object Object Component Behaviour MonoBehaviour HexCellEntityDataAuthoring CellEntityPropsDataAuthoring Inherited Members HexCellEntityDataAuthoring.ItemConfigs MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.CellEntities Assembly: fwt.hexterrains.dll Syntax public class CellEntityPropsDataAuthoring : HexCellEntityDataAuthoring Fields ColorMapTextureIndex Index of the ColorTexture to copy colors from the ColorMap. Declaration [Tooltip(\"Index of the ColorTexture to copy colors from the ColorMap.\")] public int ColorMapTextureIndex Field Value Type Description int IsFillWithRandomData If true, the terrain will be filled with random data. Declaration [Tooltip(\"If true, the terrain will be filled with random data.\")] public bool IsFillWithRandomData Field Value Type Description bool MaxRandomPropIndex Maximum index of the random prop terrain to be filled with. Declaration [Tooltip(\"Maximum index of the random prop terrain to be filled with.\")] public int MaxRandomPropIndex Field Value Type Description int MinRandomPropIndex Minimum index of the random prop terrain to be filled with. Declaration [Tooltip(\"Minimum index of the random prop terrain to be filled with.\")] public int MinRandomPropIndex Field Value Type Description int Extension Methods Extensions_UnityObject.SmartDestroy<TObject>(TObject) Extensions_UnityObject.SmartDisableGameObject<TObject>(TObject) Extensions_UnityObject.SmartEnableGameObject<TObject>(TObject) HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.CellEntities.CellEntityPropsDataBaker.html": {
    "href": "api/Fwt.HexTerrains.CellEntities.CellEntityPropsDataBaker.html",
    "title": "Class CellEntityPropsDataBaker | Hex Terrains",
    "summary": "Class CellEntityPropsDataBaker Inheritance object IBaker Baker<CellEntityPropsDataAuthoring> HexCellItemsDataBaker<CellEntityPropsDataAuthoring> CellEntityPropsDataBaker Inherited Members IBaker.GetSceneGUID() IBaker.GetComponent<T>() IBaker.GetComponent<T>(Component) IBaker.GetComponent<T>(GameObject) IBaker.GetComponents<T>(List<T>) IBaker.GetComponents<T>(Component, List<T>) IBaker.GetComponents<T>(GameObject, List<T>) IBaker.GetComponents<T>() IBaker.GetComponents<T>(Component) IBaker.GetComponents<T>(GameObject) IBaker.GetComponentInParent<T>() IBaker.GetComponentInParent<T>(Component) IBaker.GetComponentInParent<T>(GameObject) IBaker.GetComponentsInParent<T>(List<T>) IBaker.GetComponentsInParent<T>(Component, List<T>) IBaker.GetComponentsInParent<T>(GameObject, List<T>) IBaker.GetComponentsInParent<T>() IBaker.GetComponentsInParent<T>(Component) IBaker.GetComponentsInParent<T>(GameObject) IBaker.GetComponentInChildren<T>() IBaker.GetComponentInChildren<T>(Component) IBaker.GetComponentInChildren<T>(GameObject) IBaker.GetComponentsInChildren<T>(List<T>) IBaker.GetComponentsInChildren<T>(Component, List<T>) IBaker.GetComponentsInChildren<T>(GameObject, List<T>) IBaker.GetComponentsInChildren<T>() IBaker.GetComponentsInChildren<T>(Component) IBaker.GetComponentsInChildren<T>(GameObject) IBaker.GetParent() IBaker.GetParent(Component) IBaker.GetParent(GameObject) IBaker.GetParents() IBaker.GetParents(Component) IBaker.GetParents(GameObject) IBaker.GetParents(List<GameObject>) IBaker.GetParents(Component, List<GameObject>) IBaker.GetParents(GameObject, List<GameObject>) IBaker.GetChild(int) IBaker.GetChild(Component, int) IBaker.GetChild(GameObject, int) IBaker.GetChildren(bool) IBaker.GetChildren(Component, bool) IBaker.GetChildren(GameObject, bool) IBaker.GetChildren(List<GameObject>, bool) IBaker.GetChildren(Component, List<GameObject>, bool) IBaker.GetChildren(GameObject, List<GameObject>, bool) IBaker.GetChildCount() IBaker.GetChildCount(Component) IBaker.GetChildCount(GameObject) IBaker.GetName() IBaker.GetName(Component) IBaker.GetName(GameObject) IBaker.GetLayer() IBaker.GetLayer(Component) IBaker.GetLayer(GameObject) IBaker.GetTag() IBaker.GetTag(Component) IBaker.GetTag(GameObject) IBaker.GetEntity() IBaker.GetEntity(GameObject) IBaker.GetEntity(Component) IBaker.GetEntity(TransformUsageFlags) IBaker.GetEntity(GameObject, TransformUsageFlags) IBaker.GetEntity(Component, TransformUsageFlags) IBaker.GetEntityWithoutDependency() IBaker.IsActive() IBaker.IsActive(Component) IBaker.IsActive(GameObject) IBaker.IsActiveAndEnabled() IBaker.IsActiveAndEnabled(Component) IBaker.IsStatic() IBaker.IsStatic(Component) IBaker.IsStatic(GameObject) IBaker.IsClient() IBaker.IsServer() IBaker.DependsOn<T>(T) IBaker.DependsOnComponentInParent<T>() IBaker.DependsOnComponentInParent<T>(Component) IBaker.DependsOnComponentInParent<T>(GameObject) IBaker.DependsOnComponentsInParent<T>() IBaker.DependsOnComponentsInParent<T>(Component) IBaker.DependsOnComponentsInParent<T>(GameObject) IBaker.DependsOnComponentInChildren<T>() IBaker.DependsOnComponentInChildren<T>(Component) IBaker.DependsOnComponentInChildren<T>(GameObject) IBaker.DependsOnComponentsInChildren<T>() IBaker.DependsOnComponentsInChildren<T>(GameObject) IBaker.DependsOnComponentsInChildren<T>(Component) IBaker.DependsOnLightBaking() IBaker.AddBlobAsset<T>(ref BlobAssetReference<T>, out Hash128) IBaker.AddBlobAssetWithCustomHash<T>(ref BlobAssetReference<T>, Hash128) IBaker.TryGetBlobAssetReference<T>(Hash128, out BlobAssetReference<T>) IBaker.AddComponent<T>() IBaker.AddComponent<T>(in T) IBaker.AddComponent<T>(Entity) IBaker.AddComponent<T>(Entity, in T) IBaker.AddComponent(ComponentType) IBaker.AddComponent(Entity, ComponentType) IBaker.AddComponent(in ComponentTypeSet) IBaker.AddComponent(Entity, in ComponentTypeSet) IBaker.AddComponentObject<T>(T) IBaker.AddComponentObject<T>(Entity, T) IBaker.AddSharedComponentManaged<T>(T) IBaker.AddSharedComponentManaged<T>(Entity, T) IBaker.AddSharedComponent<T>(T) IBaker.AddSharedComponent<T>(Entity, T) IBaker.AddBuffer<T>() IBaker.AddBuffer<T>(Entity) IBaker.SetComponent<T>(Entity, in T) IBaker.SetComponentEnabled<T>(Entity, bool) IBaker.SetComponentEnabled<T>(bool) IBaker.SetSharedComponentManaged<T>(Entity, in T) IBaker.SetSharedComponent<T>(Entity, in T) IBaker.SetBuffer<T>() IBaker.SetBuffer<T>(Entity) IBaker.AppendToBuffer<T>(T) IBaker.AppendToBuffer<T>(Entity, T) IBaker.CreateAdditionalEntity() IBaker.CreateAdditionalEntity(TransformUsageFlags, bool, string) IBaker.CreateAdditionalEntities(NativeArray<Entity>, TransformUsageFlags, bool) IBaker.RegisterPrefabForBaking(GameObject) IBaker.AddTransformUsageFlags(TransformUsageFlags) IBaker.AddTransformUsageFlags(Entity, TransformUsageFlags) IBaker.IsBakingForEditor() IBaker.GetDotsSettings() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.CellEntities Assembly: fwt.hexterrains.dll Syntax public class CellEntityPropsDataBaker : HexCellItemsDataBaker<CellEntityPropsDataAuthoring> Methods Bake(CellEntityPropsDataAuthoring) Called in the baking process to bake the authoring component Declaration public override void Bake(CellEntityPropsDataAuthoring authoring) Parameters Type Name Description CellEntityPropsDataAuthoring authoring The authoring component to bake Overrides HexCellItemsDataBaker<CellEntityPropsDataAuthoring>.Bake(CellEntityPropsDataAuthoring) Remarks This method will be called for every instance of TAuthoringType in order to bake that instance. Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.CellEntities.Data.CellEntitiesData.html": {
    "href": "api/Fwt.HexTerrains.CellEntities.Data.CellEntitiesData.html",
    "title": "Class CellEntitiesData | Hex Terrains",
    "summary": "Class CellEntitiesData Base class for HexTerrain layers that contain an Entity per cell. Inheritance object CellEntitiesData CellEntityPropsData Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.CellEntities.Data Assembly: fwt.hexterrains.dll Syntax public abstract class CellEntitiesData : IDisposable Fields CellEntities Data layer for storing a CellEntity per cell Declaration public HexCellEntityDataLayer CellEntities Field Value Type Description HexCellEntityDataLayer CellEntityViews Data layer for storing a CellEntityView (Entity instances) per cell Declaration public HexCellEntityViewDataLayer CellEntityViews Field Value Type Description HexCellEntityViewDataLayer CellTransforms Data layer for storing a CellTransform per cell (taken from the HexSurfaceData layer) Declaration public CellTransformDataLayer CellTransforms Field Value Type Description CellTransformDataLayer EntitiesColorMap Data layer for storing a Color per cell Declaration public CellColorsDataLayer EntitiesColorMap Field Value Type Description CellColorsDataLayer EntityManager Cached EntityManager used to destroy CellEntity instances when the terrain is destroyed or resized Declaration public EntityManager EntityManager Field Value Type Description EntityManager ItemConfigs List of configs for every possible CellEntity index Declaration public NativeList<HexCellEntityConfig> ItemConfigs Field Value Type Description NativeList<HexCellEntityConfig> SetChunkIndexCommandBuffer CommandBuffer that holds commands for updating the CellEntity instances (entities) Declaration public EntityCommandBuffer SetChunkIndexCommandBuffer Field Value Type Description EntityCommandBuffer SetChunkIndexCommandBufferDependency Job handle for the job that updates chunk index of every CellEntity instance Declaration public JobHandle SetChunkIndexCommandBufferDependency Field Value Type Description JobHandle Properties ColorMapTextureIndex Index of the texture in the list of ColorMapTextures. Used externally in systems. Systems read this value to know which texture to fill with colors from EntitiesColorMap data layer EntitiesColorMap. That texture is expected to be used in materials or/and UI like minimap. Declaration public int ColorMapTextureIndex { get; set; } Property Value Type Description int Settings Settings of the Terrain this layer is attached to Declaration public HexTerrainSettings Settings { get; protected set; } Property Value Type Description HexTerrainSettings Methods Cleanup() Every frame there is a cleanup stage. This function is called. Usually used to clean the dirty flags. Declaration public virtual void Cleanup() CleanupAsync() Async version of Cleanup() Cleanup() Difference between regular Cleanup() is that it schedules jobs that clean up data layers, so you don't have to wait for the results and can continue working. Every frame there is a cleanup stage. This function is called. Usually used to clean the dirty flags. Declaration public virtual void CleanupAsync() CompleteAllJobs() Completes all jobs that are scheduled for this layer. Declaration public virtual void CompleteAllJobs() Dispose() Declaration public virtual void Dispose() GetCellEntity(int) Gets the CellEntity value from the cell at the given index. Declaration public virtual CellEntity? GetCellEntity(int cellIndex) Parameters Type Name Description int cellIndex cell index where to get data from Returns Type Description CellEntity? CellEntity if found, otherwise - null Init(HexTerrainSettings) Initializes/Reinitializes the CellEntities data. Declaration public virtual void Init(HexTerrainSettings settings) Parameters Type Name Description HexTerrainSettings settings new terrain settings Init(HexTerrainSettings, NativeArray<HexCellEntityConfig>) Initializes/Reinitializes the cell entities data. Calls InitCellEntitiesConfigs() internally to copy the color palette from the given array InitCellEntitiesConfigs(NativeArray<HexCellEntityConfig>). Only copies data from the copyItemConfigsFrom array, does not change or cache, so it is safe to dispose it after this call. Declaration public virtual void Init(HexTerrainSettings settings, NativeArray<HexCellEntityConfig> copyItemConfigsFrom) Parameters Type Name Description HexTerrainSettings settings new terrain settings NativeArray<HexCellEntityConfig> copyItemConfigsFrom array of colors per CellEntity index to copy a ItemConfigs from Init(HexTerrainSettings, EntityManager) Initializes/Reinitializes the CellEntities data. Declaration public virtual void Init(HexTerrainSettings settings, EntityManager entityManager) Parameters Type Name Description HexTerrainSettings settings new terrain settings EntityManager entityManager EntityManager used to destroy CellEntities instances when the terrain is destroyed or resized InitCellEntitiesConfigs(NativeArray<HexCellEntityConfig>) Copies an ItemConfigs from the given array. Does not change or cache the array, so it is safe to dispose it after this call. copyFrom array is expected to have the CellEntity indexes length, so there is one config per possible CellEntity index. CellEntity.Index == index in copyFrom array. Declaration public void InitCellEntitiesConfigs(NativeArray<HexCellEntityConfig> copyFrom) Parameters Type Name Description NativeArray<HexCellEntityConfig> copyFrom array of configs to copy into the ItemConfigs Resize(int2) Resizes the CellEntities data. Calls Init() method to reinitialize the CellEntities data. Declaration public virtual void Resize(int2 terrainSize) Parameters Type Name Description int2 terrainSize SetAllCellsEntity(CellEntity) Sets the CellEntity value to all cells in the layer. Declaration public virtual bool SetAllCellsEntity(CellEntity value) Parameters Type Name Description CellEntity value value to set to every cell Returns Type Description bool true if data was set, otherwise - false SetAllDirty(bool) Sets the dirty flag for all the data layers. If isDirty is true, all data layers will be marked as dirty and will be recalculated. If isDirty is false, all data layers will be marked as clean and will not be recalculated. Declaration public virtual void SetAllDirty(bool isDirty) Parameters Type Name Description bool isDirty SetCellEntity(int, CellEntity) Sets the CellEntity value to the cell at the given index. Declaration public virtual bool SetCellEntity(int cellIndex, CellEntity item) Parameters Type Name Description int cellIndex cell index of the cell to set data to CellEntity item data to set into the cell at cellIndex index Returns Type Description bool true if data was set, otherwise - false Implements IDisposable Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.CellEntities.Data.CellEntity.html": {
    "href": "api/Fwt.HexTerrains.CellEntities.Data.CellEntity.html",
    "title": "Struct CellEntity | Hex Terrains",
    "summary": "Struct CellEntity Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.CellEntities.Data Assembly: fwt.hexterrains.dll Syntax [Serializable] public struct CellEntity Fields Index Declaration public ushort Index Field Value Type Description ushort State Declaration public byte State Field Value Type Description byte Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.CellEntities.Data.CellEntityPropsData.html": {
    "href": "api/Fwt.HexTerrains.CellEntities.Data.CellEntityPropsData.html",
    "title": "Class CellEntityPropsData | Hex Terrains",
    "summary": "Class CellEntityPropsData HexTerrain layer that contains an Entity per cell (entity props). Inheritance object CellEntitiesData CellEntityPropsData Implements IComponentData IQueryTypeParameter IDisposable Inherited Members CellEntitiesData.Settings CellEntitiesData.CellEntities CellEntitiesData.EntitiesColorMap CellEntitiesData.CellEntityViews CellEntitiesData.CellTransforms CellEntitiesData.ItemConfigs CellEntitiesData.EntityManager CellEntitiesData.SetChunkIndexCommandBuffer CellEntitiesData.SetChunkIndexCommandBufferDependency CellEntitiesData.ColorMapTextureIndex CellEntitiesData.Init(HexTerrainSettings, NativeArray<HexCellEntityConfig>) CellEntitiesData.Init(HexTerrainSettings, EntityManager) CellEntitiesData.Init(HexTerrainSettings) CellEntitiesData.Resize(int2) CellEntitiesData.CompleteAllJobs() CellEntitiesData.InitCellEntitiesConfigs(NativeArray<HexCellEntityConfig>) CellEntitiesData.GetCellEntity(int) CellEntitiesData.SetCellEntity(int, CellEntity) CellEntitiesData.SetAllCellsEntity(CellEntity) CellEntitiesData.SetAllDirty(bool) CellEntitiesData.Cleanup() CellEntitiesData.CleanupAsync() CellEntitiesData.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.CellEntities.Data Assembly: fwt.hexterrains.dll Syntax public class CellEntityPropsData : CellEntitiesData, IComponentData, IQueryTypeParameter, IDisposable Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter IDisposable Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.CellEntities.Data.HexCellEntityConfig.html": {
    "href": "api/Fwt.HexTerrains.CellEntities.Data.HexCellEntityConfig.html",
    "title": "Struct HexCellEntityConfig | Hex Terrains",
    "summary": "Struct HexCellEntityConfig Implements IBufferElementData Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.CellEntities.Data Assembly: fwt.hexterrains.dll Syntax public struct HexCellEntityConfig : IBufferElementData Fields Index Declaration public int Index Field Value Type Description int Settings Declaration public HexCellEntitySettings Settings Field Value Type Description HexCellEntitySettings Implements Unity.Entities.IBufferElementData Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.CellEntities.Data.HexCellEntitySettings.html": {
    "href": "api/Fwt.HexTerrains.CellEntities.Data.HexCellEntitySettings.html",
    "title": "Struct HexCellEntitySettings | Hex Terrains",
    "summary": "Struct HexCellEntitySettings Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.CellEntities.Data Assembly: fwt.hexterrains.dll Syntax [Serializable] public struct HexCellEntitySettings Fields Color Declaration public Color32 Color Field Value Type Description Color32 Prefabs Items of view prefabs for this structure. The same structure can be displayed using different views depending on structure amount in a cell (see StatePerPrefab) Declaration public FixedList16<Entity> Prefabs Field Value Type Description FixedList16<Entity> StatePerPrefab Items of State value of structure for prefab with corresponding index. For instance, this list contains 2 items (0, 1), and States contains 2 items: 0 = for when structure is in 0 State; 1 = for when structure is in 1 State; So if in the structure is in State = 0, this means we will display this resource using the first prefab from this list Declaration public FixedList16<byte> StatePerPrefab Field Value Type Description FixedList16<byte> Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.CellEntities.Data.HexCellEntityView.html": {
    "href": "api/Fwt.HexTerrains.CellEntities.Data.HexCellEntityView.html",
    "title": "Struct HexCellEntityView | Hex Terrains",
    "summary": "Struct HexCellEntityView Implements IEquatable<HexCellEntityView> Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.CellEntities.Data Assembly: fwt.hexterrains.dll Syntax [Serializable] public struct HexCellEntityView : IEquatable<HexCellEntityView> Fields Instance Declaration public Entity Instance Field Value Type Description Entity Prefab Declaration public Entity Prefab Field Value Type Description Entity Methods Equals(HexCellEntityView) Declaration public readonly bool Equals(HexCellEntityView other) Parameters Type Name Description HexCellEntityView other Returns Type Description bool Implements IEquatable<T> Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.CellEntities.Data.html": {
    "href": "api/Fwt.HexTerrains.CellEntities.Data.html",
    "title": "Namespace Fwt.HexTerrains.CellEntities.Data | Hex Terrains",
    "summary": "Namespace Fwt.HexTerrains.CellEntities.Data Classes CellEntitiesData Base class for HexTerrain layers that contain an Entity per cell. CellEntityPropsData HexTerrain layer that contains an Entity per cell (entity props). Structs CellEntity HexCellEntityConfig HexCellEntitySettings HexCellEntityView"
  },
  "api/Fwt.HexTerrains.CellEntities.DataLayers.HexCellEntityDataLayer.html": {
    "href": "api/Fwt.HexTerrains.CellEntities.DataLayers.HexCellEntityDataLayer.html",
    "title": "Class HexCellEntityDataLayer | Hex Terrains",
    "summary": "Class HexCellEntityDataLayer Inheritance object DataLayer ChunkedDataLayer NativeListChunkedDataLayer<CellEntity> HexTerrainNativeListChunkedDataLayer<CellEntity> HexCellEntityDataLayer Implements IDisposable ICommitChanges IListDataLayer<CellEntity> Inherited Members HexTerrainNativeListChunkedDataLayer<CellEntity>._settings HexTerrainNativeListChunkedDataLayer<CellEntity>.Settings HexTerrainNativeListChunkedDataLayer<CellEntity>.CellsGridSize HexTerrainNativeListChunkedDataLayer<CellEntity>.ChunkGridSize HexTerrainNativeListChunkedDataLayer<CellEntity>.ChunkSize HexTerrainNativeListChunkedDataLayer<CellEntity>.IsConnectedHorizontally HexTerrainNativeListChunkedDataLayer<CellEntity>.IsConnectedVertically HexTerrainNativeListChunkedDataLayer<CellEntity>.Init(int, HexTerrainSettings) NativeListChunkedDataLayer<CellEntity>._data NativeListChunkedDataLayer<CellEntity>.Data NativeListChunkedDataLayer<CellEntity>.Length NativeListChunkedDataLayer<CellEntity>.Init(int) NativeListChunkedDataLayer<CellEntity>.GetData(int) NativeListChunkedDataLayer<CellEntity>.SetData(int, CellEntity) NativeListChunkedDataLayer<CellEntity>.SetData(CellEntity[]) NativeListChunkedDataLayer<CellEntity>.FillData(CellEntity) NativeListChunkedDataLayer<CellEntity>.TryGetData(int, out CellEntity) NativeListChunkedDataLayer<CellEntity>.TrySetData(int, CellEntity) NativeListChunkedDataLayer<CellEntity>.DisposeAllItems() NativeListChunkedDataLayer<CellEntity>.DisposeExcessItems(int) NativeListChunkedDataLayer<CellEntity>.DisposeDataItem(CellEntity) NativeListChunkedDataLayer<CellEntity>.Dispose() ChunkedDataLayer.ChunksCount ChunkedDataLayer.ChunkDirtyGrid ChunkedDataLayer.DirtyChunks ChunkedDataLayer.SetCellDirty(int) ChunkedDataLayer.SetCellDirty(int, bool) ChunkedDataLayer.GetIsChunkDirty(int) ChunkedDataLayer.SetChunkDirty(int, bool) ChunkedDataLayer.SetAllChunksDirty(bool) ChunkedDataLayer.SetAllChunksDirtyAsync(bool, JobHandle) ChunkedDataLayer.SetAllChunksDirty() ChunkedDataLayer.ClearAllChunksDirty() ChunkedDataLayer.MergeChunkDirtyGrids(ChunkedDataLayer, JobHandle) ChunkedDataLayer.MergeChunkDirtyGrids(ChunkedDataLayer, ChunkedDataLayer, JobHandle) ChunkedDataLayer.MergeChunkDirtyGrids(ChunkedDataLayer, ChunkedDataLayer, ChunkedDataLayer, JobHandle) ChunkedDataLayer.MergeChunkDirtyGrids(ChunkedDataLayer, ChunkedDataLayer, ChunkedDataLayer, ChunkedDataLayer, JobHandle) ChunkedDataLayer.GetChunkIndexByCellIndex(int) ChunkedDataLayer.GetChunkCoord(int2) ChunkedDataLayer.GetChunkCoord(int) ChunkedDataLayer.GetChunkIndex(int2) ChunkedDataLayer.GetCellCoord(int) ChunkedDataLayer.GetCellIndex(int2) ChunkedDataLayer.ResolveCellCoord(int2) ChunkedDataLayer.ResolveChunkCoord(int2) DataLayer._readJobsDependency DataLayer.ReadDependency DataLayer._writeJobsDependency DataLayer.WriteDependency DataLayer.CombinedDependency DataLayer._isDirty DataLayer.IsDirty DataLayer._version DataLayer.Version DataLayer.AddReadDependency(JobHandle) DataLayer.AddWriteDependency(JobHandle) DataLayer.SetReadDependency(JobHandle) DataLayer.SetWriteDependency(JobHandle) DataLayer.PrepareToWrite() DataLayer.PrepareToRead() DataLayer.OpenToRead() DataLayer.OpenToWrite() DataLayer.CompleteReadJobs() DataLayer.CompleteWriteJobs() DataLayer.CompleteAllJobs() DataLayer.CommitChanges() DataLayer.SetDirty(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.CellEntities.DataLayers Assembly: fwt.hexterrains.dll Syntax public class HexCellEntityDataLayer : HexTerrainNativeListChunkedDataLayer<CellEntity>, IDisposable, ICommitChanges, IListDataLayer<CellEntity> Properties IsDisposableItems If true, means when layer is resized or disposed, all items that are removed will be disposed (see nested classes description for details as the process may be different from layer to layer) Declaration public override bool IsDisposableItems { get; } Property Value Type Description bool Overrides DataLayer.IsDisposableItems Methods Cleanup() Declaration public override void Cleanup() Overrides HexTerrainNativeListChunkedDataLayer<CellEntity>.Cleanup() CleanupAsync() Declaration public override JobHandle CleanupAsync() Returns Type Description JobHandle Overrides HexTerrainNativeListChunkedDataLayer<CellEntity>.CleanupAsync() Implements IDisposable ICommitChanges IListDataLayer<TItem> Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.CellEntities.DataLayers.HexCellEntityViewDataLayer.html": {
    "href": "api/Fwt.HexTerrains.CellEntities.DataLayers.HexCellEntityViewDataLayer.html",
    "title": "Class HexCellEntityViewDataLayer | Hex Terrains",
    "summary": "Class HexCellEntityViewDataLayer Inheritance object DataLayer ChunkedDataLayer NativeListChunkedDataLayer<HexCellEntityView> HexTerrainNativeListChunkedDataLayer<HexCellEntityView> HexCellEntityViewDataLayer Implements IDisposable ICommitChanges IListDataLayer<HexCellEntityView> Inherited Members HexTerrainNativeListChunkedDataLayer<HexCellEntityView>._settings HexTerrainNativeListChunkedDataLayer<HexCellEntityView>.Settings HexTerrainNativeListChunkedDataLayer<HexCellEntityView>.CellsGridSize HexTerrainNativeListChunkedDataLayer<HexCellEntityView>.ChunkGridSize HexTerrainNativeListChunkedDataLayer<HexCellEntityView>.ChunkSize HexTerrainNativeListChunkedDataLayer<HexCellEntityView>.IsConnectedHorizontally HexTerrainNativeListChunkedDataLayer<HexCellEntityView>.IsConnectedVertically HexTerrainNativeListChunkedDataLayer<HexCellEntityView>.Init(int, HexTerrainSettings) NativeListChunkedDataLayer<HexCellEntityView>._data NativeListChunkedDataLayer<HexCellEntityView>.Data NativeListChunkedDataLayer<HexCellEntityView>.Length NativeListChunkedDataLayer<HexCellEntityView>.GetData(int) NativeListChunkedDataLayer<HexCellEntityView>.SetData(int, HexCellEntityView) NativeListChunkedDataLayer<HexCellEntityView>.SetData(HexCellEntityView[]) NativeListChunkedDataLayer<HexCellEntityView>.FillData(HexCellEntityView) NativeListChunkedDataLayer<HexCellEntityView>.TryGetData(int, out HexCellEntityView) NativeListChunkedDataLayer<HexCellEntityView>.TrySetData(int, HexCellEntityView) NativeListChunkedDataLayer<HexCellEntityView>.DisposeAllItems() NativeListChunkedDataLayer<HexCellEntityView>.DisposeExcessItems(int) ChunkedDataLayer.ChunksCount ChunkedDataLayer.ChunkDirtyGrid ChunkedDataLayer.DirtyChunks ChunkedDataLayer.SetCellDirty(int) ChunkedDataLayer.SetCellDirty(int, bool) ChunkedDataLayer.GetIsChunkDirty(int) ChunkedDataLayer.SetChunkDirty(int, bool) ChunkedDataLayer.SetAllChunksDirty(bool) ChunkedDataLayer.SetAllChunksDirtyAsync(bool, JobHandle) ChunkedDataLayer.SetAllChunksDirty() ChunkedDataLayer.ClearAllChunksDirty() ChunkedDataLayer.MergeChunkDirtyGrids(ChunkedDataLayer, JobHandle) ChunkedDataLayer.MergeChunkDirtyGrids(ChunkedDataLayer, ChunkedDataLayer, JobHandle) ChunkedDataLayer.MergeChunkDirtyGrids(ChunkedDataLayer, ChunkedDataLayer, ChunkedDataLayer, JobHandle) ChunkedDataLayer.MergeChunkDirtyGrids(ChunkedDataLayer, ChunkedDataLayer, ChunkedDataLayer, ChunkedDataLayer, JobHandle) ChunkedDataLayer.GetChunkIndexByCellIndex(int) ChunkedDataLayer.GetChunkCoord(int2) ChunkedDataLayer.GetChunkCoord(int) ChunkedDataLayer.GetChunkIndex(int2) ChunkedDataLayer.GetCellCoord(int) ChunkedDataLayer.GetCellIndex(int2) ChunkedDataLayer.ResolveCellCoord(int2) ChunkedDataLayer.ResolveChunkCoord(int2) DataLayer._readJobsDependency DataLayer.ReadDependency DataLayer._writeJobsDependency DataLayer.WriteDependency DataLayer.CombinedDependency DataLayer._isDirty DataLayer.IsDirty DataLayer._version DataLayer.Version DataLayer.AddReadDependency(JobHandle) DataLayer.AddWriteDependency(JobHandle) DataLayer.SetReadDependency(JobHandle) DataLayer.SetWriteDependency(JobHandle) DataLayer.PrepareToWrite() DataLayer.PrepareToRead() DataLayer.OpenToRead() DataLayer.OpenToWrite() DataLayer.CompleteReadJobs() DataLayer.CompleteWriteJobs() DataLayer.CompleteAllJobs() DataLayer.CommitChanges() DataLayer.SetDirty(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.CellEntities.DataLayers Assembly: fwt.hexterrains.dll Syntax public class HexCellEntityViewDataLayer : HexTerrainNativeListChunkedDataLayer<HexCellEntityView>, IDisposable, ICommitChanges, IListDataLayer<HexCellEntityView> Fields ClearedCells Cell indexes of the cells that got empty (contained some resource and now they don't) Needed to keep track of all resource entities that are no longer needed11111 Declaration public NativeParallelHashSet<int> ClearedCells Field Value Type Description NativeParallelHashSet<int> CreateEntityRequests Key - entity prefab, Value - cellIndex Declaration public NativeParallelMultiHashMap<Entity, int> CreateEntityRequests Field Value Type Description NativeParallelMultiHashMap<Entity, int> EntityByChunkIndex Declaration public NativeParallelMultiHashMap<int, Entity> EntityByChunkIndex Field Value Type Description NativeParallelMultiHashMap<int, Entity> RemoveEntityRequests Key - entity instance to destroy, Value = cellIndex Declaration public NativeParallelMultiHashMap<Entity, int> RemoveEntityRequests Field Value Type Description NativeParallelMultiHashMap<Entity, int> Properties EntityManager Declaration public EntityManager EntityManager { get; set; } Property Value Type Description EntityManager IsDisposableItems If true, means when layer is resized or disposed, all items that are removed will be disposed (see nested classes description for details as the process may be different from layer to layer) Declaration public override bool IsDisposableItems { get; } Property Value Type Description bool Overrides DataLayer.IsDisposableItems Methods Cleanup() Declaration public override void Cleanup() Overrides HexTerrainNativeListChunkedDataLayer<HexCellEntityView>.Cleanup() CleanupAsync() Declaration public override JobHandle CleanupAsync() Returns Type Description JobHandle Overrides HexTerrainNativeListChunkedDataLayer<HexCellEntityView>.CleanupAsync() ClearRemoveAndCreateRequests() Declaration public virtual void ClearRemoveAndCreateRequests() DestroyAllEntities(EntityManager) Declaration public virtual void DestroyAllEntities(EntityManager entityManager) Parameters Type Name Description EntityManager entityManager Dispose() Disposes the data layer, calls DisposeAllItems() DisposeAllItems() Declaration public override void Dispose() Overrides NativeListChunkedDataLayer<HexCellEntityView>.Dispose() DisposeDataItem(HexCellEntityView) Disposes the item in the layer if it is IDisposable. Declaration protected override void DisposeDataItem(HexCellEntityView item) Parameters Type Name Description HexCellEntityView item Overrides NativeListChunkedDataLayer<HexCellEntityView>.DisposeDataItem(HexCellEntityView) Init(int) Initializes/Reinitializes the data layer with the specified size. Declaration public override void Init(int layerSize) Parameters Type Name Description int layerSize amount of cells in the data layer Overrides NativeListChunkedDataLayer<HexCellEntityView>.Init(int) Implements IDisposable ICommitChanges IListDataLayer<TItem> Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.CellEntities.DataLayers.html": {
    "href": "api/Fwt.HexTerrains.CellEntities.DataLayers.html",
    "title": "Namespace Fwt.HexTerrains.CellEntities.DataLayers | Hex Terrains",
    "summary": "Namespace Fwt.HexTerrains.CellEntities.DataLayers Classes HexCellEntityDataLayer HexCellEntityViewDataLayer"
  },
  "api/Fwt.HexTerrains.CellEntities.HexCellEntityAuthoring.html": {
    "href": "api/Fwt.HexTerrains.CellEntities.HexCellEntityAuthoring.html",
    "title": "Class HexCellEntityAuthoring | Hex Terrains",
    "summary": "Class HexCellEntityAuthoring Inheritance object Object Component Behaviour MonoBehaviour HexCellEntityAuthoring Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.CellEntities Assembly: fwt.hexterrains.dll Syntax public class HexCellEntityAuthoring : MonoBehaviour Fields PrefabIndex Declaration public int PrefabIndex Field Value Type Description int Extension Methods Extensions_UnityObject.SmartDestroy<TObject>(TObject) Extensions_UnityObject.SmartDisableGameObject<TObject>(TObject) Extensions_UnityObject.SmartEnableGameObject<TObject>(TObject) HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.CellEntities.HexCellEntityBaker.html": {
    "href": "api/Fwt.HexTerrains.CellEntities.HexCellEntityBaker.html",
    "title": "Class HexCellEntityBaker | Hex Terrains",
    "summary": "Class HexCellEntityBaker Inheritance object IBaker Baker<HexCellEntityAuthoring> HexCellEntityBaker Inherited Members IBaker.GetSceneGUID() IBaker.GetComponent<T>() IBaker.GetComponent<T>(Component) IBaker.GetComponent<T>(GameObject) IBaker.GetComponents<T>(List<T>) IBaker.GetComponents<T>(Component, List<T>) IBaker.GetComponents<T>(GameObject, List<T>) IBaker.GetComponents<T>() IBaker.GetComponents<T>(Component) IBaker.GetComponents<T>(GameObject) IBaker.GetComponentInParent<T>() IBaker.GetComponentInParent<T>(Component) IBaker.GetComponentInParent<T>(GameObject) IBaker.GetComponentsInParent<T>(List<T>) IBaker.GetComponentsInParent<T>(Component, List<T>) IBaker.GetComponentsInParent<T>(GameObject, List<T>) IBaker.GetComponentsInParent<T>() IBaker.GetComponentsInParent<T>(Component) IBaker.GetComponentsInParent<T>(GameObject) IBaker.GetComponentInChildren<T>() IBaker.GetComponentInChildren<T>(Component) IBaker.GetComponentInChildren<T>(GameObject) IBaker.GetComponentsInChildren<T>(List<T>) IBaker.GetComponentsInChildren<T>(Component, List<T>) IBaker.GetComponentsInChildren<T>(GameObject, List<T>) IBaker.GetComponentsInChildren<T>() IBaker.GetComponentsInChildren<T>(Component) IBaker.GetComponentsInChildren<T>(GameObject) IBaker.GetParent() IBaker.GetParent(Component) IBaker.GetParent(GameObject) IBaker.GetParents() IBaker.GetParents(Component) IBaker.GetParents(GameObject) IBaker.GetParents(List<GameObject>) IBaker.GetParents(Component, List<GameObject>) IBaker.GetParents(GameObject, List<GameObject>) IBaker.GetChild(int) IBaker.GetChild(Component, int) IBaker.GetChild(GameObject, int) IBaker.GetChildren(bool) IBaker.GetChildren(Component, bool) IBaker.GetChildren(GameObject, bool) IBaker.GetChildren(List<GameObject>, bool) IBaker.GetChildren(Component, List<GameObject>, bool) IBaker.GetChildren(GameObject, List<GameObject>, bool) IBaker.GetChildCount() IBaker.GetChildCount(Component) IBaker.GetChildCount(GameObject) IBaker.GetName() IBaker.GetName(Component) IBaker.GetName(GameObject) IBaker.GetLayer() IBaker.GetLayer(Component) IBaker.GetLayer(GameObject) IBaker.GetTag() IBaker.GetTag(Component) IBaker.GetTag(GameObject) IBaker.GetEntity() IBaker.GetEntity(GameObject) IBaker.GetEntity(Component) IBaker.GetEntity(TransformUsageFlags) IBaker.GetEntity(GameObject, TransformUsageFlags) IBaker.GetEntity(Component, TransformUsageFlags) IBaker.GetEntityWithoutDependency() IBaker.IsActive() IBaker.IsActive(Component) IBaker.IsActive(GameObject) IBaker.IsActiveAndEnabled() IBaker.IsActiveAndEnabled(Component) IBaker.IsStatic() IBaker.IsStatic(Component) IBaker.IsStatic(GameObject) IBaker.IsClient() IBaker.IsServer() IBaker.DependsOn<T>(T) IBaker.DependsOnComponentInParent<T>() IBaker.DependsOnComponentInParent<T>(Component) IBaker.DependsOnComponentInParent<T>(GameObject) IBaker.DependsOnComponentsInParent<T>() IBaker.DependsOnComponentsInParent<T>(Component) IBaker.DependsOnComponentsInParent<T>(GameObject) IBaker.DependsOnComponentInChildren<T>() IBaker.DependsOnComponentInChildren<T>(Component) IBaker.DependsOnComponentInChildren<T>(GameObject) IBaker.DependsOnComponentsInChildren<T>() IBaker.DependsOnComponentsInChildren<T>(GameObject) IBaker.DependsOnComponentsInChildren<T>(Component) IBaker.DependsOnLightBaking() IBaker.AddBlobAsset<T>(ref BlobAssetReference<T>, out Hash128) IBaker.AddBlobAssetWithCustomHash<T>(ref BlobAssetReference<T>, Hash128) IBaker.TryGetBlobAssetReference<T>(Hash128, out BlobAssetReference<T>) IBaker.AddComponent<T>() IBaker.AddComponent<T>(in T) IBaker.AddComponent<T>(Entity) IBaker.AddComponent<T>(Entity, in T) IBaker.AddComponent(ComponentType) IBaker.AddComponent(Entity, ComponentType) IBaker.AddComponent(in ComponentTypeSet) IBaker.AddComponent(Entity, in ComponentTypeSet) IBaker.AddComponentObject<T>(T) IBaker.AddComponentObject<T>(Entity, T) IBaker.AddSharedComponentManaged<T>(T) IBaker.AddSharedComponentManaged<T>(Entity, T) IBaker.AddSharedComponent<T>(T) IBaker.AddSharedComponent<T>(Entity, T) IBaker.AddBuffer<T>() IBaker.AddBuffer<T>(Entity) IBaker.SetComponent<T>(Entity, in T) IBaker.SetComponentEnabled<T>(Entity, bool) IBaker.SetComponentEnabled<T>(bool) IBaker.SetSharedComponentManaged<T>(Entity, in T) IBaker.SetSharedComponent<T>(Entity, in T) IBaker.SetBuffer<T>() IBaker.SetBuffer<T>(Entity) IBaker.AppendToBuffer<T>(T) IBaker.AppendToBuffer<T>(Entity, T) IBaker.CreateAdditionalEntity() IBaker.CreateAdditionalEntity(TransformUsageFlags, bool, string) IBaker.CreateAdditionalEntities(NativeArray<Entity>, TransformUsageFlags, bool) IBaker.RegisterPrefabForBaking(GameObject) IBaker.AddTransformUsageFlags(TransformUsageFlags) IBaker.AddTransformUsageFlags(Entity, TransformUsageFlags) IBaker.IsBakingForEditor() IBaker.GetDotsSettings() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.CellEntities Assembly: fwt.hexterrains.dll Syntax public class HexCellEntityBaker : Baker<HexCellEntityAuthoring> Methods Bake(HexCellEntityAuthoring) Called in the baking process to bake the authoring component Declaration public override void Bake(HexCellEntityAuthoring authoring) Parameters Type Name Description HexCellEntityAuthoring authoring The authoring component to bake Overrides Baker<HexCellEntityAuthoring>.Bake(HexCellEntityAuthoring) Remarks This method will be called for every instance of TAuthoringType in order to bake that instance. Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.CellEntities.HexCellEntityConfigAuthoring.PrefabConfig.html": {
    "href": "api/Fwt.HexTerrains.CellEntities.HexCellEntityConfigAuthoring.PrefabConfig.html",
    "title": "Struct HexCellEntityConfigAuthoring.PrefabConfig | Hex Terrains",
    "summary": "Struct HexCellEntityConfigAuthoring.PrefabConfig Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.CellEntities Assembly: fwt.hexterrains.dll Syntax [Serializable] public struct HexCellEntityConfigAuthoring.PrefabConfig Fields Prefab Declaration [Tooltip(\"This prefab is used to display a structure in a cell if it's in a 'State' state\")] public GameObject Prefab Field Value Type Description GameObject State Declaration [Tooltip(\"This prefab is used to display a structure if it's in this state\")] public int State Field Value Type Description int Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.CellEntities.HexCellEntityConfigAuthoring.html": {
    "href": "api/Fwt.HexTerrains.CellEntities.HexCellEntityConfigAuthoring.html",
    "title": "Struct HexCellEntityConfigAuthoring | Hex Terrains",
    "summary": "Struct HexCellEntityConfigAuthoring Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.CellEntities Assembly: fwt.hexterrains.dll Syntax [Serializable] public struct HexCellEntityConfigAuthoring Fields Color Declaration public Color Color Field Value Type Description Color Name Declaration public string Name Field Value Type Description string PrefabConfigs Declaration public List<HexCellEntityConfigAuthoring.PrefabConfig> PrefabConfigs Field Value Type Description List<HexCellEntityConfigAuthoring.PrefabConfig> State Declaration public int State Field Value Type Description int Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.CellEntities.HexCellEntityDataAuthoring.html": {
    "href": "api/Fwt.HexTerrains.CellEntities.HexCellEntityDataAuthoring.html",
    "title": "Class HexCellEntityDataAuthoring | Hex Terrains",
    "summary": "Class HexCellEntityDataAuthoring Base class for HexTerrain layers that contain a CellItem per cell. Inheritance object Object Component Behaviour MonoBehaviour HexCellEntityDataAuthoring CellEntityPropsDataAuthoring Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.CellEntities Assembly: fwt.hexterrains.dll Syntax public abstract class HexCellEntityDataAuthoring : MonoBehaviour Fields ItemConfigs Prefabs for cell item. Index = prefab index, so if in the items map there is an item with index 5, it will take the ItemPrefabs[5] prefab to instantiate it Declaration [Tooltip(\"Prefabs for cell item. Index = prefab index, so if in the items map there is an item with index 5, it will take the ItemPrefabs[5] prefab to instantiate it\")] public List<HexCellEntityConfigAuthoring> ItemConfigs Field Value Type Description List<HexCellEntityConfigAuthoring> Extension Methods Extensions_UnityObject.SmartDestroy<TObject>(TObject) Extensions_UnityObject.SmartDisableGameObject<TObject>(TObject) Extensions_UnityObject.SmartEnableGameObject<TObject>(TObject) HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.CellEntities.HexCellItemsDataBaker-1.html": {
    "href": "api/Fwt.HexTerrains.CellEntities.HexCellItemsDataBaker-1.html",
    "title": "Class HexCellItemsDataBaker<TLayer> | Hex Terrains",
    "summary": "Class HexCellItemsDataBaker<TLayer> Inheritance object IBaker Baker<TLayer> HexCellItemsDataBaker<TLayer> CellEntityPropsDataBaker Inherited Members IBaker.GetSceneGUID() IBaker.GetComponent<T>() IBaker.GetComponent<T>(Component) IBaker.GetComponent<T>(GameObject) IBaker.GetComponents<T>(List<T>) IBaker.GetComponents<T>(Component, List<T>) IBaker.GetComponents<T>(GameObject, List<T>) IBaker.GetComponents<T>() IBaker.GetComponents<T>(Component) IBaker.GetComponents<T>(GameObject) IBaker.GetComponentInParent<T>() IBaker.GetComponentInParent<T>(Component) IBaker.GetComponentInParent<T>(GameObject) IBaker.GetComponentsInParent<T>(List<T>) IBaker.GetComponentsInParent<T>(Component, List<T>) IBaker.GetComponentsInParent<T>(GameObject, List<T>) IBaker.GetComponentsInParent<T>() IBaker.GetComponentsInParent<T>(Component) IBaker.GetComponentsInParent<T>(GameObject) IBaker.GetComponentInChildren<T>() IBaker.GetComponentInChildren<T>(Component) IBaker.GetComponentInChildren<T>(GameObject) IBaker.GetComponentsInChildren<T>(List<T>) IBaker.GetComponentsInChildren<T>(Component, List<T>) IBaker.GetComponentsInChildren<T>(GameObject, List<T>) IBaker.GetComponentsInChildren<T>() IBaker.GetComponentsInChildren<T>(Component) IBaker.GetComponentsInChildren<T>(GameObject) IBaker.GetParent() IBaker.GetParent(Component) IBaker.GetParent(GameObject) IBaker.GetParents() IBaker.GetParents(Component) IBaker.GetParents(GameObject) IBaker.GetParents(List<GameObject>) IBaker.GetParents(Component, List<GameObject>) IBaker.GetParents(GameObject, List<GameObject>) IBaker.GetChild(int) IBaker.GetChild(Component, int) IBaker.GetChild(GameObject, int) IBaker.GetChildren(bool) IBaker.GetChildren(Component, bool) IBaker.GetChildren(GameObject, bool) IBaker.GetChildren(List<GameObject>, bool) IBaker.GetChildren(Component, List<GameObject>, bool) IBaker.GetChildren(GameObject, List<GameObject>, bool) IBaker.GetChildCount() IBaker.GetChildCount(Component) IBaker.GetChildCount(GameObject) IBaker.GetName() IBaker.GetName(Component) IBaker.GetName(GameObject) IBaker.GetLayer() IBaker.GetLayer(Component) IBaker.GetLayer(GameObject) IBaker.GetTag() IBaker.GetTag(Component) IBaker.GetTag(GameObject) IBaker.GetEntity() IBaker.GetEntity(GameObject) IBaker.GetEntity(Component) IBaker.GetEntity(TransformUsageFlags) IBaker.GetEntity(GameObject, TransformUsageFlags) IBaker.GetEntity(Component, TransformUsageFlags) IBaker.GetEntityWithoutDependency() IBaker.IsActive() IBaker.IsActive(Component) IBaker.IsActive(GameObject) IBaker.IsActiveAndEnabled() IBaker.IsActiveAndEnabled(Component) IBaker.IsStatic() IBaker.IsStatic(Component) IBaker.IsStatic(GameObject) IBaker.IsClient() IBaker.IsServer() IBaker.DependsOn<T>(T) IBaker.DependsOnComponentInParent<T>() IBaker.DependsOnComponentInParent<T>(Component) IBaker.DependsOnComponentInParent<T>(GameObject) IBaker.DependsOnComponentsInParent<T>() IBaker.DependsOnComponentsInParent<T>(Component) IBaker.DependsOnComponentsInParent<T>(GameObject) IBaker.DependsOnComponentInChildren<T>() IBaker.DependsOnComponentInChildren<T>(Component) IBaker.DependsOnComponentInChildren<T>(GameObject) IBaker.DependsOnComponentsInChildren<T>() IBaker.DependsOnComponentsInChildren<T>(GameObject) IBaker.DependsOnComponentsInChildren<T>(Component) IBaker.DependsOnLightBaking() IBaker.AddBlobAsset<T>(ref BlobAssetReference<T>, out Hash128) IBaker.AddBlobAssetWithCustomHash<T>(ref BlobAssetReference<T>, Hash128) IBaker.TryGetBlobAssetReference<T>(Hash128, out BlobAssetReference<T>) IBaker.AddComponent<T>() IBaker.AddComponent<T>(in T) IBaker.AddComponent<T>(Entity) IBaker.AddComponent<T>(Entity, in T) IBaker.AddComponent(ComponentType) IBaker.AddComponent(Entity, ComponentType) IBaker.AddComponent(in ComponentTypeSet) IBaker.AddComponent(Entity, in ComponentTypeSet) IBaker.AddComponentObject<T>(T) IBaker.AddComponentObject<T>(Entity, T) IBaker.AddSharedComponentManaged<T>(T) IBaker.AddSharedComponentManaged<T>(Entity, T) IBaker.AddSharedComponent<T>(T) IBaker.AddSharedComponent<T>(Entity, T) IBaker.AddBuffer<T>() IBaker.AddBuffer<T>(Entity) IBaker.SetComponent<T>(Entity, in T) IBaker.SetComponentEnabled<T>(Entity, bool) IBaker.SetComponentEnabled<T>(bool) IBaker.SetSharedComponentManaged<T>(Entity, in T) IBaker.SetSharedComponent<T>(Entity, in T) IBaker.SetBuffer<T>() IBaker.SetBuffer<T>(Entity) IBaker.AppendToBuffer<T>(T) IBaker.AppendToBuffer<T>(Entity, T) IBaker.CreateAdditionalEntity() IBaker.CreateAdditionalEntity(TransformUsageFlags, bool, string) IBaker.CreateAdditionalEntities(NativeArray<Entity>, TransformUsageFlags, bool) IBaker.RegisterPrefabForBaking(GameObject) IBaker.AddTransformUsageFlags(TransformUsageFlags) IBaker.AddTransformUsageFlags(Entity, TransformUsageFlags) IBaker.IsBakingForEditor() IBaker.GetDotsSettings() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.CellEntities Assembly: fwt.hexterrains.dll Syntax public abstract class HexCellItemsDataBaker<TLayer> : Baker<TLayer> where TLayer : HexCellEntityDataAuthoring Type Parameters Name Description TLayer Methods Bake(TLayer) Called in the baking process to bake the authoring component Declaration public override void Bake(TLayer authoring) Parameters Type Name Description TLayer authoring The authoring component to bake Overrides Unity.Entities.Baker<TLayer>.Bake(TLayer) Remarks This method will be called for every instance of TAuthoringType in order to bake that instance. Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.CellEntities.HexCellPropAuthoring.html": {
    "href": "api/Fwt.HexTerrains.CellEntities.HexCellPropAuthoring.html",
    "title": "Class HexCellPropAuthoring | Hex Terrains",
    "summary": "Class HexCellPropAuthoring Inheritance object Object Component Behaviour MonoBehaviour HexCellPropAuthoring Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.CellEntities Assembly: fwt.hexterrains.dll Syntax [RequireComponent(typeof(HexCellEntityAuthoring))] public class HexCellPropAuthoring : MonoBehaviour Extension Methods Extensions_UnityObject.SmartDestroy<TObject>(TObject) Extensions_UnityObject.SmartDisableGameObject<TObject>(TObject) Extensions_UnityObject.SmartEnableGameObject<TObject>(TObject) HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.CellEntities.HexCellPropBaker.html": {
    "href": "api/Fwt.HexTerrains.CellEntities.HexCellPropBaker.html",
    "title": "Class HexCellPropBaker | Hex Terrains",
    "summary": "Class HexCellPropBaker Inheritance object IBaker Baker<HexCellPropAuthoring> HexCellPropBaker Inherited Members IBaker.GetSceneGUID() IBaker.GetComponent<T>() IBaker.GetComponent<T>(Component) IBaker.GetComponent<T>(GameObject) IBaker.GetComponents<T>(List<T>) IBaker.GetComponents<T>(Component, List<T>) IBaker.GetComponents<T>(GameObject, List<T>) IBaker.GetComponents<T>() IBaker.GetComponents<T>(Component) IBaker.GetComponents<T>(GameObject) IBaker.GetComponentInParent<T>() IBaker.GetComponentInParent<T>(Component) IBaker.GetComponentInParent<T>(GameObject) IBaker.GetComponentsInParent<T>(List<T>) IBaker.GetComponentsInParent<T>(Component, List<T>) IBaker.GetComponentsInParent<T>(GameObject, List<T>) IBaker.GetComponentsInParent<T>() IBaker.GetComponentsInParent<T>(Component) IBaker.GetComponentsInParent<T>(GameObject) IBaker.GetComponentInChildren<T>() IBaker.GetComponentInChildren<T>(Component) IBaker.GetComponentInChildren<T>(GameObject) IBaker.GetComponentsInChildren<T>(List<T>) IBaker.GetComponentsInChildren<T>(Component, List<T>) IBaker.GetComponentsInChildren<T>(GameObject, List<T>) IBaker.GetComponentsInChildren<T>() IBaker.GetComponentsInChildren<T>(Component) IBaker.GetComponentsInChildren<T>(GameObject) IBaker.GetParent() IBaker.GetParent(Component) IBaker.GetParent(GameObject) IBaker.GetParents() IBaker.GetParents(Component) IBaker.GetParents(GameObject) IBaker.GetParents(List<GameObject>) IBaker.GetParents(Component, List<GameObject>) IBaker.GetParents(GameObject, List<GameObject>) IBaker.GetChild(int) IBaker.GetChild(Component, int) IBaker.GetChild(GameObject, int) IBaker.GetChildren(bool) IBaker.GetChildren(Component, bool) IBaker.GetChildren(GameObject, bool) IBaker.GetChildren(List<GameObject>, bool) IBaker.GetChildren(Component, List<GameObject>, bool) IBaker.GetChildren(GameObject, List<GameObject>, bool) IBaker.GetChildCount() IBaker.GetChildCount(Component) IBaker.GetChildCount(GameObject) IBaker.GetName() IBaker.GetName(Component) IBaker.GetName(GameObject) IBaker.GetLayer() IBaker.GetLayer(Component) IBaker.GetLayer(GameObject) IBaker.GetTag() IBaker.GetTag(Component) IBaker.GetTag(GameObject) IBaker.GetEntity() IBaker.GetEntity(GameObject) IBaker.GetEntity(Component) IBaker.GetEntity(TransformUsageFlags) IBaker.GetEntity(GameObject, TransformUsageFlags) IBaker.GetEntity(Component, TransformUsageFlags) IBaker.GetEntityWithoutDependency() IBaker.IsActive() IBaker.IsActive(Component) IBaker.IsActive(GameObject) IBaker.IsActiveAndEnabled() IBaker.IsActiveAndEnabled(Component) IBaker.IsStatic() IBaker.IsStatic(Component) IBaker.IsStatic(GameObject) IBaker.IsClient() IBaker.IsServer() IBaker.DependsOn<T>(T) IBaker.DependsOnComponentInParent<T>() IBaker.DependsOnComponentInParent<T>(Component) IBaker.DependsOnComponentInParent<T>(GameObject) IBaker.DependsOnComponentsInParent<T>() IBaker.DependsOnComponentsInParent<T>(Component) IBaker.DependsOnComponentsInParent<T>(GameObject) IBaker.DependsOnComponentInChildren<T>() IBaker.DependsOnComponentInChildren<T>(Component) IBaker.DependsOnComponentInChildren<T>(GameObject) IBaker.DependsOnComponentsInChildren<T>() IBaker.DependsOnComponentsInChildren<T>(GameObject) IBaker.DependsOnComponentsInChildren<T>(Component) IBaker.DependsOnLightBaking() IBaker.AddBlobAsset<T>(ref BlobAssetReference<T>, out Hash128) IBaker.AddBlobAssetWithCustomHash<T>(ref BlobAssetReference<T>, Hash128) IBaker.TryGetBlobAssetReference<T>(Hash128, out BlobAssetReference<T>) IBaker.AddComponent<T>() IBaker.AddComponent<T>(in T) IBaker.AddComponent<T>(Entity) IBaker.AddComponent<T>(Entity, in T) IBaker.AddComponent(ComponentType) IBaker.AddComponent(Entity, ComponentType) IBaker.AddComponent(in ComponentTypeSet) IBaker.AddComponent(Entity, in ComponentTypeSet) IBaker.AddComponentObject<T>(T) IBaker.AddComponentObject<T>(Entity, T) IBaker.AddSharedComponentManaged<T>(T) IBaker.AddSharedComponentManaged<T>(Entity, T) IBaker.AddSharedComponent<T>(T) IBaker.AddSharedComponent<T>(Entity, T) IBaker.AddBuffer<T>() IBaker.AddBuffer<T>(Entity) IBaker.SetComponent<T>(Entity, in T) IBaker.SetComponentEnabled<T>(Entity, bool) IBaker.SetComponentEnabled<T>(bool) IBaker.SetSharedComponentManaged<T>(Entity, in T) IBaker.SetSharedComponent<T>(Entity, in T) IBaker.SetBuffer<T>() IBaker.SetBuffer<T>(Entity) IBaker.AppendToBuffer<T>(T) IBaker.AppendToBuffer<T>(Entity, T) IBaker.CreateAdditionalEntity() IBaker.CreateAdditionalEntity(TransformUsageFlags, bool, string) IBaker.CreateAdditionalEntities(NativeArray<Entity>, TransformUsageFlags, bool) IBaker.RegisterPrefabForBaking(GameObject) IBaker.AddTransformUsageFlags(TransformUsageFlags) IBaker.AddTransformUsageFlags(Entity, TransformUsageFlags) IBaker.IsBakingForEditor() IBaker.GetDotsSettings() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.CellEntities Assembly: fwt.hexterrains.dll Syntax public class HexCellPropBaker : Baker<HexCellPropAuthoring> Methods Bake(HexCellPropAuthoring) Called in the baking process to bake the authoring component Declaration public override void Bake(HexCellPropAuthoring authoring) Parameters Type Name Description HexCellPropAuthoring authoring The authoring component to bake Overrides Baker<HexCellPropAuthoring>.Bake(HexCellPropAuthoring) Remarks This method will be called for every instance of TAuthoringType in order to bake that instance. Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.CellEntities.Jobs.CalcCellEntityColorsJob.html": {
    "href": "api/Fwt.HexTerrains.CellEntities.Jobs.CalcCellEntityColorsJob.html",
    "title": "Struct CalcCellEntityColorsJob | Hex Terrains",
    "summary": "Struct CalcCellEntityColorsJob Implements IJobParallelFor Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.CellEntities.Jobs Assembly: fwt.hexterrains.dll Syntax [BurstCompile] public struct CalcCellEntityColorsJob : IJobParallelFor Fields CellEntities Declaration [ReadOnly] public NativeArray<CellEntity> CellEntities Field Value Type Description NativeArray<CellEntity> CellEntitiesColorMap Declaration [WriteOnly] public NativeArray<Color32> CellEntitiesColorMap Field Value Type Description NativeArray<Color32> ChunkDirtyGrid Declaration [ReadOnly] public NativeArray<bool> ChunkDirtyGrid Field Value Type Description NativeArray<bool> EntityConfigs Declaration [ReadOnly] public NativeArray<HexCellEntityConfig> EntityConfigs Field Value Type Description NativeArray<HexCellEntityConfig> Settings Declaration public HexTerrainSettings Settings Field Value Type Description HexTerrainSettings Methods Execute(int) Performs work against a specific iteration index. Declaration public void Execute(int index) Parameters Type Name Description int index The index of the Parallel for loop at which to perform work. Implements Unity.Jobs.IJobParallelFor Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.CellEntities.Jobs.CalcCellEntityEntitiesJob.html": {
    "href": "api/Fwt.HexTerrains.CellEntities.Jobs.CalcCellEntityEntitiesJob.html",
    "title": "Struct CalcCellEntityEntitiesJob | Hex Terrains",
    "summary": "Struct CalcCellEntityEntitiesJob Implements IJobParallelFor Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.CellEntities.Jobs Assembly: fwt.hexterrains.dll Syntax [BurstCompile] public struct CalcCellEntityEntitiesJob : IJobParallelFor Fields CellEntities Declaration [ReadOnly] public NativeList<CellEntity> CellEntities Field Value Type Description NativeList<CellEntity> CellEntityConfigs Declaration [ReadOnly] public NativeArray<HexCellEntityConfig> CellEntityConfigs Field Value Type Description NativeArray<HexCellEntityConfig> CellEntityViews Declaration [ReadOnly] public NativeList<HexCellEntityView> CellEntityViews Field Value Type Description NativeList<HexCellEntityView> ChunkDirtyGrid Declaration [ReadOnly] public NativeList<bool> ChunkDirtyGrid Field Value Type Description NativeList<bool> ClearedCells Cell indexes of the cells that got empty (contained some resource and now they don't) Needed to keep track of all resource entities that are no longer needed11111 Declaration [WriteOnly] public NativeParallelHashSet<int>.ParallelWriter ClearedCells Field Value Type Description NativeParallelHashSet<int>.ParallelWriter CreateEntityRequests Key - entity prefab, Value - cellIndex Declaration [WriteOnly] public NativeParallelMultiHashMap<Entity, int>.ParallelWriter CreateEntityRequests Field Value Type Description NativeParallelMultiHashMap<Entity, int>.ParallelWriter RemoveEntityRequests Key - entity instance to destroy, Value = cellIndex Declaration [WriteOnly] public NativeParallelMultiHashMap<Entity, int>.ParallelWriter RemoveEntityRequests Field Value Type Description NativeParallelMultiHashMap<Entity, int>.ParallelWriter Settings Declaration public HexTerrainSettings Settings Field Value Type Description HexTerrainSettings Methods Execute(int) Performs work against a specific iteration index. Declaration [BurstCompile] public void Execute(int cellIndex) Parameters Type Name Description int cellIndex Implements Unity.Jobs.IJobParallelFor Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.CellEntities.Jobs.SaveClearedCellEntityEntitiesJob.html": {
    "href": "api/Fwt.HexTerrains.CellEntities.Jobs.SaveClearedCellEntityEntitiesJob.html",
    "title": "Struct SaveClearedCellEntityEntitiesJob | Hex Terrains",
    "summary": "Struct SaveClearedCellEntityEntitiesJob Implements IJob Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.CellEntities.Jobs Assembly: fwt.hexterrains.dll Syntax [BurstCompile] public struct SaveClearedCellEntityEntitiesJob : IJob Fields CellItemsViews Declaration [WriteOnly] public NativeList<HexCellEntityView> CellItemsViews Field Value Type Description NativeList<HexCellEntityView> ClearedCellIndexes Declaration [ReadOnly] public NativeParallelHashSet<int> ClearedCellIndexes Field Value Type Description NativeParallelHashSet<int> Methods Execute() Implement this method to perform work on a worker thread. Declaration public void Execute() Implements Unity.Jobs.IJob Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.CellEntities.Jobs.SaveCreatedCellEntityEntitiesJob.html": {
    "href": "api/Fwt.HexTerrains.CellEntities.Jobs.SaveCreatedCellEntityEntitiesJob.html",
    "title": "Struct SaveCreatedCellEntityEntitiesJob | Hex Terrains",
    "summary": "Struct SaveCreatedCellEntityEntitiesJob Implements IJob Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.CellEntities.Jobs Assembly: fwt.hexterrains.dll Syntax [BurstCompile] public struct SaveCreatedCellEntityEntitiesJob : IJob Fields CellEntityPrefab Declaration public Entity CellEntityPrefab Field Value Type Description Entity CellItemsViews Declaration [WriteOnly] public NativeList<HexCellEntityView> CellItemsViews Field Value Type Description NativeList<HexCellEntityView> CommandBuffer Declaration [WriteOnly] public EntityCommandBuffer.ParallelWriter CommandBuffer Field Value Type Description EntityCommandBuffer.ParallelWriter CreateRequests Declaration [ReadOnly] public NativeParallelMultiHashMap<Entity, int> CreateRequests Field Value Type Description NativeParallelMultiHashMap<Entity, int> CreatedEntities Declaration [ReadOnly] [DeallocateOnJobCompletion] public NativeArray<Entity> CreatedEntities Field Value Type Description NativeArray<Entity> EntityByChunkIndex Declaration [WriteOnly] public NativeParallelMultiHashMap<int, Entity> EntityByChunkIndex Field Value Type Description NativeParallelMultiHashMap<int, Entity> LayerEntity Declaration public Entity LayerEntity Field Value Type Description Entity Settings Declaration public HexTerrainSettings Settings Field Value Type Description HexTerrainSettings Methods Execute() Implement this method to perform work on a worker thread. Declaration public void Execute() Implements Unity.Jobs.IJob Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.CellEntities.Jobs.UpdateCellItemsStateJob.html": {
    "href": "api/Fwt.HexTerrains.CellEntities.Jobs.UpdateCellItemsStateJob.html",
    "title": "Struct UpdateCellItemsStateJob | Hex Terrains",
    "summary": "Struct UpdateCellItemsStateJob Implements IJobChunk Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.CellEntities.Jobs Assembly: fwt.hexterrains.dll Syntax public struct UpdateCellItemsStateJob : IJobChunk Fields CellIndexHandle Declaration [ReadOnly] public ComponentTypeHandle<HexCellIndex> CellIndexHandle Field Value Type Description ComponentTypeHandle<HexCellIndex> CellMetrics Declaration [ReadOnly] public NativeArray<HexCellMetrics> CellMetrics Field Value Type Description NativeArray<HexCellMetrics> ChunkGridIndexHandle Declaration [ReadOnly] public SharedComponentTypeHandle<HexChunkGridIndex> ChunkGridIndexHandle Field Value Type Description SharedComponentTypeHandle<HexChunkGridIndex> LocalToWorldHandle Declaration public ComponentTypeHandle<LocalTransform> LocalToWorldHandle Field Value Type Description ComponentTypeHandle<LocalTransform> Methods Execute(in ArchetypeChunk, int, bool, in v128) Implement the Execute function to perform a unit of work on an Unity.Entities.ArchetypeChunk representing a chunk. Declaration public void Execute(in ArchetypeChunk chunk, int unfilteredChunkIndex, bool useEnabledMask, in v128 chunkEnabledMask) Parameters Type Name Description ArchetypeChunk chunk An object providing access to the entities within a chunk. int unfilteredChunkIndex The index of the current chunk within the list of all chunks in all archetypes matched by the Unity.Entities.EntityQuery that the job was run against. bool useEnabledMask If true, the contents of chunkEnabledMask describe which entities in the chunk match the provided Unity.Entities.EntityQuery and should be processed by this job. If false, all entities in the chunk match the provided query, and the contents of chunkEnabledMask are undefined. v128 chunkEnabledMask If bit N in this mask is set, entity N in chunk matches the Unity.Entities.EntityQuery used to schedule the job. If bit N is clear, entity N does not match the query and can be skipped. If N is greater than or equal to the number of entities in the chunk, bit N will always be clear. If useEnabledMask is false, all entities in the chunk match the query, and the contents of this mask are undefined. Remarks The chunks selected by the Unity.Entities.EntityQuery used to schedule the job are the input to your Execute function. The Execute function is called once per matching chunk. Note that unfilteredChunkIndex is not necessarily guaranteed to be a zero-based, tightly-packed index into the chunks the job actually runs on. For example, if the query matches 100 chunks, but the query's uses Unity.Entities.EntityQuery.SetSharedComponentFilter<SharedComponent>(SharedComponent) and the first 50 chunks get filtered out, the unfilteredChunkIndex will range from 50 to 99. If the index relative to the filtered chunk list is required, use Unity.Entities.EntityQuery.CalculateFilteredChunkIndexArray(Unity.Collections.AllocatorManager.AllocatorHandle) Implements Unity.Entities.IJobChunk Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.CellEntities.Jobs.html": {
    "href": "api/Fwt.HexTerrains.CellEntities.Jobs.html",
    "title": "Namespace Fwt.HexTerrains.CellEntities.Jobs | Hex Terrains",
    "summary": "Namespace Fwt.HexTerrains.CellEntities.Jobs Structs CalcCellEntityColorsJob CalcCellEntityEntitiesJob SaveClearedCellEntityEntitiesJob SaveCreatedCellEntityEntitiesJob UpdateCellItemsStateJob"
  },
  "api/Fwt.HexTerrains.CellEntities.Systems.CacheHexCellEntityDataSystem-1.html": {
    "href": "api/Fwt.HexTerrains.CellEntities.Systems.CacheHexCellEntityDataSystem-1.html",
    "title": "Class CacheHexCellEntityDataSystem<TDataLayer> | Hex Terrains",
    "summary": "Class CacheHexCellEntityDataSystem<TDataLayer> Inheritance object ComponentSystemBase SystemBase CacheHexCellEntityDataSystem<TDataLayer> CacheHexCellPropsDataSystem Inherited Members SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.CellEntities.Systems Assembly: fwt.hexterrains.dll Syntax [UpdateInGroup(typeof(PresentationSystemGroup), OrderLast = true)] public abstract class CacheHexCellEntityDataSystem<TDataLayer> : SystemBase where TDataLayer : CellEntitiesData, IComponentData Type Parameters Name Description TDataLayer Methods CacheNewCellEntityLayer() Declaration public virtual void CacheNewCellEntityLayer() ClearDestroyedCellEntities() Declaration public virtual void ClearDestroyedCellEntities() DisposeCellItemsData(CellEntitiesData) Declaration public virtual void DisposeCellItemsData(CellEntitiesData cellItemsData) Parameters Type Name Description CellEntitiesData cellItemsData OnCreate() Called when this system is created. Declaration protected override void OnCreate() Overrides Unity.Entities.ComponentSystemBase.OnCreate() Remarks Implement an OnCreate() function to set up system resources when it is created. OnCreate is invoked before the the first time Unity.Entities.ComponentSystemBase.OnStartRunning() and OnUpdate are invoked. OnDestroy() Called when this system is destroyed. Declaration protected override void OnDestroy() Overrides Unity.Entities.ComponentSystemBase.OnDestroy() Remarks Systems are destroyed when the application shuts down, the World is destroyed, or you call Unity.Entities.World.DestroySystem(Unity.Entities.SystemHandle). In the Unity Editor, system destruction occurs when you exit Play Mode and when scripts are reloaded. OnUpdate() Implement OnUpdate() to perform the major work of this system. Declaration protected override void OnUpdate() Overrides Unity.Entities.SystemBase.OnUpdate() Remarks By default, the system invokes `OnUpdate()` once every frame on the main thread. To skip OnUpdate if all of the system's [EntityQueries] are empty, use the [RequireMatchingQueriesForUpdateAttribute]. To limit when OnUpdate is invoked, you can specify components that must exist, or queries that match specific Entities. To do this, call Unity.Entities.ComponentSystemBase.RequireForUpdate<T>() or Unity.Entities.ComponentSystemBase.RequireForUpdate(Unity.Entities.EntityQuery) in the system's OnCreate method. For more information, see [ShouldRunSystem]. The [Entities.ForEach] and [Job.WithCode] constructions provide convenient mechanisms for defining jobs. You can also instantiate and schedule an Unity.Entities.IJobChunk instance; you can use the [C# Job System] or you can perform work on the main thread. If you call Unity.Entities.EntityManager methods that perform structural changes on the main thread, be sure to arrange the system order to minimize the performance impact of the resulting [sync points]. Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.CellEntities.Systems.CacheHexCellPropsDataSystem.html": {
    "href": "api/Fwt.HexTerrains.CellEntities.Systems.CacheHexCellPropsDataSystem.html",
    "title": "Class CacheHexCellPropsDataSystem | Hex Terrains",
    "summary": "Class CacheHexCellPropsDataSystem Inheritance object ComponentSystemBase SystemBase CacheHexCellEntityDataSystem<CellEntityPropsData> CacheHexCellPropsDataSystem Inherited Members CacheHexCellEntityDataSystem<CellEntityPropsData>.OnCreate() CacheHexCellEntityDataSystem<CellEntityPropsData>.OnUpdate() CacheHexCellEntityDataSystem<CellEntityPropsData>.OnDestroy() CacheHexCellEntityDataSystem<CellEntityPropsData>.DisposeCellItemsData(CellEntitiesData) CacheHexCellEntityDataSystem<CellEntityPropsData>.CacheNewCellEntityLayer() CacheHexCellEntityDataSystem<CellEntityPropsData>.ClearDestroyedCellEntities() SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.CellEntities.Systems Assembly: fwt.hexterrains.dll Syntax public class CacheHexCellPropsDataSystem : CacheHexCellEntityDataSystem<CellEntityPropsData> Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.CellEntities.Systems.CalcCellEntityColorsSystem.html": {
    "href": "api/Fwt.HexTerrains.CellEntities.Systems.CalcCellEntityColorsSystem.html",
    "title": "Class CalcCellEntityColorsSystem | Hex Terrains",
    "summary": "Class CalcCellEntityColorsSystem Inheritance object ComponentSystemBase SystemBase CalcCellEntityColorsSystem CalcCellPropColorsSystem Inherited Members SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.OnUpdate() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.CellEntities.Systems Assembly: fwt.hexterrains.dll Syntax [UpdateInGroup(typeof(HexTerrainsInitializationGroup))] public abstract class CalcCellEntityColorsSystem : SystemBase Methods UpdateCellItems(Entity, in CellEntityPropsData) Declaration public virtual void UpdateCellItems(Entity entity, in CellEntityPropsData propsData) Parameters Type Name Description Entity entity CellEntityPropsData propsData Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.CellEntities.Systems.CalcCellEntityEntitiesSystem.html": {
    "href": "api/Fwt.HexTerrains.CellEntities.Systems.CalcCellEntityEntitiesSystem.html",
    "title": "Class CalcCellEntityEntitiesSystem | Hex Terrains",
    "summary": "Class CalcCellEntityEntitiesSystem Inheritance object ComponentSystemBase SystemBase CalcCellEntityEntitiesSystem CalcCellPropEntitiesSystem Inherited Members SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.OnUpdate() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.CellEntities.Systems Assembly: fwt.hexterrains.dll Syntax [UpdateInGroup(typeof(HexTerrainsInitializationGroup))] [UpdateAfter(typeof(CalcChunkVisibilitySystem))] public abstract class CalcCellEntityEntitiesSystem : SystemBase Methods UpdateCellItems(Entity, in CellEntitiesData) Declaration protected virtual void UpdateCellItems(Entity entity, in CellEntitiesData itemsData) Parameters Type Name Description Entity entity CellEntitiesData itemsData Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.CellEntities.Systems.CalcCellPropColorsSystem.html": {
    "href": "api/Fwt.HexTerrains.CellEntities.Systems.CalcCellPropColorsSystem.html",
    "title": "Class CalcCellPropColorsSystem | Hex Terrains",
    "summary": "Class CalcCellPropColorsSystem Inheritance object ComponentSystemBase SystemBase CalcCellEntityColorsSystem CalcCellPropColorsSystem Inherited Members CalcCellEntityColorsSystem.UpdateCellItems(Entity, in CellEntityPropsData) SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.CellEntities.Systems Assembly: fwt.hexterrains.dll Syntax [UpdateInGroup(typeof(HexTerrainsInitializationGroup))] [UpdateAfter(typeof(CalcChunkVisibilitySystem))] public class CalcCellPropColorsSystem : CalcCellEntityColorsSystem Methods OnCreateForCompiler() Declaration protected override void OnCreateForCompiler() Overrides Unity.Entities.ComponentSystemBase.OnCreateForCompiler() OnUpdate() Implement OnUpdate() to perform the major work of this system. Declaration protected override void OnUpdate() Overrides Unity.Entities.SystemBase.OnUpdate() Remarks By default, the system invokes `OnUpdate()` once every frame on the main thread. To skip OnUpdate if all of the system's [EntityQueries] are empty, use the [RequireMatchingQueriesForUpdateAttribute]. To limit when OnUpdate is invoked, you can specify components that must exist, or queries that match specific Entities. To do this, call Unity.Entities.ComponentSystemBase.RequireForUpdate<T>() or Unity.Entities.ComponentSystemBase.RequireForUpdate(Unity.Entities.EntityQuery) in the system's OnCreate method. For more information, see [ShouldRunSystem]. The [Entities.ForEach] and [Job.WithCode] constructions provide convenient mechanisms for defining jobs. You can also instantiate and schedule an Unity.Entities.IJobChunk instance; you can use the [C# Job System] or you can perform work on the main thread. If you call Unity.Entities.EntityManager methods that perform structural changes on the main thread, be sure to arrange the system order to minimize the performance impact of the resulting [sync points]. Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.CellEntities.Systems.CalcCellPropEntitiesSystem.html": {
    "href": "api/Fwt.HexTerrains.CellEntities.Systems.CalcCellPropEntitiesSystem.html",
    "title": "Class CalcCellPropEntitiesSystem | Hex Terrains",
    "summary": "Class CalcCellPropEntitiesSystem Inheritance object ComponentSystemBase SystemBase CalcCellEntityEntitiesSystem CalcCellPropEntitiesSystem Inherited Members CalcCellEntityEntitiesSystem.UpdateCellItems(Entity, in CellEntitiesData) SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.CellEntities.Systems Assembly: fwt.hexterrains.dll Syntax [UpdateInGroup(typeof(HexTerrainsInitializationGroup))] [UpdateAfter(typeof(CalcChunkVisibilitySystem))] public class CalcCellPropEntitiesSystem : CalcCellEntityEntitiesSystem Methods OnCreateForCompiler() Declaration protected override void OnCreateForCompiler() Overrides Unity.Entities.ComponentSystemBase.OnCreateForCompiler() OnUpdate() Implement OnUpdate() to perform the major work of this system. Declaration protected override void OnUpdate() Overrides Unity.Entities.SystemBase.OnUpdate() Remarks By default, the system invokes `OnUpdate()` once every frame on the main thread. To skip OnUpdate if all of the system's [EntityQueries] are empty, use the [RequireMatchingQueriesForUpdateAttribute]. To limit when OnUpdate is invoked, you can specify components that must exist, or queries that match specific Entities. To do this, call Unity.Entities.ComponentSystemBase.RequireForUpdate<T>() or Unity.Entities.ComponentSystemBase.RequireForUpdate(Unity.Entities.EntityQuery) in the system's OnCreate method. For more information, see [ShouldRunSystem]. The [Entities.ForEach] and [Job.WithCode] constructions provide convenient mechanisms for defining jobs. You can also instantiate and schedule an Unity.Entities.IJobChunk instance; you can use the [C# Job System] or you can perform work on the main thread. If you call Unity.Entities.EntityManager methods that perform structural changes on the main thread, be sure to arrange the system order to minimize the performance impact of the resulting [sync points]. Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.CellEntities.Systems.CleanupCellEntitiesDataSystem.html": {
    "href": "api/Fwt.HexTerrains.CellEntities.Systems.CleanupCellEntitiesDataSystem.html",
    "title": "Class CleanupCellEntitiesDataSystem | Hex Terrains",
    "summary": "Class CleanupCellEntitiesDataSystem Inheritance object ComponentSystemBase SystemBase CleanupCellEntitiesDataSystem CleanupCellEntityPropDataSystem Inherited Members SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.OnUpdate() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.CellEntities.Systems Assembly: fwt.hexterrains.dll Syntax [UpdateInGroup(typeof(HexTerrainsCleanupGroup))] public abstract class CleanupCellEntitiesDataSystem : SystemBase Methods UpdateCells(CellEntitiesData) Declaration public virtual void UpdateCells(CellEntitiesData cellItemsData) Parameters Type Name Description CellEntitiesData cellItemsData Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.CellEntities.Systems.CleanupCellEntityPropDataSystem.html": {
    "href": "api/Fwt.HexTerrains.CellEntities.Systems.CleanupCellEntityPropDataSystem.html",
    "title": "Class CleanupCellEntityPropDataSystem | Hex Terrains",
    "summary": "Class CleanupCellEntityPropDataSystem Inheritance object ComponentSystemBase SystemBase CleanupCellEntitiesDataSystem CleanupCellEntityPropDataSystem Inherited Members CleanupCellEntitiesDataSystem.UpdateCells(CellEntitiesData) SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.CellEntities.Systems Assembly: fwt.hexterrains.dll Syntax [UpdateInGroup(typeof(HexTerrainsCleanupGroup))] public class CleanupCellEntityPropDataSystem : CleanupCellEntitiesDataSystem Methods OnCreateForCompiler() Declaration protected override void OnCreateForCompiler() Overrides Unity.Entities.ComponentSystemBase.OnCreateForCompiler() OnUpdate() Implement OnUpdate() to perform the major work of this system. Declaration protected override void OnUpdate() Overrides Unity.Entities.SystemBase.OnUpdate() Remarks By default, the system invokes `OnUpdate()` once every frame on the main thread. To skip OnUpdate if all of the system's [EntityQueries] are empty, use the [RequireMatchingQueriesForUpdateAttribute]. To limit when OnUpdate is invoked, you can specify components that must exist, or queries that match specific Entities. To do this, call Unity.Entities.ComponentSystemBase.RequireForUpdate<T>() or Unity.Entities.ComponentSystemBase.RequireForUpdate(Unity.Entities.EntityQuery) in the system's OnCreate method. For more information, see [ShouldRunSystem]. The [Entities.ForEach] and [Job.WithCode] constructions provide convenient mechanisms for defining jobs. You can also instantiate and schedule an Unity.Entities.IJobChunk instance; you can use the [C# Job System] or you can perform work on the main thread. If you call Unity.Entities.EntityManager methods that perform structural changes on the main thread, be sure to arrange the system order to minimize the performance impact of the resulting [sync points]. Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.CellEntities.Systems.CreateCellEntityPropsDataSystem.html": {
    "href": "api/Fwt.HexTerrains.CellEntities.Systems.CreateCellEntityPropsDataSystem.html",
    "title": "Class CreateCellEntityPropsDataSystem | Hex Terrains",
    "summary": "Class CreateCellEntityPropsDataSystem Inheritance object ComponentSystemBase SystemBase CreateCellEntityPropsDataSystem Inherited Members SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.CellEntities.Systems Assembly: fwt.hexterrains.dll Syntax [UpdateInGroup(typeof(CreateHexTerrainsGroup))] public class CreateCellEntityPropsDataSystem : SystemBase Methods OnCreateForCompiler() Declaration protected override void OnCreateForCompiler() Overrides Unity.Entities.ComponentSystemBase.OnCreateForCompiler() OnUpdate() Implement OnUpdate() to perform the major work of this system. Declaration protected override void OnUpdate() Overrides Unity.Entities.SystemBase.OnUpdate() Remarks By default, the system invokes `OnUpdate()` once every frame on the main thread. To skip OnUpdate if all of the system's [EntityQueries] are empty, use the [RequireMatchingQueriesForUpdateAttribute]. To limit when OnUpdate is invoked, you can specify components that must exist, or queries that match specific Entities. To do this, call Unity.Entities.ComponentSystemBase.RequireForUpdate<T>() or Unity.Entities.ComponentSystemBase.RequireForUpdate(Unity.Entities.EntityQuery) in the system's OnCreate method. For more information, see [ShouldRunSystem]. The [Entities.ForEach] and [Job.WithCode] constructions provide convenient mechanisms for defining jobs. You can also instantiate and schedule an Unity.Entities.IJobChunk instance; you can use the [C# Job System] or you can perform work on the main thread. If you call Unity.Entities.EntityManager methods that perform structural changes on the main thread, be sure to arrange the system order to minimize the performance impact of the resulting [sync points]. Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.CellEntities.Systems.HexCellEntityDataCache.html": {
    "href": "api/Fwt.HexTerrains.CellEntities.Systems.HexCellEntityDataCache.html",
    "title": "Class HexCellEntityDataCache | Hex Terrains",
    "summary": "Class HexCellEntityDataCache Inheritance object HexCellEntityDataCache Implements ICleanupComponentData IComponentData IQueryTypeParameter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.CellEntities.Systems Assembly: fwt.hexterrains.dll Syntax public class HexCellEntityDataCache : ICleanupComponentData, IComponentData, IQueryTypeParameter Fields CellEntities Declaration public HexCellEntityViewDataLayer CellEntities Field Value Type Description HexCellEntityViewDataLayer Implements Unity.Entities.ICleanupComponentData Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.CellEntities.Systems.PlaybackUpdateCellEntityCommandBuffersSystem.html": {
    "href": "api/Fwt.HexTerrains.CellEntities.Systems.PlaybackUpdateCellEntityCommandBuffersSystem.html",
    "title": "Class PlaybackUpdateCellEntityCommandBuffersSystem | Hex Terrains",
    "summary": "Class PlaybackUpdateCellEntityCommandBuffersSystem Inheritance object ComponentSystemBase SystemBase PlaybackUpdateCellEntityCommandBuffersSystem PlaybackUpdateCellPropsCommandBuffersSystem Inherited Members SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.OnUpdate() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.CellEntities.Systems Assembly: fwt.hexterrains.dll Syntax [UpdateInGroup(typeof(HexTerrainsStartPreRenderGroup))] public abstract class PlaybackUpdateCellEntityCommandBuffersSystem : SystemBase Methods UpdateCells(CellEntitiesData) Declaration protected virtual void UpdateCells(CellEntitiesData cellItemsData) Parameters Type Name Description CellEntitiesData cellItemsData Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.CellEntities.Systems.PlaybackUpdateCellPropsCommandBuffersSystem.html": {
    "href": "api/Fwt.HexTerrains.CellEntities.Systems.PlaybackUpdateCellPropsCommandBuffersSystem.html",
    "title": "Class PlaybackUpdateCellPropsCommandBuffersSystem | Hex Terrains",
    "summary": "Class PlaybackUpdateCellPropsCommandBuffersSystem Inheritance object ComponentSystemBase SystemBase PlaybackUpdateCellEntityCommandBuffersSystem PlaybackUpdateCellPropsCommandBuffersSystem Inherited Members PlaybackUpdateCellEntityCommandBuffersSystem.UpdateCells(CellEntitiesData) SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.CellEntities.Systems Assembly: fwt.hexterrains.dll Syntax [UpdateInGroup(typeof(HexTerrainsStartPreRenderGroup))] public class PlaybackUpdateCellPropsCommandBuffersSystem : PlaybackUpdateCellEntityCommandBuffersSystem Methods OnUpdate() Implement OnUpdate() to perform the major work of this system. Declaration protected override void OnUpdate() Overrides Unity.Entities.SystemBase.OnUpdate() Remarks By default, the system invokes `OnUpdate()` once every frame on the main thread. To skip OnUpdate if all of the system's [EntityQueries] are empty, use the [RequireMatchingQueriesForUpdateAttribute]. To limit when OnUpdate is invoked, you can specify components that must exist, or queries that match specific Entities. To do this, call Unity.Entities.ComponentSystemBase.RequireForUpdate<T>() or Unity.Entities.ComponentSystemBase.RequireForUpdate(Unity.Entities.EntityQuery) in the system's OnCreate method. For more information, see [ShouldRunSystem]. The [Entities.ForEach] and [Job.WithCode] constructions provide convenient mechanisms for defining jobs. You can also instantiate and schedule an Unity.Entities.IJobChunk instance; you can use the [C# Job System] or you can perform work on the main thread. If you call Unity.Entities.EntityManager methods that perform structural changes on the main thread, be sure to arrange the system order to minimize the performance impact of the resulting [sync points]. Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.CellEntities.Systems.UpdateCellEntityEntitiesStateSystem.html": {
    "href": "api/Fwt.HexTerrains.CellEntities.Systems.UpdateCellEntityEntitiesStateSystem.html",
    "title": "Class UpdateCellEntityEntitiesStateSystem | Hex Terrains",
    "summary": "Class UpdateCellEntityEntitiesStateSystem Inheritance object ComponentSystemBase SystemBase UpdateCellEntityEntitiesStateSystem UpdateCellPropStateSystem Inherited Members SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.OnUpdate() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.CellEntities.Systems Assembly: fwt.hexterrains.dll Syntax [UpdateInGroup(typeof(HexTerrainsStartPreRenderGroup))] public abstract class UpdateCellEntityEntitiesStateSystem : SystemBase Methods OnCreate() Called when this system is created. Declaration protected override void OnCreate() Overrides Unity.Entities.ComponentSystemBase.OnCreate() Remarks Implement an OnCreate() function to set up system resources when it is created. OnCreate is invoked before the the first time Unity.Entities.ComponentSystemBase.OnStartRunning() and OnUpdate are invoked. UpdateCells(Entity, CellEntitiesData, CellMetricsDataLayer) Declaration public virtual void UpdateCells(Entity layerEntity, CellEntitiesData cellEntityData, CellMetricsDataLayer cellMetrics) Parameters Type Name Description Entity layerEntity CellEntitiesData cellEntityData CellMetricsDataLayer cellMetrics Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.CellEntities.Systems.UpdateCellEntityEntitiesSystem.html": {
    "href": "api/Fwt.HexTerrains.CellEntities.Systems.UpdateCellEntityEntitiesSystem.html",
    "title": "Class UpdateCellEntityEntitiesSystem | Hex Terrains",
    "summary": "Class UpdateCellEntityEntitiesSystem Inheritance object ComponentSystemBase SystemBase UpdateCellEntityEntitiesSystem UpdateCellPropEntitiesSystem Inherited Members SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.OnUpdate() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.CellEntities.Systems Assembly: fwt.hexterrains.dll Syntax [UpdateInGroup(typeof(HexTerrainsInitializationGroup))] [UpdateAfter(typeof(CalcHexGroundCellMetricsSystem))] [UpdateAfter(typeof(CalcHexWaterCellMetricsSystem))] public abstract class UpdateCellEntityEntitiesSystem : SystemBase Methods UpdateCellEntities(Entity, CellEntitiesData, CellMetricsDataLayer) Declaration protected virtual void UpdateCellEntities(Entity layerEntity, CellEntitiesData cellEntitiesData, CellMetricsDataLayer cellMetrics) Parameters Type Name Description Entity layerEntity CellEntitiesData cellEntitiesData CellMetricsDataLayer cellMetrics Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.CellEntities.Systems.UpdateCellPropEntitiesSystem.html": {
    "href": "api/Fwt.HexTerrains.CellEntities.Systems.UpdateCellPropEntitiesSystem.html",
    "title": "Class UpdateCellPropEntitiesSystem | Hex Terrains",
    "summary": "Class UpdateCellPropEntitiesSystem Inheritance object ComponentSystemBase SystemBase UpdateCellEntityEntitiesSystem UpdateCellPropEntitiesSystem Inherited Members UpdateCellEntityEntitiesSystem.UpdateCellEntities(Entity, CellEntitiesData, CellMetricsDataLayer) SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.CellEntities.Systems Assembly: fwt.hexterrains.dll Syntax [UpdateAfter(typeof(CalcCellPropEntitiesSystem))] public class UpdateCellPropEntitiesSystem : UpdateCellEntityEntitiesSystem Methods OnUpdate() Implement OnUpdate() to perform the major work of this system. Declaration protected override void OnUpdate() Overrides Unity.Entities.SystemBase.OnUpdate() Remarks By default, the system invokes `OnUpdate()` once every frame on the main thread. To skip OnUpdate if all of the system's [EntityQueries] are empty, use the [RequireMatchingQueriesForUpdateAttribute]. To limit when OnUpdate is invoked, you can specify components that must exist, or queries that match specific Entities. To do this, call Unity.Entities.ComponentSystemBase.RequireForUpdate<T>() or Unity.Entities.ComponentSystemBase.RequireForUpdate(Unity.Entities.EntityQuery) in the system's OnCreate method. For more information, see [ShouldRunSystem]. The [Entities.ForEach] and [Job.WithCode] constructions provide convenient mechanisms for defining jobs. You can also instantiate and schedule an Unity.Entities.IJobChunk instance; you can use the [C# Job System] or you can perform work on the main thread. If you call Unity.Entities.EntityManager methods that perform structural changes on the main thread, be sure to arrange the system order to minimize the performance impact of the resulting [sync points]. Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.CellEntities.Systems.UpdateCellPropStateSystem.html": {
    "href": "api/Fwt.HexTerrains.CellEntities.Systems.UpdateCellPropStateSystem.html",
    "title": "Class UpdateCellPropStateSystem | Hex Terrains",
    "summary": "Class UpdateCellPropStateSystem Inheritance object ComponentSystemBase SystemBase UpdateCellEntityEntitiesStateSystem UpdateCellPropStateSystem Inherited Members UpdateCellEntityEntitiesStateSystem.OnCreate() UpdateCellEntityEntitiesStateSystem.UpdateCells(Entity, CellEntitiesData, CellMetricsDataLayer) SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.CellEntities.Systems Assembly: fwt.hexterrains.dll Syntax [UpdateInGroup(typeof(HexTerrainsStartPreRenderGroup))] [UpdateAfter(typeof(PlaybackUpdateCellPropsCommandBuffersSystem))] public class UpdateCellPropStateSystem : UpdateCellEntityEntitiesStateSystem Methods OnUpdate() Implement OnUpdate() to perform the major work of this system. Declaration protected override void OnUpdate() Overrides Unity.Entities.SystemBase.OnUpdate() Remarks By default, the system invokes `OnUpdate()` once every frame on the main thread. To skip OnUpdate if all of the system's [EntityQueries] are empty, use the [RequireMatchingQueriesForUpdateAttribute]. To limit when OnUpdate is invoked, you can specify components that must exist, or queries that match specific Entities. To do this, call Unity.Entities.ComponentSystemBase.RequireForUpdate<T>() or Unity.Entities.ComponentSystemBase.RequireForUpdate(Unity.Entities.EntityQuery) in the system's OnCreate method. For more information, see [ShouldRunSystem]. The [Entities.ForEach] and [Job.WithCode] constructions provide convenient mechanisms for defining jobs. You can also instantiate and schedule an Unity.Entities.IJobChunk instance; you can use the [C# Job System] or you can perform work on the main thread. If you call Unity.Entities.EntityManager methods that perform structural changes on the main thread, be sure to arrange the system order to minimize the performance impact of the resulting [sync points]. Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.CellEntities.Systems.html": {
    "href": "api/Fwt.HexTerrains.CellEntities.Systems.html",
    "title": "Namespace Fwt.HexTerrains.CellEntities.Systems | Hex Terrains",
    "summary": "Namespace Fwt.HexTerrains.CellEntities.Systems Classes CacheHexCellEntityDataSystem<TDataLayer> CacheHexCellPropsDataSystem CalcCellEntityColorsSystem CalcCellEntityEntitiesSystem CalcCellPropColorsSystem CalcCellPropEntitiesSystem CleanupCellEntitiesDataSystem CleanupCellEntityPropDataSystem CreateCellEntityPropsDataSystem HexCellEntityDataCache PlaybackUpdateCellEntityCommandBuffersSystem PlaybackUpdateCellPropsCommandBuffersSystem UpdateCellEntityEntitiesStateSystem UpdateCellEntityEntitiesSystem UpdateCellPropEntitiesSystem UpdateCellPropStateSystem"
  },
  "api/Fwt.HexTerrains.CellEntities.html": {
    "href": "api/Fwt.HexTerrains.CellEntities.html",
    "title": "Namespace Fwt.HexTerrains.CellEntities | Hex Terrains",
    "summary": "Namespace Fwt.HexTerrains.CellEntities Classes CellEntityPropsDataAuthoring CellEntity props HexTerrain layer authoring component. Allows to add a CellEntity Props data layer on the terrain. CellEntityPropsDataBaker HexCellEntityAuthoring HexCellEntityBaker HexCellEntityDataAuthoring Base class for HexTerrain layers that contain a CellItem per cell. HexCellItemsDataBaker<TLayer> HexCellPropAuthoring HexCellPropBaker Structs HexCellEntityConfigAuthoring HexCellEntityConfigAuthoring.PrefabConfig"
  },
  "api/Fwt.HexTerrains.CellItems.CellItemConfigAuthoring.html": {
    "href": "api/Fwt.HexTerrains.CellItems.CellItemConfigAuthoring.html",
    "title": "Struct CellItemConfigAuthoring | Hex Terrains",
    "summary": "Struct CellItemConfigAuthoring Authoring structure where the cell item prefab is defined. Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.CellItems Assembly: fwt.hexterrains.dll Syntax [Serializable] public struct CellItemConfigAuthoring Fields Color Declaration public Color32 Color Field Value Type Description Color32 Name Declaration public string Name Field Value Type Description string States Declaration [Tooltip(\"The index of the item in the list == CellItem.State\")] public List<CellItemPrefabAuthoring> States Field Value Type Description List<CellItemPrefabAuthoring> Methods ExtractCellItemConfig(int, RenderEntitiesConfig) Declaration public CellItemConfig ExtractCellItemConfig(int index, RenderEntitiesConfig renderEntities) Parameters Type Name Description int index RenderEntitiesConfig renderEntities Returns Type Description CellItemConfig Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.CellItems.CellItemPrefabAuthoring.html": {
    "href": "api/Fwt.HexTerrains.CellItems.CellItemPrefabAuthoring.html",
    "title": "Class CellItemPrefabAuthoring | Hex Terrains",
    "summary": "Class CellItemPrefabAuthoring Authoring prefab of the renderable CellItem that can be placed in the cell. Inheritance object Object Component Behaviour MonoBehaviour CellItemPrefabAuthoring Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.CellItems Assembly: fwt.hexterrains.dll Syntax public class CellItemPrefabAuthoring : MonoBehaviour Fields Renderers The prefab is used to render an item in the cell that has the State value == this.State Declaration [Tooltip(\"The prefab is used to render an item in the cell that has the State value == this.State\")] public List<MeshRenderer> Renderers Field Value Type Description List<MeshRenderer> Methods ExtractCellItemStateConfig(int, RenderEntitiesConfig) Declaration public CellItemStateConfig ExtractCellItemStateConfig(int state, RenderEntitiesConfig renderEntitiesConfig) Parameters Type Name Description int state RenderEntitiesConfig renderEntitiesConfig Returns Type Description CellItemStateConfig Extension Methods Extensions_UnityObject.SmartDestroy<TObject>(TObject) Extensions_UnityObject.SmartDisableGameObject<TObject>(TObject) Extensions_UnityObject.SmartEnableGameObject<TObject>(TObject) HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.CellItems.CellItemsDataAuthoring.html": {
    "href": "api/Fwt.HexTerrains.CellItems.CellItemsDataAuthoring.html",
    "title": "Class CellItemsDataAuthoring | Hex Terrains",
    "summary": "Class CellItemsDataAuthoring Base class for authoring component for HexTerrains CellItems layer. Cell Item is a renderable item that can occupy a cell (so the data layer contains one cell item per cell) Inheritance object Object Component Behaviour MonoBehaviour CellItemsDataAuthoring CellPropsDataAuthoring Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.CellItems Assembly: fwt.hexterrains.dll Syntax public abstract class CellItemsDataAuthoring : MonoBehaviour Fields ItemConfigs List of cell item config authorings. While baking data from this list is taken to be extract one cell item from one ItemConfigAuthoring. Declaration [Tooltip(\"List of cell item config authorings. While baking data from this list is taken to be extract one cell item from one ItemConfigAuthoring.\")] public List<CellItemConfigAuthoring> ItemConfigs Field Value Type Description List<CellItemConfigAuthoring> RenderEntities RenderEntitiesConfig that holds meshes, materials, and everything needed for rendering using Graphics.DrawMeshInstanced. Declaration [Tooltip(\"RenderEntitiesConfig that holds meshes, materials, and everything needed for rendering using Graphics.DrawMeshInstanced.\")] public RenderEntitiesConfig RenderEntities Field Value Type Description RenderEntitiesConfig Extension Methods Extensions_UnityObject.SmartDestroy<TObject>(TObject) Extensions_UnityObject.SmartDisableGameObject<TObject>(TObject) Extensions_UnityObject.SmartEnableGameObject<TObject>(TObject) HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.CellItems.CellItemsDataBaker-1.html": {
    "href": "api/Fwt.HexTerrains.CellItems.CellItemsDataBaker-1.html",
    "title": "Class CellItemsDataBaker<TAuthoring> | Hex Terrains",
    "summary": "Class CellItemsDataBaker<TAuthoring> Inheritance object IBaker Baker<TAuthoring> CellItemsDataBaker<TAuthoring> CellPropsDataBaker Inherited Members Baker<TAuthoring>.Bake(TAuthoring) IBaker.GetSceneGUID() IBaker.GetComponent<T>() IBaker.GetComponent<T>(Component) IBaker.GetComponent<T>(GameObject) IBaker.GetComponents<T>(List<T>) IBaker.GetComponents<T>(Component, List<T>) IBaker.GetComponents<T>(GameObject, List<T>) IBaker.GetComponents<T>() IBaker.GetComponents<T>(Component) IBaker.GetComponents<T>(GameObject) IBaker.GetComponentInParent<T>() IBaker.GetComponentInParent<T>(Component) IBaker.GetComponentInParent<T>(GameObject) IBaker.GetComponentsInParent<T>(List<T>) IBaker.GetComponentsInParent<T>(Component, List<T>) IBaker.GetComponentsInParent<T>(GameObject, List<T>) IBaker.GetComponentsInParent<T>() IBaker.GetComponentsInParent<T>(Component) IBaker.GetComponentsInParent<T>(GameObject) IBaker.GetComponentInChildren<T>() IBaker.GetComponentInChildren<T>(Component) IBaker.GetComponentInChildren<T>(GameObject) IBaker.GetComponentsInChildren<T>(List<T>) IBaker.GetComponentsInChildren<T>(Component, List<T>) IBaker.GetComponentsInChildren<T>(GameObject, List<T>) IBaker.GetComponentsInChildren<T>() IBaker.GetComponentsInChildren<T>(Component) IBaker.GetComponentsInChildren<T>(GameObject) IBaker.GetParent() IBaker.GetParent(Component) IBaker.GetParent(GameObject) IBaker.GetParents() IBaker.GetParents(Component) IBaker.GetParents(GameObject) IBaker.GetParents(List<GameObject>) IBaker.GetParents(Component, List<GameObject>) IBaker.GetParents(GameObject, List<GameObject>) IBaker.GetChild(int) IBaker.GetChild(Component, int) IBaker.GetChild(GameObject, int) IBaker.GetChildren(bool) IBaker.GetChildren(Component, bool) IBaker.GetChildren(GameObject, bool) IBaker.GetChildren(List<GameObject>, bool) IBaker.GetChildren(Component, List<GameObject>, bool) IBaker.GetChildren(GameObject, List<GameObject>, bool) IBaker.GetChildCount() IBaker.GetChildCount(Component) IBaker.GetChildCount(GameObject) IBaker.GetName() IBaker.GetName(Component) IBaker.GetName(GameObject) IBaker.GetLayer() IBaker.GetLayer(Component) IBaker.GetLayer(GameObject) IBaker.GetTag() IBaker.GetTag(Component) IBaker.GetTag(GameObject) IBaker.GetEntity() IBaker.GetEntity(GameObject) IBaker.GetEntity(Component) IBaker.GetEntity(TransformUsageFlags) IBaker.GetEntity(GameObject, TransformUsageFlags) IBaker.GetEntity(Component, TransformUsageFlags) IBaker.GetEntityWithoutDependency() IBaker.IsActive() IBaker.IsActive(Component) IBaker.IsActive(GameObject) IBaker.IsActiveAndEnabled() IBaker.IsActiveAndEnabled(Component) IBaker.IsStatic() IBaker.IsStatic(Component) IBaker.IsStatic(GameObject) IBaker.IsClient() IBaker.IsServer() IBaker.DependsOn<T>(T) IBaker.DependsOnComponentInParent<T>() IBaker.DependsOnComponentInParent<T>(Component) IBaker.DependsOnComponentInParent<T>(GameObject) IBaker.DependsOnComponentsInParent<T>() IBaker.DependsOnComponentsInParent<T>(Component) IBaker.DependsOnComponentsInParent<T>(GameObject) IBaker.DependsOnComponentInChildren<T>() IBaker.DependsOnComponentInChildren<T>(Component) IBaker.DependsOnComponentInChildren<T>(GameObject) IBaker.DependsOnComponentsInChildren<T>() IBaker.DependsOnComponentsInChildren<T>(GameObject) IBaker.DependsOnComponentsInChildren<T>(Component) IBaker.DependsOnLightBaking() IBaker.AddBlobAsset<T>(ref BlobAssetReference<T>, out Hash128) IBaker.AddBlobAssetWithCustomHash<T>(ref BlobAssetReference<T>, Hash128) IBaker.TryGetBlobAssetReference<T>(Hash128, out BlobAssetReference<T>) IBaker.AddComponent<T>() IBaker.AddComponent<T>(in T) IBaker.AddComponent<T>(Entity) IBaker.AddComponent<T>(Entity, in T) IBaker.AddComponent(ComponentType) IBaker.AddComponent(Entity, ComponentType) IBaker.AddComponent(in ComponentTypeSet) IBaker.AddComponent(Entity, in ComponentTypeSet) IBaker.AddComponentObject<T>(T) IBaker.AddComponentObject<T>(Entity, T) IBaker.AddSharedComponentManaged<T>(T) IBaker.AddSharedComponentManaged<T>(Entity, T) IBaker.AddSharedComponent<T>(T) IBaker.AddSharedComponent<T>(Entity, T) IBaker.AddBuffer<T>() IBaker.AddBuffer<T>(Entity) IBaker.SetComponent<T>(Entity, in T) IBaker.SetComponentEnabled<T>(Entity, bool) IBaker.SetComponentEnabled<T>(bool) IBaker.SetSharedComponentManaged<T>(Entity, in T) IBaker.SetSharedComponent<T>(Entity, in T) IBaker.SetBuffer<T>() IBaker.SetBuffer<T>(Entity) IBaker.AppendToBuffer<T>(T) IBaker.AppendToBuffer<T>(Entity, T) IBaker.CreateAdditionalEntity() IBaker.CreateAdditionalEntity(TransformUsageFlags, bool, string) IBaker.CreateAdditionalEntities(NativeArray<Entity>, TransformUsageFlags, bool) IBaker.RegisterPrefabForBaking(GameObject) IBaker.AddTransformUsageFlags(TransformUsageFlags) IBaker.AddTransformUsageFlags(Entity, TransformUsageFlags) IBaker.IsBakingForEditor() IBaker.GetDotsSettings() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.CellItems Assembly: fwt.hexterrains.dll Syntax public abstract class CellItemsDataBaker<TAuthoring> : Baker<TAuthoring> where TAuthoring : CellItemsDataAuthoring Type Parameters Name Description TAuthoring Methods BakeData(TAuthoring) Declaration public void BakeData(TAuthoring authoring) Parameters Type Name Description TAuthoring authoring Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.CellItems.CellPropsDataAuthoring.html": {
    "href": "api/Fwt.HexTerrains.CellItems.CellPropsDataAuthoring.html",
    "title": "Class CellPropsDataAuthoring | Hex Terrains",
    "summary": "Class CellPropsDataAuthoring CellItem props HexTerrain layer authoring component. Allows to add a CellItem Props data layer on the terrain. Inheritance object Object Component Behaviour MonoBehaviour CellItemsDataAuthoring CellPropsDataAuthoring Inherited Members CellItemsDataAuthoring.RenderEntities CellItemsDataAuthoring.ItemConfigs MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.CellItems Assembly: fwt.hexterrains.dll Syntax public class CellPropsDataAuthoring : CellItemsDataAuthoring Fields ColorMapTextureIndex Index of the ColorTexture to copy colors from the ColorMap. Declaration [Tooltip(\"Index of the ColorTexture to copy colors from the ColorMap.\")] public int ColorMapTextureIndex Field Value Type Description int IsFillWithRandomData If true, the terrain will be filled with random data. Declaration [Tooltip(\"If true, the terrain will be filled with random data.\")] public bool IsFillWithRandomData Field Value Type Description bool MaxCellHeight Maximum cell height for the props. -1 means no limit. Declaration [Tooltip(\"Maximum cell height for the props. -1 means no limit.\")] public int MaxCellHeight Field Value Type Description int MaxRandomPropIndex Maximum index of the random prop terrain to be filled with. Declaration [Tooltip(\"Maximum index of the random prop terrain to be filled with.\")] public int MaxRandomPropIndex Field Value Type Description int MinCellHeight Minimum cell height for the props. -1 means no limit. Declaration [Tooltip(\"Minimum cell height for the props. -1 means no limit.\")] public int MinCellHeight Field Value Type Description int MinRandomPropIndex Minimum index of the random prop terrain to be filled with. Declaration [Tooltip(\"Minimum index of the random prop terrain to be filled with.\")] public int MinRandomPropIndex Field Value Type Description int Extension Methods Extensions_UnityObject.SmartDestroy<TObject>(TObject) Extensions_UnityObject.SmartDisableGameObject<TObject>(TObject) Extensions_UnityObject.SmartEnableGameObject<TObject>(TObject) HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.CellItems.CellPropsDataBaker.html": {
    "href": "api/Fwt.HexTerrains.CellItems.CellPropsDataBaker.html",
    "title": "Class CellPropsDataBaker | Hex Terrains",
    "summary": "Class CellPropsDataBaker Inheritance object IBaker Baker<CellPropsDataAuthoring> CellItemsDataBaker<CellPropsDataAuthoring> CellPropsDataBaker Inherited Members CellItemsDataBaker<CellPropsDataAuthoring>.BakeData(CellPropsDataAuthoring) IBaker.GetSceneGUID() IBaker.GetComponent<T>() IBaker.GetComponent<T>(Component) IBaker.GetComponent<T>(GameObject) IBaker.GetComponents<T>(List<T>) IBaker.GetComponents<T>(Component, List<T>) IBaker.GetComponents<T>(GameObject, List<T>) IBaker.GetComponents<T>() IBaker.GetComponents<T>(Component) IBaker.GetComponents<T>(GameObject) IBaker.GetComponentInParent<T>() IBaker.GetComponentInParent<T>(Component) IBaker.GetComponentInParent<T>(GameObject) IBaker.GetComponentsInParent<T>(List<T>) IBaker.GetComponentsInParent<T>(Component, List<T>) IBaker.GetComponentsInParent<T>(GameObject, List<T>) IBaker.GetComponentsInParent<T>() IBaker.GetComponentsInParent<T>(Component) IBaker.GetComponentsInParent<T>(GameObject) IBaker.GetComponentInChildren<T>() IBaker.GetComponentInChildren<T>(Component) IBaker.GetComponentInChildren<T>(GameObject) IBaker.GetComponentsInChildren<T>(List<T>) IBaker.GetComponentsInChildren<T>(Component, List<T>) IBaker.GetComponentsInChildren<T>(GameObject, List<T>) IBaker.GetComponentsInChildren<T>() IBaker.GetComponentsInChildren<T>(Component) IBaker.GetComponentsInChildren<T>(GameObject) IBaker.GetParent() IBaker.GetParent(Component) IBaker.GetParent(GameObject) IBaker.GetParents() IBaker.GetParents(Component) IBaker.GetParents(GameObject) IBaker.GetParents(List<GameObject>) IBaker.GetParents(Component, List<GameObject>) IBaker.GetParents(GameObject, List<GameObject>) IBaker.GetChild(int) IBaker.GetChild(Component, int) IBaker.GetChild(GameObject, int) IBaker.GetChildren(bool) IBaker.GetChildren(Component, bool) IBaker.GetChildren(GameObject, bool) IBaker.GetChildren(List<GameObject>, bool) IBaker.GetChildren(Component, List<GameObject>, bool) IBaker.GetChildren(GameObject, List<GameObject>, bool) IBaker.GetChildCount() IBaker.GetChildCount(Component) IBaker.GetChildCount(GameObject) IBaker.GetName() IBaker.GetName(Component) IBaker.GetName(GameObject) IBaker.GetLayer() IBaker.GetLayer(Component) IBaker.GetLayer(GameObject) IBaker.GetTag() IBaker.GetTag(Component) IBaker.GetTag(GameObject) IBaker.GetEntity() IBaker.GetEntity(GameObject) IBaker.GetEntity(Component) IBaker.GetEntity(TransformUsageFlags) IBaker.GetEntity(GameObject, TransformUsageFlags) IBaker.GetEntity(Component, TransformUsageFlags) IBaker.GetEntityWithoutDependency() IBaker.IsActive() IBaker.IsActive(Component) IBaker.IsActive(GameObject) IBaker.IsActiveAndEnabled() IBaker.IsActiveAndEnabled(Component) IBaker.IsStatic() IBaker.IsStatic(Component) IBaker.IsStatic(GameObject) IBaker.IsClient() IBaker.IsServer() IBaker.DependsOn<T>(T) IBaker.DependsOnComponentInParent<T>() IBaker.DependsOnComponentInParent<T>(Component) IBaker.DependsOnComponentInParent<T>(GameObject) IBaker.DependsOnComponentsInParent<T>() IBaker.DependsOnComponentsInParent<T>(Component) IBaker.DependsOnComponentsInParent<T>(GameObject) IBaker.DependsOnComponentInChildren<T>() IBaker.DependsOnComponentInChildren<T>(Component) IBaker.DependsOnComponentInChildren<T>(GameObject) IBaker.DependsOnComponentsInChildren<T>() IBaker.DependsOnComponentsInChildren<T>(GameObject) IBaker.DependsOnComponentsInChildren<T>(Component) IBaker.DependsOnLightBaking() IBaker.AddBlobAsset<T>(ref BlobAssetReference<T>, out Hash128) IBaker.AddBlobAssetWithCustomHash<T>(ref BlobAssetReference<T>, Hash128) IBaker.TryGetBlobAssetReference<T>(Hash128, out BlobAssetReference<T>) IBaker.AddComponent<T>() IBaker.AddComponent<T>(in T) IBaker.AddComponent<T>(Entity) IBaker.AddComponent<T>(Entity, in T) IBaker.AddComponent(ComponentType) IBaker.AddComponent(Entity, ComponentType) IBaker.AddComponent(in ComponentTypeSet) IBaker.AddComponent(Entity, in ComponentTypeSet) IBaker.AddComponentObject<T>(T) IBaker.AddComponentObject<T>(Entity, T) IBaker.AddSharedComponentManaged<T>(T) IBaker.AddSharedComponentManaged<T>(Entity, T) IBaker.AddSharedComponent<T>(T) IBaker.AddSharedComponent<T>(Entity, T) IBaker.AddBuffer<T>() IBaker.AddBuffer<T>(Entity) IBaker.SetComponent<T>(Entity, in T) IBaker.SetComponentEnabled<T>(Entity, bool) IBaker.SetComponentEnabled<T>(bool) IBaker.SetSharedComponentManaged<T>(Entity, in T) IBaker.SetSharedComponent<T>(Entity, in T) IBaker.SetBuffer<T>() IBaker.SetBuffer<T>(Entity) IBaker.AppendToBuffer<T>(T) IBaker.AppendToBuffer<T>(Entity, T) IBaker.CreateAdditionalEntity() IBaker.CreateAdditionalEntity(TransformUsageFlags, bool, string) IBaker.CreateAdditionalEntities(NativeArray<Entity>, TransformUsageFlags, bool) IBaker.RegisterPrefabForBaking(GameObject) IBaker.AddTransformUsageFlags(TransformUsageFlags) IBaker.AddTransformUsageFlags(Entity, TransformUsageFlags) IBaker.IsBakingForEditor() IBaker.GetDotsSettings() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.CellItems Assembly: fwt.hexterrains.dll Syntax public class CellPropsDataBaker : CellItemsDataBaker<CellPropsDataAuthoring> Methods Bake(CellPropsDataAuthoring) Called in the baking process to bake the authoring component Declaration public override void Bake(CellPropsDataAuthoring authoring) Parameters Type Name Description CellPropsDataAuthoring authoring The authoring component to bake Overrides Baker<CellPropsDataAuthoring>.Bake(CellPropsDataAuthoring) Remarks This method will be called for every instance of TAuthoringType in order to bake that instance. Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.CellItems.Data.CellItem.html": {
    "href": "api/Fwt.HexTerrains.CellItems.Data.CellItem.html",
    "title": "Struct CellItem | Hex Terrains",
    "summary": "Struct CellItem Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.CellItems.Data Assembly: fwt.hexterrains.dll Syntax public struct CellItem Fields Index Declaration public ushort Index Field Value Type Description ushort State Declaration public byte State Field Value Type Description byte Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.CellItems.Data.CellItemConfig.html": {
    "href": "api/Fwt.HexTerrains.CellItems.Data.CellItemConfig.html",
    "title": "Struct CellItemConfig | Hex Terrains",
    "summary": "Struct CellItemConfig Implements IBufferElementData Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.CellItems.Data Assembly: fwt.hexterrains.dll Syntax [BurstCompile] [Serializable] public struct CellItemConfig : IBufferElementData Fields Color Declaration public Color32 Color Field Value Type Description Color32 Index Declaration public int Index Field Value Type Description int StateConfigs Declaration public FixedList8<CellItemStateConfig> StateConfigs Field Value Type Description FixedList8<CellItemStateConfig> Methods GetStateConfig(int) Declaration [BurstCompile] public CellItemStateConfig GetStateConfig(int stateIndex) Parameters Type Name Description int stateIndex Returns Type Description CellItemStateConfig Implements Unity.Entities.IBufferElementData Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.CellItems.Data.CellItemPropsData.html": {
    "href": "api/Fwt.HexTerrains.CellItems.Data.CellItemPropsData.html",
    "title": "Class CellItemPropsData | Hex Terrains",
    "summary": "Class CellItemPropsData Inheritance object CellItemsData CellItemPropsData Implements IDisposable IComponentData IQueryTypeParameter Inherited Members CellItemsData.Settings CellItemsData.ItemConfigs CellItemsData._renderEntities CellItemsData.RenderEntities CellItemsData.CellItems CellItemsData.CellTransforms CellItemsData.ItemsColorMap CellItemsData.RenderEntitiesConfig CellItemsData.ColorMapTextureIndex CellItemsData.Init(HexTerrainSettings, NativeArray<CellItemConfig>, RenderEntitiesConfig) CellItemsData.Init(HexTerrainSettings) CellItemsData.InitCellItemConfigs(NativeArray<CellItemConfig>) CellItemsData.Resize(int2) CellItemsData.CompleteAllJobs() CellItemsData.GetCellItem(int) CellItemsData.SetCellItem(int, CellItem) CellItemsData.SetAllCellsItem(CellItem) CellItemsData.SetAllDirty(bool) CellItemsData.Cleanup() CellItemsData.CleanupAsync() CellItemsData.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.CellItems.Data Assembly: fwt.hexterrains.dll Syntax public class CellItemPropsData : CellItemsData, IDisposable, IComponentData, IQueryTypeParameter Implements IDisposable Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.CellItems.Data.CellItemStateConfig.html": {
    "href": "api/Fwt.HexTerrains.CellItems.Data.CellItemStateConfig.html",
    "title": "Struct CellItemStateConfig | Hex Terrains",
    "summary": "Struct CellItemStateConfig Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.CellItems.Data Assembly: fwt.hexterrains.dll Syntax [Serializable] public struct CellItemStateConfig Fields RenderEntities Declaration public FixedList8<RenderEntitySettings> RenderEntities Field Value Type Description FixedList8<RenderEntitySettings> State Declaration public int State Field Value Type Description int Transforms Declaration public FixedList8<Matrix4x4> Transforms Field Value Type Description FixedList8<Matrix4x4> Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.CellItems.Data.CellItemsData.html": {
    "href": "api/Fwt.HexTerrains.CellItems.Data.CellItemsData.html",
    "title": "Class CellItemsData | Hex Terrains",
    "summary": "Class CellItemsData Base class for HexTerrain layers that contain a renderable CellItem per cell. Inheritance object CellItemsData CellItemPropsData Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.CellItems.Data Assembly: fwt.hexterrains.dll Syntax public abstract class CellItemsData : IDisposable Fields CellItems Data layer for storing a CellItem per cell Declaration public CellItemDataLayer CellItems Field Value Type Description CellItemDataLayer CellTransforms Data layer for storing a CellTransform per cell (taken from the HexSurfaceData layer) Declaration public CellTransformDataLayer CellTransforms Field Value Type Description CellTransformDataLayer ItemsColorMap Data layer for storing a Color per cell Declaration public CellColorsDataLayer ItemsColorMap Field Value Type Description CellColorsDataLayer RenderEntitiesConfig RenderEntitiesConfig that stores meshes, materials and other settings for rendering meshes using Graphics.DrawMeshInstanced Declaration public RenderEntitiesConfig RenderEntitiesConfig Field Value Type Description RenderEntitiesConfig _renderEntities Declaration protected NativeParallelMultiHashMap<RenderEntitySettings, RenderEntity> _renderEntities Field Value Type Description NativeParallelMultiHashMap<RenderEntitySettings, RenderEntity> Properties ColorMapTextureIndex Index of the texture in the list of ColorMapTextures. Used externally in systems. Systems read this value to know which texture to fill with colors from ItemsColorMap data layer ItemsColorMap. That texture is expected to be used in materials or/and UI like minimap. Declaration public int ColorMapTextureIndex { get; set; } Property Value Type Description int ItemConfigs List of configs for every possible CellItem index Declaration public NativeList<CellItemConfig> ItemConfigs { get; protected set; } Property Value Type Description NativeList<CellItemConfig> RenderEntities MultiHashMap of RenderEntity that are used to render the CellItems. Key = RenderEntitySettings, Value = RenderEntity Declaration public NativeParallelMultiHashMap<RenderEntitySettings, RenderEntity> RenderEntities { get; protected set; } Property Value Type Description NativeParallelMultiHashMap<RenderEntitySettings, RenderEntity> Settings Settings of the Terrain this layer is attached to Declaration public HexTerrainSettings Settings { get; protected set; } Property Value Type Description HexTerrainSettings Methods Cleanup() Every frame there is a cleanup stage. This function is called. Usually used to clean the dirty flags. Declaration public virtual void Cleanup() CleanupAsync() Async version of Cleanup() Cleanup() Difference between regular Cleanup() is that it schedules jobs that clean up data layers, so you don't have to wait for the results and can continue working. Every frame there is a cleanup stage. This function is called. Usually used to clean the dirty flags. Declaration public virtual void CleanupAsync() CompleteAllJobs() Completes all jobs that are scheduled for this layer. Declaration public virtual void CompleteAllJobs() Dispose() Declaration public virtual void Dispose() GetCellItem(int) Gets the CellItem value from the cell at the given index. Declaration public virtual CellItem? GetCellItem(int cellIndex) Parameters Type Name Description int cellIndex cell index where to get data from Returns Type Description CellItem? CellItem if found, otherwise - null Init(HexTerrainSettings) Initializes/Reinitializes the CellItems data. Declaration public virtual void Init(HexTerrainSettings settings) Parameters Type Name Description HexTerrainSettings settings new terrain settings Init(HexTerrainSettings, NativeArray<CellItemConfig>, RenderEntitiesConfig) Initializes/Reinitializes the cell entities data. Calls InitCellItemConfigs() internally to copy the color palette from the given array InitCellItemConfigs(NativeArray<CellItemConfig>). Only copies data from the copyItemConfigsFrom array, does not change or cache, so it is safe to dispose it after this call. Declaration public virtual void Init(HexTerrainSettings settings, NativeArray<CellItemConfig> copyItemConfigFrom, RenderEntitiesConfig renderConfig) Parameters Type Name Description HexTerrainSettings settings new terrain settings NativeArray<CellItemConfig> copyItemConfigFrom array of colors per CellItem index to copy a ItemConfigs from RenderEntitiesConfig renderConfig RenderEntitiesConfig that stores meshes, materials and other settings for rendering meshes using Graphics.DrawMeshInstanced InitCellItemConfigs(NativeArray<CellItemConfig>) Copies an ItemConfigs from the given array. Does not change or cache the array, so it is safe to dispose it after this call. copyFrom array is expected to have the CellItem indexes length, so there is one config per possible CellItem index. CellItem.Index == index in copyFrom array. Declaration protected virtual void InitCellItemConfigs(NativeArray<CellItemConfig> copyItemsConfigFrom) Parameters Type Name Description NativeArray<CellItemConfig> copyItemsConfigFrom Resize(int2) Resizes the CellItems data. Calls Init() method to reinitialize the CellItems data. Declaration public virtual void Resize(int2 terrainSize) Parameters Type Name Description int2 terrainSize SetAllCellsItem(CellItem) Sets the CellItem value to all cells in the layer. Declaration public virtual bool SetAllCellsItem(CellItem value) Parameters Type Name Description CellItem value value to set to every cell Returns Type Description bool true if data was set, otherwise - false SetAllDirty(bool) Sets the dirty flag for all the data layers. If isDirty is true, all data layers will be marked as dirty and will be recalculated. If isDirty is false, all data layers will be marked as clean and will not be recalculated. Declaration public virtual void SetAllDirty(bool isDirty) Parameters Type Name Description bool isDirty SetCellItem(int, CellItem) Sets the CellItem value to the cell at the given index. Declaration public virtual bool SetCellItem(int cellIndex, CellItem item) Parameters Type Name Description int cellIndex cell index of the cell to set data to CellItem item data to set into the cell at cellIndex index Returns Type Description bool true if data was set, otherwise - false Implements IDisposable Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.CellItems.Data.CreateCellPropsDataRequest.html": {
    "href": "api/Fwt.HexTerrains.CellItems.Data.CreateCellPropsDataRequest.html",
    "title": "Struct CreateCellPropsDataRequest | Hex Terrains",
    "summary": "Struct CreateCellPropsDataRequest Implements IComponentData IQueryTypeParameter Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.CellItems.Data Assembly: fwt.hexterrains.dll Syntax public struct CreateCellPropsDataRequest : IComponentData, IQueryTypeParameter Fields ColorMapTextureIndex Declaration public int ColorMapTextureIndex Field Value Type Description int IsFillWithRandomData Declaration public bool IsFillWithRandomData Field Value Type Description bool MaxCellHeight Declaration public int MaxCellHeight Field Value Type Description int MaxRandomPropIndex Declaration public int MaxRandomPropIndex Field Value Type Description int MinCellHeight Declaration public int MinCellHeight Field Value Type Description int MinRandomPropIndex Declaration public int MinRandomPropIndex Field Value Type Description int Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.CellItems.Data.RenderEntitiesConfigRef.html": {
    "href": "api/Fwt.HexTerrains.CellItems.Data.RenderEntitiesConfigRef.html",
    "title": "Struct RenderEntitiesConfigRef | Hex Terrains",
    "summary": "Struct RenderEntitiesConfigRef Implements IComponentData IQueryTypeParameter Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.CellItems.Data Assembly: fwt.hexterrains.dll Syntax public struct RenderEntitiesConfigRef : IComponentData, IQueryTypeParameter Fields Value Declaration public UnityObjectRef<RenderEntitiesConfig> Value Field Value Type Description UnityObjectRef<RenderEntitiesConfig> Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.CellItems.Data.html": {
    "href": "api/Fwt.HexTerrains.CellItems.Data.html",
    "title": "Namespace Fwt.HexTerrains.CellItems.Data | Hex Terrains",
    "summary": "Namespace Fwt.HexTerrains.CellItems.Data Classes CellItemPropsData CellItemsData Base class for HexTerrain layers that contain a renderable CellItem per cell. Structs CellItem CellItemConfig CellItemStateConfig CreateCellPropsDataRequest RenderEntitiesConfigRef"
  },
  "api/Fwt.HexTerrains.CellItems.DataLayers.CellItemDataLayer.html": {
    "href": "api/Fwt.HexTerrains.CellItems.DataLayers.CellItemDataLayer.html",
    "title": "Class CellItemDataLayer | Hex Terrains",
    "summary": "Class CellItemDataLayer Inheritance object DataLayer ChunkedDataLayer NativeListChunkedDataLayer<CellItem> HexTerrainNativeListChunkedDataLayer<CellItem> CellItemDataLayer Implements IDisposable ICommitChanges IListDataLayer<CellItem> Inherited Members HexTerrainNativeListChunkedDataLayer<CellItem>._settings HexTerrainNativeListChunkedDataLayer<CellItem>.Settings HexTerrainNativeListChunkedDataLayer<CellItem>.CellsGridSize HexTerrainNativeListChunkedDataLayer<CellItem>.ChunkGridSize HexTerrainNativeListChunkedDataLayer<CellItem>.ChunkSize HexTerrainNativeListChunkedDataLayer<CellItem>.IsConnectedHorizontally HexTerrainNativeListChunkedDataLayer<CellItem>.IsConnectedVertically HexTerrainNativeListChunkedDataLayer<CellItem>.Init(int, HexTerrainSettings) NativeListChunkedDataLayer<CellItem>._data NativeListChunkedDataLayer<CellItem>.Data NativeListChunkedDataLayer<CellItem>.Length NativeListChunkedDataLayer<CellItem>.Init(int) NativeListChunkedDataLayer<CellItem>.GetData(int) NativeListChunkedDataLayer<CellItem>.SetData(int, CellItem) NativeListChunkedDataLayer<CellItem>.SetData(CellItem[]) NativeListChunkedDataLayer<CellItem>.FillData(CellItem) NativeListChunkedDataLayer<CellItem>.TryGetData(int, out CellItem) NativeListChunkedDataLayer<CellItem>.TrySetData(int, CellItem) NativeListChunkedDataLayer<CellItem>.DisposeAllItems() NativeListChunkedDataLayer<CellItem>.DisposeExcessItems(int) NativeListChunkedDataLayer<CellItem>.DisposeDataItem(CellItem) NativeListChunkedDataLayer<CellItem>.Dispose() ChunkedDataLayer.ChunksCount ChunkedDataLayer.ChunkDirtyGrid ChunkedDataLayer.DirtyChunks ChunkedDataLayer.SetCellDirty(int) ChunkedDataLayer.SetCellDirty(int, bool) ChunkedDataLayer.GetIsChunkDirty(int) ChunkedDataLayer.SetChunkDirty(int, bool) ChunkedDataLayer.SetAllChunksDirty(bool) ChunkedDataLayer.SetAllChunksDirtyAsync(bool, JobHandle) ChunkedDataLayer.SetAllChunksDirty() ChunkedDataLayer.ClearAllChunksDirty() ChunkedDataLayer.MergeChunkDirtyGrids(ChunkedDataLayer, JobHandle) ChunkedDataLayer.MergeChunkDirtyGrids(ChunkedDataLayer, ChunkedDataLayer, JobHandle) ChunkedDataLayer.MergeChunkDirtyGrids(ChunkedDataLayer, ChunkedDataLayer, ChunkedDataLayer, JobHandle) ChunkedDataLayer.MergeChunkDirtyGrids(ChunkedDataLayer, ChunkedDataLayer, ChunkedDataLayer, ChunkedDataLayer, JobHandle) ChunkedDataLayer.GetChunkIndexByCellIndex(int) ChunkedDataLayer.GetChunkCoord(int2) ChunkedDataLayer.GetChunkCoord(int) ChunkedDataLayer.GetChunkIndex(int2) ChunkedDataLayer.GetCellCoord(int) ChunkedDataLayer.GetCellIndex(int2) ChunkedDataLayer.ResolveCellCoord(int2) ChunkedDataLayer.ResolveChunkCoord(int2) DataLayer._readJobsDependency DataLayer.ReadDependency DataLayer._writeJobsDependency DataLayer.WriteDependency DataLayer.CombinedDependency DataLayer._isDirty DataLayer.IsDirty DataLayer._version DataLayer.Version DataLayer.AddReadDependency(JobHandle) DataLayer.AddWriteDependency(JobHandle) DataLayer.SetReadDependency(JobHandle) DataLayer.SetWriteDependency(JobHandle) DataLayer.PrepareToWrite() DataLayer.PrepareToRead() DataLayer.OpenToRead() DataLayer.OpenToWrite() DataLayer.CompleteReadJobs() DataLayer.CompleteWriteJobs() DataLayer.CompleteAllJobs() DataLayer.CommitChanges() DataLayer.SetDirty(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.CellItems.DataLayers Assembly: fwt.hexterrains.dll Syntax public class CellItemDataLayer : HexTerrainNativeListChunkedDataLayer<CellItem>, IDisposable, ICommitChanges, IListDataLayer<CellItem> Properties IsDisposableItems If true, means when layer is resized or disposed, all items that are removed will be disposed (see nested classes description for details as the process may be different from layer to layer) Declaration public override bool IsDisposableItems { get; } Property Value Type Description bool Overrides DataLayer.IsDisposableItems Methods Cleanup() Declaration public override void Cleanup() Overrides HexTerrainNativeListChunkedDataLayer<CellItem>.Cleanup() CleanupAsync() Declaration public override JobHandle CleanupAsync() Returns Type Description JobHandle Overrides HexTerrainNativeListChunkedDataLayer<CellItem>.CleanupAsync() Implements IDisposable ICommitChanges IListDataLayer<TItem> Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.CellItems.DataLayers.html": {
    "href": "api/Fwt.HexTerrains.CellItems.DataLayers.html",
    "title": "Namespace Fwt.HexTerrains.CellItems.DataLayers | Hex Terrains",
    "summary": "Namespace Fwt.HexTerrains.CellItems.DataLayers Classes CellItemDataLayer"
  },
  "api/Fwt.HexTerrains.CellItems.Jobs.CalcCellItemColorsJob.html": {
    "href": "api/Fwt.HexTerrains.CellItems.Jobs.CalcCellItemColorsJob.html",
    "title": "Struct CalcCellItemColorsJob | Hex Terrains",
    "summary": "Struct CalcCellItemColorsJob Implements IJobParallelFor Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.CellItems.Jobs Assembly: fwt.hexterrains.dll Syntax [BurstCompile] public struct CalcCellItemColorsJob : IJobParallelFor Fields CellItemColors Declaration [WriteOnly] public NativeArray<Color32> CellItemColors Field Value Type Description NativeArray<Color32> CellItems Declaration [ReadOnly] public NativeArray<CellItem> CellItems Field Value Type Description NativeArray<CellItem> ChunkDirtyGrid Declaration [ReadOnly] public NativeArray<bool> ChunkDirtyGrid Field Value Type Description NativeArray<bool> ItemConfigs Declaration [ReadOnly] public NativeArray<CellItemConfig> ItemConfigs Field Value Type Description NativeArray<CellItemConfig> Settings Declaration public HexTerrainSettings Settings Field Value Type Description HexTerrainSettings Methods Execute(int) Performs work against a specific iteration index. Declaration public void Execute(int index) Parameters Type Name Description int index The index of the Parallel for loop at which to perform work. Implements Unity.Jobs.IJobParallelFor Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.CellItems.Jobs.CalcCellItemsJob.html": {
    "href": "api/Fwt.HexTerrains.CellItems.Jobs.CalcCellItemsJob.html",
    "title": "Struct CalcCellItemsJob | Hex Terrains",
    "summary": "Struct CalcCellItemsJob Implements IJobParallelFor Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.CellItems.Jobs Assembly: fwt.hexterrains.dll Syntax [BurstCompile] public struct CalcCellItemsJob : IJobParallelFor Fields CellItems Declaration [ReadOnly] public NativeArray<CellItem> CellItems Field Value Type Description NativeArray<CellItem> CellMetrics Declaration [ReadOnly] public NativeArray<HexCellMetrics> CellMetrics Field Value Type Description NativeArray<HexCellMetrics> ChunkVisibilityGrid Declaration [ReadOnly] public NativeArray<ChunkVisibility> ChunkVisibilityGrid Field Value Type Description NativeArray<ChunkVisibility> ItemConfigs Declaration [ReadOnly] public NativeArray<CellItemConfig> ItemConfigs Field Value Type Description NativeArray<CellItemConfig> RenderEntities Declaration [WriteOnly] public NativeParallelMultiHashMap<RenderEntitySettings, RenderEntity>.ParallelWriter RenderEntities Field Value Type Description NativeParallelMultiHashMap<RenderEntitySettings, RenderEntity>.ParallelWriter Settings Declaration public HexTerrainSettings Settings Field Value Type Description HexTerrainSettings Methods Execute(int) Performs work against a specific iteration index. Declaration public void Execute(int index) Parameters Type Name Description int index The index of the Parallel for loop at which to perform work. Implements Unity.Jobs.IJobParallelFor Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.CellItems.Jobs.html": {
    "href": "api/Fwt.HexTerrains.CellItems.Jobs.html",
    "title": "Namespace Fwt.HexTerrains.CellItems.Jobs | Hex Terrains",
    "summary": "Namespace Fwt.HexTerrains.CellItems.Jobs Structs CalcCellItemColorsJob CalcCellItemsJob"
  },
  "api/Fwt.HexTerrains.CellItems.Systems.CalcCellItemsColorsSystem.html": {
    "href": "api/Fwt.HexTerrains.CellItems.Systems.CalcCellItemsColorsSystem.html",
    "title": "Class CalcCellItemsColorsSystem | Hex Terrains",
    "summary": "Class CalcCellItemsColorsSystem Inheritance object ComponentSystemBase SystemBase CalcCellItemsColorsSystem CalcCellPropsColorsSystem Inherited Members SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.OnUpdate() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.CellItems.Systems Assembly: fwt.hexterrains.dll Syntax public abstract class CalcCellItemsColorsSystem : SystemBase Methods UpdateItems(Entity, CellItemsData) Declaration public virtual void UpdateItems(Entity entity, CellItemsData itemsData) Parameters Type Name Description Entity entity CellItemsData itemsData Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.CellItems.Systems.CalcCellItemsSystem.html": {
    "href": "api/Fwt.HexTerrains.CellItems.Systems.CalcCellItemsSystem.html",
    "title": "Class CalcCellItemsSystem | Hex Terrains",
    "summary": "Class CalcCellItemsSystem Inheritance object ComponentSystemBase SystemBase CalcCellItemsSystem CalcCellPropsSystem Inherited Members SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.OnUpdate() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.CellItems.Systems Assembly: fwt.hexterrains.dll Syntax public abstract class CalcCellItemsSystem : SystemBase Methods UpdateItems(in CellItemsData, in HexGroundData, ChunksGridData) Declaration public virtual void UpdateItems(in CellItemsData cellItemsData, in HexGroundData terrainData, ChunksGridData chunksData) Parameters Type Name Description CellItemsData cellItemsData HexGroundData terrainData ChunksGridData chunksData Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.CellItems.Systems.CalcCellPropsColorsSystem.html": {
    "href": "api/Fwt.HexTerrains.CellItems.Systems.CalcCellPropsColorsSystem.html",
    "title": "Class CalcCellPropsColorsSystem | Hex Terrains",
    "summary": "Class CalcCellPropsColorsSystem Inheritance object ComponentSystemBase SystemBase CalcCellItemsColorsSystem CalcCellPropsColorsSystem Inherited Members CalcCellItemsColorsSystem.UpdateItems(Entity, CellItemsData) SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.CellItems.Systems Assembly: fwt.hexterrains.dll Syntax [UpdateInGroup(typeof(HexTerrainsInitializationGroup))] public class CalcCellPropsColorsSystem : CalcCellItemsColorsSystem Methods OnCreateForCompiler() Declaration protected override void OnCreateForCompiler() Overrides Unity.Entities.ComponentSystemBase.OnCreateForCompiler() OnUpdate() Implement OnUpdate() to perform the major work of this system. Declaration protected override void OnUpdate() Overrides Unity.Entities.SystemBase.OnUpdate() Remarks By default, the system invokes `OnUpdate()` once every frame on the main thread. To skip OnUpdate if all of the system's [EntityQueries] are empty, use the [RequireMatchingQueriesForUpdateAttribute]. To limit when OnUpdate is invoked, you can specify components that must exist, or queries that match specific Entities. To do this, call Unity.Entities.ComponentSystemBase.RequireForUpdate<T>() or Unity.Entities.ComponentSystemBase.RequireForUpdate(Unity.Entities.EntityQuery) in the system's OnCreate method. For more information, see [ShouldRunSystem]. The [Entities.ForEach] and [Job.WithCode] constructions provide convenient mechanisms for defining jobs. You can also instantiate and schedule an Unity.Entities.IJobChunk instance; you can use the [C# Job System] or you can perform work on the main thread. If you call Unity.Entities.EntityManager methods that perform structural changes on the main thread, be sure to arrange the system order to minimize the performance impact of the resulting [sync points]. Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.CellItems.Systems.CalcCellPropsSystem.html": {
    "href": "api/Fwt.HexTerrains.CellItems.Systems.CalcCellPropsSystem.html",
    "title": "Class CalcCellPropsSystem | Hex Terrains",
    "summary": "Class CalcCellPropsSystem Inheritance object ComponentSystemBase SystemBase CalcCellItemsSystem CalcCellPropsSystem Inherited Members CalcCellItemsSystem.UpdateItems(in CellItemsData, in HexGroundData, ChunksGridData) SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.CellItems.Systems Assembly: fwt.hexterrains.dll Syntax [UpdateInGroup(typeof(HexTerrainsInitializationGroup))] [UpdateAfter(typeof(CalcChunkVisibilitySystem))] [UpdateAfter(typeof(CalcHexGroundCellMetricsSystem))] [UpdateAfter(typeof(CalcHexWaterCellMetricsSystem))] public class CalcCellPropsSystem : CalcCellItemsSystem Methods OnCreateForCompiler() Declaration protected override void OnCreateForCompiler() Overrides Unity.Entities.ComponentSystemBase.OnCreateForCompiler() OnUpdate() Implement OnUpdate() to perform the major work of this system. Declaration protected override void OnUpdate() Overrides Unity.Entities.SystemBase.OnUpdate() Remarks By default, the system invokes `OnUpdate()` once every frame on the main thread. To skip OnUpdate if all of the system's [EntityQueries] are empty, use the [RequireMatchingQueriesForUpdateAttribute]. To limit when OnUpdate is invoked, you can specify components that must exist, or queries that match specific Entities. To do this, call Unity.Entities.ComponentSystemBase.RequireForUpdate<T>() or Unity.Entities.ComponentSystemBase.RequireForUpdate(Unity.Entities.EntityQuery) in the system's OnCreate method. For more information, see [ShouldRunSystem]. The [Entities.ForEach] and [Job.WithCode] constructions provide convenient mechanisms for defining jobs. You can also instantiate and schedule an Unity.Entities.IJobChunk instance; you can use the [C# Job System] or you can perform work on the main thread. If you call Unity.Entities.EntityManager methods that perform structural changes on the main thread, be sure to arrange the system order to minimize the performance impact of the resulting [sync points]. Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.CellItems.Systems.CleanupCellItemsDataSystem.html": {
    "href": "api/Fwt.HexTerrains.CellItems.Systems.CleanupCellItemsDataSystem.html",
    "title": "Class CleanupCellItemsDataSystem | Hex Terrains",
    "summary": "Class CleanupCellItemsDataSystem Inheritance object ComponentSystemBase SystemBase CleanupCellItemsDataSystem CleanupCellPropsDataSystem Inherited Members SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.OnUpdate() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.CellItems.Systems Assembly: fwt.hexterrains.dll Syntax [UpdateInGroup(typeof(HexTerrainsCleanupGroup))] public abstract class CleanupCellItemsDataSystem : SystemBase Methods UpdateItems(CellItemsData) Declaration public virtual void UpdateItems(CellItemsData cellItemsData) Parameters Type Name Description CellItemsData cellItemsData Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.CellItems.Systems.CleanupCellPropsDataSystem.html": {
    "href": "api/Fwt.HexTerrains.CellItems.Systems.CleanupCellPropsDataSystem.html",
    "title": "Class CleanupCellPropsDataSystem | Hex Terrains",
    "summary": "Class CleanupCellPropsDataSystem Inheritance object ComponentSystemBase SystemBase CleanupCellItemsDataSystem CleanupCellPropsDataSystem Inherited Members CleanupCellItemsDataSystem.UpdateItems(CellItemsData) SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.CellItems.Systems Assembly: fwt.hexterrains.dll Syntax [UpdateInGroup(typeof(HexTerrainsCleanupGroup))] public class CleanupCellPropsDataSystem : CleanupCellItemsDataSystem Methods OnCreateForCompiler() Declaration protected override void OnCreateForCompiler() Overrides Unity.Entities.ComponentSystemBase.OnCreateForCompiler() OnUpdate() Implement OnUpdate() to perform the major work of this system. Declaration protected override void OnUpdate() Overrides Unity.Entities.SystemBase.OnUpdate() Remarks By default, the system invokes `OnUpdate()` once every frame on the main thread. To skip OnUpdate if all of the system's [EntityQueries] are empty, use the [RequireMatchingQueriesForUpdateAttribute]. To limit when OnUpdate is invoked, you can specify components that must exist, or queries that match specific Entities. To do this, call Unity.Entities.ComponentSystemBase.RequireForUpdate<T>() or Unity.Entities.ComponentSystemBase.RequireForUpdate(Unity.Entities.EntityQuery) in the system's OnCreate method. For more information, see [ShouldRunSystem]. The [Entities.ForEach] and [Job.WithCode] constructions provide convenient mechanisms for defining jobs. You can also instantiate and schedule an Unity.Entities.IJobChunk instance; you can use the [C# Job System] or you can perform work on the main thread. If you call Unity.Entities.EntityManager methods that perform structural changes on the main thread, be sure to arrange the system order to minimize the performance impact of the resulting [sync points]. Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.CellItems.Systems.CreateCellPropsDataSystem.html": {
    "href": "api/Fwt.HexTerrains.CellItems.Systems.CreateCellPropsDataSystem.html",
    "title": "Class CreateCellPropsDataSystem | Hex Terrains",
    "summary": "Class CreateCellPropsDataSystem Inheritance object ComponentSystemBase SystemBase CreateCellPropsDataSystem Inherited Members SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.CellItems.Systems Assembly: fwt.hexterrains.dll Syntax [UpdateInGroup(typeof(CreateHexTerrainsGroup))] [UpdateAfter(typeof(CreateHexGroundDataSystem))] public class CreateCellPropsDataSystem : SystemBase Methods FillWithRandomData(CellItemPropsData, HexSurfaceData, CreateCellPropsDataRequest, HexTerrainSettings) Declaration protected virtual void FillWithRandomData(CellItemPropsData cellPropsData, HexSurfaceData surfaceData, CreateCellPropsDataRequest request, HexTerrainSettings settings) Parameters Type Name Description CellItemPropsData cellPropsData HexSurfaceData surfaceData CreateCellPropsDataRequest request HexTerrainSettings settings OnCreateForCompiler() Declaration protected override void OnCreateForCompiler() Overrides Unity.Entities.ComponentSystemBase.OnCreateForCompiler() OnUpdate() Implement OnUpdate() to perform the major work of this system. Declaration protected override void OnUpdate() Overrides Unity.Entities.SystemBase.OnUpdate() Remarks By default, the system invokes `OnUpdate()` once every frame on the main thread. To skip OnUpdate if all of the system's [EntityQueries] are empty, use the [RequireMatchingQueriesForUpdateAttribute]. To limit when OnUpdate is invoked, you can specify components that must exist, or queries that match specific Entities. To do this, call Unity.Entities.ComponentSystemBase.RequireForUpdate<T>() or Unity.Entities.ComponentSystemBase.RequireForUpdate(Unity.Entities.EntityQuery) in the system's OnCreate method. For more information, see [ShouldRunSystem]. The [Entities.ForEach] and [Job.WithCode] constructions provide convenient mechanisms for defining jobs. You can also instantiate and schedule an Unity.Entities.IJobChunk instance; you can use the [C# Job System] or you can perform work on the main thread. If you call Unity.Entities.EntityManager methods that perform structural changes on the main thread, be sure to arrange the system order to minimize the performance impact of the resulting [sync points]. Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.CellItems.Systems.RenderCellItemsDataSystem.html": {
    "href": "api/Fwt.HexTerrains.CellItems.Systems.RenderCellItemsDataSystem.html",
    "title": "Class RenderCellItemsDataSystem | Hex Terrains",
    "summary": "Class RenderCellItemsDataSystem Inheritance object ComponentSystemBase SystemBase RenderCellItemsDataSystem RenderCellPropsDataSystem Inherited Members SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.OnUpdate() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.CellItems.Systems Assembly: fwt.hexterrains.dll Syntax public abstract class RenderCellItemsDataSystem : SystemBase Methods UpdateItems(CellItemsData, Camera) Declaration public virtual void UpdateItems(CellItemsData itemsData, Camera camera) Parameters Type Name Description CellItemsData itemsData Camera camera Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.CellItems.Systems.RenderCellPropsDataSystem.html": {
    "href": "api/Fwt.HexTerrains.CellItems.Systems.RenderCellPropsDataSystem.html",
    "title": "Class RenderCellPropsDataSystem | Hex Terrains",
    "summary": "Class RenderCellPropsDataSystem Inheritance object ComponentSystemBase SystemBase RenderCellItemsDataSystem RenderCellPropsDataSystem Inherited Members RenderCellItemsDataSystem.UpdateItems(CellItemsData, Camera) SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.CellItems.Systems Assembly: fwt.hexterrains.dll Syntax [UpdateInGroup(typeof(HexTerrainsRenderGroup))] public class RenderCellPropsDataSystem : RenderCellItemsDataSystem Methods OnCreateForCompiler() Declaration protected override void OnCreateForCompiler() Overrides Unity.Entities.ComponentSystemBase.OnCreateForCompiler() OnUpdate() Implement OnUpdate() to perform the major work of this system. Declaration protected override void OnUpdate() Overrides Unity.Entities.SystemBase.OnUpdate() Remarks By default, the system invokes `OnUpdate()` once every frame on the main thread. To skip OnUpdate if all of the system's [EntityQueries] are empty, use the [RequireMatchingQueriesForUpdateAttribute]. To limit when OnUpdate is invoked, you can specify components that must exist, or queries that match specific Entities. To do this, call Unity.Entities.ComponentSystemBase.RequireForUpdate<T>() or Unity.Entities.ComponentSystemBase.RequireForUpdate(Unity.Entities.EntityQuery) in the system's OnCreate method. For more information, see [ShouldRunSystem]. The [Entities.ForEach] and [Job.WithCode] constructions provide convenient mechanisms for defining jobs. You can also instantiate and schedule an Unity.Entities.IJobChunk instance; you can use the [C# Job System] or you can perform work on the main thread. If you call Unity.Entities.EntityManager methods that perform structural changes on the main thread, be sure to arrange the system order to minimize the performance impact of the resulting [sync points]. Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.CellItems.Systems.html": {
    "href": "api/Fwt.HexTerrains.CellItems.Systems.html",
    "title": "Namespace Fwt.HexTerrains.CellItems.Systems | Hex Terrains",
    "summary": "Namespace Fwt.HexTerrains.CellItems.Systems Classes CalcCellItemsColorsSystem CalcCellItemsSystem CalcCellPropsColorsSystem CalcCellPropsSystem CleanupCellItemsDataSystem CleanupCellPropsDataSystem CreateCellPropsDataSystem RenderCellItemsDataSystem RenderCellPropsDataSystem"
  },
  "api/Fwt.HexTerrains.CellItems.html": {
    "href": "api/Fwt.HexTerrains.CellItems.html",
    "title": "Namespace Fwt.HexTerrains.CellItems | Hex Terrains",
    "summary": "Namespace Fwt.HexTerrains.CellItems Classes CellItemPrefabAuthoring Authoring prefab of the renderable CellItem that can be placed in the cell. CellItemsDataAuthoring Base class for authoring component for HexTerrains CellItems layer. Cell Item is a renderable item that can occupy a cell (so the data layer contains one cell item per cell) CellItemsDataBaker<TAuthoring> CellPropsDataAuthoring CellItem props HexTerrain layer authoring component. Allows to add a CellItem Props data layer on the terrain. CellPropsDataBaker Structs CellItemConfigAuthoring Authoring structure where the cell item prefab is defined."
  },
  "api/Fwt.HexTerrains.ChunksGridDataAuthoring.html": {
    "href": "api/Fwt.HexTerrains.ChunksGridDataAuthoring.html",
    "title": "Class ChunksGridDataAuthoring | Hex Terrains",
    "summary": "Class ChunksGridDataAuthoring Authoring component for ChunksGridData. This class is used to create chunks grid data in the Unity Editor. Inheritance object Object Component Behaviour MonoBehaviour ChunksGridDataAuthoring Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains Assembly: fwt.hexterrains.dll Syntax [RequireComponent(typeof(HexTerrainAuthoring))] public class ChunksGridDataAuthoring : MonoBehaviour Fields Terrain Reference to the HexTerrainAuthoring component. This is used to get the terrain settings. Declaration public HexTerrainAuthoring Terrain Field Value Type Description HexTerrainAuthoring Properties Settings The settings for the terrain. This is used to create the chunks grid data. Extracted from referenced HexTerrainAuthoring component. Declaration public HexTerrainSettings Settings { get; } Property Value Type Description HexTerrainSettings Methods OnValidate() Declaration public void OnValidate() Extension Methods Extensions_UnityObject.SmartDestroy<TObject>(TObject) Extensions_UnityObject.SmartDisableGameObject<TObject>(TObject) Extensions_UnityObject.SmartEnableGameObject<TObject>(TObject) HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.ChunksGridDataBaker.html": {
    "href": "api/Fwt.HexTerrains.ChunksGridDataBaker.html",
    "title": "Class ChunksGridDataBaker | Hex Terrains",
    "summary": "Class ChunksGridDataBaker Baker for ChunksGridData. This class is used to convert the ChunksGridDataAuthoring component into a ChunksGridData component at runtime. Inheritance object IBaker Baker<ChunksGridDataAuthoring> ChunksGridDataBaker Inherited Members IBaker.GetSceneGUID() IBaker.GetComponent<T>() IBaker.GetComponent<T>(Component) IBaker.GetComponent<T>(GameObject) IBaker.GetComponents<T>(List<T>) IBaker.GetComponents<T>(Component, List<T>) IBaker.GetComponents<T>(GameObject, List<T>) IBaker.GetComponents<T>() IBaker.GetComponents<T>(Component) IBaker.GetComponents<T>(GameObject) IBaker.GetComponentInParent<T>() IBaker.GetComponentInParent<T>(Component) IBaker.GetComponentInParent<T>(GameObject) IBaker.GetComponentsInParent<T>(List<T>) IBaker.GetComponentsInParent<T>(Component, List<T>) IBaker.GetComponentsInParent<T>(GameObject, List<T>) IBaker.GetComponentsInParent<T>() IBaker.GetComponentsInParent<T>(Component) IBaker.GetComponentsInParent<T>(GameObject) IBaker.GetComponentInChildren<T>() IBaker.GetComponentInChildren<T>(Component) IBaker.GetComponentInChildren<T>(GameObject) IBaker.GetComponentsInChildren<T>(List<T>) IBaker.GetComponentsInChildren<T>(Component, List<T>) IBaker.GetComponentsInChildren<T>(GameObject, List<T>) IBaker.GetComponentsInChildren<T>() IBaker.GetComponentsInChildren<T>(Component) IBaker.GetComponentsInChildren<T>(GameObject) IBaker.GetParent() IBaker.GetParent(Component) IBaker.GetParent(GameObject) IBaker.GetParents() IBaker.GetParents(Component) IBaker.GetParents(GameObject) IBaker.GetParents(List<GameObject>) IBaker.GetParents(Component, List<GameObject>) IBaker.GetParents(GameObject, List<GameObject>) IBaker.GetChild(int) IBaker.GetChild(Component, int) IBaker.GetChild(GameObject, int) IBaker.GetChildren(bool) IBaker.GetChildren(Component, bool) IBaker.GetChildren(GameObject, bool) IBaker.GetChildren(List<GameObject>, bool) IBaker.GetChildren(Component, List<GameObject>, bool) IBaker.GetChildren(GameObject, List<GameObject>, bool) IBaker.GetChildCount() IBaker.GetChildCount(Component) IBaker.GetChildCount(GameObject) IBaker.GetName() IBaker.GetName(Component) IBaker.GetName(GameObject) IBaker.GetLayer() IBaker.GetLayer(Component) IBaker.GetLayer(GameObject) IBaker.GetTag() IBaker.GetTag(Component) IBaker.GetTag(GameObject) IBaker.GetEntity() IBaker.GetEntity(GameObject) IBaker.GetEntity(Component) IBaker.GetEntity(TransformUsageFlags) IBaker.GetEntity(GameObject, TransformUsageFlags) IBaker.GetEntity(Component, TransformUsageFlags) IBaker.GetEntityWithoutDependency() IBaker.IsActive() IBaker.IsActive(Component) IBaker.IsActive(GameObject) IBaker.IsActiveAndEnabled() IBaker.IsActiveAndEnabled(Component) IBaker.IsStatic() IBaker.IsStatic(Component) IBaker.IsStatic(GameObject) IBaker.IsClient() IBaker.IsServer() IBaker.DependsOn<T>(T) IBaker.DependsOnComponentInParent<T>() IBaker.DependsOnComponentInParent<T>(Component) IBaker.DependsOnComponentInParent<T>(GameObject) IBaker.DependsOnComponentsInParent<T>() IBaker.DependsOnComponentsInParent<T>(Component) IBaker.DependsOnComponentsInParent<T>(GameObject) IBaker.DependsOnComponentInChildren<T>() IBaker.DependsOnComponentInChildren<T>(Component) IBaker.DependsOnComponentInChildren<T>(GameObject) IBaker.DependsOnComponentsInChildren<T>() IBaker.DependsOnComponentsInChildren<T>(GameObject) IBaker.DependsOnComponentsInChildren<T>(Component) IBaker.DependsOnLightBaking() IBaker.AddBlobAsset<T>(ref BlobAssetReference<T>, out Hash128) IBaker.AddBlobAssetWithCustomHash<T>(ref BlobAssetReference<T>, Hash128) IBaker.TryGetBlobAssetReference<T>(Hash128, out BlobAssetReference<T>) IBaker.AddComponent<T>() IBaker.AddComponent<T>(in T) IBaker.AddComponent<T>(Entity) IBaker.AddComponent<T>(Entity, in T) IBaker.AddComponent(ComponentType) IBaker.AddComponent(Entity, ComponentType) IBaker.AddComponent(in ComponentTypeSet) IBaker.AddComponent(Entity, in ComponentTypeSet) IBaker.AddComponentObject<T>(T) IBaker.AddComponentObject<T>(Entity, T) IBaker.AddSharedComponentManaged<T>(T) IBaker.AddSharedComponentManaged<T>(Entity, T) IBaker.AddSharedComponent<T>(T) IBaker.AddSharedComponent<T>(Entity, T) IBaker.AddBuffer<T>() IBaker.AddBuffer<T>(Entity) IBaker.SetComponent<T>(Entity, in T) IBaker.SetComponentEnabled<T>(Entity, bool) IBaker.SetComponentEnabled<T>(bool) IBaker.SetSharedComponentManaged<T>(Entity, in T) IBaker.SetSharedComponent<T>(Entity, in T) IBaker.SetBuffer<T>() IBaker.SetBuffer<T>(Entity) IBaker.AppendToBuffer<T>(T) IBaker.AppendToBuffer<T>(Entity, T) IBaker.CreateAdditionalEntity() IBaker.CreateAdditionalEntity(TransformUsageFlags, bool, string) IBaker.CreateAdditionalEntities(NativeArray<Entity>, TransformUsageFlags, bool) IBaker.RegisterPrefabForBaking(GameObject) IBaker.AddTransformUsageFlags(TransformUsageFlags) IBaker.AddTransformUsageFlags(Entity, TransformUsageFlags) IBaker.IsBakingForEditor() IBaker.GetDotsSettings() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains Assembly: fwt.hexterrains.dll Syntax public class ChunksGridDataBaker : Baker<ChunksGridDataAuthoring> Methods Bake(ChunksGridDataAuthoring) Called in the baking process to bake the authoring component Declaration public override void Bake(ChunksGridDataAuthoring authoring) Parameters Type Name Description ChunksGridDataAuthoring authoring The authoring component to bake Overrides Baker<ChunksGridDataAuthoring>.Bake(ChunksGridDataAuthoring) Remarks This method will be called for every instance of TAuthoringType in order to bake that instance. Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.CreateHexTerrainsGroup.html": {
    "href": "api/Fwt.HexTerrains.CreateHexTerrainsGroup.html",
    "title": "Class CreateHexTerrainsGroup | Hex Terrains",
    "summary": "Class CreateHexTerrainsGroup System group where all the creation systems for HexTerrains are executed. Inheritance object ComponentSystemBase SystemBase ComponentSystemGroup CreateHexTerrainsGroup Inherited Members ComponentSystemGroup.EnableSystemSorting ComponentSystemGroup.Created ComponentSystemGroup.ManagedSystems ComponentSystemGroup.GetUnmanagedSystems(Allocator) ComponentSystemGroup.GetAllSystems(Allocator) ComponentSystemGroup.OnCreate() ComponentSystemGroup.OnDestroy() ComponentSystemGroup.AddSystemToUpdateList(ComponentSystemBase) ComponentSystemGroup.AddSystemToUpdateList(SystemHandle) ComponentSystemGroup.RemoveSystemFromUpdateList(ComponentSystemBase) ComponentSystemGroup.RemoveSystemFromUpdateList(SystemHandle) ComponentSystemGroup.SortSystems() ComponentSystemGroup.FixedRateManager ComponentSystemGroup.RateManager ComponentSystemGroup.SetRateManagerCreateAllocator(IRateManager) ComponentSystemGroup.RateGroupAllocators ComponentSystemGroup.OnUpdate() SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains Assembly: fwt.hexterrains.dll Syntax [UpdateInGroup(typeof(InitializationSystemGroup))] [UpdateAfter(typeof(HexTerrainsCleanupGroup))] public class CreateHexTerrainsGroup : ComponentSystemGroup Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Data.ChunkBounds.html": {
    "href": "api/Fwt.HexTerrains.Data.ChunkBounds.html",
    "title": "Struct ChunkBounds | Hex Terrains",
    "summary": "Struct ChunkBounds Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.Data Assembly: fwt.hexterrains.dll Syntax public struct ChunkBounds Fields Bounds_Center Declaration public Bounds Bounds_Center Field Value Type Description Bounds Bounds_E Declaration public Bounds Bounds_E Field Value Type Description Bounds Bounds_N Declaration public Bounds Bounds_N Field Value Type Description Bounds Bounds_NE Declaration public Bounds Bounds_NE Field Value Type Description Bounds Bounds_NW Declaration public Bounds Bounds_NW Field Value Type Description Bounds Bounds_S Declaration public Bounds Bounds_S Field Value Type Description Bounds Bounds_SE Declaration public Bounds Bounds_SE Field Value Type Description Bounds Bounds_SW Declaration public Bounds Bounds_SW Field Value Type Description Bounds Bounds_W Declaration public Bounds Bounds_W Field Value Type Description Bounds Properties this[int] Returns bounds by index in grid 3x3 with Bounds_Center in center and Bounds_{Direction} by direction in that grid accordingly; 0 - NW, 1 - N, 2 - NE, 3 - W, 4 - center, 5 - E, 6 - SW, 7 - S, 8 - SE Declaration public Bounds this[int gridIndex] { get; set; } Parameters Type Name Description int gridIndex Property Value Type Description Bounds Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Data.ChunkChangesLog.html": {
    "href": "api/Fwt.HexTerrains.Data.ChunkChangesLog.html",
    "title": "Struct ChunkChangesLog | Hex Terrains",
    "summary": "Struct ChunkChangesLog This layer is used to check what chunks are dirty and which are not. It's useful when you do a lot of changes to terrain, and log them into this buffer, So later CheckChunkChangesSystem will read this buffer and mark Chunks that are mentioned here as dirty Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.Data Assembly: fwt.hexterrains.dll Syntax public struct ChunkChangesLog Fields CellCoord Coordinate of cell that has been modyfied Declaration public int2 CellCoord Field Value Type Description int2 ChunkIndex Value of chunk that has been changed (made dirty) Declaration public int ChunkIndex Field Value Type Description int Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Data.ChunkPositions.html": {
    "href": "api/Fwt.HexTerrains.Data.ChunkPositions.html",
    "title": "Struct ChunkPositions | Hex Terrains",
    "summary": "Struct ChunkPositions Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.Data Assembly: fwt.hexterrains.dll Syntax public struct ChunkPositions Fields Position_Center Declaration public float3 Position_Center Field Value Type Description float3 Position_E Declaration public float3 Position_E Field Value Type Description float3 Position_N Declaration public float3 Position_N Field Value Type Description float3 Position_NE Declaration public float3 Position_NE Field Value Type Description float3 Position_NW Declaration public float3 Position_NW Field Value Type Description float3 Position_S Declaration public float3 Position_S Field Value Type Description float3 Position_SE Declaration public float3 Position_SE Field Value Type Description float3 Position_SW Declaration public float3 Position_SW Field Value Type Description float3 Position_W Declaration public float3 Position_W Field Value Type Description float3 Properties this[int] Returns position by index in grid 3x3 with Position_Center in center and Position_{Direction} by direction in that grid accordingly; 0 - NW, 1 - N, 2 - NE, 3 - W, 4 - center, 5 - E, 6 - SW, 7 - S, 8 - SE Declaration public float3 this[int gridIndex] { get; set; } Parameters Type Name Description int gridIndex Property Value Type Description float3 Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Data.ChunkVisibility.html": {
    "href": "api/Fwt.HexTerrains.Data.ChunkVisibility.html",
    "title": "Struct ChunkVisibility | Hex Terrains",
    "summary": "Struct ChunkVisibility This is a layer of info about wether chunk is visible and if so, where among all possible positions this chunk is visible (Center, North, East, etc.) If Terrain has Left-Right sides connected, nether Top-Down sides, there is only one possible position: Center Implements IEquatable<ChunkVisibility> Inherited Members ValueType.Equals(object) ValueType.GetHashCode() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.Data Assembly: fwt.hexterrains.dll Syntax [BurstCompile] public struct ChunkVisibility : IEquatable<ChunkVisibility> Fields ChunkOffset Offset of the chunk position relative to it's center (default) position. This value is not 0:0 when chunk is found beyond the borders of the terrain area, when camera is moved outside the terrain borders and chunk is displayed not at it's center (default) position Declaration public float3 ChunkOffset Field Value Type Description float3 IsVisible If true, chunk is inside the camera frustum. Otherwise the chunk is not visible and should not be rendered Declaration public bool IsVisible Field Value Type Description bool Transform Calculated transform of the chunk Declaration public Matrix4x4 Transform Field Value Type Description Matrix4x4 VisualPosition Chunk is visible at this position Declaration public float3 VisualPosition Field Value Type Description float3 Methods Equals(ChunkVisibility) Declaration [BurstCompile] public bool Equals(ChunkVisibility other) Parameters Type Name Description ChunkVisibility other Returns Type Description bool ToString() Declaration public override string ToString() Returns Type Description string Overrides ValueType.ToString() Implements IEquatable<T> Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Data.ChunksGridData.html": {
    "href": "api/Fwt.HexTerrains.Data.ChunksGridData.html",
    "title": "Class ChunksGridData | Hex Terrains",
    "summary": "Class ChunksGridData Container for data related to Terrain Chunks Grid. Chunk visibility, Chunk Metrics per chunk, not per cell. Inheritance object ChunksGridData Implements IComponentData IQueryTypeParameter IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Data Assembly: fwt.hexterrains.dll Syntax public class ChunksGridData : IComponentData, IQueryTypeParameter, IDisposable Fields ChunkMetrics Chunk visibility data layer. Contains visibility for each chunk. Declaration public ChunkMetricsDataLayer ChunkMetrics Field Value Type Description ChunkMetricsDataLayer ChunkVisibility Chunk metrics data layer. Contains metrics for each chunk. Declaration public ChunkVisibilityDataLayer ChunkVisibility Field Value Type Description ChunkVisibilityDataLayer Properties Settings Terrain settings Declaration public HexTerrainSettings Settings { get; protected set; } Property Value Type Description HexTerrainSettings TerrainMetrics Terrain Metrics (Cells count, chunks count, cell size, chunk size, etc.) Declaration public HexTerrainMetrics TerrainMetrics { get; protected set; } Property Value Type Description HexTerrainMetrics ViewportData Cached camera values. Used to avoid recalculations of the every frame Declaration public VersionValue<CameraViewPortData> ViewportData { get; protected set; } Property Value Type Description VersionValue<CameraViewPortData> Methods Cleanup() Cleans up the chunks grid data on Cleanup frame stage. Usually this clears the dirty flags. Declaration public virtual void Cleanup() CompleteAllJobs() Completes all jobs (read and write) related to the chunks grid. Declaration public virtual void CompleteAllJobs() Dispose() Declaration public virtual void Dispose() Init(HexTerrainSettings) Initializes/Reinitializes the ChunksGridData with the provided settings. Declaration public virtual void Init(HexTerrainSettings settings) Parameters Type Name Description HexTerrainSettings settings terrain settings used to intialize the chunks grid OpenAllToWrite() Opens all chunks to read. Use this method before writing to the chunks. Declaration public virtual void OpenAllToWrite() RecalcChunkMetrics() Recalculates the chunk metrics for all chunks. Declaration public virtual void RecalcChunkMetrics() Resize(int2) Reinitializes the ChunksGridData with the cached settings but new terrain size (in cells). Declaration public virtual void Resize(int2 terrainSize) Parameters Type Name Description int2 terrainSize new terrain size in cells SetAllDirty(bool) Sets the dirty flag for all chunks in the grid. Declaration public virtual void SetAllDirty(bool isDirty) Parameters Type Name Description bool isDirty the dirty flag to set for all chunks SetViewportData(CameraViewPortData) Sets the viewport data. This is used to cache the camera data (position, rotation, scale, size, etc.) to calculate which chunks are visible and where are they visible in case the terrain's edges are connected. Declaration public virtual void SetViewportData(CameraViewPortData viewportData) Parameters Type Name Description CameraViewPortData viewportData new viewport data Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter IDisposable Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Data.ColorMapTexture.html": {
    "href": "api/Fwt.HexTerrains.Data.ColorMapTexture.html",
    "title": "Struct ColorMapTexture | Hex Terrains",
    "summary": "Struct ColorMapTexture Buffer of all ColorMap textures to fill with colors from different data layers. Implements IBufferElementData Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.Data Assembly: fwt.hexterrains.dll Syntax public struct ColorMapTexture : IBufferElementData Fields Value The ColorMap texture to fill with colors from data layer(s). Declaration public UnityObjectRef<Texture2D> Value Field Value Type Description UnityObjectRef<Texture2D> Implements Unity.Entities.IBufferElementData Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Data.ColorMapTexturesCache.html": {
    "href": "api/Fwt.HexTerrains.Data.ColorMapTexturesCache.html",
    "title": "Struct ColorMapTexturesCache | Hex Terrains",
    "summary": "Struct ColorMapTexturesCache Contains cached ViewMode and ColorMap verions. When ViewMode's or ColorMap's version is different from cached values, the update logic is applied (like update UI), otherwise the step is skipped Implements IComponentData IQueryTypeParameter Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.Data Assembly: fwt.hexterrains.dll Syntax public struct ColorMapTexturesCache : IComponentData, IQueryTypeParameter Fields ColorMapVersion Cached version of ColorMap Declaration public long ColorMapVersion Field Value Type Description long ViewModeVersion Cached version of ViewMode Declaration public long ViewModeVersion Field Value Type Description long Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Data.ColorMapTexturesSource.html": {
    "href": "api/Fwt.HexTerrains.Data.ColorMapTexturesSource.html",
    "title": "Class ColorMapTexturesSource | Hex Terrains",
    "summary": "Class ColorMapTexturesSource Inheritance object Object ScriptableObject ColorMapTexturesSource Inherited Members ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.Data Assembly: fwt.hexterrains.dll Syntax [CreateAssetMenu(menuName = \"Fwt/HexTerrains/ColorMapTexturesSource\", fileName = \"ColorMapTexturesSource\")] public class ColorMapTexturesSource : ScriptableObject Fields Values Declaration public List<Texture2D> Values Field Value Type Description List<Texture2D> Extension Methods Extensions_UnityObject.SmartDestroy<TObject>(TObject) Extensions_UnityObject.SmartDisableGameObject<TObject>(TObject) Extensions_UnityObject.SmartEnableGameObject<TObject>(TObject) HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Data.CreateCellEntityPropsDataRequest.html": {
    "href": "api/Fwt.HexTerrains.Data.CreateCellEntityPropsDataRequest.html",
    "title": "Struct CreateCellEntityPropsDataRequest | Hex Terrains",
    "summary": "Struct CreateCellEntityPropsDataRequest Implements IComponentData IQueryTypeParameter Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.Data Assembly: fwt.hexterrains.dll Syntax public struct CreateCellEntityPropsDataRequest : IComponentData, IQueryTypeParameter Fields ColorMapTextureIndex Declaration public int ColorMapTextureIndex Field Value Type Description int IsFillWithRandomData Declaration public bool IsFillWithRandomData Field Value Type Description bool MaxRandomPropIndex Declaration public int MaxRandomPropIndex Field Value Type Description int MinRandomPropIndex Declaration public int MinRandomPropIndex Field Value Type Description int Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Data.CreateChunksGridDataRequest.html": {
    "href": "api/Fwt.HexTerrains.Data.CreateChunksGridDataRequest.html",
    "title": "Struct CreateChunksGridDataRequest | Hex Terrains",
    "summary": "Struct CreateChunksGridDataRequest Implements IComponentData IQueryTypeParameter Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.Data Assembly: fwt.hexterrains.dll Syntax public struct CreateChunksGridDataRequest : IComponentData, IQueryTypeParameter Fields Settings Declaration public HexTerrainSettings Settings Field Value Type Description HexTerrainSettings Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Data.CreateColorMapTexturesRequest.html": {
    "href": "api/Fwt.HexTerrains.Data.CreateColorMapTexturesRequest.html",
    "title": "Struct CreateColorMapTexturesRequest | Hex Terrains",
    "summary": "Struct CreateColorMapTexturesRequest Request to create ColorMap textures on Terrain entity from the source. Implements IComponentData IQueryTypeParameter Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.Data Assembly: fwt.hexterrains.dll Syntax public struct CreateColorMapTexturesRequest : IComponentData, IQueryTypeParameter Fields TexturesSource Scriptable object with all ColorMaps used for this terrain Declaration public UnityObjectRef<ColorMapTexturesSource> TexturesSource Field Value Type Description UnityObjectRef<ColorMapTexturesSource> Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Data.CreateHexGroundDataRequest.html": {
    "href": "api/Fwt.HexTerrains.Data.CreateHexGroundDataRequest.html",
    "title": "Struct CreateHexGroundDataRequest | Hex Terrains",
    "summary": "Struct CreateHexGroundDataRequest Implements ICreateHexSurfaceDataRequest IComponentData IQueryTypeParameter Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.Data Assembly: fwt.hexterrains.dll Syntax public struct CreateHexGroundDataRequest : ICreateHexSurfaceDataRequest, IComponentData, IQueryTypeParameter Properties Args Declaration public CreateHexSurfaceRequestArgs Args { readonly get; set; } Property Value Type Description CreateHexSurfaceRequestArgs Implements ICreateHexSurfaceDataRequest Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Data.CreateHexGroundRenderDataRequest.html": {
    "href": "api/Fwt.HexTerrains.Data.CreateHexGroundRenderDataRequest.html",
    "title": "Struct CreateHexGroundRenderDataRequest | Hex Terrains",
    "summary": "Struct CreateHexGroundRenderDataRequest Request to create HexGroundRenderData. Implements ICreateHexSurfaceRenderDataRequest IComponentData IQueryTypeParameter Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.Data Assembly: fwt.hexterrains.dll Syntax public struct CreateHexGroundRenderDataRequest : ICreateHexSurfaceRenderDataRequest, IComponentData, IQueryTypeParameter Properties Args Arguments for request to create hex surface render data. Declaration public CreateHexSurfaceRenderDataRequestArgs Args { readonly get; set; } Property Value Type Description CreateHexSurfaceRenderDataRequestArgs Implements ICreateHexSurfaceRenderDataRequest Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Data.CreateHexSurfaceRenderDataRequestArgs.html": {
    "href": "api/Fwt.HexTerrains.Data.CreateHexSurfaceRenderDataRequestArgs.html",
    "title": "Struct CreateHexSurfaceRenderDataRequestArgs | Hex Terrains",
    "summary": "Struct CreateHexSurfaceRenderDataRequestArgs Arguments for request to create hex surface render data. Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.Data Assembly: fwt.hexterrains.dll Syntax [Serializable] public struct CreateHexSurfaceRenderDataRequestArgs Fields RenderSettings Render settings for the hex terrain surface. Declaration public HexTerrainRenderSettings RenderSettings Field Value Type Description HexTerrainRenderSettings ViewMode Initial ViewMode for the hex terrain surface. Declaration public byte ViewMode Field Value Type Description byte Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Data.CreateHexSurfaceRequestArgs.html": {
    "href": "api/Fwt.HexTerrains.Data.CreateHexSurfaceRequestArgs.html",
    "title": "Struct CreateHexSurfaceRequestArgs | Hex Terrains",
    "summary": "Struct CreateHexSurfaceRequestArgs Args for request to create a surface data. Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.Data Assembly: fwt.hexterrains.dll Syntax public struct CreateHexSurfaceRequestArgs Fields AutoCellBiomeLevels The levels of the biomes to be calculated based on the cell height. Index = biome ID, value = max height level for this biome. Declaration public FixedArray8<int> AutoCellBiomeLevels Field Value Type Description FixedArray8<int> ColorMapTextureIndex Which index of all ColorTextures to fill with colors of this surface (biomes). Declaration public int ColorMapTextureIndex Field Value Type Description int FillBiomesMapValue The value to fill the biomes map with (if IsFillBiomesMap) is on. Declaration public byte FillBiomesMapValue Field Value Type Description byte FillHeightmapValue The value to fill the heightmap with (if IsFillHeightmap) is on. Declaration public byte FillHeightmapValue Field Value Type Description byte Heightmap The heightmap texture to apply (if IsApplyHeightmap is on). Declaration public UnityObjectRef<Texture2D> Heightmap Field Value Type Description UnityObjectRef<Texture2D> HeightmapOffset This value will be added to all the heightmap values (if IsApplyHeightmap is on). Declaration public int HeightmapOffset Field Value Type Description int HeightmapScale Every value from Heightmap texture will be multiplied by this value (if IsApplyHeightmap is on). Declaration public float HeightmapScale Field Value Type Description float IsApplyHeightmap Whether to apply a heightmap texture. Declaration public bool IsApplyHeightmap Field Value Type Description bool IsAutoCellBiomes Whether to calculate biomes based on the cell height Declaration public bool IsAutoCellBiomes Field Value Type Description bool IsFillBiomesMap Whether to fill the biomes map with a specific value. Declaration public bool IsFillBiomesMap Field Value Type Description bool IsFillHeightmap Whether to fill the heightmap with a specific value. Declaration public bool IsFillHeightmap Field Value Type Description bool IsRandomBiomesMap Whether to fill a biomes map with random values. Declaration public bool IsRandomBiomesMap Field Value Type Description bool IsRandomHeightmap Whether to generate a random heightmap. Declaration public bool IsRandomHeightmap Field Value Type Description bool MaxRandomBiome The maximum value for the random biomes. Declaration public int MaxRandomBiome Field Value Type Description int MaxRandomHeight The maximum value for the random heightmap. Declaration public int MaxRandomHeight Field Value Type Description int MinRandomBiome The minimum value for the random biomes. Declaration public int MinRandomBiome Field Value Type Description int MinRandomHeight The minimum value for the random heightmap. Declaration public int MinRandomHeight Field Value Type Description int Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Data.CreateHexWaterDataRequest.html": {
    "href": "api/Fwt.HexTerrains.Data.CreateHexWaterDataRequest.html",
    "title": "Struct CreateHexWaterDataRequest | Hex Terrains",
    "summary": "Struct CreateHexWaterDataRequest Request component for creating hex water data. Implements ICreateHexSurfaceDataRequest IComponentData IQueryTypeParameter Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.Data Assembly: fwt.hexterrains.dll Syntax public struct CreateHexWaterDataRequest : ICreateHexSurfaceDataRequest, IComponentData, IQueryTypeParameter Properties Args Args for request to create a surface data. Declaration public CreateHexSurfaceRequestArgs Args { readonly get; set; } Property Value Type Description CreateHexSurfaceRequestArgs Implements ICreateHexSurfaceDataRequest Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Data.CreateHexWaterRenderDataRequest.html": {
    "href": "api/Fwt.HexTerrains.Data.CreateHexWaterRenderDataRequest.html",
    "title": "Struct CreateHexWaterRenderDataRequest | Hex Terrains",
    "summary": "Struct CreateHexWaterRenderDataRequest Request to create HexWaterRenderData. Implements ICreateHexSurfaceRenderDataRequest IComponentData IQueryTypeParameter Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.Data Assembly: fwt.hexterrains.dll Syntax public struct CreateHexWaterRenderDataRequest : ICreateHexSurfaceRenderDataRequest, IComponentData, IQueryTypeParameter Properties Args Arguments for creating hex surface render data. Declaration public CreateHexSurfaceRenderDataRequestArgs Args { readonly get; set; } Property Value Type Description CreateHexSurfaceRenderDataRequestArgs Implements ICreateHexSurfaceRenderDataRequest Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Data.HexCellIndex.html": {
    "href": "api/Fwt.HexTerrains.Data.HexCellIndex.html",
    "title": "Struct HexCellIndex | Hex Terrains",
    "summary": "Struct HexCellIndex Implements IComponentData IQueryTypeParameter Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.Data Assembly: fwt.hexterrains.dll Syntax public struct HexCellIndex : IComponentData, IQueryTypeParameter Fields Value Declaration public int Value Field Value Type Description int Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Data.HexCellMetrics.html": {
    "href": "api/Fwt.HexTerrains.Data.HexCellMetrics.html",
    "title": "Struct HexCellMetrics | Hex Terrains",
    "summary": "Struct HexCellMetrics Metrics of a cell in the hex terrain. Contains information about the cell's biome, position, coordinate, byte height (from heightmap), height in meters, chunk index, chunk coord, etc. Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.Data Assembly: fwt.hexterrains.dll Syntax public struct HexCellMetrics Fields Biome Biome value (byte) of the cell Declaration public byte Biome Field Value Type Description byte CellCoord_Global Coordinate of cell on terrain Declaration public int2 CellCoord_Global Field Value Type Description int2 CellCoord_Local Coordinate local to chunk Declaration public int2 CellCoord_Local Field Value Type Description int2 CellHeight_Points Height of the cell in bytes (from heightmap) Declaration public byte CellHeight_Points Field Value Type Description byte CellHeight_Units Height of the cell in meters Declaration public float CellHeight_Units Field Value Type Description float CellIndex Declaration public int CellIndex Field Value Type Description int CellTransform_Global Cell center matrix with origin at terrain 0:0:0 (not chunk) Declaration public Matrix4x4 CellTransform_Global Field Value Type Description Matrix4x4 CellTransform_Local Cell center matrix with origin at chunk 0:0:0 (not terrain) Declaration public Matrix4x4 CellTransform_Local Field Value Type Description Matrix4x4 CenterPoint_Global Position2D (no height) of center point of the cell relative to the terrain origin Declaration public float2 CenterPoint_Global Field Value Type Description float2 CenterPoint_Local Position2D (no height) of center point of the cell relative to the chunk origin Declaration public float2 CenterPoint_Local Field Value Type Description float2 ChunkCoord Coordinate of the chunk of this cell in the chunks grid Declaration public int2 ChunkCoord Field Value Type Description int2 ChunkIndex Value of the chunk this cell belongs to Declaration public int ChunkIndex Field Value Type Description int Properties CenterPosition_Global Declaration public float3 CenterPosition_Global { get; } Property Value Type Description float3 CenterPosition_Local Declaration public float3 CenterPosition_Local { get; } Property Value Type Description float3 Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Data.HexChunkGridIndex.html": {
    "href": "api/Fwt.HexTerrains.Data.HexChunkGridIndex.html",
    "title": "Struct HexChunkGridIndex | Hex Terrains",
    "summary": "Struct HexChunkGridIndex Shared component that is placed on the CellEntity so it helps to quickly find all CellEntities placed on given chunk. Implements ISharedComponentData IQueryTypeParameter IEquatable<HexChunkGridIndex> Inherited Members ValueType.Equals(object) ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.Data Assembly: fwt.hexterrains.dll Syntax public struct HexChunkGridIndex : ISharedComponentData, IQueryTypeParameter, IEquatable<HexChunkGridIndex> Fields LayerEntity Declaration public Entity LayerEntity Field Value Type Description Entity Value Declaration public int Value Field Value Type Description int Methods Equals(HexChunkGridIndex) Declaration public bool Equals(HexChunkGridIndex other) Parameters Type Name Description HexChunkGridIndex other Returns Type Description bool GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides ValueType.GetHashCode() Implements Unity.Entities.ISharedComponentData Unity.Entities.IQueryTypeParameter IEquatable<T> Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Data.HexChunkMetrics.html": {
    "href": "api/Fwt.HexTerrains.Data.HexChunkMetrics.html",
    "title": "Struct HexChunkMetrics | Hex Terrains",
    "summary": "Struct HexChunkMetrics Inherited Members ValueType.Equals(object) ValueType.GetHashCode() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.Data Assembly: fwt.hexterrains.dll Syntax public struct HexChunkMetrics Fields Bounds Declaration public Bounds Bounds Field Value Type Description Bounds CellsCount Declaration public int CellsCount Field Value Type Description int ChunkBounds Declaration public ChunkBounds ChunkBounds Field Value Type Description ChunkBounds ChunkCoordinate Coordinate in chunks grid. If terrain is 4 chunks width and 3 height, chunks grid will be size of 4:3 and this is a coordinate of this chunk in that grid Declaration public int2 ChunkCoordinate Field Value Type Description int2 ChunkHeight Declaration public float ChunkHeight Field Value Type Description float ChunkIndex Declaration public int ChunkIndex Field Value Type Description int ChunkPosition_Cells Declaration public int2 ChunkPosition_Cells Field Value Type Description int2 ChunkPosition_Units Declaration public float2 ChunkPosition_Units Field Value Type Description float2 ChunkPositions Declaration public ChunkPositions ChunkPositions Field Value Type Description ChunkPositions ChunkSize_Cells Declaration public int2 ChunkSize_Cells Field Value Type Description int2 ChunkSize_Units Declaration public float2 ChunkSize_Units Field Value Type Description float2 Methods CreateMetrics(int, HexTerrainMetrics, HexTerrainSettings) Declaration public static HexChunkMetrics CreateMetrics(int chunkIndex, HexTerrainMetrics terrainMetrics, HexTerrainSettings terrainSettings) Parameters Type Name Description int chunkIndex HexTerrainMetrics terrainMetrics HexTerrainSettings terrainSettings Returns Type Description HexChunkMetrics ToString() Declaration public override string ToString() Returns Type Description string Overrides ValueType.ToString() Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Data.HexGroundColorPalette.html": {
    "href": "api/Fwt.HexTerrains.Data.HexGroundColorPalette.html",
    "title": "Struct HexGroundColorPalette | Hex Terrains",
    "summary": "Struct HexGroundColorPalette Implements IBufferElementData Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.Data Assembly: fwt.hexterrains.dll Syntax public struct HexGroundColorPalette : IBufferElementData Fields Color Declaration public Color32 Color Field Value Type Description Color32 Implements Unity.Entities.IBufferElementData Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Data.HexGroundData.html": {
    "href": "api/Fwt.HexTerrains.Data.HexGroundData.html",
    "title": "Class HexGroundData | Hex Terrains",
    "summary": "Class HexGroundData HexSurface for terrain Ground HexSurfaceData Inheritance object HexSurfaceData HexGroundData Implements IDisposable IComponentData IQueryTypeParameter Inherited Members HexSurfaceData.Settings HexSurfaceData.TerrainMetrics HexSurfaceData.HeightMap HexSurfaceData.BiomesMap HexSurfaceData.CellMetrics HexSurfaceData.CellColorMap HexSurfaceData.BiomeColors HexSurfaceData.ColorMapTextureIndex HexSurfaceData.Init(HexTerrainSettings, NativeArray<Color32>) HexSurfaceData.Init(HexTerrainSettings) HexSurfaceData.InitBiomeColors(NativeArray<Color32>) HexSurfaceData.Resize(int2) HexSurfaceData.SetAllDirty(bool) HexSurfaceData.Cleanup() HexSurfaceData.CleanupAsync() HexSurfaceData.OpenAllToWrite() HexSurfaceData.OpenAllToRead() HexSurfaceData.CompleteAllJobs() HexSurfaceData.GetCellHeight(int) HexSurfaceData.GetCellBiome(int) HexSurfaceData.GetCellMetrics(int) HexSurfaceData.SetHeightMap(byte[]) HexSurfaceData.SetBiomesMap(byte[]) HexSurfaceData.SetCellHeight(int, byte) HexSurfaceData.SetCellBiome(int, byte) HexSurfaceData.SetAllCellsHeight(byte) HexSurfaceData.SetAllCellsBiome(byte) HexSurfaceData.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Data Assembly: fwt.hexterrains.dll Syntax public class HexGroundData : HexSurfaceData, IDisposable, IComponentData, IQueryTypeParameter Implements IDisposable Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Data.HexGroundRenderConfig.html": {
    "href": "api/Fwt.HexTerrains.Data.HexGroundRenderConfig.html",
    "title": "Struct HexGroundRenderConfig | Hex Terrains",
    "summary": "Struct HexGroundRenderConfig Configuration for rendering the HexSurface layer. Used to provide materials and other render settings when rendering a HexSurface. Implements IHexSurfaceRenderConfig IBufferElementData Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.Data Assembly: fwt.hexterrains.dll Syntax public struct HexGroundRenderConfig : IHexSurfaceRenderConfig, IBufferElementData Properties Value Declaration public UnityObjectRef<HexTerrainRenderConfigAsset> Value { readonly get; set; } Property Value Type Description UnityObjectRef<HexTerrainRenderConfigAsset> Implements IHexSurfaceRenderConfig Unity.Entities.IBufferElementData Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Data.HexGroundRenderData.html": {
    "href": "api/Fwt.HexTerrains.Data.HexGroundRenderData.html",
    "title": "Class HexGroundRenderData | Hex Terrains",
    "summary": "Class HexGroundRenderData Inheritance object HexSurfaceRenderData HexSurfaceRenderData<HexGroundData> HexGroundRenderData Implements IComponentData IQueryTypeParameter IDisposable Inherited Members HexSurfaceRenderData<HexGroundData>.TerrainMetrics HexSurfaceRenderData<HexGroundData>.SurfaceData HexSurfaceRenderData<HexGroundData>.Init(HexGroundData) HexSurfaceRenderData<HexGroundData>.Init(HexGroundData, HexTerrainRenderSettings) HexSurfaceRenderData<HexGroundData>.ReInit() HexSurfaceRenderData.Settings HexSurfaceRenderData.RenderSettings HexSurfaceRenderData.IsVisible HexSurfaceRenderData.OffsetTransform HexSurfaceRenderData.ChunkMeshSources HexSurfaceRenderData.ChunkMeshes HexSurfaceRenderData.RenderConfigs HexSurfaceRenderData.DefaultRenderConfig HexSurfaceRenderData.InitRenderConfigs<TRenderDataConfig>(NativeArray<TRenderDataConfig>) HexSurfaceRenderData.OpenAllToWrite() HexSurfaceRenderData.CompleteAllJobs() HexSurfaceRenderData.Cleanup() HexSurfaceRenderData.GetChunkMesh(int) HexSurfaceRenderData.GetRenderConfigAsset(int) HexSurfaceRenderData.SetIsVisible(bool) HexSurfaceRenderData.SetChunkMesh(int, Mesh) HexSurfaceRenderData.SetAllDirty(bool) HexSurfaceRenderData.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Data Assembly: fwt.hexterrains.dll Syntax public class HexGroundRenderData : HexSurfaceRenderData<HexGroundData>, IComponentData, IQueryTypeParameter, IDisposable Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter IDisposable Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Data.HexSurfaceData.html": {
    "href": "api/Fwt.HexTerrains.Data.HexSurfaceData.html",
    "title": "Class HexSurfaceData | Hex Terrains",
    "summary": "Class HexSurfaceData Base class for all HexTerrain surfaces like a ground or water, etc. Create a new class that inherits from this one to create a new surface type. Inheritance object HexSurfaceData HexGroundData HexWaterData Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Data Assembly: fwt.hexterrains.dll Syntax public abstract class HexSurfaceData : IDisposable Properties BiomeColors Color palette for biomes. Used to paint the terrain with a color (CellColorMap). index in this array == Biome index. value in this array == Color of the biome in CellColorMap. Declaration public NativeList<Color32> BiomeColors { get; protected set; } Property Value Type Description NativeList<Color32> BiomesMap BiomesMap data layer. Contains biome index per cell CellBiomesDataLayer Declaration public CellBiomesDataLayer BiomesMap { get; protected set; } Property Value Type Description CellBiomesDataLayer CellColorMap CellColorMap data layer. Contains color value per cell CellColorsDataLayer Usually used for painting the terrain with a color (fill a Texture2D with this colors so it can be used in materials or UI like minimap). Declaration public CellColorsDataLayer CellColorMap { get; protected set; } Property Value Type Description CellColorsDataLayer CellMetrics CellMetrics data layer. Contains cell metrics metrics per cell CellMetricsDataLayer Declaration public CellMetricsDataLayer CellMetrics { get; protected set; } Property Value Type Description CellMetricsDataLayer ColorMapTextureIndex Index of the texture in the list of ColorMapTextures. Used externally in systems. Systems read this value to know which texture to fill with colors from CellColorMap data layer CellColorMap. That texture is expected to be used in materials or/and UI like minimap. Declaration public int ColorMapTextureIndex { get; set; } Property Value Type Description int HeightMap HeightMap data layer. Contains a byte height value per cell HeightMapDataLayer Declaration public HeightMapDataLayer HeightMap { get; protected set; } Property Value Type Description HeightMapDataLayer Settings Settings of the terrain this surface is from Declaration public HexTerrainSettings Settings { get; protected set; } Property Value Type Description HexTerrainSettings TerrainMetrics Metrics of the whole terrain. Recalculated when terrain settings are changed. Declaration public HexTerrainMetrics TerrainMetrics { get; protected set; } Property Value Type Description HexTerrainMetrics Methods Cleanup() Every frame there is a cleanup stage. This function is called. Usually used to clean the dirty flags. Declaration public virtual void Cleanup() CleanupAsync() Async version of Cleanup() Cleanup() Difference between regular Cleanup() is that it schedules jobs that clean up data layers, so you don't have to wait for the results and can continue working. Every frame there is a cleanup stage. This function is called. Usually used to clean the dirty flags. Declaration public virtual void CleanupAsync() CompleteAllJobs() Completes all jobs that affect data layers. Declaration public virtual void CompleteAllJobs() Dispose() Declaration public virtual void Dispose() GetCellBiome(int) Returns given cell biome. Declaration public virtual byte? GetCellBiome(int cellIndex) Parameters Type Name Description int cellIndex Returns Type Description byte? GetCellHeight(int) Returns given cell height. Declaration public virtual byte? GetCellHeight(int cellIndex) Parameters Type Name Description int cellIndex Returns Type Description byte? GetCellMetrics(int) Returns cell metrics of a cell at given index Declaration public virtual HexCellMetrics? GetCellMetrics(int cellIndex) Parameters Type Name Description int cellIndex Returns Type Description HexCellMetrics? Init(HexTerrainSettings) Initializes/Reinitializes the surface data. Declaration public virtual void Init(HexTerrainSettings settings) Parameters Type Name Description HexTerrainSettings settings new terrain settings Init(HexTerrainSettings, NativeArray<Color32>) Initializes/Reinitializes the surface data. Calls InitBiomeColors() internally to copy the color palette from the given array InitBiomeColors(NativeArray<Color32>). Only copies data from the copyColorPaletteFrom array, does not change or cache, so it is safe to dispose it after this call. Declaration public virtual void Init(HexTerrainSettings settings, NativeArray<Color32> copyColorPaletteFrom) Parameters Type Name Description HexTerrainSettings settings new terrain settings NativeArray<Color32> copyColorPaletteFrom array of colors per biome to copy a BiomeColors palette from InitBiomeColors(NativeArray<Color32>) Copies a BiomeColors palette from the given array. Does not change or cache the array, so it is safe to dispose it after this call. copyFrom array is expected to have the biomes count length, so there is one color per biome. BiomeIndex == index in copyFrom array. Declaration public virtual void InitBiomeColors(NativeArray<Color32> copyFrom) Parameters Type Name Description NativeArray<Color32> copyFrom array of colors to copy into the BiomeColors palette OpenAllToRead() Opens all data layers to read (Completes all the write jobs). Declaration public virtual void OpenAllToRead() OpenAllToWrite() Opens all data layers to write (Completes all the read and write jobs). Declaration public virtual void OpenAllToWrite() Resize(int2) Resizes the terrain to a new size. Internally calls Init() to reinitialize the data layers. Declaration public virtual void Resize(int2 size) Parameters Type Name Description int2 size new terrain size SetAllCellsBiome(byte) Paints terrain with given color. Does NOT mark anything dirty. It's recommended to call MarkAllChunksDirty() after call this function Declaration public virtual bool SetAllCellsBiome(byte value) Parameters Type Name Description byte value Returns Type Description bool SetAllCellsHeight(byte) Flatterns terrain at given height. Does NOT mark anything dirty. It's recommended to call MarkAllChunksDirty() after call this function Declaration public virtual bool SetAllCellsHeight(byte value) Parameters Type Name Description byte value Returns Type Description bool SetAllDirty(bool) Sets all chunks dirty. If isDirty == true, everything will be marked dirty and recalculated. If isDirty == false, everything will be marked clean and not recalculated. Declaration public virtual void SetAllDirty(bool isDirty = true) Parameters Type Name Description bool isDirty new dirty state SetBiomesMap(byte[]) Applies given Colormap Does NOT make every chunk dirty, so it's recommended to call MarkAllChunksDirty() function after changes are applied Declaration public virtual bool SetBiomesMap(byte[] biomes) Parameters Type Name Description byte[] biomes Returns Type Description bool SetCellBiome(int, byte) Sets given cell color. Does NOT mark anything dirty, so it's recommended to call RegisterCellChange() function after all changes are applied Declaration public virtual bool SetCellBiome(int cellIndex, byte value) Parameters Type Name Description int cellIndex byte value Returns Type Description bool SetCellHeight(int, byte) Sets given cell height. Does NOT mark anything dirty, so it's recommended to call RegisterCellChange() function after all changes are applied Declaration public virtual bool SetCellHeight(int cellIndex, byte value) Parameters Type Name Description int cellIndex byte value Returns Type Description bool SetHeightMap(byte[]) Applies given Heightmap1. Does NOT make every chunk dirty, so it's recommended to call MarkAllChunksDirty() function after changes are applied Declaration public virtual bool SetHeightMap(byte[] heights) Parameters Type Name Description byte[] heights Returns Type Description bool Implements IDisposable Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Data.HexSurfaceRenderData-1.html": {
    "href": "api/Fwt.HexTerrains.Data.HexSurfaceRenderData-1.html",
    "title": "Class HexSurfaceRenderData<TSurfaceData> | Hex Terrains",
    "summary": "Class HexSurfaceRenderData<TSurfaceData> Base class for render data of the hex terrain surface. This one is a generic class, so it can be used for any surface type that is inherited from HexSurfaceData HexSurfaceRenderData Inheritance object HexSurfaceRenderData HexSurfaceRenderData<TSurfaceData> HexGroundRenderData HexWaterRenderData Implements IDisposable Inherited Members HexSurfaceRenderData.Settings HexSurfaceRenderData.RenderSettings HexSurfaceRenderData.IsVisible HexSurfaceRenderData.OffsetTransform HexSurfaceRenderData.ChunkMeshSources HexSurfaceRenderData.ChunkMeshes HexSurfaceRenderData.RenderConfigs HexSurfaceRenderData.DefaultRenderConfig HexSurfaceRenderData.InitRenderConfigs<TRenderDataConfig>(NativeArray<TRenderDataConfig>) HexSurfaceRenderData.OpenAllToWrite() HexSurfaceRenderData.CompleteAllJobs() HexSurfaceRenderData.Cleanup() HexSurfaceRenderData.GetChunkMesh(int) HexSurfaceRenderData.GetRenderConfigAsset(int) HexSurfaceRenderData.SetIsVisible(bool) HexSurfaceRenderData.SetChunkMesh(int, Mesh) HexSurfaceRenderData.SetAllDirty(bool) HexSurfaceRenderData.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Data Assembly: fwt.hexterrains.dll Syntax public abstract class HexSurfaceRenderData<TSurfaceData> : HexSurfaceRenderData, IDisposable where TSurfaceData : HexSurfaceData Type Parameters Name Description TSurfaceData type of the surface data this render data renders Properties SurfaceData Cached surface data this RenderData renders (generates meshes from) Declaration public TSurfaceData SurfaceData { get; protected set; } Property Value Type Description TSurfaceData TerrainMetrics Declaration public HexTerrainMetrics TerrainMetrics { get; } Property Value Type Description HexTerrainMetrics Methods Init(TSurfaceData) Initializes/Reinitializes a render data with provided surface data. If you have changed the surface data instance on the entity, call this function with a new surface data instance, so the render data caches it and reinitializes. Calls Init(surfaceData, RenderSettings) internally. uses cached RenderSettings as parameter. If your render settings are changed, call Init(surfaceData, renderSettings) instead Init(TSurfaceData, HexTerrainRenderSettings) Declaration public virtual void Init(TSurfaceData surfaceData) Parameters Type Name Description TSurfaceData surfaceData new surface data Init(TSurfaceData, HexTerrainRenderSettings) Initializes/Reinitializes a render data with provided surface data and render settings. If you have changed the surface data instance on the entity, call this function with a new surface data instance, so the render data caches it and reinitializes. Declaration public virtual void Init(TSurfaceData surfaceData, HexTerrainRenderSettings renderSettings) Parameters Type Name Description TSurfaceData surfaceData new surface data HexTerrainRenderSettings renderSettings new render settings ReInit() Reinitializes the render data with the cached surface data and cached render settings. Declaration public override void ReInit() Overrides HexSurfaceRenderData.ReInit() Implements IDisposable Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Data.HexSurfaceRenderData.html": {
    "href": "api/Fwt.HexTerrains.Data.HexSurfaceRenderData.html",
    "title": "Class HexSurfaceRenderData | Hex Terrains",
    "summary": "Class HexSurfaceRenderData Base class for surface types of HexTerrain layers Inheritance object HexSurfaceRenderData HexSurfaceRenderData<TSurfaceData> Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Data Assembly: fwt.hexterrains.dll Syntax public abstract class HexSurfaceRenderData : IDisposable Fields ChunkMeshSources Data layer that stores mesh sources for the hex terrain chunks. Mesh sources are filled in respected Jobs and then used to generate/fill meshes for the chunks. Declaration public ChunkMeshSourcesDataLayer ChunkMeshSources Field Value Type Description ChunkMeshSourcesDataLayer ChunkMeshes Data layer that stores meshes for the hex terrain chunks. Declaration public ChunkMeshesDataLayer ChunkMeshes Field Value Type Description ChunkMeshesDataLayer DefaultRenderConfig Fallback render config for the hex terrain chunks. When getting a render config for view mode, if the config is not found, this one will be used instead. Declaration public HexTerrainRenderConfigAsset DefaultRenderConfig Field Value Type Description HexTerrainRenderConfigAsset IsVisible When set to false, the terrain will not be rendered Declaration public VersionValue<bool> IsVisible Field Value Type Description VersionValue<bool> OffsetTransform Surface is rendered with this offset from the terrain's origin Declaration public Matrix4x4 OffsetTransform Field Value Type Description Matrix4x4 RenderConfigs List of render configs for the hex terrain chunks. Config index = view mode. So if you have 3 view modes, you will have 3 configs in this list. Declaration public List<HexTerrainRenderConfigAsset> RenderConfigs Field Value Type Description List<HexTerrainRenderConfigAsset> Properties RenderSettings Render settings of the object. Provides materials to render a HexSurface terrain layers Declaration public HexTerrainRenderSettings RenderSettings { get; protected set; } Property Value Type Description HexTerrainRenderSettings Settings Settings of the terrain this object is connected to Declaration public HexTerrainSettings Settings { get; protected set; } Property Value Type Description HexTerrainSettings Methods Cleanup() Every frame on the Cleanup stage this method is called to clean up the data layers. Usually, cleans up the dirty flags Declaration public virtual void Cleanup() CompleteAllJobs() Completes all jobs for all the data layers. Declaration public void CompleteAllJobs() Dispose() Declaration public virtual void Dispose() GetChunkMesh(int) Returns a mesh for the Chunk with given index Declaration public virtual Mesh GetChunkMesh(int chunkIndex) Parameters Type Name Description int chunkIndex Returns Type Description Mesh GetRenderConfigAsset(int) Returns a render config asset for provided view mode RenderConfigs If nothing is found, returns a DefaultRenderConfig DefaultRenderConfig Declaration public HexTerrainRenderConfigAsset GetRenderConfigAsset(int viewMode) Parameters Type Name Description int viewMode view mode to get a render config for Returns Type Description HexTerrainRenderConfigAsset render config asset InitRenderConfigs<TRenderDataConfig>(NativeArray<TRenderDataConfig>) Copies render configs from the given array of render data configs. Basically, extracts a config assets from render data config. Does not change or cache the provided array of configs, only copies data from it, so it is safe to dispose a provided array after this method call. Declaration public virtual void InitRenderConfigs<TRenderDataConfig>(NativeArray<TRenderDataConfig> renderDataConfigs) where TRenderDataConfig : unmanaged, IBufferElementData, IHexSurfaceRenderConfig Parameters Type Name Description NativeArray<TRenderDataConfig> renderDataConfigs Type Parameters Name Description TRenderDataConfig render configs array to copy from OpenAllToWrite() Completes all jobs for all the data layers. Opens all data layers to write. Declaration public void OpenAllToWrite() ReInit() Expected that the Surface data this object is connected to is already initialized/resized, So to reflect changes we need simply reinitialize the render data Declaration public abstract void ReInit() SetAllDirty(bool) If isDirty == false, marks all data as clean, so it will not be recalculated. If isDirty == true, marks all data as dirty, so it will be recalculated. Declaration public virtual void SetAllDirty(bool isDirty) Parameters Type Name Description bool isDirty new dirty state SetChunkMesh(int, Mesh) Sets a mesh for the chunk with a given index Declaration public virtual bool SetChunkMesh(int chunkIndex, Mesh mesh) Parameters Type Name Description int chunkIndex Mesh mesh Returns Type Description bool SetIsVisible(bool) Sets a visibility of the surface. If the value is changed, returns true. If surface is not visible, it will not be rendered Declaration public virtual bool SetIsVisible(bool isVisible) Parameters Type Name Description bool isVisible visibility flag for render data Returns Type Description bool true if value has changed (new value != old value), otherwise - false Implements IDisposable Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Data.HexTerrain.html": {
    "href": "api/Fwt.HexTerrains.Data.HexTerrain.html",
    "title": "Struct HexTerrain | Hex Terrains",
    "summary": "Struct HexTerrain Contains the TerrainSettings. Indicates that the entity is a HexTerrain Implements IComponentData IQueryTypeParameter Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.Data Assembly: fwt.hexterrains.dll Syntax public struct HexTerrain : IComponentData, IQueryTypeParameter Fields Settings Terrain Settings (HexLayout, HexRotation, CellRadius, etc.) Declaration public HexTerrainSettings Settings Field Value Type Description HexTerrainSettings Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Data.HexTerrainMetrics.html": {
    "href": "api/Fwt.HexTerrains.Data.HexTerrainMetrics.html",
    "title": "Struct HexTerrainMetrics | Hex Terrains",
    "summary": "Struct HexTerrainMetrics Metrics of the HexTerrain. Contains information about the size of the terrain, chunk size, number of cells, etc. Inherited Members ValueType.Equals(object) ValueType.GetHashCode() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.Data Assembly: fwt.hexterrains.dll Syntax public struct HexTerrainMetrics Fields CellsCount Total number of cells in the terrain. Declaration public int CellsCount Field Value Type Description int CellsCountInChunk Total number of cells in one chunk. Declaration public int CellsCountInChunk Field Value Type Description int ChunkSize_Cells Size of the chunk in cells. Declaration public int2 ChunkSize_Cells Field Value Type Description int2 ChunkSize_Units Size of the chunk in units (meters). Declaration public float2 ChunkSize_Units Field Value Type Description float2 ChunksCount Total number of chunks in the terrain. Declaration public int ChunksCount Field Value Type Description int ChunksGridSize Size of the terrain in chunks. Declaration public int2 ChunksGridSize Field Value Type Description int2 HexAreaSize Size of the hexagon area in meters (rect in which the hexagon fits). Declaration public float2 HexAreaSize Field Value Type Description float2 HexSideSize Size of the hexagon side (radius) in units. Declaration public float HexSideSize Field Value Type Description float TerrainSize_Cells Size of the terrain in cells. Declaration public int2 TerrainSize_Cells Field Value Type Description int2 TerrainSize_Units Size of the terrain in units (meters). Declaration public float2 TerrainSize_Units Field Value Type Description float2 Methods CreateMetrics(HexTerrainSettings) Creates a new instance of HexTerrainMetrics based on the provided terrain settings. Declaration public static HexTerrainMetrics CreateMetrics(HexTerrainSettings terrainSettings) Parameters Type Name Description HexTerrainSettings terrainSettings terrain settings to create a terrain metrics based on Returns Type Description HexTerrainMetrics Terrain metrics calculated based on terrain settings ToString() Declaration public override string ToString() Returns Type Description string Overrides ValueType.ToString() Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Data.HexTerrainRaycastData.html": {
    "href": "api/Fwt.HexTerrains.Data.HexTerrainRaycastData.html",
    "title": "Struct HexTerrainRaycastData | Hex Terrains",
    "summary": "Struct HexTerrainRaycastData Data structure used to store the result of a raycast on the hex terrain. Implements IComponentData IQueryTypeParameter Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.Data Assembly: fwt.hexterrains.dll Syntax public struct HexTerrainRaycastData : IComponentData, IQueryTypeParameter Fields CellCoord The coordinate of the cell that was hit by the raycast. Declaration public int2 CellCoord Field Value Type Description int2 CellIndex The index of the cell that was hit by the raycast. Declaration public int CellIndex Field Value Type Description int ChunkCoord The coordinate of the chunk that contains the cell that was hit by the raycast. Declaration public int2 ChunkCoord Field Value Type Description int2 ChunkIndex The index of the chunk that contains the cell that was hit by the raycast. Declaration public int ChunkIndex Field Value Type Description int HitPosition The position of the hit point in world space. Declaration public float3 HitPosition Field Value Type Description float3 IsHit Indicates whether the raycast hit a cell in the hex terrain. If false, the raycast did not hit any cell. Declaration public bool IsHit Field Value Type Description bool Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Data.HexTerrainRenderConfigAsset.html": {
    "href": "api/Fwt.HexTerrains.Data.HexTerrainRenderConfigAsset.html",
    "title": "Class HexTerrainRenderConfigAsset | Hex Terrains",
    "summary": "Class HexTerrainRenderConfigAsset Render configuration for HexSurface layer. Used to provide materials and other render settings when rendering a HexSurface Inheritance object Object ScriptableObject HexTerrainRenderConfigAsset Inherited Members ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.Data Assembly: fwt.hexterrains.dll Syntax [CreateAssetMenu(fileName = \"HexTerrainRenderConfig\", menuName = \"Fwt/HexTerrains/Terrain Render Config\", order = 1)] public class HexTerrainRenderConfigAsset : ScriptableObject Fields IsCastShadows Declaration public bool IsCastShadows Field Value Type Description bool IsReceiveShadows Declaration public bool IsReceiveShadows Field Value Type Description bool Materials Declaration public Material[] Materials Field Value Type Description Material[] Extension Methods Extensions_UnityObject.SmartDestroy<TObject>(TObject) Extensions_UnityObject.SmartDisableGameObject<TObject>(TObject) Extensions_UnityObject.SmartEnableGameObject<TObject>(TObject) HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Data.HexTerrainRenderSettings.html": {
    "href": "api/Fwt.HexTerrains.Data.HexTerrainRenderSettings.html",
    "title": "Struct HexTerrainRenderSettings | Hex Terrains",
    "summary": "Struct HexTerrainRenderSettings Render settings for the hex terrain surface. Contains settings that affect mesh generation and rendering. Implements IEquatable<HexTerrainRenderSettings> Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.Data Assembly: fwt.hexterrains.dll Syntax [BurstCompile] [Serializable] public struct HexTerrainRenderSettings : IEquatable<HexTerrainRenderSettings> Fields BorderSize Declaration [Tooltip(\"Value from 0 to 1 (part of the Hex are that plato borders take)\")] public float BorderSize Field Value Type Description float BorderSubmeshIndex Declaration [Tooltip(\"Borders will be placed at subhesh with this index (if IsColoredBorders is true)\")] public byte BorderSubmeshIndex Field Value Type Description byte ColoredSlopeTreshold Declaration [Tooltip(\"If height difference between cells is bigger that this value, bridge will be painted as border\")] public byte ColoredSlopeTreshold Field Value Type Description byte HeightOffset Additional height offset for the terrain surface relative to the terrain origin. Used, for instance, for water surfaces, so if water level == ground level, there is no visual clipping. If set, this value is usually very small (e.g. 0.01f) - just enough to avoid visual clipping. Declaration [Tooltip(\"Additional height offset for the terrain surface relative to the terrain origin\")] public float HeightOffset Field Value Type Description float IsColoredBorders Declaration [Tooltip(\"If true, Borders between cells of different ground types will be painted on BorderSubmeshIndex submesh instead of submesh with index that equals cell's GroundType\")] public bool IsColoredBorders Field Value Type Description bool SlopeSize Declaration [Tooltip(\"Value from 0 to 1 (part of the Hex are that slopes take)\")] public float SlopeSize Field Value Type Description float Properties Default Declaration public static HexTerrainRenderSettings Default { get; } Property Value Type Description HexTerrainRenderSettings Methods Equals(HexTerrainRenderSettings) Declaration public bool Equals(HexTerrainRenderSettings other) Parameters Type Name Description HexTerrainRenderSettings other Returns Type Description bool Implements IEquatable<T> Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Data.HexTerrainSettings.html": {
    "href": "api/Fwt.HexTerrains.Data.HexTerrainSettings.html",
    "title": "Struct HexTerrainSettings | Hex Terrains",
    "summary": "Struct HexTerrainSettings Struct for storing hex terrain settings like TerrainSize, ChunkSize, HexRotation, HexLayout, etc. Has methods for converting between pixel and cell coordinates, getting cell index by coordinates, etc. Implements IEquatable<HexTerrainSettings> Inherited Members ValueType.Equals(object) ValueType.GetHashCode() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.Data Assembly: fwt.hexterrains.dll Syntax [BurstCompile] [Serializable] public struct HexTerrainSettings : IEquatable<HexTerrainSettings> Fields ChunkSize Size of the chunk in cells (usually it's 16x16, because the chunk has one mesh and the amount of vertexes must be under 64000) Declaration public int2 ChunkSize Field Value Type Description int2 HexHeight Height of the hexagon in world space. Cell Height is a byte value that is multiplied by this value to get the height of the cell in world space. Declaration public float HexHeight Field Value Type Description float HexLayout HexLayout of the hexagon the terrain is composed of. Declaration public HexLayouts HexLayout Field Value Type Description HexLayouts HexRadius Radius of the hexagon in world space. The half of the distance between two opposite corners of the hexagon. Declaration public float HexRadius Field Value Type Description float HexRotation HexRotation of the hexagon the terrain is composed of. Declaration public HexRotations HexRotation Field Value Type Description HexRotations IsConnectedHorizontally If true, the top and bottom edges of the terrain are seamlessly connected Declaration public bool IsConnectedHorizontally Field Value Type Description bool IsConnectedVertically If true, the right and left edges of the terrain are seamlessly connected Declaration public bool IsConnectedVertically Field Value Type Description bool TerrainSize Size of the terrain in cells (width and height). Declaration public int2 TerrainSize Field Value Type Description int2 Properties CellsCount Total mount of cells on terrain. Declaration public int CellsCount { get; } Property Value Type Description int ChunksCount Total number of chunks in the terrain Declaration public int ChunksCount { get; } Property Value Type Description int ChunksGridSize Size of the chunks grid (one item = one chunk) Declaration public int2 ChunksGridSize { get; } Property Value Type Description int2 Default returns a default HexTerrainSettings Declaration public static HexTerrainSettings Default { get; } Property Value Type Description HexTerrainSettings TerrainAreaSize Size of the rectangle area that the whole terrain occupies in world space. Declaration public float2 TerrainAreaSize { get; } Property Value Type Description float2 Methods CellIndexToPixel(int) Calculates a cell coordinate by cell index, then converts a cell coord to the world point (assuming the terrain origin is 0:0:0). Clamps the coordinate to the terrain size, meaning takes into account if terrain's edges are connected or not Declaration [BurstCompile] public float3 CellIndexToPixel(int cellIndex) Parameters Type Name Description int cellIndex Returns Type Description float3 ClampCoordinate(int2) Takes a cell coordinate and wraps it around the terrain size taking into account if terrain's edges are connected or not. So if IsConnectedHorizontally is true, the x coordinate will be wrapped around the terrain's width, If IsConnectedVertically is true, the y coordinate will be wrapped around the terrain's height. Negative cell coordinates are also wrapped around. Declaration [BurstCompile] public int2 ClampCoordinate(int2 cellCoord) Parameters Type Name Description int2 cellCoord raw cell coordinate Returns Type Description int2 clamped cell coordinate CoordToPixel(int2) Converts a cell coordinate to the world point (assuming the terrain origin is 0:0:0). Clamps the coordinate to the terrain size, meaning takes into account if terrain's edges are connected or not ClampCoordinate(int2) Declaration [BurstCompile] public float3 CoordToPixel(int2 coord) Parameters Type Name Description int2 coord cell coordinate Returns Type Description float3 world point CoordToPixelRaw(int2) Converts a cell coordinate to the world point (assuming the terrain origin is 0:0:0). Declaration [BurstCompile] public float3 CoordToPixelRaw(int2 coord) Parameters Type Name Description int2 coord cell coordinate Returns Type Description float3 world point Equals(HexTerrainSettings) Declaration public bool Equals(HexTerrainSettings other) Parameters Type Name Description HexTerrainSettings other Returns Type Description bool GetCellCoord(int) Converts a cell index into a cell coordinate Declaration [BurstCompile] public int2 GetCellCoord(int cellIndex) Parameters Type Name Description int cellIndex Returns Type Description int2 GetCellHeightInMeters(byte) Calculates a cell height in meters from the heightmap value Declaration [BurstCompile] public float GetCellHeightInMeters(byte cellHeight) Parameters Type Name Description byte cellHeight heightmap value of the cell Returns Type Description float cell height in meters GetCellIndex(int2) Converts a cell coordinate to the cell index. Takes into account if terrain's edges are connected or not Declaration [BurstCompile] public int GetCellIndex(int2 cellCoord) Parameters Type Name Description int2 cellCoord cell coordinate Returns Type Description int cell index GetCellIndexRaw(int2) Converts a cell coordinate to the cell index. Does NOT take into account if terrain's edges are connected or not Declaration [BurstCompile] public int GetCellIndexRaw(int2 cellCoord) Parameters Type Name Description int2 cellCoord cell coordinate Returns Type Description int cell index GetChunkCoord(int) Converts a chunk index into a chunk coordinate (in chunks grid, not cells grid) Declaration [BurstCompile] public int2 GetChunkCoord(int chunkIndex) Parameters Type Name Description int chunkIndex chunk index Returns Type Description int2 chunk coordinate in a chunks grid GetChunkCoordByCellCoord(int2) Returns chunk coordinate (in chunks grid) by cell coordinate (in cells grid) Declaration [BurstCompile] public int2 GetChunkCoordByCellCoord(int2 cellCoord) Parameters Type Name Description int2 cellCoord Returns Type Description int2 GetChunkCoordByCellCoordRaw(int2) Returns chunk coordinate for cell with a giving coord Declaration [BurstCompile] public int2 GetChunkCoordByCellCoordRaw(int2 cellCoord) Parameters Type Name Description int2 cellCoord Returns Type Description int2 GetChunkIndex(int2) Returns a chunk index of giving chunk coordinate (in chunks grid, not cells grid) Declaration [BurstCompile] public int GetChunkIndex(int2 chunkCoord) Parameters Type Name Description int2 chunkCoord chunk coordinate in a chunks grid Returns Type Description int chunk index GetChunkIndexByCellCoord(int2) Returns a chunk index for cell at provided cell coordinate (not chunk coordinate) Declaration [BurstCompile] public int GetChunkIndexByCellCoord(int2 cellCoord) Parameters Type Name Description int2 cellCoord Returns Type Description int GetChunkIndexByCellCoordRaw(int2) Returns a chunk index for cell with a giving coordinate Declaration [BurstCompile] public int GetChunkIndexByCellCoordRaw(int2 cellCoord) Parameters Type Name Description int2 cellCoord Returns Type Description int GetChunkIndexByCellIndex(int) Returns a chunk index for giving cell index Declaration [BurstCompile] public int GetChunkIndexByCellIndex(int cellIndex) Parameters Type Name Description int cellIndex Returns Type Description int IsCellInsideTheTerrain(int2) Checks if the cell coordinate is inside the terrain. Takes into account if terrain's edges are connected or not Declaration [BurstCompile] public bool IsCellInsideTheTerrain(int2 cellCoord) Parameters Type Name Description int2 cellCoord Returns Type Description bool PixelToCoord(float2) Converts a world point to a cell coordinate (assuming the terrain origin is 0:0:0). Declaration [BurstCompile] public int2 PixelToCoord(float2 pixel) Parameters Type Name Description float2 pixel world point Returns Type Description int2 cell coordinate PixelToCoordRaw(float2) Converts a world 2D point (without height) to a cell coordinate (assuming the terrain origin is 0:0:0). Declaration [BurstCompile] public int2 PixelToCoordRaw(float2 pixel) Parameters Type Name Description float2 pixel world point Returns Type Description int2 cell coordinate PixelToCoordRaw(float3) Converts a world point to a cell coordinate (assuming the terrain origin is 0:0:0). Declaration [BurstCompile] public int2 PixelToCoordRaw(float3 pixel) Parameters Type Name Description float3 pixel world point Returns Type Description int2 cell coordinate ToString() Declaration public override string ToString() Returns Type Description string Overrides ValueType.ToString() Implements IEquatable<T> Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Data.HexTerrainViewMode.html": {
    "href": "api/Fwt.HexTerrains.Data.HexTerrainViewMode.html",
    "title": "Struct HexTerrainViewMode | Hex Terrains",
    "summary": "Struct HexTerrainViewMode Contains the current view mode of the terrain. Implements IComponentData IQueryTypeParameter Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.Data Assembly: fwt.hexterrains.dll Syntax public struct HexTerrainViewMode : IComponentData, IQueryTypeParameter Fields Value The current view mode of the terrain. Declaration public VersionValue<byte> Value Field Value Type Description VersionValue<byte> Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Data.HexWaterColorPalette.html": {
    "href": "api/Fwt.HexTerrains.Data.HexWaterColorPalette.html",
    "title": "Struct HexWaterColorPalette | Hex Terrains",
    "summary": "Struct HexWaterColorPalette Implements IBufferElementData Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.Data Assembly: fwt.hexterrains.dll Syntax public struct HexWaterColorPalette : IBufferElementData Fields Color Declaration public Color32 Color Field Value Type Description Color32 Implements Unity.Entities.IBufferElementData Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Data.HexWaterData.html": {
    "href": "api/Fwt.HexTerrains.Data.HexWaterData.html",
    "title": "Class HexWaterData | Hex Terrains",
    "summary": "Class HexWaterData HexSurface for terrain Water HexSurfaceData Inheritance object HexSurfaceData HexWaterData Implements IDisposable IComponentData IQueryTypeParameter Inherited Members HexSurfaceData.Settings HexSurfaceData.TerrainMetrics HexSurfaceData.HeightMap HexSurfaceData.BiomesMap HexSurfaceData.CellMetrics HexSurfaceData.CellColorMap HexSurfaceData.BiomeColors HexSurfaceData.ColorMapTextureIndex HexSurfaceData.Init(HexTerrainSettings, NativeArray<Color32>) HexSurfaceData.Init(HexTerrainSettings) HexSurfaceData.InitBiomeColors(NativeArray<Color32>) HexSurfaceData.Resize(int2) HexSurfaceData.SetAllDirty(bool) HexSurfaceData.Cleanup() HexSurfaceData.CleanupAsync() HexSurfaceData.OpenAllToWrite() HexSurfaceData.OpenAllToRead() HexSurfaceData.CompleteAllJobs() HexSurfaceData.GetCellHeight(int) HexSurfaceData.GetCellBiome(int) HexSurfaceData.GetCellMetrics(int) HexSurfaceData.SetHeightMap(byte[]) HexSurfaceData.SetBiomesMap(byte[]) HexSurfaceData.SetCellHeight(int, byte) HexSurfaceData.SetCellBiome(int, byte) HexSurfaceData.SetAllCellsHeight(byte) HexSurfaceData.SetAllCellsBiome(byte) HexSurfaceData.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Data Assembly: fwt.hexterrains.dll Syntax public class HexWaterData : HexSurfaceData, IDisposable, IComponentData, IQueryTypeParameter Implements IDisposable Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Data.HexWaterRenderConfig.html": {
    "href": "api/Fwt.HexTerrains.Data.HexWaterRenderConfig.html",
    "title": "Struct HexWaterRenderConfig | Hex Terrains",
    "summary": "Struct HexWaterRenderConfig Implements IHexSurfaceRenderConfig IBufferElementData Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.Data Assembly: fwt.hexterrains.dll Syntax public struct HexWaterRenderConfig : IHexSurfaceRenderConfig, IBufferElementData Properties Value Declaration public UnityObjectRef<HexTerrainRenderConfigAsset> Value { readonly get; set; } Property Value Type Description UnityObjectRef<HexTerrainRenderConfigAsset> Implements IHexSurfaceRenderConfig Unity.Entities.IBufferElementData Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Data.HexWaterRenderData.html": {
    "href": "api/Fwt.HexTerrains.Data.HexWaterRenderData.html",
    "title": "Class HexWaterRenderData | Hex Terrains",
    "summary": "Class HexWaterRenderData Inheritance object HexSurfaceRenderData HexSurfaceRenderData<HexWaterData> HexWaterRenderData Implements IComponentData IQueryTypeParameter IDisposable Inherited Members HexSurfaceRenderData<HexWaterData>.TerrainMetrics HexSurfaceRenderData<HexWaterData>.SurfaceData HexSurfaceRenderData<HexWaterData>.Init(HexWaterData) HexSurfaceRenderData<HexWaterData>.Init(HexWaterData, HexTerrainRenderSettings) HexSurfaceRenderData<HexWaterData>.ReInit() HexSurfaceRenderData.Settings HexSurfaceRenderData.RenderSettings HexSurfaceRenderData.IsVisible HexSurfaceRenderData.OffsetTransform HexSurfaceRenderData.ChunkMeshSources HexSurfaceRenderData.ChunkMeshes HexSurfaceRenderData.RenderConfigs HexSurfaceRenderData.DefaultRenderConfig HexSurfaceRenderData.InitRenderConfigs<TRenderDataConfig>(NativeArray<TRenderDataConfig>) HexSurfaceRenderData.OpenAllToWrite() HexSurfaceRenderData.CompleteAllJobs() HexSurfaceRenderData.Cleanup() HexSurfaceRenderData.GetChunkMesh(int) HexSurfaceRenderData.GetRenderConfigAsset(int) HexSurfaceRenderData.SetIsVisible(bool) HexSurfaceRenderData.SetChunkMesh(int, Mesh) HexSurfaceRenderData.SetAllDirty(bool) HexSurfaceRenderData.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Data Assembly: fwt.hexterrains.dll Syntax public class HexWaterRenderData : HexSurfaceRenderData<HexWaterData>, IComponentData, IQueryTypeParameter, IDisposable Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter IDisposable Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Data.ICreateHexSurfaceDataRequest.html": {
    "href": "api/Fwt.HexTerrains.Data.ICreateHexSurfaceDataRequest.html",
    "title": "Interface ICreateHexSurfaceDataRequest | Hex Terrains",
    "summary": "Interface ICreateHexSurfaceDataRequest Namespace: Fwt.HexTerrains.Data Assembly: fwt.hexterrains.dll Syntax public interface ICreateHexSurfaceDataRequest Properties Args Declaration CreateHexSurfaceRequestArgs Args { get; set; } Property Value Type Description CreateHexSurfaceRequestArgs Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Data.ICreateHexSurfaceRenderDataRequest.html": {
    "href": "api/Fwt.HexTerrains.Data.ICreateHexSurfaceRenderDataRequest.html",
    "title": "Interface ICreateHexSurfaceRenderDataRequest | Hex Terrains",
    "summary": "Interface ICreateHexSurfaceRenderDataRequest Namespace: Fwt.HexTerrains.Data Assembly: fwt.hexterrains.dll Syntax public interface ICreateHexSurfaceRenderDataRequest Properties Args Declaration CreateHexSurfaceRenderDataRequestArgs Args { get; set; } Property Value Type Description CreateHexSurfaceRenderDataRequestArgs Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Data.IHexSurfaceRenderConfig.html": {
    "href": "api/Fwt.HexTerrains.Data.IHexSurfaceRenderConfig.html",
    "title": "Interface IHexSurfaceRenderConfig | Hex Terrains",
    "summary": "Interface IHexSurfaceRenderConfig Namespace: Fwt.HexTerrains.Data Assembly: fwt.hexterrains.dll Syntax public interface IHexSurfaceRenderConfig Properties Value Declaration UnityObjectRef<HexTerrainRenderConfigAsset> Value { get; set; } Property Value Type Description UnityObjectRef<HexTerrainRenderConfigAsset> Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Data.html": {
    "href": "api/Fwt.HexTerrains.Data.html",
    "title": "Namespace Fwt.HexTerrains.Data | Hex Terrains",
    "summary": "Namespace Fwt.HexTerrains.Data Classes ChunksGridData Container for data related to Terrain Chunks Grid. Chunk visibility, Chunk Metrics per chunk, not per cell. ColorMapTexturesSource HexGroundData HexSurface for terrain Ground HexSurfaceData HexGroundRenderData HexSurfaceData Base class for all HexTerrain surfaces like a ground or water, etc. Create a new class that inherits from this one to create a new surface type. HexSurfaceRenderData Base class for surface types of HexTerrain layers HexSurfaceRenderData<TSurfaceData> Base class for render data of the hex terrain surface. This one is a generic class, so it can be used for any surface type that is inherited from HexSurfaceData HexSurfaceRenderData HexTerrainRenderConfigAsset Render configuration for HexSurface layer. Used to provide materials and other render settings when rendering a HexSurface HexWaterData HexSurface for terrain Water HexSurfaceData HexWaterRenderData Structs ChunkBounds ChunkChangesLog This layer is used to check what chunks are dirty and which are not. It's useful when you do a lot of changes to terrain, and log them into this buffer, So later CheckChunkChangesSystem will read this buffer and mark Chunks that are mentioned here as dirty ChunkPositions ChunkVisibility This is a layer of info about wether chunk is visible and if so, where among all possible positions this chunk is visible (Center, North, East, etc.) If Terrain has Left-Right sides connected, nether Top-Down sides, there is only one possible position: Center ColorMapTexture Buffer of all ColorMap textures to fill with colors from different data layers. ColorMapTexturesCache Contains cached ViewMode and ColorMap verions. When ViewMode's or ColorMap's version is different from cached values, the update logic is applied (like update UI), otherwise the step is skipped CreateCellEntityPropsDataRequest CreateChunksGridDataRequest CreateColorMapTexturesRequest Request to create ColorMap textures on Terrain entity from the source. CreateHexGroundDataRequest CreateHexGroundRenderDataRequest Request to create HexGroundRenderData. CreateHexSurfaceRenderDataRequestArgs Arguments for request to create hex surface render data. CreateHexSurfaceRequestArgs Args for request to create a surface data. CreateHexWaterDataRequest Request component for creating hex water data. CreateHexWaterRenderDataRequest Request to create HexWaterRenderData. HexCellIndex HexCellMetrics Metrics of a cell in the hex terrain. Contains information about the cell's biome, position, coordinate, byte height (from heightmap), height in meters, chunk index, chunk coord, etc. HexChunkGridIndex Shared component that is placed on the CellEntity so it helps to quickly find all CellEntities placed on given chunk. HexChunkMetrics HexGroundColorPalette HexGroundRenderConfig Configuration for rendering the HexSurface layer. Used to provide materials and other render settings when rendering a HexSurface. HexTerrain Contains the TerrainSettings. Indicates that the entity is a HexTerrain HexTerrainMetrics Metrics of the HexTerrain. Contains information about the size of the terrain, chunk size, number of cells, etc. HexTerrainRaycastData Data structure used to store the result of a raycast on the hex terrain. HexTerrainRenderSettings Render settings for the hex terrain surface. Contains settings that affect mesh generation and rendering. HexTerrainSettings Struct for storing hex terrain settings like TerrainSize, ChunkSize, HexRotation, HexLayout, etc. Has methods for converting between pixel and cell coordinates, getting cell index by coordinates, etc. HexTerrainViewMode Contains the current view mode of the terrain. HexWaterColorPalette HexWaterRenderConfig Interfaces ICreateHexSurfaceDataRequest ICreateHexSurfaceRenderDataRequest IHexSurfaceRenderConfig"
  },
  "api/Fwt.HexTerrains.DataLayers.CellBiomesDataLayer.html": {
    "href": "api/Fwt.HexTerrains.DataLayers.CellBiomesDataLayer.html",
    "title": "Class CellBiomesDataLayer | Hex Terrains",
    "summary": "Class CellBiomesDataLayer Data layer for storing biome index (byte) per cell Inheritance object DataLayer ChunkedDataLayer NativeListChunkedDataLayer<byte> HexTerrainNativeListChunkedDataLayer<byte> CellBiomesDataLayer Implements IDisposable ICommitChanges IListDataLayer<byte> Inherited Members HexTerrainNativeListChunkedDataLayer<byte>._settings HexTerrainNativeListChunkedDataLayer<byte>.Settings HexTerrainNativeListChunkedDataLayer<byte>.CellsGridSize HexTerrainNativeListChunkedDataLayer<byte>.ChunkGridSize HexTerrainNativeListChunkedDataLayer<byte>.ChunkSize HexTerrainNativeListChunkedDataLayer<byte>.IsConnectedHorizontally HexTerrainNativeListChunkedDataLayer<byte>.IsConnectedVertically HexTerrainNativeListChunkedDataLayer<byte>.Init(int, HexTerrainSettings) NativeListChunkedDataLayer<byte>._data NativeListChunkedDataLayer<byte>.Data NativeListChunkedDataLayer<byte>.Length NativeListChunkedDataLayer<byte>.Init(int) NativeListChunkedDataLayer<byte>.GetData(int) NativeListChunkedDataLayer<byte>.SetData(int, byte) NativeListChunkedDataLayer<byte>.SetData(byte[]) NativeListChunkedDataLayer<byte>.FillData(byte) NativeListChunkedDataLayer<byte>.TryGetData(int, out byte) NativeListChunkedDataLayer<byte>.TrySetData(int, byte) NativeListChunkedDataLayer<byte>.DisposeAllItems() NativeListChunkedDataLayer<byte>.DisposeExcessItems(int) NativeListChunkedDataLayer<byte>.DisposeDataItem(byte) NativeListChunkedDataLayer<byte>.Dispose() ChunkedDataLayer.ChunksCount ChunkedDataLayer.ChunkDirtyGrid ChunkedDataLayer.DirtyChunks ChunkedDataLayer.SetCellDirty(int) ChunkedDataLayer.SetCellDirty(int, bool) ChunkedDataLayer.GetIsChunkDirty(int) ChunkedDataLayer.SetChunkDirty(int, bool) ChunkedDataLayer.SetAllChunksDirty(bool) ChunkedDataLayer.SetAllChunksDirtyAsync(bool, JobHandle) ChunkedDataLayer.SetAllChunksDirty() ChunkedDataLayer.ClearAllChunksDirty() ChunkedDataLayer.MergeChunkDirtyGrids(ChunkedDataLayer, JobHandle) ChunkedDataLayer.MergeChunkDirtyGrids(ChunkedDataLayer, ChunkedDataLayer, JobHandle) ChunkedDataLayer.MergeChunkDirtyGrids(ChunkedDataLayer, ChunkedDataLayer, ChunkedDataLayer, JobHandle) ChunkedDataLayer.MergeChunkDirtyGrids(ChunkedDataLayer, ChunkedDataLayer, ChunkedDataLayer, ChunkedDataLayer, JobHandle) ChunkedDataLayer.GetChunkIndexByCellIndex(int) ChunkedDataLayer.GetChunkCoord(int2) ChunkedDataLayer.GetChunkCoord(int) ChunkedDataLayer.GetChunkIndex(int2) ChunkedDataLayer.GetCellCoord(int) ChunkedDataLayer.GetCellIndex(int2) ChunkedDataLayer.ResolveCellCoord(int2) ChunkedDataLayer.ResolveChunkCoord(int2) DataLayer._readJobsDependency DataLayer.ReadDependency DataLayer._writeJobsDependency DataLayer.WriteDependency DataLayer.CombinedDependency DataLayer._isDirty DataLayer.IsDirty DataLayer._version DataLayer.Version DataLayer.AddReadDependency(JobHandle) DataLayer.AddWriteDependency(JobHandle) DataLayer.SetReadDependency(JobHandle) DataLayer.SetWriteDependency(JobHandle) DataLayer.PrepareToWrite() DataLayer.PrepareToRead() DataLayer.OpenToRead() DataLayer.OpenToWrite() DataLayer.CompleteReadJobs() DataLayer.CompleteWriteJobs() DataLayer.CompleteAllJobs() DataLayer.CommitChanges() DataLayer.SetDirty(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.DataLayers Assembly: fwt.hexterrains.dll Syntax public class CellBiomesDataLayer : HexTerrainNativeListChunkedDataLayer<byte>, IDisposable, ICommitChanges, IListDataLayer<byte> Properties IsDisposableItems If true, means when layer is resized or disposed, all items that are removed will be disposed (see nested classes description for details as the process may be different from layer to layer) Declaration public override bool IsDisposableItems { get; } Property Value Type Description bool Overrides DataLayer.IsDisposableItems Methods Cleanup() Declaration public override void Cleanup() Overrides HexTerrainNativeListChunkedDataLayer<byte>.Cleanup() CleanupAsync() Declaration public override JobHandle CleanupAsync() Returns Type Description JobHandle Overrides HexTerrainNativeListChunkedDataLayer<byte>.CleanupAsync() Implements IDisposable ICommitChanges IListDataLayer<TItem> Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.DataLayers.CellColorsDataLayer.html": {
    "href": "api/Fwt.HexTerrains.DataLayers.CellColorsDataLayer.html",
    "title": "Class CellColorsDataLayer | Hex Terrains",
    "summary": "Class CellColorsDataLayer Data layer for storing a Color per cell Inheritance object DataLayer ChunkedDataLayer NativeListChunkedDataLayer<Color32> HexTerrainNativeListChunkedDataLayer<Color32> CellColorsDataLayer Implements IDisposable ICommitChanges IListDataLayer<Color32> Inherited Members HexTerrainNativeListChunkedDataLayer<Color32>._settings HexTerrainNativeListChunkedDataLayer<Color32>.Settings HexTerrainNativeListChunkedDataLayer<Color32>.CellsGridSize HexTerrainNativeListChunkedDataLayer<Color32>.ChunkGridSize HexTerrainNativeListChunkedDataLayer<Color32>.ChunkSize HexTerrainNativeListChunkedDataLayer<Color32>.IsConnectedHorizontally HexTerrainNativeListChunkedDataLayer<Color32>.IsConnectedVertically HexTerrainNativeListChunkedDataLayer<Color32>.Init(int, HexTerrainSettings) NativeListChunkedDataLayer<Color32>._data NativeListChunkedDataLayer<Color32>.Data NativeListChunkedDataLayer<Color32>.Length NativeListChunkedDataLayer<Color32>.Init(int) NativeListChunkedDataLayer<Color32>.GetData(int) NativeListChunkedDataLayer<Color32>.SetData(int, Color32) NativeListChunkedDataLayer<Color32>.SetData(Color32[]) NativeListChunkedDataLayer<Color32>.FillData(Color32) NativeListChunkedDataLayer<Color32>.TryGetData(int, out Color32) NativeListChunkedDataLayer<Color32>.TrySetData(int, Color32) NativeListChunkedDataLayer<Color32>.DisposeAllItems() NativeListChunkedDataLayer<Color32>.DisposeExcessItems(int) NativeListChunkedDataLayer<Color32>.DisposeDataItem(Color32) NativeListChunkedDataLayer<Color32>.Dispose() ChunkedDataLayer.ChunksCount ChunkedDataLayer.ChunkDirtyGrid ChunkedDataLayer.DirtyChunks ChunkedDataLayer.SetCellDirty(int) ChunkedDataLayer.SetCellDirty(int, bool) ChunkedDataLayer.GetIsChunkDirty(int) ChunkedDataLayer.SetChunkDirty(int, bool) ChunkedDataLayer.SetAllChunksDirty(bool) ChunkedDataLayer.SetAllChunksDirtyAsync(bool, JobHandle) ChunkedDataLayer.SetAllChunksDirty() ChunkedDataLayer.ClearAllChunksDirty() ChunkedDataLayer.MergeChunkDirtyGrids(ChunkedDataLayer, JobHandle) ChunkedDataLayer.MergeChunkDirtyGrids(ChunkedDataLayer, ChunkedDataLayer, JobHandle) ChunkedDataLayer.MergeChunkDirtyGrids(ChunkedDataLayer, ChunkedDataLayer, ChunkedDataLayer, JobHandle) ChunkedDataLayer.MergeChunkDirtyGrids(ChunkedDataLayer, ChunkedDataLayer, ChunkedDataLayer, ChunkedDataLayer, JobHandle) ChunkedDataLayer.GetChunkIndexByCellIndex(int) ChunkedDataLayer.GetChunkCoord(int2) ChunkedDataLayer.GetChunkCoord(int) ChunkedDataLayer.GetChunkIndex(int2) ChunkedDataLayer.GetCellCoord(int) ChunkedDataLayer.GetCellIndex(int2) ChunkedDataLayer.ResolveCellCoord(int2) ChunkedDataLayer.ResolveChunkCoord(int2) DataLayer._readJobsDependency DataLayer.ReadDependency DataLayer._writeJobsDependency DataLayer.WriteDependency DataLayer.CombinedDependency DataLayer._isDirty DataLayer.IsDirty DataLayer._version DataLayer.Version DataLayer.AddReadDependency(JobHandle) DataLayer.AddWriteDependency(JobHandle) DataLayer.SetReadDependency(JobHandle) DataLayer.SetWriteDependency(JobHandle) DataLayer.PrepareToWrite() DataLayer.PrepareToRead() DataLayer.OpenToRead() DataLayer.OpenToWrite() DataLayer.CompleteReadJobs() DataLayer.CompleteWriteJobs() DataLayer.CompleteAllJobs() DataLayer.CommitChanges() DataLayer.SetDirty(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.DataLayers Assembly: fwt.hexterrains.dll Syntax public class CellColorsDataLayer : HexTerrainNativeListChunkedDataLayer<Color32>, IDisposable, ICommitChanges, IListDataLayer<Color32> Fields HasMipMap Used to reinitialize the texture when ApplyColorsToTexture is called and the texture is not the same size as the layer Declaration public bool HasMipMap Field Value Type Description bool TextureFormat Used to reinitialize the texture when ApplyColorsToTexture is called and the texture is not the same size as the layer Declaration public TextureFormat TextureFormat Field Value Type Description TextureFormat _cellColors Used to fill a texture with stored colors Declaration protected Color32[] _cellColors Field Value Type Description Color32[] Properties IsDisposableItems If true, means when layer is resized or disposed, all items that are removed will be disposed (see nested classes description for details as the process may be different from layer to layer) Declaration public override bool IsDisposableItems { get; } Property Value Type Description bool Overrides DataLayer.IsDisposableItems Methods ApplyColorsToTexture(Texture2D) Fills a provided texture with the colors stored in this data layer. if the texture is not the same size as the terrain, it will be reinitialized. Declaration public virtual void ApplyColorsToTexture(Texture2D texture) Parameters Type Name Description Texture2D texture texture to fill with colors from this data layer Cleanup() Declaration public override void Cleanup() Overrides HexTerrainNativeListChunkedDataLayer<Color32>.Cleanup() CleanupAsync() Declaration public override JobHandle CleanupAsync() Returns Type Description JobHandle Overrides HexTerrainNativeListChunkedDataLayer<Color32>.CleanupAsync() Implements IDisposable ICommitChanges IListDataLayer<TItem> Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.DataLayers.CellMetricsDataLayer.html": {
    "href": "api/Fwt.HexTerrains.DataLayers.CellMetricsDataLayer.html",
    "title": "Class CellMetricsDataLayer | Hex Terrains",
    "summary": "Class CellMetricsDataLayer Data layer for storing cell metrics per cell HexCellMetrics. Inheritance object DataLayer ChunkedDataLayer NativeListChunkedDataLayer<HexCellMetrics> HexTerrainNativeListChunkedDataLayer<HexCellMetrics> CellMetricsDataLayer Implements IDisposable ICommitChanges IListDataLayer<HexCellMetrics> Inherited Members HexTerrainNativeListChunkedDataLayer<HexCellMetrics>._settings HexTerrainNativeListChunkedDataLayer<HexCellMetrics>.Settings HexTerrainNativeListChunkedDataLayer<HexCellMetrics>.CellsGridSize HexTerrainNativeListChunkedDataLayer<HexCellMetrics>.ChunkGridSize HexTerrainNativeListChunkedDataLayer<HexCellMetrics>.ChunkSize HexTerrainNativeListChunkedDataLayer<HexCellMetrics>.IsConnectedHorizontally HexTerrainNativeListChunkedDataLayer<HexCellMetrics>.IsConnectedVertically NativeListChunkedDataLayer<HexCellMetrics>._data NativeListChunkedDataLayer<HexCellMetrics>.Data NativeListChunkedDataLayer<HexCellMetrics>.Length NativeListChunkedDataLayer<HexCellMetrics>.Init(int) NativeListChunkedDataLayer<HexCellMetrics>.GetData(int) NativeListChunkedDataLayer<HexCellMetrics>.SetData(int, HexCellMetrics) NativeListChunkedDataLayer<HexCellMetrics>.SetData(HexCellMetrics[]) NativeListChunkedDataLayer<HexCellMetrics>.FillData(HexCellMetrics) NativeListChunkedDataLayer<HexCellMetrics>.TryGetData(int, out HexCellMetrics) NativeListChunkedDataLayer<HexCellMetrics>.TrySetData(int, HexCellMetrics) NativeListChunkedDataLayer<HexCellMetrics>.DisposeAllItems() NativeListChunkedDataLayer<HexCellMetrics>.DisposeExcessItems(int) NativeListChunkedDataLayer<HexCellMetrics>.DisposeDataItem(HexCellMetrics) ChunkedDataLayer.ChunksCount ChunkedDataLayer.ChunkDirtyGrid ChunkedDataLayer.DirtyChunks ChunkedDataLayer.SetCellDirty(int) ChunkedDataLayer.SetCellDirty(int, bool) ChunkedDataLayer.GetIsChunkDirty(int) ChunkedDataLayer.SetChunkDirty(int, bool) ChunkedDataLayer.SetAllChunksDirty(bool) ChunkedDataLayer.SetAllChunksDirtyAsync(bool, JobHandle) ChunkedDataLayer.SetAllChunksDirty() ChunkedDataLayer.ClearAllChunksDirty() ChunkedDataLayer.MergeChunkDirtyGrids(ChunkedDataLayer, JobHandle) ChunkedDataLayer.MergeChunkDirtyGrids(ChunkedDataLayer, ChunkedDataLayer, JobHandle) ChunkedDataLayer.MergeChunkDirtyGrids(ChunkedDataLayer, ChunkedDataLayer, ChunkedDataLayer, JobHandle) ChunkedDataLayer.MergeChunkDirtyGrids(ChunkedDataLayer, ChunkedDataLayer, ChunkedDataLayer, ChunkedDataLayer, JobHandle) ChunkedDataLayer.GetChunkIndexByCellIndex(int) ChunkedDataLayer.GetChunkCoord(int2) ChunkedDataLayer.GetChunkCoord(int) ChunkedDataLayer.GetChunkIndex(int2) ChunkedDataLayer.GetCellCoord(int) ChunkedDataLayer.GetCellIndex(int2) ChunkedDataLayer.ResolveCellCoord(int2) ChunkedDataLayer.ResolveChunkCoord(int2) DataLayer._readJobsDependency DataLayer.ReadDependency DataLayer._writeJobsDependency DataLayer.WriteDependency DataLayer.CombinedDependency DataLayer._isDirty DataLayer.IsDirty DataLayer._version DataLayer.Version DataLayer.AddReadDependency(JobHandle) DataLayer.AddWriteDependency(JobHandle) DataLayer.SetReadDependency(JobHandle) DataLayer.SetWriteDependency(JobHandle) DataLayer.PrepareToWrite() DataLayer.PrepareToRead() DataLayer.OpenToRead() DataLayer.OpenToWrite() DataLayer.CompleteReadJobs() DataLayer.CompleteWriteJobs() DataLayer.CompleteAllJobs() DataLayer.CommitChanges() DataLayer.SetDirty(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.DataLayers Assembly: fwt.hexterrains.dll Syntax public class CellMetricsDataLayer : HexTerrainNativeListChunkedDataLayer<HexCellMetrics>, IDisposable, ICommitChanges, IListDataLayer<HexCellMetrics> Fields CellPositions Cached positions of the cells relative to the terrain origin. Meant to be used for calculating transforms of the cell items Declaration public NativeList<float3> CellPositions Field Value Type Description NativeList<float3> Properties IsDisposableItems If true, means when layer is resized or disposed, all items that are removed will be disposed (see nested classes description for details as the process may be different from layer to layer) Declaration public override bool IsDisposableItems { get; } Property Value Type Description bool Overrides DataLayer.IsDisposableItems Methods Cleanup() Declaration public override void Cleanup() Overrides HexTerrainNativeListChunkedDataLayer<HexCellMetrics>.Cleanup() CleanupAsync() Declaration public override JobHandle CleanupAsync() Returns Type Description JobHandle Overrides HexTerrainNativeListChunkedDataLayer<HexCellMetrics>.CleanupAsync() Dispose() Disposes the data layer, calls DisposeAllItems() DisposeAllItems() Declaration public override void Dispose() Overrides NativeListChunkedDataLayer<HexCellMetrics>.Dispose() Init(int, HexTerrainSettings) Initializes/Reinitializes the data layer. Use this method instead of base.Init() to initialize the data layer, as this one correctly initializes the chunks grid Declaration public override void Init(int layerSize, HexTerrainSettings settings) Parameters Type Name Description int layerSize Cells count in the terrain HexTerrainSettings settings hex settings of the terrain Overrides HexTerrainNativeListChunkedDataLayer<HexCellMetrics>.Init(int, HexTerrainSettings) Implements IDisposable ICommitChanges IListDataLayer<TItem> Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.DataLayers.CellTransformDataLayer.html": {
    "href": "api/Fwt.HexTerrains.DataLayers.CellTransformDataLayer.html",
    "title": "Class CellTransformDataLayer | Hex Terrains",
    "summary": "Class CellTransformDataLayer Inheritance object DataLayer ChunkedDataLayer NativeListChunkedDataLayer<Matrix4x4> HexTerrainNativeListChunkedDataLayer<Matrix4x4> CellTransformDataLayer Implements IDisposable ICommitChanges IListDataLayer<Matrix4x4> Inherited Members HexTerrainNativeListChunkedDataLayer<Matrix4x4>._settings HexTerrainNativeListChunkedDataLayer<Matrix4x4>.Settings HexTerrainNativeListChunkedDataLayer<Matrix4x4>.CellsGridSize HexTerrainNativeListChunkedDataLayer<Matrix4x4>.ChunkGridSize HexTerrainNativeListChunkedDataLayer<Matrix4x4>.ChunkSize HexTerrainNativeListChunkedDataLayer<Matrix4x4>.IsConnectedHorizontally HexTerrainNativeListChunkedDataLayer<Matrix4x4>.IsConnectedVertically HexTerrainNativeListChunkedDataLayer<Matrix4x4>.Init(int, HexTerrainSettings) NativeListChunkedDataLayer<Matrix4x4>._data NativeListChunkedDataLayer<Matrix4x4>.Data NativeListChunkedDataLayer<Matrix4x4>.Length NativeListChunkedDataLayer<Matrix4x4>.Init(int) NativeListChunkedDataLayer<Matrix4x4>.GetData(int) NativeListChunkedDataLayer<Matrix4x4>.SetData(int, Matrix4x4) NativeListChunkedDataLayer<Matrix4x4>.SetData(Matrix4x4[]) NativeListChunkedDataLayer<Matrix4x4>.FillData(Matrix4x4) NativeListChunkedDataLayer<Matrix4x4>.TryGetData(int, out Matrix4x4) NativeListChunkedDataLayer<Matrix4x4>.TrySetData(int, Matrix4x4) NativeListChunkedDataLayer<Matrix4x4>.DisposeAllItems() NativeListChunkedDataLayer<Matrix4x4>.DisposeExcessItems(int) NativeListChunkedDataLayer<Matrix4x4>.DisposeDataItem(Matrix4x4) NativeListChunkedDataLayer<Matrix4x4>.Dispose() ChunkedDataLayer.ChunksCount ChunkedDataLayer.ChunkDirtyGrid ChunkedDataLayer.DirtyChunks ChunkedDataLayer.SetCellDirty(int) ChunkedDataLayer.SetCellDirty(int, bool) ChunkedDataLayer.GetIsChunkDirty(int) ChunkedDataLayer.SetChunkDirty(int, bool) ChunkedDataLayer.SetAllChunksDirty(bool) ChunkedDataLayer.SetAllChunksDirtyAsync(bool, JobHandle) ChunkedDataLayer.SetAllChunksDirty() ChunkedDataLayer.ClearAllChunksDirty() ChunkedDataLayer.MergeChunkDirtyGrids(ChunkedDataLayer, JobHandle) ChunkedDataLayer.MergeChunkDirtyGrids(ChunkedDataLayer, ChunkedDataLayer, JobHandle) ChunkedDataLayer.MergeChunkDirtyGrids(ChunkedDataLayer, ChunkedDataLayer, ChunkedDataLayer, JobHandle) ChunkedDataLayer.MergeChunkDirtyGrids(ChunkedDataLayer, ChunkedDataLayer, ChunkedDataLayer, ChunkedDataLayer, JobHandle) ChunkedDataLayer.GetChunkIndexByCellIndex(int) ChunkedDataLayer.GetChunkCoord(int2) ChunkedDataLayer.GetChunkCoord(int) ChunkedDataLayer.GetChunkIndex(int2) ChunkedDataLayer.GetCellCoord(int) ChunkedDataLayer.GetCellIndex(int2) ChunkedDataLayer.ResolveCellCoord(int2) ChunkedDataLayer.ResolveChunkCoord(int2) DataLayer._readJobsDependency DataLayer.ReadDependency DataLayer._writeJobsDependency DataLayer.WriteDependency DataLayer.CombinedDependency DataLayer._isDirty DataLayer.IsDirty DataLayer._version DataLayer.Version DataLayer.AddReadDependency(JobHandle) DataLayer.AddWriteDependency(JobHandle) DataLayer.SetReadDependency(JobHandle) DataLayer.SetWriteDependency(JobHandle) DataLayer.PrepareToWrite() DataLayer.PrepareToRead() DataLayer.OpenToRead() DataLayer.OpenToWrite() DataLayer.CompleteReadJobs() DataLayer.CompleteWriteJobs() DataLayer.CompleteAllJobs() DataLayer.CommitChanges() DataLayer.SetDirty(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.DataLayers Assembly: fwt.hexterrains.dll Syntax public class CellTransformDataLayer : HexTerrainNativeListChunkedDataLayer<Matrix4x4>, IDisposable, ICommitChanges, IListDataLayer<Matrix4x4> Properties IsDisposableItems If true, means when layer is resized or disposed, all items that are removed will be disposed (see nested classes description for details as the process may be different from layer to layer) Declaration public override bool IsDisposableItems { get; } Property Value Type Description bool Overrides DataLayer.IsDisposableItems Methods Cleanup() Declaration public override void Cleanup() Overrides HexTerrainNativeListChunkedDataLayer<Matrix4x4>.Cleanup() CleanupAsync() Declaration public override JobHandle CleanupAsync() Returns Type Description JobHandle Overrides HexTerrainNativeListChunkedDataLayer<Matrix4x4>.CleanupAsync() Implements IDisposable ICommitChanges IListDataLayer<TItem> Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.DataLayers.ChunkMeshSourcesDataLayer.html": {
    "href": "api/Fwt.HexTerrains.DataLayers.ChunkMeshSourcesDataLayer.html",
    "title": "Class ChunkMeshSourcesDataLayer | Hex Terrains",
    "summary": "Class ChunkMeshSourcesDataLayer Data layer for storing mesh sources for hex terrain chunks MeshSource Inheritance object DataLayer ChunkedDataLayer NativeListChunkedDataLayer<MeshSource> HexTerrainNativeListChunkedDataLayer<MeshSource> ChunkMeshSourcesDataLayer Implements IDisposable ICommitChanges IListDataLayer<MeshSource> Inherited Members HexTerrainNativeListChunkedDataLayer<MeshSource>._settings HexTerrainNativeListChunkedDataLayer<MeshSource>.Settings NativeListChunkedDataLayer<MeshSource>._data NativeListChunkedDataLayer<MeshSource>.Data NativeListChunkedDataLayer<MeshSource>.Length NativeListChunkedDataLayer<MeshSource>.Init(int) NativeListChunkedDataLayer<MeshSource>.GetData(int) NativeListChunkedDataLayer<MeshSource>.SetData(int, MeshSource) NativeListChunkedDataLayer<MeshSource>.SetData(MeshSource[]) NativeListChunkedDataLayer<MeshSource>.FillData(MeshSource) NativeListChunkedDataLayer<MeshSource>.TryGetData(int, out MeshSource) NativeListChunkedDataLayer<MeshSource>.TrySetData(int, MeshSource) NativeListChunkedDataLayer<MeshSource>.DisposeAllItems() NativeListChunkedDataLayer<MeshSource>.DisposeExcessItems(int) NativeListChunkedDataLayer<MeshSource>.DisposeDataItem(MeshSource) ChunkedDataLayer.ChunksCount ChunkedDataLayer.ChunkDirtyGrid ChunkedDataLayer.DirtyChunks ChunkedDataLayer.SetCellDirty(int) ChunkedDataLayer.SetCellDirty(int, bool) ChunkedDataLayer.GetIsChunkDirty(int) ChunkedDataLayer.SetChunkDirty(int, bool) ChunkedDataLayer.SetAllChunksDirty(bool) ChunkedDataLayer.SetAllChunksDirtyAsync(bool, JobHandle) ChunkedDataLayer.SetAllChunksDirty() ChunkedDataLayer.ClearAllChunksDirty() ChunkedDataLayer.MergeChunkDirtyGrids(ChunkedDataLayer, JobHandle) ChunkedDataLayer.MergeChunkDirtyGrids(ChunkedDataLayer, ChunkedDataLayer, JobHandle) ChunkedDataLayer.MergeChunkDirtyGrids(ChunkedDataLayer, ChunkedDataLayer, ChunkedDataLayer, JobHandle) ChunkedDataLayer.MergeChunkDirtyGrids(ChunkedDataLayer, ChunkedDataLayer, ChunkedDataLayer, ChunkedDataLayer, JobHandle) ChunkedDataLayer.GetChunkIndexByCellIndex(int) ChunkedDataLayer.GetChunkCoord(int2) ChunkedDataLayer.GetChunkCoord(int) ChunkedDataLayer.GetChunkIndex(int2) ChunkedDataLayer.GetCellCoord(int) ChunkedDataLayer.GetCellIndex(int2) ChunkedDataLayer.ResolveCellCoord(int2) ChunkedDataLayer.ResolveChunkCoord(int2) DataLayer._readJobsDependency DataLayer.ReadDependency DataLayer._writeJobsDependency DataLayer.WriteDependency DataLayer.CombinedDependency DataLayer._isDirty DataLayer.IsDirty DataLayer._version DataLayer.Version DataLayer.AddReadDependency(JobHandle) DataLayer.AddWriteDependency(JobHandle) DataLayer.SetReadDependency(JobHandle) DataLayer.SetWriteDependency(JobHandle) DataLayer.PrepareToWrite() DataLayer.PrepareToRead() DataLayer.OpenToRead() DataLayer.OpenToWrite() DataLayer.CompleteReadJobs() DataLayer.CompleteWriteJobs() DataLayer.CompleteAllJobs() DataLayer.CommitChanges() DataLayer.SetDirty(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.DataLayers Assembly: fwt.hexterrains.dll Syntax public class ChunkMeshSourcesDataLayer : HexTerrainNativeListChunkedDataLayer<MeshSource>, IDisposable, ICommitChanges, IListDataLayer<MeshSource> Properties CellsGridSize Width and Height of the grid of cells. Declaration public override int2 CellsGridSize { get; } Property Value Type Description int2 Overrides HexTerrainNativeListChunkedDataLayer<MeshSource>.CellsGridSize ChunkGridSize Width and Height of the grid of chunks. Declaration public override int2 ChunkGridSize { get; } Property Value Type Description int2 Overrides HexTerrainNativeListChunkedDataLayer<MeshSource>.ChunkGridSize ChunkSize Width and Height of the chunk in cells. Declaration public override int2 ChunkSize { get; } Property Value Type Description int2 Overrides HexTerrainNativeListChunkedDataLayer<MeshSource>.ChunkSize GeneratedMeshIndexes Declaration public NativeList<int> GeneratedMeshIndexes { get; } Property Value Type Description NativeList<int> IsConnectedHorizontally True if left and right edges of the chunk are connected (like in civilization games). Needed for wrapping the grid. If SetCellDirty(cellIndex, checkEdges) is called with checkEdges == true, the chunk of the cell is marked dirty and also all adjacent chunks are also marked dirty. So if the left edge is dirty, the right edge is also dirty. Declaration public override bool IsConnectedHorizontally { get; } Property Value Type Description bool Overrides HexTerrainNativeListChunkedDataLayer<MeshSource>.IsConnectedHorizontally IsConnectedVertically True if top and bottom edges of the chunk are connected (like in civilization games). Needed for wrapping the grid. If SetCellDirty(cellIndex, checkEdges) is called with checkEdges == true, the chunk of the cell is marked dirty and also all adjacent chunks are also marked dirty. So if the top edge is dirty, the bottom edge is also dirty. Declaration public override bool IsConnectedVertically { get; } Property Value Type Description bool Overrides HexTerrainNativeListChunkedDataLayer<MeshSource>.IsConnectedVertically IsDisposableItems If true, means when layer is resized or disposed, all items that are removed will be disposed (see nested classes description for details as the process may be different from layer to layer) Declaration public override bool IsDisposableItems { get; } Property Value Type Description bool Overrides DataLayer.IsDisposableItems Methods Cleanup() Declaration public override void Cleanup() Overrides HexTerrainNativeListChunkedDataLayer<MeshSource>.Cleanup() CleanupAsync() Declaration public override JobHandle CleanupAsync() Returns Type Description JobHandle Overrides HexTerrainNativeListChunkedDataLayer<MeshSource>.CleanupAsync() Dispose() Disposes the data layer, calls DisposeAllItems() DisposeAllItems() Declaration public override void Dispose() Overrides NativeListChunkedDataLayer<MeshSource>.Dispose() Init(int, HexTerrainSettings) Initializes/Reinitializes the data layer with the given size and settings. Use this initialization method instead of base.Init without HexTerrainSettings parameter, as this one will also initialize the chunks data Declaration public override void Init(int layerSize, HexTerrainSettings settings) Parameters Type Name Description int layerSize amount of meshes for terrain (amount of terrain chunks) HexTerrainSettings settings settings of the hex terrain this layer is from Overrides HexTerrainNativeListChunkedDataLayer<MeshSource>.Init(int, HexTerrainSettings) Implements IDisposable ICommitChanges IListDataLayer<TItem> Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.DataLayers.ChunkMeshesDataLayer.html": {
    "href": "api/Fwt.HexTerrains.DataLayers.ChunkMeshesDataLayer.html",
    "title": "Class ChunkMeshesDataLayer | Hex Terrains",
    "summary": "Class ChunkMeshesDataLayer Data layer for storing meshes of the hex terrain chunks Inheritance object DataLayer ChunkedDataLayer ListChunkedDataLayer<Mesh> HexTerrainListChunkedDataLayer<Mesh> ChunkMeshesDataLayer Implements IDisposable ICommitChanges IListDataLayer<Mesh> Inherited Members HexTerrainListChunkedDataLayer<Mesh>._settings HexTerrainListChunkedDataLayer<Mesh>.Settings HexTerrainListChunkedDataLayer<Mesh>.Length HexTerrainListChunkedDataLayer<Mesh>.Init(int, HexTerrainSettings) ListChunkedDataLayer<Mesh>._data ListChunkedDataLayer<Mesh>.Data ListChunkedDataLayer<Mesh>.Init(int) ListChunkedDataLayer<Mesh>.GetData(int) ListChunkedDataLayer<Mesh>.SetData(int, Mesh) ListChunkedDataLayer<Mesh>.TryGetData(int, out Mesh) ListChunkedDataLayer<Mesh>.TrySetData(int, Mesh) ListChunkedDataLayer<Mesh>.GetDataOrDefault(int) ListChunkedDataLayer<Mesh>.DisposeAllItems() ListChunkedDataLayer<Mesh>.Dispose() ChunkedDataLayer.ChunksCount ChunkedDataLayer.ChunkDirtyGrid ChunkedDataLayer.DirtyChunks ChunkedDataLayer.SetCellDirty(int) ChunkedDataLayer.SetCellDirty(int, bool) ChunkedDataLayer.GetIsChunkDirty(int) ChunkedDataLayer.SetChunkDirty(int, bool) ChunkedDataLayer.SetAllChunksDirty(bool) ChunkedDataLayer.SetAllChunksDirtyAsync(bool, JobHandle) ChunkedDataLayer.SetAllChunksDirty() ChunkedDataLayer.ClearAllChunksDirty() ChunkedDataLayer.MergeChunkDirtyGrids(ChunkedDataLayer, JobHandle) ChunkedDataLayer.MergeChunkDirtyGrids(ChunkedDataLayer, ChunkedDataLayer, JobHandle) ChunkedDataLayer.MergeChunkDirtyGrids(ChunkedDataLayer, ChunkedDataLayer, ChunkedDataLayer, JobHandle) ChunkedDataLayer.MergeChunkDirtyGrids(ChunkedDataLayer, ChunkedDataLayer, ChunkedDataLayer, ChunkedDataLayer, JobHandle) ChunkedDataLayer.GetChunkIndexByCellIndex(int) ChunkedDataLayer.GetChunkCoord(int2) ChunkedDataLayer.GetChunkCoord(int) ChunkedDataLayer.GetChunkIndex(int2) ChunkedDataLayer.GetCellCoord(int) ChunkedDataLayer.GetCellIndex(int2) ChunkedDataLayer.ResolveCellCoord(int2) ChunkedDataLayer.ResolveChunkCoord(int2) DataLayer._readJobsDependency DataLayer.ReadDependency DataLayer._writeJobsDependency DataLayer.WriteDependency DataLayer.CombinedDependency DataLayer._isDirty DataLayer.IsDirty DataLayer._version DataLayer.Version DataLayer.AddReadDependency(JobHandle) DataLayer.AddWriteDependency(JobHandle) DataLayer.SetReadDependency(JobHandle) DataLayer.SetWriteDependency(JobHandle) DataLayer.PrepareToWrite() DataLayer.PrepareToRead() DataLayer.OpenToRead() DataLayer.OpenToWrite() DataLayer.CompleteReadJobs() DataLayer.CompleteWriteJobs() DataLayer.CompleteAllJobs() DataLayer.CommitChanges() DataLayer.SetDirty(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.DataLayers Assembly: fwt.hexterrains.dll Syntax public class ChunkMeshesDataLayer : HexTerrainListChunkedDataLayer<Mesh>, IDisposable, ICommitChanges, IListDataLayer<Mesh> Properties CellsGridSize Width and Height of the grid of cells. Declaration public override int2 CellsGridSize { get; } Property Value Type Description int2 Overrides HexTerrainListChunkedDataLayer<Mesh>.CellsGridSize ChunkGridSize Width and Height of the grid of chunks. Declaration public override int2 ChunkGridSize { get; } Property Value Type Description int2 Overrides HexTerrainListChunkedDataLayer<Mesh>.ChunkGridSize ChunkSize Width and Height of the chunk in cells. Declaration public override int2 ChunkSize { get; } Property Value Type Description int2 Overrides HexTerrainListChunkedDataLayer<Mesh>.ChunkSize IsConnectedHorizontally True if left and right edges of the chunk are connected (like in civilization games). Needed for wrapping the grid. If SetCellDirty(cellIndex, checkEdges) is called with checkEdges == true, the chunk of the cell is marked dirty and also all adjacent chunks are also marked dirty. So if the left edge is dirty, the right edge is also dirty. Declaration public override bool IsConnectedHorizontally { get; } Property Value Type Description bool Overrides HexTerrainListChunkedDataLayer<Mesh>.IsConnectedHorizontally IsConnectedVertically True if top and bottom edges of the chunk are connected (like in civilization games). Needed for wrapping the grid. If SetCellDirty(cellIndex, checkEdges) is called with checkEdges == true, the chunk of the cell is marked dirty and also all adjacent chunks are also marked dirty. So if the top edge is dirty, the bottom edge is also dirty. Declaration public override bool IsConnectedVertically { get; } Property Value Type Description bool Overrides HexTerrainListChunkedDataLayer<Mesh>.IsConnectedVertically IsDisposableItems If true, means when layer is resized or disposed, all items that are removed will be disposed (see nested classes description for details as the process may be different from layer to layer) Declaration public override bool IsDisposableItems { get; } Property Value Type Description bool Overrides DataLayer.IsDisposableItems Methods Cleanup() Declaration public override void Cleanup() Overrides HexTerrainListChunkedDataLayer<Mesh>.Cleanup() DisposeDataItem(Mesh) Disposes data item if it is IDisposable. Declaration protected override void DisposeDataItem(Mesh item) Parameters Type Name Description Mesh item Overrides ListChunkedDataLayer<Mesh>.DisposeDataItem(Mesh) DisposeExcessItems(int) Disposes items at cells greater than layerSize Declaration public override void DisposeExcessItems(int layerSize) Parameters Type Name Description int layerSize items count to keep, dispose all other items Overrides ListChunkedDataLayer<Mesh>.DisposeExcessItems(int) Implements IDisposable ICommitChanges IListDataLayer<TItem> Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.DataLayers.ChunkMetricsDataLayer.html": {
    "href": "api/Fwt.HexTerrains.DataLayers.ChunkMetricsDataLayer.html",
    "title": "Class ChunkMetricsDataLayer | Hex Terrains",
    "summary": "Class ChunkMetricsDataLayer DataLayer with Metrics info for each terrain chunk Inheritance object DataLayer ChunkedDataLayer NativeListChunkedDataLayer<HexChunkMetrics> HexTerrainNativeListChunkedDataLayer<HexChunkMetrics> ChunkMetricsDataLayer Implements IDisposable ICommitChanges IListDataLayer<HexChunkMetrics> Inherited Members HexTerrainNativeListChunkedDataLayer<HexChunkMetrics>._settings HexTerrainNativeListChunkedDataLayer<HexChunkMetrics>.Settings HexTerrainNativeListChunkedDataLayer<HexChunkMetrics>.Init(int, HexTerrainSettings) NativeListChunkedDataLayer<HexChunkMetrics>._data NativeListChunkedDataLayer<HexChunkMetrics>.Data NativeListChunkedDataLayer<HexChunkMetrics>.Length NativeListChunkedDataLayer<HexChunkMetrics>.Init(int) NativeListChunkedDataLayer<HexChunkMetrics>.GetData(int) NativeListChunkedDataLayer<HexChunkMetrics>.SetData(int, HexChunkMetrics) NativeListChunkedDataLayer<HexChunkMetrics>.SetData(HexChunkMetrics[]) NativeListChunkedDataLayer<HexChunkMetrics>.FillData(HexChunkMetrics) NativeListChunkedDataLayer<HexChunkMetrics>.TryGetData(int, out HexChunkMetrics) NativeListChunkedDataLayer<HexChunkMetrics>.TrySetData(int, HexChunkMetrics) NativeListChunkedDataLayer<HexChunkMetrics>.DisposeAllItems() NativeListChunkedDataLayer<HexChunkMetrics>.DisposeExcessItems(int) NativeListChunkedDataLayer<HexChunkMetrics>.DisposeDataItem(HexChunkMetrics) NativeListChunkedDataLayer<HexChunkMetrics>.Dispose() ChunkedDataLayer.ChunksCount ChunkedDataLayer.ChunkDirtyGrid ChunkedDataLayer.DirtyChunks ChunkedDataLayer.SetCellDirty(int) ChunkedDataLayer.SetCellDirty(int, bool) ChunkedDataLayer.GetIsChunkDirty(int) ChunkedDataLayer.SetChunkDirty(int, bool) ChunkedDataLayer.SetAllChunksDirty(bool) ChunkedDataLayer.SetAllChunksDirtyAsync(bool, JobHandle) ChunkedDataLayer.SetAllChunksDirty() ChunkedDataLayer.ClearAllChunksDirty() ChunkedDataLayer.MergeChunkDirtyGrids(ChunkedDataLayer, JobHandle) ChunkedDataLayer.MergeChunkDirtyGrids(ChunkedDataLayer, ChunkedDataLayer, JobHandle) ChunkedDataLayer.MergeChunkDirtyGrids(ChunkedDataLayer, ChunkedDataLayer, ChunkedDataLayer, JobHandle) ChunkedDataLayer.MergeChunkDirtyGrids(ChunkedDataLayer, ChunkedDataLayer, ChunkedDataLayer, ChunkedDataLayer, JobHandle) ChunkedDataLayer.GetChunkIndexByCellIndex(int) ChunkedDataLayer.GetChunkCoord(int2) ChunkedDataLayer.GetChunkCoord(int) ChunkedDataLayer.GetChunkIndex(int2) ChunkedDataLayer.GetCellCoord(int) ChunkedDataLayer.GetCellIndex(int2) ChunkedDataLayer.ResolveCellCoord(int2) ChunkedDataLayer.ResolveChunkCoord(int2) DataLayer._readJobsDependency DataLayer.ReadDependency DataLayer._writeJobsDependency DataLayer.WriteDependency DataLayer.CombinedDependency DataLayer._isDirty DataLayer.IsDirty DataLayer._version DataLayer.Version DataLayer.AddReadDependency(JobHandle) DataLayer.AddWriteDependency(JobHandle) DataLayer.SetReadDependency(JobHandle) DataLayer.SetWriteDependency(JobHandle) DataLayer.PrepareToWrite() DataLayer.PrepareToRead() DataLayer.OpenToRead() DataLayer.OpenToWrite() DataLayer.CompleteReadJobs() DataLayer.CompleteWriteJobs() DataLayer.CompleteAllJobs() DataLayer.CommitChanges() DataLayer.SetDirty(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.DataLayers Assembly: fwt.hexterrains.dll Syntax public class ChunkMetricsDataLayer : HexTerrainNativeListChunkedDataLayer<HexChunkMetrics>, IDisposable, ICommitChanges, IListDataLayer<HexChunkMetrics> Properties CellsGridSize Size of the ChunkMetricsDataLayer (equals to the chunks count) Declaration public override int2 CellsGridSize { get; } Property Value Type Description int2 Overrides HexTerrainNativeListChunkedDataLayer<HexChunkMetrics>.CellsGridSize ChunkGridSize Size of the chunks grid. For this particular layer is equals to the CellsGridSize, Declaration public override int2 ChunkGridSize { get; } Property Value Type Description int2 Overrides HexTerrainNativeListChunkedDataLayer<HexChunkMetrics>.ChunkGridSize ChunkSize Size of the DataLayer chunk (not the same as terrain chunk). Because this layer contains one item per chunk, the size of the DataLayer chunk is 1x1 Declaration public override int2 ChunkSize { get; } Property Value Type Description int2 Overrides HexTerrainNativeListChunkedDataLayer<HexChunkMetrics>.ChunkSize IsConnectedHorizontally If true, the terrain edges are connected horizontally (left-right) Declaration public override bool IsConnectedHorizontally { get; } Property Value Type Description bool Overrides HexTerrainNativeListChunkedDataLayer<HexChunkMetrics>.IsConnectedHorizontally IsConnectedVertically If true, the terrain edges are connected vertically (top-down) Declaration public override bool IsConnectedVertically { get; } Property Value Type Description bool Overrides HexTerrainNativeListChunkedDataLayer<HexChunkMetrics>.IsConnectedVertically IsDisposableItems If true, the items in this layer are disposable. In this particular case the items are not disposable, because they are not created in the heap Declaration public override bool IsDisposableItems { get; } Property Value Type Description bool Overrides DataLayer.IsDisposableItems Methods Cleanup() Cleans up the layer. Called every frame. Usually it clears the dirty flags. Declaration public override void Cleanup() Overrides HexTerrainNativeListChunkedDataLayer<HexChunkMetrics>.Cleanup() CleanupAsync() Async version of Cleanup. Instead of waiting for cleanup jobs to complete, this one just schedules jobs and returns the job handle. Declaration public override JobHandle CleanupAsync() Returns Type Description JobHandle JobHandle for the scheduled cleanup jobs Overrides HexTerrainNativeListChunkedDataLayer<HexChunkMetrics>.CleanupAsync() Implements IDisposable ICommitChanges IListDataLayer<TItem> Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.DataLayers.ChunkVisibilityDataLayer.html": {
    "href": "api/Fwt.HexTerrains.DataLayers.ChunkVisibilityDataLayer.html",
    "title": "Class ChunkVisibilityDataLayer | Hex Terrains",
    "summary": "Class ChunkVisibilityDataLayer DataLayer with Visibility info for each terrain chunk Inheritance object DataLayer ChunkedDataLayer NativeListChunkedDataLayer<ChunkVisibility> HexTerrainNativeListChunkedDataLayer<ChunkVisibility> ChunkVisibilityDataLayer Implements IDisposable ICommitChanges IListDataLayer<ChunkVisibility> Inherited Members HexTerrainNativeListChunkedDataLayer<ChunkVisibility>._settings HexTerrainNativeListChunkedDataLayer<ChunkVisibility>.Settings HexTerrainNativeListChunkedDataLayer<ChunkVisibility>.Init(int, HexTerrainSettings) NativeListChunkedDataLayer<ChunkVisibility>._data NativeListChunkedDataLayer<ChunkVisibility>.Data NativeListChunkedDataLayer<ChunkVisibility>.Length NativeListChunkedDataLayer<ChunkVisibility>.GetData(int) NativeListChunkedDataLayer<ChunkVisibility>.SetData(int, ChunkVisibility) NativeListChunkedDataLayer<ChunkVisibility>.SetData(ChunkVisibility[]) NativeListChunkedDataLayer<ChunkVisibility>.FillData(ChunkVisibility) NativeListChunkedDataLayer<ChunkVisibility>.TryGetData(int, out ChunkVisibility) NativeListChunkedDataLayer<ChunkVisibility>.TrySetData(int, ChunkVisibility) NativeListChunkedDataLayer<ChunkVisibility>.DisposeAllItems() NativeListChunkedDataLayer<ChunkVisibility>.DisposeExcessItems(int) NativeListChunkedDataLayer<ChunkVisibility>.DisposeDataItem(ChunkVisibility) ChunkedDataLayer.ChunksCount ChunkedDataLayer.ChunkDirtyGrid ChunkedDataLayer.DirtyChunks ChunkedDataLayer.SetCellDirty(int) ChunkedDataLayer.SetCellDirty(int, bool) ChunkedDataLayer.GetIsChunkDirty(int) ChunkedDataLayer.SetChunkDirty(int, bool) ChunkedDataLayer.SetAllChunksDirty(bool) ChunkedDataLayer.SetAllChunksDirtyAsync(bool, JobHandle) ChunkedDataLayer.SetAllChunksDirty() ChunkedDataLayer.ClearAllChunksDirty() ChunkedDataLayer.MergeChunkDirtyGrids(ChunkedDataLayer, JobHandle) ChunkedDataLayer.MergeChunkDirtyGrids(ChunkedDataLayer, ChunkedDataLayer, JobHandle) ChunkedDataLayer.MergeChunkDirtyGrids(ChunkedDataLayer, ChunkedDataLayer, ChunkedDataLayer, JobHandle) ChunkedDataLayer.MergeChunkDirtyGrids(ChunkedDataLayer, ChunkedDataLayer, ChunkedDataLayer, ChunkedDataLayer, JobHandle) ChunkedDataLayer.GetChunkIndexByCellIndex(int) ChunkedDataLayer.GetChunkCoord(int2) ChunkedDataLayer.GetChunkCoord(int) ChunkedDataLayer.GetChunkIndex(int2) ChunkedDataLayer.GetCellCoord(int) ChunkedDataLayer.GetCellIndex(int2) ChunkedDataLayer.ResolveCellCoord(int2) ChunkedDataLayer.ResolveChunkCoord(int2) DataLayer._readJobsDependency DataLayer.ReadDependency DataLayer._writeJobsDependency DataLayer.WriteDependency DataLayer.CombinedDependency DataLayer._isDirty DataLayer.IsDirty DataLayer._version DataLayer.Version DataLayer.AddReadDependency(JobHandle) DataLayer.AddWriteDependency(JobHandle) DataLayer.SetReadDependency(JobHandle) DataLayer.SetWriteDependency(JobHandle) DataLayer.PrepareToWrite() DataLayer.PrepareToRead() DataLayer.OpenToRead() DataLayer.OpenToWrite() DataLayer.CompleteReadJobs() DataLayer.CompleteWriteJobs() DataLayer.CompleteAllJobs() DataLayer.CommitChanges() DataLayer.SetDirty(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.DataLayers Assembly: fwt.hexterrains.dll Syntax public class ChunkVisibilityDataLayer : HexTerrainNativeListChunkedDataLayer<ChunkVisibility>, IDisposable, ICommitChanges, IListDataLayer<ChunkVisibility> Fields NewInvisibleChunks This is a set of chunks that just became invisible this frame Declaration public NativeParallelHashSet<int> NewInvisibleChunks Field Value Type Description NativeParallelHashSet<int> NewVisibleChunks This is a set of chunks that just became visible this frame Declaration public NativeParallelHashSet<int> NewVisibleChunks Field Value Type Description NativeParallelHashSet<int> VisibleChunks This is a set of chunks that are visible at the moment. Declaration public NativeParallelHashSet<int> VisibleChunks Field Value Type Description NativeParallelHashSet<int> Properties CellsGridSize Size of the ChunkVisibilityDataLayer (equals to the chunks count) Declaration public override int2 CellsGridSize { get; } Property Value Type Description int2 Overrides HexTerrainNativeListChunkedDataLayer<ChunkVisibility>.CellsGridSize ChunkGridSize Size of the chunks grid. For this particular layer is equals to the CellsGridSize, because we have one item per chunk here Declaration public override int2 ChunkGridSize { get; } Property Value Type Description int2 Overrides HexTerrainNativeListChunkedDataLayer<ChunkVisibility>.ChunkGridSize ChunkSize Size of the DataLayer chunk (not the same as terrain chunk). Because this layer contains one item per chunk, the size of the DataLayer chunk is 1x1 Declaration public override int2 ChunkSize { get; } Property Value Type Description int2 Overrides HexTerrainNativeListChunkedDataLayer<ChunkVisibility>.ChunkSize IsConnectedHorizontally If true, the terrain edges are connected horizontally (left-right) Declaration public override bool IsConnectedHorizontally { get; } Property Value Type Description bool Overrides HexTerrainNativeListChunkedDataLayer<ChunkVisibility>.IsConnectedHorizontally IsConnectedVertically If true, the terrain edges are connected vertically (top-down) Declaration public override bool IsConnectedVertically { get; } Property Value Type Description bool Overrides HexTerrainNativeListChunkedDataLayer<ChunkVisibility>.IsConnectedVertically IsDisposableItems If true, the items in this layer are disposable. In this particular case the items are not disposable, because they are not created in the heap Declaration public override bool IsDisposableItems { get; } Property Value Type Description bool Overrides DataLayer.IsDisposableItems Methods Cleanup() Cleans up the layer. Called every frame. Usually it clears the dirty flags. Declaration public override void Cleanup() Overrides HexTerrainNativeListChunkedDataLayer<ChunkVisibility>.Cleanup() CleanupAsync() Async version of Cleanup. Instead of waiting for cleanup jobs to complete, this one just schedules jobs and returns the job handle. Declaration public override JobHandle CleanupAsync() Returns Type Description JobHandle JobHandle for the scheduled cleanup jobs Overrides HexTerrainNativeListChunkedDataLayer<ChunkVisibility>.CleanupAsync() Dispose() Disposes the data layer, calls DisposeAllItems() DisposeAllItems() Declaration public override void Dispose() Overrides NativeListChunkedDataLayer<ChunkVisibility>.Dispose() Init(int) Initializes/Reinitializes the layer with the given size Declaration public override void Init(int layerSize) Parameters Type Name Description int layerSize Overrides NativeListChunkedDataLayer<ChunkVisibility>.Init(int) Implements IDisposable ICommitChanges IListDataLayer<TItem> Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.DataLayers.HeightMapDataLayer.html": {
    "href": "api/Fwt.HexTerrains.DataLayers.HeightMapDataLayer.html",
    "title": "Class HeightMapDataLayer | Hex Terrains",
    "summary": "Class HeightMapDataLayer Data layer for storing height data (byte) per cell. When rendering the height is multiplied by HexCellSettings.HeightScale HexTerrainSettings Inheritance object DataLayer ChunkedDataLayer NativeListChunkedDataLayer<byte> HexTerrainNativeListChunkedDataLayer<byte> HeightMapDataLayer Implements IDisposable ICommitChanges IListDataLayer<byte> Inherited Members HexTerrainNativeListChunkedDataLayer<byte>._settings HexTerrainNativeListChunkedDataLayer<byte>.Settings HexTerrainNativeListChunkedDataLayer<byte>.CellsGridSize HexTerrainNativeListChunkedDataLayer<byte>.ChunkGridSize HexTerrainNativeListChunkedDataLayer<byte>.ChunkSize HexTerrainNativeListChunkedDataLayer<byte>.IsConnectedHorizontally HexTerrainNativeListChunkedDataLayer<byte>.IsConnectedVertically HexTerrainNativeListChunkedDataLayer<byte>.Init(int, HexTerrainSettings) NativeListChunkedDataLayer<byte>._data NativeListChunkedDataLayer<byte>.Data NativeListChunkedDataLayer<byte>.Length NativeListChunkedDataLayer<byte>.Init(int) NativeListChunkedDataLayer<byte>.GetData(int) NativeListChunkedDataLayer<byte>.SetData(int, byte) NativeListChunkedDataLayer<byte>.SetData(byte[]) NativeListChunkedDataLayer<byte>.FillData(byte) NativeListChunkedDataLayer<byte>.TryGetData(int, out byte) NativeListChunkedDataLayer<byte>.TrySetData(int, byte) NativeListChunkedDataLayer<byte>.DisposeAllItems() NativeListChunkedDataLayer<byte>.DisposeExcessItems(int) NativeListChunkedDataLayer<byte>.DisposeDataItem(byte) NativeListChunkedDataLayer<byte>.Dispose() ChunkedDataLayer.ChunksCount ChunkedDataLayer.ChunkDirtyGrid ChunkedDataLayer.DirtyChunks ChunkedDataLayer.SetCellDirty(int) ChunkedDataLayer.SetCellDirty(int, bool) ChunkedDataLayer.GetIsChunkDirty(int) ChunkedDataLayer.SetChunkDirty(int, bool) ChunkedDataLayer.SetAllChunksDirty(bool) ChunkedDataLayer.SetAllChunksDirtyAsync(bool, JobHandle) ChunkedDataLayer.SetAllChunksDirty() ChunkedDataLayer.ClearAllChunksDirty() ChunkedDataLayer.MergeChunkDirtyGrids(ChunkedDataLayer, JobHandle) ChunkedDataLayer.MergeChunkDirtyGrids(ChunkedDataLayer, ChunkedDataLayer, JobHandle) ChunkedDataLayer.MergeChunkDirtyGrids(ChunkedDataLayer, ChunkedDataLayer, ChunkedDataLayer, JobHandle) ChunkedDataLayer.MergeChunkDirtyGrids(ChunkedDataLayer, ChunkedDataLayer, ChunkedDataLayer, ChunkedDataLayer, JobHandle) ChunkedDataLayer.GetChunkIndexByCellIndex(int) ChunkedDataLayer.GetChunkCoord(int2) ChunkedDataLayer.GetChunkCoord(int) ChunkedDataLayer.GetChunkIndex(int2) ChunkedDataLayer.GetCellCoord(int) ChunkedDataLayer.GetCellIndex(int2) ChunkedDataLayer.ResolveCellCoord(int2) ChunkedDataLayer.ResolveChunkCoord(int2) DataLayer._readJobsDependency DataLayer.ReadDependency DataLayer._writeJobsDependency DataLayer.WriteDependency DataLayer.CombinedDependency DataLayer._isDirty DataLayer.IsDirty DataLayer._version DataLayer.Version DataLayer.AddReadDependency(JobHandle) DataLayer.AddWriteDependency(JobHandle) DataLayer.SetReadDependency(JobHandle) DataLayer.SetWriteDependency(JobHandle) DataLayer.PrepareToWrite() DataLayer.PrepareToRead() DataLayer.OpenToRead() DataLayer.OpenToWrite() DataLayer.CompleteReadJobs() DataLayer.CompleteWriteJobs() DataLayer.CompleteAllJobs() DataLayer.CommitChanges() DataLayer.SetDirty(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.DataLayers Assembly: fwt.hexterrains.dll Syntax public class HeightMapDataLayer : HexTerrainNativeListChunkedDataLayer<byte>, IDisposable, ICommitChanges, IListDataLayer<byte> Properties IsDisposableItems If true, means when layer is resized or disposed, all items that are removed will be disposed (see nested classes description for details as the process may be different from layer to layer) Declaration public override bool IsDisposableItems { get; } Property Value Type Description bool Overrides DataLayer.IsDisposableItems Methods Cleanup() Declaration public override void Cleanup() Overrides HexTerrainNativeListChunkedDataLayer<byte>.Cleanup() CleanupAsync() Declaration public override JobHandle CleanupAsync() Returns Type Description JobHandle Overrides HexTerrainNativeListChunkedDataLayer<byte>.CleanupAsync() Implements IDisposable ICommitChanges IListDataLayer<TItem> Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.DataLayers.HexTerrainListChunkedDataLayer-1.html": {
    "href": "api/Fwt.HexTerrains.DataLayers.HexTerrainListChunkedDataLayer-1.html",
    "title": "Class HexTerrainListChunkedDataLayer<TItem> | Hex Terrains",
    "summary": "Class HexTerrainListChunkedDataLayer<TItem> Inheritance object DataLayer ChunkedDataLayer ListChunkedDataLayer<TItem> HexTerrainListChunkedDataLayer<TItem> ChunkMeshesDataLayer Implements IDisposable ICommitChanges IListDataLayer<TItem> Inherited Members ListChunkedDataLayer<TItem>._data ListChunkedDataLayer<TItem>.Data ListChunkedDataLayer<TItem>.Init(int) ListChunkedDataLayer<TItem>.GetData(int) ListChunkedDataLayer<TItem>.SetData(int, TItem) ListChunkedDataLayer<TItem>.TryGetData(int, out TItem) ListChunkedDataLayer<TItem>.TrySetData(int, TItem) ListChunkedDataLayer<TItem>.GetDataOrDefault(int) ListChunkedDataLayer<TItem>.DisposeAllItems() ListChunkedDataLayer<TItem>.DisposeExcessItems(int) ListChunkedDataLayer<TItem>.DisposeDataItem(TItem) ListChunkedDataLayer<TItem>.Dispose() ChunkedDataLayer.ChunksCount ChunkedDataLayer.ChunkDirtyGrid ChunkedDataLayer.DirtyChunks ChunkedDataLayer.SetCellDirty(int) ChunkedDataLayer.SetCellDirty(int, bool) ChunkedDataLayer.GetIsChunkDirty(int) ChunkedDataLayer.SetChunkDirty(int, bool) ChunkedDataLayer.SetAllChunksDirty(bool) ChunkedDataLayer.SetAllChunksDirtyAsync(bool, JobHandle) ChunkedDataLayer.SetAllChunksDirty() ChunkedDataLayer.ClearAllChunksDirty() ChunkedDataLayer.MergeChunkDirtyGrids(ChunkedDataLayer, JobHandle) ChunkedDataLayer.MergeChunkDirtyGrids(ChunkedDataLayer, ChunkedDataLayer, JobHandle) ChunkedDataLayer.MergeChunkDirtyGrids(ChunkedDataLayer, ChunkedDataLayer, ChunkedDataLayer, JobHandle) ChunkedDataLayer.MergeChunkDirtyGrids(ChunkedDataLayer, ChunkedDataLayer, ChunkedDataLayer, ChunkedDataLayer, JobHandle) ChunkedDataLayer.GetChunkIndexByCellIndex(int) ChunkedDataLayer.GetChunkCoord(int2) ChunkedDataLayer.GetChunkCoord(int) ChunkedDataLayer.GetChunkIndex(int2) ChunkedDataLayer.GetCellCoord(int) ChunkedDataLayer.GetCellIndex(int2) ChunkedDataLayer.ResolveCellCoord(int2) ChunkedDataLayer.ResolveChunkCoord(int2) DataLayer.IsDisposableItems DataLayer._readJobsDependency DataLayer.ReadDependency DataLayer._writeJobsDependency DataLayer.WriteDependency DataLayer.CombinedDependency DataLayer._isDirty DataLayer.IsDirty DataLayer._version DataLayer.Version DataLayer.AddReadDependency(JobHandle) DataLayer.AddWriteDependency(JobHandle) DataLayer.SetReadDependency(JobHandle) DataLayer.SetWriteDependency(JobHandle) DataLayer.PrepareToWrite() DataLayer.PrepareToRead() DataLayer.OpenToRead() DataLayer.OpenToWrite() DataLayer.CompleteReadJobs() DataLayer.CompleteWriteJobs() DataLayer.CompleteAllJobs() DataLayer.CommitChanges() DataLayer.SetDirty(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.DataLayers Assembly: fwt.hexterrains.dll Syntax public abstract class HexTerrainListChunkedDataLayer<TItem> : ListChunkedDataLayer<TItem>, IDisposable, ICommitChanges, IListDataLayer<TItem> Type Parameters Name Description TItem Fields _settings Declaration protected HexTerrainSettings _settings Field Value Type Description HexTerrainSettings Properties CellsGridSize Width and Height of the grid of cells. Declaration public override int2 CellsGridSize { get; } Property Value Type Description int2 Overrides ChunkedDataLayer.CellsGridSize ChunkGridSize Width and Height of the grid of chunks. Declaration public override int2 ChunkGridSize { get; } Property Value Type Description int2 Overrides ChunkedDataLayer.ChunkGridSize ChunkSize Width and Height of the chunk in cells. Declaration public override int2 ChunkSize { get; } Property Value Type Description int2 Overrides ChunkedDataLayer.ChunkSize IsConnectedHorizontally True if left and right edges of the chunk are connected (like in civilization games). Needed for wrapping the grid. If SetCellDirty(cellIndex, checkEdges) is called with checkEdges == true, the chunk of the cell is marked dirty and also all adjacent chunks are also marked dirty. So if the left edge is dirty, the right edge is also dirty. Declaration public override bool IsConnectedHorizontally { get; } Property Value Type Description bool Overrides ChunkedDataLayer.IsConnectedHorizontally IsConnectedVertically True if top and bottom edges of the chunk are connected (like in civilization games). Needed for wrapping the grid. If SetCellDirty(cellIndex, checkEdges) is called with checkEdges == true, the chunk of the cell is marked dirty and also all adjacent chunks are also marked dirty. So if the top edge is dirty, the bottom edge is also dirty. Declaration public override bool IsConnectedVertically { get; } Property Value Type Description bool Overrides ChunkedDataLayer.IsConnectedVertically Length Returns the number of items in the layer. Declaration public override int Length { get; } Property Value Type Description int Overrides DataLayer.Length Settings Declaration public HexTerrainSettings Settings { get; } Property Value Type Description HexTerrainSettings Methods Cleanup() Declaration public abstract void Cleanup() Init(int, HexTerrainSettings) Declaration public virtual void Init(int layerSize, HexTerrainSettings settings) Parameters Type Name Description int layerSize HexTerrainSettings settings Implements IDisposable ICommitChanges IListDataLayer<TItem> Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.DataLayers.HexTerrainNativeListChunkedDataLayer-1.html": {
    "href": "api/Fwt.HexTerrains.DataLayers.HexTerrainNativeListChunkedDataLayer-1.html",
    "title": "Class HexTerrainNativeListChunkedDataLayer<TItem> | Hex Terrains",
    "summary": "Class HexTerrainNativeListChunkedDataLayer<TItem> Inheritance object DataLayer ChunkedDataLayer NativeListChunkedDataLayer<TItem> HexTerrainNativeListChunkedDataLayer<TItem> CellAreaDataLayer HexCellEntityDataLayer HexCellEntityViewDataLayer CellItemDataLayer CellBiomesDataLayer CellColorsDataLayer CellMetricsDataLayer CellTransformDataLayer ChunkMeshSourcesDataLayer ChunkMetricsDataLayer ChunkVisibilityDataLayer HeightMapDataLayer Implements IDisposable ICommitChanges IListDataLayer<TItem> Inherited Members NativeListChunkedDataLayer<TItem>._data NativeListChunkedDataLayer<TItem>.Data NativeListChunkedDataLayer<TItem>.Length NativeListChunkedDataLayer<TItem>.Init(int) NativeListChunkedDataLayer<TItem>.GetData(int) NativeListChunkedDataLayer<TItem>.SetData(int, TItem) NativeListChunkedDataLayer<TItem>.SetData(TItem[]) NativeListChunkedDataLayer<TItem>.FillData(TItem) NativeListChunkedDataLayer<TItem>.TryGetData(int, out TItem) NativeListChunkedDataLayer<TItem>.TrySetData(int, TItem) NativeListChunkedDataLayer<TItem>.DisposeAllItems() NativeListChunkedDataLayer<TItem>.DisposeExcessItems(int) NativeListChunkedDataLayer<TItem>.DisposeDataItem(TItem) NativeListChunkedDataLayer<TItem>.Dispose() ChunkedDataLayer.ChunksCount ChunkedDataLayer.ChunkDirtyGrid ChunkedDataLayer.DirtyChunks ChunkedDataLayer.SetCellDirty(int) ChunkedDataLayer.SetCellDirty(int, bool) ChunkedDataLayer.GetIsChunkDirty(int) ChunkedDataLayer.SetChunkDirty(int, bool) ChunkedDataLayer.SetAllChunksDirty(bool) ChunkedDataLayer.SetAllChunksDirtyAsync(bool, JobHandle) ChunkedDataLayer.SetAllChunksDirty() ChunkedDataLayer.ClearAllChunksDirty() ChunkedDataLayer.MergeChunkDirtyGrids(ChunkedDataLayer, JobHandle) ChunkedDataLayer.MergeChunkDirtyGrids(ChunkedDataLayer, ChunkedDataLayer, JobHandle) ChunkedDataLayer.MergeChunkDirtyGrids(ChunkedDataLayer, ChunkedDataLayer, ChunkedDataLayer, JobHandle) ChunkedDataLayer.MergeChunkDirtyGrids(ChunkedDataLayer, ChunkedDataLayer, ChunkedDataLayer, ChunkedDataLayer, JobHandle) ChunkedDataLayer.GetChunkIndexByCellIndex(int) ChunkedDataLayer.GetChunkCoord(int2) ChunkedDataLayer.GetChunkCoord(int) ChunkedDataLayer.GetChunkIndex(int2) ChunkedDataLayer.GetCellCoord(int) ChunkedDataLayer.GetCellIndex(int2) ChunkedDataLayer.ResolveCellCoord(int2) ChunkedDataLayer.ResolveChunkCoord(int2) DataLayer.IsDisposableItems DataLayer._readJobsDependency DataLayer.ReadDependency DataLayer._writeJobsDependency DataLayer.WriteDependency DataLayer.CombinedDependency DataLayer._isDirty DataLayer.IsDirty DataLayer._version DataLayer.Version DataLayer.AddReadDependency(JobHandle) DataLayer.AddWriteDependency(JobHandle) DataLayer.SetReadDependency(JobHandle) DataLayer.SetWriteDependency(JobHandle) DataLayer.PrepareToWrite() DataLayer.PrepareToRead() DataLayer.OpenToRead() DataLayer.OpenToWrite() DataLayer.CompleteReadJobs() DataLayer.CompleteWriteJobs() DataLayer.CompleteAllJobs() DataLayer.CommitChanges() DataLayer.SetDirty(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.DataLayers Assembly: fwt.hexterrains.dll Syntax public abstract class HexTerrainNativeListChunkedDataLayer<TItem> : NativeListChunkedDataLayer<TItem>, IDisposable, ICommitChanges, IListDataLayer<TItem> where TItem : unmanaged Type Parameters Name Description TItem Fields _settings Declaration protected HexTerrainSettings _settings Field Value Type Description HexTerrainSettings Properties CellsGridSize Width and Height of the grid of cells. Declaration public override int2 CellsGridSize { get; } Property Value Type Description int2 Overrides ChunkedDataLayer.CellsGridSize ChunkGridSize Width and Height of the grid of chunks. Declaration public override int2 ChunkGridSize { get; } Property Value Type Description int2 Overrides ChunkedDataLayer.ChunkGridSize ChunkSize Width and Height of the chunk in cells. Declaration public override int2 ChunkSize { get; } Property Value Type Description int2 Overrides ChunkedDataLayer.ChunkSize IsConnectedHorizontally True if left and right edges of the chunk are connected (like in civilization games). Needed for wrapping the grid. If SetCellDirty(cellIndex, checkEdges) is called with checkEdges == true, the chunk of the cell is marked dirty and also all adjacent chunks are also marked dirty. So if the left edge is dirty, the right edge is also dirty. Declaration public override bool IsConnectedHorizontally { get; } Property Value Type Description bool Overrides ChunkedDataLayer.IsConnectedHorizontally IsConnectedVertically True if top and bottom edges of the chunk are connected (like in civilization games). Needed for wrapping the grid. If SetCellDirty(cellIndex, checkEdges) is called with checkEdges == true, the chunk of the cell is marked dirty and also all adjacent chunks are also marked dirty. So if the top edge is dirty, the bottom edge is also dirty. Declaration public override bool IsConnectedVertically { get; } Property Value Type Description bool Overrides ChunkedDataLayer.IsConnectedVertically Settings Declaration public HexTerrainSettings Settings { get; } Property Value Type Description HexTerrainSettings Methods Cleanup() Declaration public abstract void Cleanup() CleanupAsync() Declaration public abstract JobHandle CleanupAsync() Returns Type Description JobHandle Init(int, HexTerrainSettings) Declaration public virtual void Init(int layerSize, HexTerrainSettings settings) Parameters Type Name Description int layerSize HexTerrainSettings settings Implements IDisposable ICommitChanges IListDataLayer<TItem> Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.DataLayers.html": {
    "href": "api/Fwt.HexTerrains.DataLayers.html",
    "title": "Namespace Fwt.HexTerrains.DataLayers | Hex Terrains",
    "summary": "Namespace Fwt.HexTerrains.DataLayers Classes CellBiomesDataLayer Data layer for storing biome index (byte) per cell CellColorsDataLayer Data layer for storing a Color per cell CellMetricsDataLayer Data layer for storing cell metrics per cell HexCellMetrics. CellTransformDataLayer ChunkMeshSourcesDataLayer Data layer for storing mesh sources for hex terrain chunks MeshSource ChunkMeshesDataLayer Data layer for storing meshes of the hex terrain chunks ChunkMetricsDataLayer DataLayer with Metrics info for each terrain chunk ChunkVisibilityDataLayer DataLayer with Visibility info for each terrain chunk HeightMapDataLayer Data layer for storing height data (byte) per cell. When rendering the height is multiplied by HexCellSettings.HeightScale HexTerrainSettings HexTerrainListChunkedDataLayer<TItem> HexTerrainNativeListChunkedDataLayer<TItem>"
  },
  "api/Fwt.HexTerrains.DataSources.CreateNewTerrainDataSource.html": {
    "href": "api/Fwt.HexTerrains.DataSources.CreateNewTerrainDataSource.html",
    "title": "Class CreateNewTerrainDataSource | Hex Terrains",
    "summary": "Class CreateNewTerrainDataSource Inheritance object UIDataSource CreateNewTerrainDataSource Implements IDataSourceViewHashProvider ICommitChanges Inherited Members UIDataSource.Version UIDataSource.MarkDirty() UIDataSource.GetViewHashCode() UIDataSource.CommitChanges() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.DataSources Assembly: fwt.hexterrains.dll Syntax [Serializable] public class CreateNewTerrainDataSource : UIDataSource, IDataSourceViewHashProvider, ICommitChanges Fields Buttons Declaration public List<UIButtonDataSourceUEvent> Buttons Field Value Type Description List<UIButtonDataSourceUEvent> Description Declaration public string Description Field Value Type Description string Title Declaration public string Title Field Value Type Description string Implements UnityEngine.UIElements.IDataSourceViewHashProvider ICommitChanges Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.DataSources.MinimapScreenDataSource.html": {
    "href": "api/Fwt.HexTerrains.DataSources.MinimapScreenDataSource.html",
    "title": "Class MinimapScreenDataSource | Hex Terrains",
    "summary": "Class MinimapScreenDataSource Inheritance object UIDataSource MinimapScreenDataSource Implements IDataSourceViewHashProvider ICommitChanges Inherited Members UIDataSource.Version UIDataSource.MarkDirty() UIDataSource.GetViewHashCode() UIDataSource.CommitChanges() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.DataSources Assembly: fwt.hexterrains.dll Syntax [Serializable] public class MinimapScreenDataSource : UIDataSource, IDataSourceViewHashProvider, ICommitChanges Fields CameraNormalizedPosition Declaration [CreateProperty] public Vector2 CameraNormalizedPosition Field Value Type Description Vector2 ColorMapTextureVisibilities Declaration [CreateProperty] public List<DisplayStyle> ColorMapTextureVisibilities Field Value Type Description List<DisplayStyle> ColorMapTextures Declaration [CreateProperty] public List<Texture2D> ColorMapTextures Field Value Type Description List<Texture2D> OnMinimapClick Declaration [CreateProperty] public UnityEvent<float2> OnMinimapClick Field Value Type Description UnityEvent<float2> SetViewModeButtons Declaration [CreateProperty] public List<UIButtonDataSourceUEvent> SetViewModeButtons Field Value Type Description List<UIButtonDataSourceUEvent> Methods SetVisibleTextureIndexes(List<int>) Declaration public void SetVisibleTextureIndexes(List<int> visibleTextureIndexes) Parameters Type Name Description List<int> visibleTextureIndexes Implements UnityEngine.UIElements.IDataSourceViewHashProvider ICommitChanges Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.DataSources.ResizeTerrainDataSource.html": {
    "href": "api/Fwt.HexTerrains.DataSources.ResizeTerrainDataSource.html",
    "title": "Class ResizeTerrainDataSource | Hex Terrains",
    "summary": "Class ResizeTerrainDataSource Inheritance object UIDataSource ResizeTerrainDataSource Implements IDataSourceViewHashProvider ICommitChanges Inherited Members UIDataSource.Version UIDataSource.MarkDirty() UIDataSource.GetViewHashCode() UIDataSource.CommitChanges() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.DataSources Assembly: fwt.hexterrains.dll Syntax [Serializable] public class ResizeTerrainDataSource : UIDataSource, IDataSourceViewHashProvider, ICommitChanges Fields Buttons Declaration public List<UIButtonDataSourceUEvent> Buttons Field Value Type Description List<UIButtonDataSourceUEvent> TerrainSizeX Declaration [CreateProperty] public ValueEditorDataSourceMinMax<int> TerrainSizeX Field Value Type Description ValueEditorDataSourceMinMax<int> TerrainSizeY Declaration public ValueEditorDataSourceMinMax<int> TerrainSizeY Field Value Type Description ValueEditorDataSourceMinMax<int> Title Declaration [CreateProperty] public string Title Field Value Type Description string Implements UnityEngine.UIElements.IDataSourceViewHashProvider ICommitChanges Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.DataSources.SaveFileData.html": {
    "href": "api/Fwt.HexTerrains.DataSources.SaveFileData.html",
    "title": "Class SaveFileData | Hex Terrains",
    "summary": "Class SaveFileData Inheritance object SaveFileData Implements IDataSourceViewHashProvider Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.DataSources Assembly: fwt.hexterrains.dll Syntax [Serializable] public class SaveFileData : IDataSourceViewHashProvider Fields DataChanged Declaration public Action DataChanged Field Value Type Description Action Description Declaration public string Description Field Value Type Description string Version Declaration public long Version Field Value Type Description long Properties Default Declaration public static SaveFileData Default { get; } Property Value Type Description SaveFileData FileName Declaration [CreateProperty] public string FileName { get; set; } Property Value Type Description string Name Declaration [CreateProperty] public string Name { get; set; } Property Value Type Description string Methods CopyFrom(SaveFileData) Declaration public void CopyFrom(SaveFileData other) Parameters Type Name Description SaveFileData other GetViewHashCode() <p> Returns the hash code of the view, which can be used to notify the data binding system to refresh. Declaration public long GetViewHashCode() Returns Type Description long The hash code of the view. OnDataChange() Declaration public void OnDataChange() Implements UnityEngine.UIElements.IDataSourceViewHashProvider Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.DataSources.SaveFilesDataSource.html": {
    "href": "api/Fwt.HexTerrains.DataSources.SaveFilesDataSource.html",
    "title": "Class SaveFilesDataSource | Hex Terrains",
    "summary": "Class SaveFilesDataSource Inheritance object SaveFilesDataSource Implements IDataSourceViewHashProvider Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.DataSources Assembly: fwt.hexterrains.dll Syntax [Serializable] public class SaveFilesDataSource : IDataSourceViewHashProvider Constructors SaveFilesDataSource() Declaration public SaveFilesDataSource() Fields Buttons Declaration public List<UIButtonDataSourceUEvent> Buttons Field Value Type Description List<UIButtonDataSourceUEvent> OnSelectionChange Declaration public Action<int> OnSelectionChange Field Value Type Description Action<int> SelectedIndex Declaration public int SelectedIndex Field Value Type Description int SelectedItem Declaration public SaveFileData SelectedItem Field Value Type Description SaveFileData Title Declaration public string Title Field Value Type Description string Version Declaration public long Version Field Value Type Description long Properties SaveFiles Declaration [CreateProperty] public List<SaveFileData> SaveFiles { get; set; } Property Value Type Description List<SaveFileData> Methods Clear() Declaration public void Clear() GetViewHashCode() <p> Returns the hash code of the view, which can be used to notify the data binding system to refresh. Declaration public long GetViewHashCode() Returns Type Description long The hash code of the view. MakeDirty() Declaration public void MakeDirty() SelectItem(int) Declaration public void SelectItem(int index) Parameters Type Name Description int index Implements UnityEngine.UIElements.IDataSourceViewHashProvider Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.DataSources.html": {
    "href": "api/Fwt.HexTerrains.DataSources.html",
    "title": "Namespace Fwt.HexTerrains.DataSources | Hex Terrains",
    "summary": "Namespace Fwt.HexTerrains.DataSources Classes CreateNewTerrainDataSource MinimapScreenDataSource ResizeTerrainDataSource SaveFileData SaveFilesDataSource"
  },
  "api/Fwt.HexTerrains.HexGroundDataAuthoring.html": {
    "href": "api/Fwt.HexTerrains.HexGroundDataAuthoring.html",
    "title": "Class HexGroundDataAuthoring | Hex Terrains",
    "summary": "Class HexGroundDataAuthoring Authoring component for HexGroundData. This class is used to create hex ground data in the Unity Editor. Inheritance object Object Component Behaviour MonoBehaviour HexSurfaceDataAuthoring HexGroundDataAuthoring Inherited Members HexSurfaceDataAuthoring.IsFillHeightmap HexSurfaceDataAuthoring.FillHeightmapValue HexSurfaceDataAuthoring.IsRandomHeightmap HexSurfaceDataAuthoring.MinRandomHeight HexSurfaceDataAuthoring.MaxRandomHeight HexSurfaceDataAuthoring.IsRandomBiomesMap HexSurfaceDataAuthoring.MinRandomBiome HexSurfaceDataAuthoring.MaxRandomBiome HexSurfaceDataAuthoring.IsFillBiomesMap HexSurfaceDataAuthoring.FillBiomesMapValue HexSurfaceDataAuthoring.IsApplyHeightmap HexSurfaceDataAuthoring.Heightmap HexSurfaceDataAuthoring.HeightmapOffset HexSurfaceDataAuthoring.HeightmapScale HexSurfaceDataAuthoring.IsAutoCellBiomes HexSurfaceDataAuthoring.AutoCellBiomeLevels HexSurfaceDataAuthoring.ColorPalette HexSurfaceDataAuthoring.ColorMapTextureIndex MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains Assembly: fwt.hexterrains.dll Syntax public class HexGroundDataAuthoring : HexSurfaceDataAuthoring Extension Methods Extensions_UnityObject.SmartDestroy<TObject>(TObject) Extensions_UnityObject.SmartDisableGameObject<TObject>(TObject) Extensions_UnityObject.SmartEnableGameObject<TObject>(TObject) HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.HexGroundDataBaker.html": {
    "href": "api/Fwt.HexTerrains.HexGroundDataBaker.html",
    "title": "Class HexGroundDataBaker | Hex Terrains",
    "summary": "Class HexGroundDataBaker Baker for HexGroundData. This class is used to convert the HexGroundDataAuthoring component into a HexGroundData component at runtime. Inheritance object IBaker Baker<HexGroundDataAuthoring> HexSurfaceDataBaker<HexGroundDataAuthoring, CreateHexGroundDataRequest> HexGroundDataBaker Inherited Members HexSurfaceDataBaker<HexGroundDataAuthoring, CreateHexGroundDataRequest>.BakeData(HexGroundDataAuthoring) IBaker.GetSceneGUID() IBaker.GetComponent<T>() IBaker.GetComponent<T>(Component) IBaker.GetComponent<T>(GameObject) IBaker.GetComponents<T>(List<T>) IBaker.GetComponents<T>(Component, List<T>) IBaker.GetComponents<T>(GameObject, List<T>) IBaker.GetComponents<T>() IBaker.GetComponents<T>(Component) IBaker.GetComponents<T>(GameObject) IBaker.GetComponentInParent<T>() IBaker.GetComponentInParent<T>(Component) IBaker.GetComponentInParent<T>(GameObject) IBaker.GetComponentsInParent<T>(List<T>) IBaker.GetComponentsInParent<T>(Component, List<T>) IBaker.GetComponentsInParent<T>(GameObject, List<T>) IBaker.GetComponentsInParent<T>() IBaker.GetComponentsInParent<T>(Component) IBaker.GetComponentsInParent<T>(GameObject) IBaker.GetComponentInChildren<T>() IBaker.GetComponentInChildren<T>(Component) IBaker.GetComponentInChildren<T>(GameObject) IBaker.GetComponentsInChildren<T>(List<T>) IBaker.GetComponentsInChildren<T>(Component, List<T>) IBaker.GetComponentsInChildren<T>(GameObject, List<T>) IBaker.GetComponentsInChildren<T>() IBaker.GetComponentsInChildren<T>(Component) IBaker.GetComponentsInChildren<T>(GameObject) IBaker.GetParent() IBaker.GetParent(Component) IBaker.GetParent(GameObject) IBaker.GetParents() IBaker.GetParents(Component) IBaker.GetParents(GameObject) IBaker.GetParents(List<GameObject>) IBaker.GetParents(Component, List<GameObject>) IBaker.GetParents(GameObject, List<GameObject>) IBaker.GetChild(int) IBaker.GetChild(Component, int) IBaker.GetChild(GameObject, int) IBaker.GetChildren(bool) IBaker.GetChildren(Component, bool) IBaker.GetChildren(GameObject, bool) IBaker.GetChildren(List<GameObject>, bool) IBaker.GetChildren(Component, List<GameObject>, bool) IBaker.GetChildren(GameObject, List<GameObject>, bool) IBaker.GetChildCount() IBaker.GetChildCount(Component) IBaker.GetChildCount(GameObject) IBaker.GetName() IBaker.GetName(Component) IBaker.GetName(GameObject) IBaker.GetLayer() IBaker.GetLayer(Component) IBaker.GetLayer(GameObject) IBaker.GetTag() IBaker.GetTag(Component) IBaker.GetTag(GameObject) IBaker.GetEntity() IBaker.GetEntity(GameObject) IBaker.GetEntity(Component) IBaker.GetEntity(TransformUsageFlags) IBaker.GetEntity(GameObject, TransformUsageFlags) IBaker.GetEntity(Component, TransformUsageFlags) IBaker.GetEntityWithoutDependency() IBaker.IsActive() IBaker.IsActive(Component) IBaker.IsActive(GameObject) IBaker.IsActiveAndEnabled() IBaker.IsActiveAndEnabled(Component) IBaker.IsStatic() IBaker.IsStatic(Component) IBaker.IsStatic(GameObject) IBaker.IsClient() IBaker.IsServer() IBaker.DependsOn<T>(T) IBaker.DependsOnComponentInParent<T>() IBaker.DependsOnComponentInParent<T>(Component) IBaker.DependsOnComponentInParent<T>(GameObject) IBaker.DependsOnComponentsInParent<T>() IBaker.DependsOnComponentsInParent<T>(Component) IBaker.DependsOnComponentsInParent<T>(GameObject) IBaker.DependsOnComponentInChildren<T>() IBaker.DependsOnComponentInChildren<T>(Component) IBaker.DependsOnComponentInChildren<T>(GameObject) IBaker.DependsOnComponentsInChildren<T>() IBaker.DependsOnComponentsInChildren<T>(GameObject) IBaker.DependsOnComponentsInChildren<T>(Component) IBaker.DependsOnLightBaking() IBaker.AddBlobAsset<T>(ref BlobAssetReference<T>, out Hash128) IBaker.AddBlobAssetWithCustomHash<T>(ref BlobAssetReference<T>, Hash128) IBaker.TryGetBlobAssetReference<T>(Hash128, out BlobAssetReference<T>) IBaker.AddComponent<T>() IBaker.AddComponent<T>(in T) IBaker.AddComponent<T>(Entity) IBaker.AddComponent<T>(Entity, in T) IBaker.AddComponent(ComponentType) IBaker.AddComponent(Entity, ComponentType) IBaker.AddComponent(in ComponentTypeSet) IBaker.AddComponent(Entity, in ComponentTypeSet) IBaker.AddComponentObject<T>(T) IBaker.AddComponentObject<T>(Entity, T) IBaker.AddSharedComponentManaged<T>(T) IBaker.AddSharedComponentManaged<T>(Entity, T) IBaker.AddSharedComponent<T>(T) IBaker.AddSharedComponent<T>(Entity, T) IBaker.AddBuffer<T>() IBaker.AddBuffer<T>(Entity) IBaker.SetComponent<T>(Entity, in T) IBaker.SetComponentEnabled<T>(Entity, bool) IBaker.SetComponentEnabled<T>(bool) IBaker.SetSharedComponentManaged<T>(Entity, in T) IBaker.SetSharedComponent<T>(Entity, in T) IBaker.SetBuffer<T>() IBaker.SetBuffer<T>(Entity) IBaker.AppendToBuffer<T>(T) IBaker.AppendToBuffer<T>(Entity, T) IBaker.CreateAdditionalEntity() IBaker.CreateAdditionalEntity(TransformUsageFlags, bool, string) IBaker.CreateAdditionalEntities(NativeArray<Entity>, TransformUsageFlags, bool) IBaker.RegisterPrefabForBaking(GameObject) IBaker.AddTransformUsageFlags(TransformUsageFlags) IBaker.AddTransformUsageFlags(Entity, TransformUsageFlags) IBaker.IsBakingForEditor() IBaker.GetDotsSettings() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains Assembly: fwt.hexterrains.dll Syntax public class HexGroundDataBaker : HexSurfaceDataBaker<HexGroundDataAuthoring, CreateHexGroundDataRequest> Methods Bake(HexGroundDataAuthoring) Called in the baking process to bake the authoring component Declaration public override void Bake(HexGroundDataAuthoring authoring) Parameters Type Name Description HexGroundDataAuthoring authoring The authoring component to bake Overrides Baker<HexGroundDataAuthoring>.Bake(HexGroundDataAuthoring) Remarks This method will be called for every instance of TAuthoringType in order to bake that instance. Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.HexGroundRenderDataAuthoring.html": {
    "href": "api/Fwt.HexTerrains.HexGroundRenderDataAuthoring.html",
    "title": "Class HexGroundRenderDataAuthoring | Hex Terrains",
    "summary": "Class HexGroundRenderDataAuthoring Authoring component for Ground HexRenderData. Inheritance object Object Component Behaviour MonoBehaviour HexSurfaceRenderDataAuthoring HexGroundRenderDataAuthoring Inherited Members HexSurfaceRenderDataAuthoring.RenderSettings HexSurfaceRenderDataAuthoring.ViewMode HexSurfaceRenderDataAuthoring.RenderConfigs MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains Assembly: fwt.hexterrains.dll Syntax public class HexGroundRenderDataAuthoring : HexSurfaceRenderDataAuthoring Extension Methods Extensions_UnityObject.SmartDestroy<TObject>(TObject) Extensions_UnityObject.SmartDisableGameObject<TObject>(TObject) Extensions_UnityObject.SmartEnableGameObject<TObject>(TObject) HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.HexSurfaceDataAuthoring.html": {
    "href": "api/Fwt.HexTerrains.HexSurfaceDataAuthoring.html",
    "title": "Class HexSurfaceDataAuthoring | Hex Terrains",
    "summary": "Class HexSurfaceDataAuthoring Base class for authoring components that create hex surface data. Inheritance object Object Component Behaviour MonoBehaviour HexSurfaceDataAuthoring HexGroundDataAuthoring HexWaterDataAuthoring Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains Assembly: fwt.hexterrains.dll Syntax public abstract class HexSurfaceDataAuthoring : MonoBehaviour Fields AutoCellBiomeLevels The levels of the biomes to be calculated based on the cell height. Index = biome ID, value = max height level for this biome. Declaration [Tooltip(\"The levels of the biomes to be calculated based on the cell height. Index = biome ID, value = max height level for this biome.\")] public FixedArray8<int> AutoCellBiomeLevels Field Value Type Description FixedArray8<int> ColorMapTextureIndex Which index of all ColorTextures to fill with colors of this surface (biomes). Declaration [Tooltip(\"Which index of all ColorTextures to fill with colors of this surface (biomes).\")] public int ColorMapTextureIndex Field Value Type Description int ColorPalette The color palette to be used for calculating the ColorTexture of this surface. Declaration [Tooltip(\"The color palette to be used for calculating the ColorTexture of this surface.\")] public List<Color> ColorPalette Field Value Type Description List<Color> FillBiomesMapValue The value to fill the biomes map with (if IsFillBiomesMap) is on. Declaration [Tooltip(\"The value to fill the biomes map with (if IsFillBiomesMap) is on.\")] public int FillBiomesMapValue Field Value Type Description int FillHeightmapValue The value to fill the heightmap with (if IsFillHeightmap) is on. Declaration [Tooltip(\"The value to fill the heightmap with (if IsFillHeightmap) is on.\")] public int FillHeightmapValue Field Value Type Description int Heightmap The heightmap texture to apply (if IsApplyHeightmap is on). Declaration [Tooltip(\"The heightmap texture to apply (if IsApplyHeightmap is on).\")] public Texture2D Heightmap Field Value Type Description Texture2D HeightmapOffset This value will be added to all the heightmap values (if IsApplyHeightmap is on). Declaration [Tooltip(\"This value will be added to all the heightmap values (if IsApplyHeightmap is on).\")] public int HeightmapOffset Field Value Type Description int HeightmapScale Every value from Heightmap texture will be multiplied by this value (if IsApplyHeightmap is on). Declaration [Tooltip(\"Every value from Heightmap texture will be multiplied by this value (if IsApplyHeightmap is on).\")] public float HeightmapScale Field Value Type Description float IsApplyHeightmap Whether to apply a heightmap texture. Declaration [Tooltip(\"Whether to apply a heightmap texture.\")] public bool IsApplyHeightmap Field Value Type Description bool IsAutoCellBiomes Whether to calculate biomes based on the cell height Declaration [Tooltip(\"Whether to calculate biomes based on the cell height\")] public bool IsAutoCellBiomes Field Value Type Description bool IsFillBiomesMap Whether to fill the biomes map with a specific value. Declaration [Tooltip(\"Whether to fill the biomes map with a specific value.\")] public bool IsFillBiomesMap Field Value Type Description bool IsFillHeightmap Whether to fill the heightmap with a specific value. Declaration [Tooltip(\"Whether to fill the heightmap with a specific value.\")] public bool IsFillHeightmap Field Value Type Description bool IsRandomBiomesMap Whether to fill a biomes map with random values. Declaration [Tooltip(\"Whether to fill a biomes map with random values.\")] public bool IsRandomBiomesMap Field Value Type Description bool IsRandomHeightmap Whether to generate a random heightmap. Declaration [Tooltip(\"Whether to generate a random heightmap.\")] public bool IsRandomHeightmap Field Value Type Description bool MaxRandomBiome The maximum value for the random biomes. Declaration [Tooltip(\"The maximum value for the random biomes.\")] public int MaxRandomBiome Field Value Type Description int MaxRandomHeight The maximum value for the random heightmap. Declaration [Tooltip(\"The maximum value for the random heightmap.\")] public int MaxRandomHeight Field Value Type Description int MinRandomBiome The minimum value for the random biomes. Declaration [Tooltip(\"The minimum value for the random biomes.\")] public int MinRandomBiome Field Value Type Description int MinRandomHeight The minimum value for the random heightmap. Declaration [Tooltip(\"The minimum value for the random heightmap.\")] public int MinRandomHeight Field Value Type Description int Extension Methods Extensions_UnityObject.SmartDestroy<TObject>(TObject) Extensions_UnityObject.SmartDisableGameObject<TObject>(TObject) Extensions_UnityObject.SmartEnableGameObject<TObject>(TObject) HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.HexSurfaceDataBaker-2.html": {
    "href": "api/Fwt.HexTerrains.HexSurfaceDataBaker-2.html",
    "title": "Class HexSurfaceDataBaker<TAuthoring, TRequest> | Hex Terrains",
    "summary": "Class HexSurfaceDataBaker<TAuthoring, TRequest> Base class for baker components that create hex surface data. Inheritance object IBaker Baker<TAuthoring> HexSurfaceDataBaker<TAuthoring, TRequest> HexGroundDataBaker HexWaterDataBaker Inherited Members Baker<TAuthoring>.Bake(TAuthoring) IBaker.GetSceneGUID() IBaker.GetComponent<T>() IBaker.GetComponent<T>(Component) IBaker.GetComponent<T>(GameObject) IBaker.GetComponents<T>(List<T>) IBaker.GetComponents<T>(Component, List<T>) IBaker.GetComponents<T>(GameObject, List<T>) IBaker.GetComponents<T>() IBaker.GetComponents<T>(Component) IBaker.GetComponents<T>(GameObject) IBaker.GetComponentInParent<T>() IBaker.GetComponentInParent<T>(Component) IBaker.GetComponentInParent<T>(GameObject) IBaker.GetComponentsInParent<T>(List<T>) IBaker.GetComponentsInParent<T>(Component, List<T>) IBaker.GetComponentsInParent<T>(GameObject, List<T>) IBaker.GetComponentsInParent<T>() IBaker.GetComponentsInParent<T>(Component) IBaker.GetComponentsInParent<T>(GameObject) IBaker.GetComponentInChildren<T>() IBaker.GetComponentInChildren<T>(Component) IBaker.GetComponentInChildren<T>(GameObject) IBaker.GetComponentsInChildren<T>(List<T>) IBaker.GetComponentsInChildren<T>(Component, List<T>) IBaker.GetComponentsInChildren<T>(GameObject, List<T>) IBaker.GetComponentsInChildren<T>() IBaker.GetComponentsInChildren<T>(Component) IBaker.GetComponentsInChildren<T>(GameObject) IBaker.GetParent() IBaker.GetParent(Component) IBaker.GetParent(GameObject) IBaker.GetParents() IBaker.GetParents(Component) IBaker.GetParents(GameObject) IBaker.GetParents(List<GameObject>) IBaker.GetParents(Component, List<GameObject>) IBaker.GetParents(GameObject, List<GameObject>) IBaker.GetChild(int) IBaker.GetChild(Component, int) IBaker.GetChild(GameObject, int) IBaker.GetChildren(bool) IBaker.GetChildren(Component, bool) IBaker.GetChildren(GameObject, bool) IBaker.GetChildren(List<GameObject>, bool) IBaker.GetChildren(Component, List<GameObject>, bool) IBaker.GetChildren(GameObject, List<GameObject>, bool) IBaker.GetChildCount() IBaker.GetChildCount(Component) IBaker.GetChildCount(GameObject) IBaker.GetName() IBaker.GetName(Component) IBaker.GetName(GameObject) IBaker.GetLayer() IBaker.GetLayer(Component) IBaker.GetLayer(GameObject) IBaker.GetTag() IBaker.GetTag(Component) IBaker.GetTag(GameObject) IBaker.GetEntity() IBaker.GetEntity(GameObject) IBaker.GetEntity(Component) IBaker.GetEntity(TransformUsageFlags) IBaker.GetEntity(GameObject, TransformUsageFlags) IBaker.GetEntity(Component, TransformUsageFlags) IBaker.GetEntityWithoutDependency() IBaker.IsActive() IBaker.IsActive(Component) IBaker.IsActive(GameObject) IBaker.IsActiveAndEnabled() IBaker.IsActiveAndEnabled(Component) IBaker.IsStatic() IBaker.IsStatic(Component) IBaker.IsStatic(GameObject) IBaker.IsClient() IBaker.IsServer() IBaker.DependsOn<T>(T) IBaker.DependsOnComponentInParent<T>() IBaker.DependsOnComponentInParent<T>(Component) IBaker.DependsOnComponentInParent<T>(GameObject) IBaker.DependsOnComponentsInParent<T>() IBaker.DependsOnComponentsInParent<T>(Component) IBaker.DependsOnComponentsInParent<T>(GameObject) IBaker.DependsOnComponentInChildren<T>() IBaker.DependsOnComponentInChildren<T>(Component) IBaker.DependsOnComponentInChildren<T>(GameObject) IBaker.DependsOnComponentsInChildren<T>() IBaker.DependsOnComponentsInChildren<T>(GameObject) IBaker.DependsOnComponentsInChildren<T>(Component) IBaker.DependsOnLightBaking() IBaker.AddBlobAsset<T>(ref BlobAssetReference<T>, out Hash128) IBaker.AddBlobAssetWithCustomHash<T>(ref BlobAssetReference<T>, Hash128) IBaker.TryGetBlobAssetReference<T>(Hash128, out BlobAssetReference<T>) IBaker.AddComponent<T>() IBaker.AddComponent<T>(in T) IBaker.AddComponent<T>(Entity) IBaker.AddComponent<T>(Entity, in T) IBaker.AddComponent(ComponentType) IBaker.AddComponent(Entity, ComponentType) IBaker.AddComponent(in ComponentTypeSet) IBaker.AddComponent(Entity, in ComponentTypeSet) IBaker.AddComponentObject<T>(T) IBaker.AddComponentObject<T>(Entity, T) IBaker.AddSharedComponentManaged<T>(T) IBaker.AddSharedComponentManaged<T>(Entity, T) IBaker.AddSharedComponent<T>(T) IBaker.AddSharedComponent<T>(Entity, T) IBaker.AddBuffer<T>() IBaker.AddBuffer<T>(Entity) IBaker.SetComponent<T>(Entity, in T) IBaker.SetComponentEnabled<T>(Entity, bool) IBaker.SetComponentEnabled<T>(bool) IBaker.SetSharedComponentManaged<T>(Entity, in T) IBaker.SetSharedComponent<T>(Entity, in T) IBaker.SetBuffer<T>() IBaker.SetBuffer<T>(Entity) IBaker.AppendToBuffer<T>(T) IBaker.AppendToBuffer<T>(Entity, T) IBaker.CreateAdditionalEntity() IBaker.CreateAdditionalEntity(TransformUsageFlags, bool, string) IBaker.CreateAdditionalEntities(NativeArray<Entity>, TransformUsageFlags, bool) IBaker.RegisterPrefabForBaking(GameObject) IBaker.AddTransformUsageFlags(TransformUsageFlags) IBaker.AddTransformUsageFlags(Entity, TransformUsageFlags) IBaker.IsBakingForEditor() IBaker.GetDotsSettings() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains Assembly: fwt.hexterrains.dll Syntax public abstract class HexSurfaceDataBaker<TAuthoring, TRequest> : Baker<TAuthoring> where TAuthoring : HexSurfaceDataAuthoring where TRequest : unmanaged, IComponentData, ICreateHexSurfaceDataRequest Type Parameters Name Description TAuthoring Type of authoring component to bake TRequest Type of request IComponentData component to put on entity Methods BakeData(TAuthoring) Declaration public virtual void BakeData(TAuthoring authoring) Parameters Type Name Description TAuthoring authoring Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.HexSurfaceRenderDataAuthoring.html": {
    "href": "api/Fwt.HexTerrains.HexSurfaceRenderDataAuthoring.html",
    "title": "Class HexSurfaceRenderDataAuthoring | Hex Terrains",
    "summary": "Class HexSurfaceRenderDataAuthoring Base class for authoring components that create hex surface render data. Inheritance object Object Component Behaviour MonoBehaviour HexSurfaceRenderDataAuthoring HexGroundRenderDataAuthoring HexWaterRenderDataAuthoring Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains Assembly: fwt.hexterrains.dll Syntax public abstract class HexSurfaceRenderDataAuthoring : MonoBehaviour Fields RenderConfigs List of render configurations for the hex terrain surface. Index = view mode, value = render configuration. Declaration [Tooltip(\"List of render configurations for the hex terrain surface. Index = view mode, value = render configuration.\")] public List<HexTerrainRenderConfigAsset> RenderConfigs Field Value Type Description List<HexTerrainRenderConfigAsset> RenderSettings Render settings for the hex terrain surface. Declaration [Tooltip(\"Render settings for the hex terrain surface.\")] public HexTerrainRenderSettings RenderSettings Field Value Type Description HexTerrainRenderSettings ViewMode Initial ViewMode for the hex terrain surface. Declaration [Tooltip(\"Initial ViewMode for the hex terrain surface.\")] public int ViewMode Field Value Type Description int Extension Methods Extensions_UnityObject.SmartDestroy<TObject>(TObject) Extensions_UnityObject.SmartDisableGameObject<TObject>(TObject) Extensions_UnityObject.SmartEnableGameObject<TObject>(TObject) HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.HexSurfaceRenderDataBaker-3.html": {
    "href": "api/Fwt.HexTerrains.HexSurfaceRenderDataBaker-3.html",
    "title": "Class HexSurfaceRenderDataBaker<TAuthoring, TRequest, TRenderConfig> | Hex Terrains",
    "summary": "Class HexSurfaceRenderDataBaker<TAuthoring, TRequest, TRenderConfig> Base class for baker components that create hex surface render data. Inheritance object IBaker Baker<TAuthoring> HexSurfaceRenderDataBaker<TAuthoring, TRequest, TRenderConfig> HexTerrainRenderDataBaker HexWaterRenderDataBaker Inherited Members Baker<TAuthoring>.Bake(TAuthoring) IBaker.GetSceneGUID() IBaker.GetComponent<T>() IBaker.GetComponent<T>(Component) IBaker.GetComponent<T>(GameObject) IBaker.GetComponents<T>(List<T>) IBaker.GetComponents<T>(Component, List<T>) IBaker.GetComponents<T>(GameObject, List<T>) IBaker.GetComponents<T>() IBaker.GetComponents<T>(Component) IBaker.GetComponents<T>(GameObject) IBaker.GetComponentInParent<T>() IBaker.GetComponentInParent<T>(Component) IBaker.GetComponentInParent<T>(GameObject) IBaker.GetComponentsInParent<T>(List<T>) IBaker.GetComponentsInParent<T>(Component, List<T>) IBaker.GetComponentsInParent<T>(GameObject, List<T>) IBaker.GetComponentsInParent<T>() IBaker.GetComponentsInParent<T>(Component) IBaker.GetComponentsInParent<T>(GameObject) IBaker.GetComponentInChildren<T>() IBaker.GetComponentInChildren<T>(Component) IBaker.GetComponentInChildren<T>(GameObject) IBaker.GetComponentsInChildren<T>(List<T>) IBaker.GetComponentsInChildren<T>(Component, List<T>) IBaker.GetComponentsInChildren<T>(GameObject, List<T>) IBaker.GetComponentsInChildren<T>() IBaker.GetComponentsInChildren<T>(Component) IBaker.GetComponentsInChildren<T>(GameObject) IBaker.GetParent() IBaker.GetParent(Component) IBaker.GetParent(GameObject) IBaker.GetParents() IBaker.GetParents(Component) IBaker.GetParents(GameObject) IBaker.GetParents(List<GameObject>) IBaker.GetParents(Component, List<GameObject>) IBaker.GetParents(GameObject, List<GameObject>) IBaker.GetChild(int) IBaker.GetChild(Component, int) IBaker.GetChild(GameObject, int) IBaker.GetChildren(bool) IBaker.GetChildren(Component, bool) IBaker.GetChildren(GameObject, bool) IBaker.GetChildren(List<GameObject>, bool) IBaker.GetChildren(Component, List<GameObject>, bool) IBaker.GetChildren(GameObject, List<GameObject>, bool) IBaker.GetChildCount() IBaker.GetChildCount(Component) IBaker.GetChildCount(GameObject) IBaker.GetName() IBaker.GetName(Component) IBaker.GetName(GameObject) IBaker.GetLayer() IBaker.GetLayer(Component) IBaker.GetLayer(GameObject) IBaker.GetTag() IBaker.GetTag(Component) IBaker.GetTag(GameObject) IBaker.GetEntity() IBaker.GetEntity(GameObject) IBaker.GetEntity(Component) IBaker.GetEntity(TransformUsageFlags) IBaker.GetEntity(GameObject, TransformUsageFlags) IBaker.GetEntity(Component, TransformUsageFlags) IBaker.GetEntityWithoutDependency() IBaker.IsActive() IBaker.IsActive(Component) IBaker.IsActive(GameObject) IBaker.IsActiveAndEnabled() IBaker.IsActiveAndEnabled(Component) IBaker.IsStatic() IBaker.IsStatic(Component) IBaker.IsStatic(GameObject) IBaker.IsClient() IBaker.IsServer() IBaker.DependsOn<T>(T) IBaker.DependsOnComponentInParent<T>() IBaker.DependsOnComponentInParent<T>(Component) IBaker.DependsOnComponentInParent<T>(GameObject) IBaker.DependsOnComponentsInParent<T>() IBaker.DependsOnComponentsInParent<T>(Component) IBaker.DependsOnComponentsInParent<T>(GameObject) IBaker.DependsOnComponentInChildren<T>() IBaker.DependsOnComponentInChildren<T>(Component) IBaker.DependsOnComponentInChildren<T>(GameObject) IBaker.DependsOnComponentsInChildren<T>() IBaker.DependsOnComponentsInChildren<T>(GameObject) IBaker.DependsOnComponentsInChildren<T>(Component) IBaker.DependsOnLightBaking() IBaker.AddBlobAsset<T>(ref BlobAssetReference<T>, out Hash128) IBaker.AddBlobAssetWithCustomHash<T>(ref BlobAssetReference<T>, Hash128) IBaker.TryGetBlobAssetReference<T>(Hash128, out BlobAssetReference<T>) IBaker.AddComponent<T>() IBaker.AddComponent<T>(in T) IBaker.AddComponent<T>(Entity) IBaker.AddComponent<T>(Entity, in T) IBaker.AddComponent(ComponentType) IBaker.AddComponent(Entity, ComponentType) IBaker.AddComponent(in ComponentTypeSet) IBaker.AddComponent(Entity, in ComponentTypeSet) IBaker.AddComponentObject<T>(T) IBaker.AddComponentObject<T>(Entity, T) IBaker.AddSharedComponentManaged<T>(T) IBaker.AddSharedComponentManaged<T>(Entity, T) IBaker.AddSharedComponent<T>(T) IBaker.AddSharedComponent<T>(Entity, T) IBaker.AddBuffer<T>() IBaker.AddBuffer<T>(Entity) IBaker.SetComponent<T>(Entity, in T) IBaker.SetComponentEnabled<T>(Entity, bool) IBaker.SetComponentEnabled<T>(bool) IBaker.SetSharedComponentManaged<T>(Entity, in T) IBaker.SetSharedComponent<T>(Entity, in T) IBaker.SetBuffer<T>() IBaker.SetBuffer<T>(Entity) IBaker.AppendToBuffer<T>(T) IBaker.AppendToBuffer<T>(Entity, T) IBaker.CreateAdditionalEntity() IBaker.CreateAdditionalEntity(TransformUsageFlags, bool, string) IBaker.CreateAdditionalEntities(NativeArray<Entity>, TransformUsageFlags, bool) IBaker.RegisterPrefabForBaking(GameObject) IBaker.AddTransformUsageFlags(TransformUsageFlags) IBaker.AddTransformUsageFlags(Entity, TransformUsageFlags) IBaker.IsBakingForEditor() IBaker.GetDotsSettings() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains Assembly: fwt.hexterrains.dll Syntax public abstract class HexSurfaceRenderDataBaker<TAuthoring, TRequest, TRenderConfig> : Baker<TAuthoring> where TAuthoring : HexSurfaceRenderDataAuthoring where TRequest : unmanaged, IComponentData, ICreateHexSurfaceRenderDataRequest where TRenderConfig : unmanaged, IBufferElementData, IHexSurfaceRenderConfig Type Parameters Name Description TAuthoring Type of authoring component to bake TRequest Type of request IComponentData to put on entity TRenderConfig Type of render config for render data Methods BakeData(TAuthoring) Declaration public virtual void BakeData(TAuthoring authoring) Parameters Type Name Description TAuthoring authoring Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.HexTerrainAuthoring.html": {
    "href": "api/Fwt.HexTerrains.HexTerrainAuthoring.html",
    "title": "Class HexTerrainAuthoring | Hex Terrains",
    "summary": "Class HexTerrainAuthoring Authoring component for the HexTerrain. This component is used to create a HexTerrain entity in the ECS world. Inheritance object Object Component Behaviour MonoBehaviour HexTerrainAuthoring Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains Assembly: fwt.hexterrains.dll Syntax public class HexTerrainAuthoring : MonoBehaviour Fields ColorMapTextures The ColorMap textures to fill with colors from different data layers. Expected that this textures are used in terrain materials and also are present on UI (for example, minimap). Declaration [Tooltip(\"The ColorMap textures to fill with colors from different data layers.\\r\\nExpected that this textures are used in terrain materials and also are present on UI (for example, minimap).\")] public ColorMapTexturesSource ColorMapTextures Field Value Type Description ColorMapTexturesSource TerrainSettings The terrain settings (HexLayout, HexRotation, CellRadius, etc.) Declaration [Tooltip(\"The terrain settings (HexLayout, HexRotation, CellRadius, etc.)\")] public HexTerrainSettings TerrainSettings Field Value Type Description HexTerrainSettings ViewMode Initial View Mode of the terrain. Declaration [Tooltip(\"Initial View Mode of the terrain.\")] [Range(0, 255)] public int ViewMode Field Value Type Description int Extension Methods Extensions_UnityObject.SmartDestroy<TObject>(TObject) Extensions_UnityObject.SmartDisableGameObject<TObject>(TObject) Extensions_UnityObject.SmartEnableGameObject<TObject>(TObject) HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.HexTerrainBaker.html": {
    "href": "api/Fwt.HexTerrains.HexTerrainBaker.html",
    "title": "Class HexTerrainBaker | Hex Terrains",
    "summary": "Class HexTerrainBaker Baker for the HexTerrainAuthoring component. This class is used to convert the authoring component into an entity with the appropriate components. Inheritance object IBaker Baker<HexTerrainAuthoring> HexTerrainBaker Inherited Members IBaker.GetSceneGUID() IBaker.GetComponent<T>() IBaker.GetComponent<T>(Component) IBaker.GetComponent<T>(GameObject) IBaker.GetComponents<T>(List<T>) IBaker.GetComponents<T>(Component, List<T>) IBaker.GetComponents<T>(GameObject, List<T>) IBaker.GetComponents<T>() IBaker.GetComponents<T>(Component) IBaker.GetComponents<T>(GameObject) IBaker.GetComponentInParent<T>() IBaker.GetComponentInParent<T>(Component) IBaker.GetComponentInParent<T>(GameObject) IBaker.GetComponentsInParent<T>(List<T>) IBaker.GetComponentsInParent<T>(Component, List<T>) IBaker.GetComponentsInParent<T>(GameObject, List<T>) IBaker.GetComponentsInParent<T>() IBaker.GetComponentsInParent<T>(Component) IBaker.GetComponentsInParent<T>(GameObject) IBaker.GetComponentInChildren<T>() IBaker.GetComponentInChildren<T>(Component) IBaker.GetComponentInChildren<T>(GameObject) IBaker.GetComponentsInChildren<T>(List<T>) IBaker.GetComponentsInChildren<T>(Component, List<T>) IBaker.GetComponentsInChildren<T>(GameObject, List<T>) IBaker.GetComponentsInChildren<T>() IBaker.GetComponentsInChildren<T>(Component) IBaker.GetComponentsInChildren<T>(GameObject) IBaker.GetParent() IBaker.GetParent(Component) IBaker.GetParent(GameObject) IBaker.GetParents() IBaker.GetParents(Component) IBaker.GetParents(GameObject) IBaker.GetParents(List<GameObject>) IBaker.GetParents(Component, List<GameObject>) IBaker.GetParents(GameObject, List<GameObject>) IBaker.GetChild(int) IBaker.GetChild(Component, int) IBaker.GetChild(GameObject, int) IBaker.GetChildren(bool) IBaker.GetChildren(Component, bool) IBaker.GetChildren(GameObject, bool) IBaker.GetChildren(List<GameObject>, bool) IBaker.GetChildren(Component, List<GameObject>, bool) IBaker.GetChildren(GameObject, List<GameObject>, bool) IBaker.GetChildCount() IBaker.GetChildCount(Component) IBaker.GetChildCount(GameObject) IBaker.GetName() IBaker.GetName(Component) IBaker.GetName(GameObject) IBaker.GetLayer() IBaker.GetLayer(Component) IBaker.GetLayer(GameObject) IBaker.GetTag() IBaker.GetTag(Component) IBaker.GetTag(GameObject) IBaker.GetEntity() IBaker.GetEntity(GameObject) IBaker.GetEntity(Component) IBaker.GetEntity(TransformUsageFlags) IBaker.GetEntity(GameObject, TransformUsageFlags) IBaker.GetEntity(Component, TransformUsageFlags) IBaker.GetEntityWithoutDependency() IBaker.IsActive() IBaker.IsActive(Component) IBaker.IsActive(GameObject) IBaker.IsActiveAndEnabled() IBaker.IsActiveAndEnabled(Component) IBaker.IsStatic() IBaker.IsStatic(Component) IBaker.IsStatic(GameObject) IBaker.IsClient() IBaker.IsServer() IBaker.DependsOn<T>(T) IBaker.DependsOnComponentInParent<T>() IBaker.DependsOnComponentInParent<T>(Component) IBaker.DependsOnComponentInParent<T>(GameObject) IBaker.DependsOnComponentsInParent<T>() IBaker.DependsOnComponentsInParent<T>(Component) IBaker.DependsOnComponentsInParent<T>(GameObject) IBaker.DependsOnComponentInChildren<T>() IBaker.DependsOnComponentInChildren<T>(Component) IBaker.DependsOnComponentInChildren<T>(GameObject) IBaker.DependsOnComponentsInChildren<T>() IBaker.DependsOnComponentsInChildren<T>(GameObject) IBaker.DependsOnComponentsInChildren<T>(Component) IBaker.DependsOnLightBaking() IBaker.AddBlobAsset<T>(ref BlobAssetReference<T>, out Hash128) IBaker.AddBlobAssetWithCustomHash<T>(ref BlobAssetReference<T>, Hash128) IBaker.TryGetBlobAssetReference<T>(Hash128, out BlobAssetReference<T>) IBaker.AddComponent<T>() IBaker.AddComponent<T>(in T) IBaker.AddComponent<T>(Entity) IBaker.AddComponent<T>(Entity, in T) IBaker.AddComponent(ComponentType) IBaker.AddComponent(Entity, ComponentType) IBaker.AddComponent(in ComponentTypeSet) IBaker.AddComponent(Entity, in ComponentTypeSet) IBaker.AddComponentObject<T>(T) IBaker.AddComponentObject<T>(Entity, T) IBaker.AddSharedComponentManaged<T>(T) IBaker.AddSharedComponentManaged<T>(Entity, T) IBaker.AddSharedComponent<T>(T) IBaker.AddSharedComponent<T>(Entity, T) IBaker.AddBuffer<T>() IBaker.AddBuffer<T>(Entity) IBaker.SetComponent<T>(Entity, in T) IBaker.SetComponentEnabled<T>(Entity, bool) IBaker.SetComponentEnabled<T>(bool) IBaker.SetSharedComponentManaged<T>(Entity, in T) IBaker.SetSharedComponent<T>(Entity, in T) IBaker.SetBuffer<T>() IBaker.SetBuffer<T>(Entity) IBaker.AppendToBuffer<T>(T) IBaker.AppendToBuffer<T>(Entity, T) IBaker.CreateAdditionalEntity() IBaker.CreateAdditionalEntity(TransformUsageFlags, bool, string) IBaker.CreateAdditionalEntities(NativeArray<Entity>, TransformUsageFlags, bool) IBaker.RegisterPrefabForBaking(GameObject) IBaker.AddTransformUsageFlags(TransformUsageFlags) IBaker.AddTransformUsageFlags(Entity, TransformUsageFlags) IBaker.IsBakingForEditor() IBaker.GetDotsSettings() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains Assembly: fwt.hexterrains.dll Syntax public class HexTerrainBaker : Baker<HexTerrainAuthoring> Methods Bake(HexTerrainAuthoring) Called in the baking process to bake the authoring component Declaration public override void Bake(HexTerrainAuthoring authoring) Parameters Type Name Description HexTerrainAuthoring authoring The authoring component to bake Overrides Baker<HexTerrainAuthoring>.Bake(HexTerrainAuthoring) Remarks This method will be called for every instance of TAuthoringType in order to bake that instance. Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.HexTerrainRenderDataBaker.html": {
    "href": "api/Fwt.HexTerrains.HexTerrainRenderDataBaker.html",
    "title": "Class HexTerrainRenderDataBaker | Hex Terrains",
    "summary": "Class HexTerrainRenderDataBaker Baker for Ground HexRenderData. Inheritance object IBaker Baker<HexGroundRenderDataAuthoring> HexSurfaceRenderDataBaker<HexGroundRenderDataAuthoring, CreateHexGroundRenderDataRequest, HexGroundRenderConfig> HexTerrainRenderDataBaker Inherited Members HexSurfaceRenderDataBaker<HexGroundRenderDataAuthoring, CreateHexGroundRenderDataRequest, HexGroundRenderConfig>.BakeData(HexGroundRenderDataAuthoring) IBaker.GetSceneGUID() IBaker.GetComponent<T>() IBaker.GetComponent<T>(Component) IBaker.GetComponent<T>(GameObject) IBaker.GetComponents<T>(List<T>) IBaker.GetComponents<T>(Component, List<T>) IBaker.GetComponents<T>(GameObject, List<T>) IBaker.GetComponents<T>() IBaker.GetComponents<T>(Component) IBaker.GetComponents<T>(GameObject) IBaker.GetComponentInParent<T>() IBaker.GetComponentInParent<T>(Component) IBaker.GetComponentInParent<T>(GameObject) IBaker.GetComponentsInParent<T>(List<T>) IBaker.GetComponentsInParent<T>(Component, List<T>) IBaker.GetComponentsInParent<T>(GameObject, List<T>) IBaker.GetComponentsInParent<T>() IBaker.GetComponentsInParent<T>(Component) IBaker.GetComponentsInParent<T>(GameObject) IBaker.GetComponentInChildren<T>() IBaker.GetComponentInChildren<T>(Component) IBaker.GetComponentInChildren<T>(GameObject) IBaker.GetComponentsInChildren<T>(List<T>) IBaker.GetComponentsInChildren<T>(Component, List<T>) IBaker.GetComponentsInChildren<T>(GameObject, List<T>) IBaker.GetComponentsInChildren<T>() IBaker.GetComponentsInChildren<T>(Component) IBaker.GetComponentsInChildren<T>(GameObject) IBaker.GetParent() IBaker.GetParent(Component) IBaker.GetParent(GameObject) IBaker.GetParents() IBaker.GetParents(Component) IBaker.GetParents(GameObject) IBaker.GetParents(List<GameObject>) IBaker.GetParents(Component, List<GameObject>) IBaker.GetParents(GameObject, List<GameObject>) IBaker.GetChild(int) IBaker.GetChild(Component, int) IBaker.GetChild(GameObject, int) IBaker.GetChildren(bool) IBaker.GetChildren(Component, bool) IBaker.GetChildren(GameObject, bool) IBaker.GetChildren(List<GameObject>, bool) IBaker.GetChildren(Component, List<GameObject>, bool) IBaker.GetChildren(GameObject, List<GameObject>, bool) IBaker.GetChildCount() IBaker.GetChildCount(Component) IBaker.GetChildCount(GameObject) IBaker.GetName() IBaker.GetName(Component) IBaker.GetName(GameObject) IBaker.GetLayer() IBaker.GetLayer(Component) IBaker.GetLayer(GameObject) IBaker.GetTag() IBaker.GetTag(Component) IBaker.GetTag(GameObject) IBaker.GetEntity() IBaker.GetEntity(GameObject) IBaker.GetEntity(Component) IBaker.GetEntity(TransformUsageFlags) IBaker.GetEntity(GameObject, TransformUsageFlags) IBaker.GetEntity(Component, TransformUsageFlags) IBaker.GetEntityWithoutDependency() IBaker.IsActive() IBaker.IsActive(Component) IBaker.IsActive(GameObject) IBaker.IsActiveAndEnabled() IBaker.IsActiveAndEnabled(Component) IBaker.IsStatic() IBaker.IsStatic(Component) IBaker.IsStatic(GameObject) IBaker.IsClient() IBaker.IsServer() IBaker.DependsOn<T>(T) IBaker.DependsOnComponentInParent<T>() IBaker.DependsOnComponentInParent<T>(Component) IBaker.DependsOnComponentInParent<T>(GameObject) IBaker.DependsOnComponentsInParent<T>() IBaker.DependsOnComponentsInParent<T>(Component) IBaker.DependsOnComponentsInParent<T>(GameObject) IBaker.DependsOnComponentInChildren<T>() IBaker.DependsOnComponentInChildren<T>(Component) IBaker.DependsOnComponentInChildren<T>(GameObject) IBaker.DependsOnComponentsInChildren<T>() IBaker.DependsOnComponentsInChildren<T>(GameObject) IBaker.DependsOnComponentsInChildren<T>(Component) IBaker.DependsOnLightBaking() IBaker.AddBlobAsset<T>(ref BlobAssetReference<T>, out Hash128) IBaker.AddBlobAssetWithCustomHash<T>(ref BlobAssetReference<T>, Hash128) IBaker.TryGetBlobAssetReference<T>(Hash128, out BlobAssetReference<T>) IBaker.AddComponent<T>() IBaker.AddComponent<T>(in T) IBaker.AddComponent<T>(Entity) IBaker.AddComponent<T>(Entity, in T) IBaker.AddComponent(ComponentType) IBaker.AddComponent(Entity, ComponentType) IBaker.AddComponent(in ComponentTypeSet) IBaker.AddComponent(Entity, in ComponentTypeSet) IBaker.AddComponentObject<T>(T) IBaker.AddComponentObject<T>(Entity, T) IBaker.AddSharedComponentManaged<T>(T) IBaker.AddSharedComponentManaged<T>(Entity, T) IBaker.AddSharedComponent<T>(T) IBaker.AddSharedComponent<T>(Entity, T) IBaker.AddBuffer<T>() IBaker.AddBuffer<T>(Entity) IBaker.SetComponent<T>(Entity, in T) IBaker.SetComponentEnabled<T>(Entity, bool) IBaker.SetComponentEnabled<T>(bool) IBaker.SetSharedComponentManaged<T>(Entity, in T) IBaker.SetSharedComponent<T>(Entity, in T) IBaker.SetBuffer<T>() IBaker.SetBuffer<T>(Entity) IBaker.AppendToBuffer<T>(T) IBaker.AppendToBuffer<T>(Entity, T) IBaker.CreateAdditionalEntity() IBaker.CreateAdditionalEntity(TransformUsageFlags, bool, string) IBaker.CreateAdditionalEntities(NativeArray<Entity>, TransformUsageFlags, bool) IBaker.RegisterPrefabForBaking(GameObject) IBaker.AddTransformUsageFlags(TransformUsageFlags) IBaker.AddTransformUsageFlags(Entity, TransformUsageFlags) IBaker.IsBakingForEditor() IBaker.GetDotsSettings() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains Assembly: fwt.hexterrains.dll Syntax public class HexTerrainRenderDataBaker : HexSurfaceRenderDataBaker<HexGroundRenderDataAuthoring, CreateHexGroundRenderDataRequest, HexGroundRenderConfig> Methods Bake(HexGroundRenderDataAuthoring) Called in the baking process to bake the authoring component Declaration public override void Bake(HexGroundRenderDataAuthoring authoring) Parameters Type Name Description HexGroundRenderDataAuthoring authoring The authoring component to bake Overrides Baker<HexGroundRenderDataAuthoring>.Bake(HexGroundRenderDataAuthoring) Remarks This method will be called for every instance of TAuthoringType in order to bake that instance. Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.HexTerrainSerializer.CustomDeserializerCallback.html": {
    "href": "api/Fwt.HexTerrains.HexTerrainSerializer.CustomDeserializerCallback.html",
    "title": "Delegate HexTerrainSerializer.CustomDeserializerCallback | Hex Terrains",
    "summary": "Delegate HexTerrainSerializer.CustomDeserializerCallback If you want to deserialize a custom component or implement a custom deserialization logic for standard components, provide this callback to the serializer. Deserializer will call this callback and if the callback returns true, serializer will not try to deserialize a component by itself, assuming you have already done it. Namespace: Fwt.HexTerrains Assembly: fwt.hexterrains.dll Syntax public delegate bool HexTerrainSerializer.CustomDeserializerCallback(BinaryReader reader, Type componentType, HexTerrainSettings terrainSettings) Parameters Type Name Description BinaryReader reader If you want to deserialize a custom component or implement a custom deserialization logic for standard components, provide this callback to the serializer. Deserializer will call this callback and if the callback returns true, serializer will not try to deserialize a component by itself, assuming you have already done it. Type componentType If you want to deserialize a custom component or implement a custom deserialization logic for standard components, provide this callback to the serializer. Deserializer will call this callback and if the callback returns true, serializer will not try to deserialize a component by itself, assuming you have already done it. HexTerrainSettings terrainSettings If you want to deserialize a custom component or implement a custom deserialization logic for standard components, provide this callback to the serializer. Deserializer will call this callback and if the callback returns true, serializer will not try to deserialize a component by itself, assuming you have already done it. Returns Type Description bool Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.HexTerrainSerializer.CustomSerializerCallback.html": {
    "href": "api/Fwt.HexTerrains.HexTerrainSerializer.CustomSerializerCallback.html",
    "title": "Delegate HexTerrainSerializer.CustomSerializerCallback | Hex Terrains",
    "summary": "Delegate HexTerrainSerializer.CustomSerializerCallback If you want to serialize a custom component or implement a custom serialization logic for standard components, provide this callback to the serializer. Serializer will call this callback and if the callback returns true, serializer will not try to serialize a component by itself, assuming you have already done it. Namespace: Fwt.HexTerrains Assembly: fwt.hexterrains.dll Syntax public delegate bool HexTerrainSerializer.CustomSerializerCallback(BinaryWriter writer, object componentObject) Parameters Type Name Description BinaryWriter writer If you want to serialize a custom component or implement a custom serialization logic for standard components, provide this callback to the serializer. Serializer will call this callback and if the callback returns true, serializer will not try to serialize a component by itself, assuming you have already done it. object componentObject If you want to serialize a custom component or implement a custom serialization logic for standard components, provide this callback to the serializer. Serializer will call this callback and if the callback returns true, serializer will not try to serialize a component by itself, assuming you have already done it. Returns Type Description bool Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.HexTerrainSerializer.html": {
    "href": "api/Fwt.HexTerrains.HexTerrainSerializer.html",
    "title": "Class HexTerrainSerializer | Hex Terrains",
    "summary": "Class HexTerrainSerializer HexTerrainSerializer is a static class that provides methods to serialize and deserialize HexTerrain data entity. Inheritance object HexTerrainSerializer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains Assembly: fwt.hexterrains.dll Syntax public static class HexTerrainSerializer Fields Version Version of the serializer. Used for backward compatibility. Will be incremented when changes are added to the serialization/deserialization process. Declaration public static int Version Field Value Type Description int Methods Deserialize(BinaryReader, Entity, EntityManager, CustomDeserializerCallback) Deserializes the terrain entity from a binary reader. Declaration public static bool Deserialize(BinaryReader reader, Entity terrainEntity, EntityManager entityManager, HexTerrainSerializer.CustomDeserializerCallback customDeserializer) Parameters Type Name Description BinaryReader reader binary reader that deserializes a terrain data Entity terrainEntity EntityManager entityManager entity manager from the world the terrain entity lives HexTerrainSerializer.CustomDeserializerCallback customDeserializer If provided, this function is called to give the user an ability to insert their own load data layer logic Returns Type Description bool true if successfull, otherwise - false Deserialize(Stream, Entity, EntityManager, CustomDeserializerCallback) Deserializes the terrain entity from a stream. Declaration public static bool Deserialize(Stream stream, Entity terrainEntity, EntityManager entityManager, HexTerrainSerializer.CustomDeserializerCallback customDeserializer) Parameters Type Name Description Stream stream stream to deserialize data from Entity terrainEntity EntityManager entityManager entity manager from the world the terrain entity lives HexTerrainSerializer.CustomDeserializerCallback customDeserializer If provided, this function is called to give the user an ability to insert their own load data layer logic Returns Type Description bool true if successfull, otherwise - false LoadTerrainFromFile(string, Entity, EntityManager, CustomDeserializerCallback) Loads the terrain entity from a file. Declaration public static bool LoadTerrainFromFile(string fileName, Entity terrainEntity, EntityManager entityManager, HexTerrainSerializer.CustomDeserializerCallback customDeserializer) Parameters Type Name Description string fileName full file path Entity terrainEntity entity to put the extracted data on EntityManager entityManager entity manager from the world the terrain entity lives HexTerrainSerializer.CustomDeserializerCallback customDeserializer If provided, this function is called to give the user an ability to insert their own load data layer logic Returns Type Description bool true if successfull, otherwise - false ReadCellEntitiesData(BinaryReader, CellEntitiesData, HexTerrainSettings) Reads the cell entities data from a binary reader. Declaration public static bool ReadCellEntitiesData(BinaryReader reader, CellEntitiesData entitiesData, HexTerrainSettings terrainSettings) Parameters Type Name Description BinaryReader reader binary reader that deserializes a terrain data CellEntitiesData entitiesData Entities data to deserialize data into HexTerrainSettings terrainSettings Deserialized settings of the terrain Returns Type Description bool true if successfull, otherwise - false ReadCellItemsData(BinaryReader, CellItemsData, HexTerrainSettings) Reads the cell items data from a binary reader. Declaration public static bool ReadCellItemsData(BinaryReader reader, CellItemsData itemsData, HexTerrainSettings terrainSettings) Parameters Type Name Description BinaryReader reader binary reader that deserializes a terrain data CellItemsData itemsData Items data to deserialize data into HexTerrainSettings terrainSettings Deserialized settings of the terrain Returns Type Description bool true if successfull, otherwise - false ReadSurfaceData(BinaryReader, HexSurfaceData, HexTerrainSettings) Reads the surface data from a binary reader. Declaration public static bool ReadSurfaceData(BinaryReader reader, HexSurfaceData surfaceData, HexTerrainSettings terrainSettings) Parameters Type Name Description BinaryReader reader binary reader that deserializes a terrain data HexSurfaceData surfaceData Surface data to deserialize data into HexTerrainSettings terrainSettings Deserialized settings of the terrain Returns Type Description bool true if successfull, otherwise - false ReadTerrainAreasData(BinaryReader, HexTerrainAreasData, HexTerrainSettings) Reads the terrain areas data from a binary reader. Declaration public static bool ReadTerrainAreasData(BinaryReader reader, HexTerrainAreasData areasData, HexTerrainSettings terrainSettings) Parameters Type Name Description BinaryReader reader binary reader that deserializes a terrain data HexTerrainAreasData areasData Areas data to deserialize data into HexTerrainSettings terrainSettings Deserialized settings of the terrain Returns Type Description bool true if successfull, otherwise - false ReadTerrainSettings(BinaryReader) Reads the terrain settings from a binary reader. Declaration public static HexTerrainSettings ReadTerrainSettings(BinaryReader reader) Parameters Type Name Description BinaryReader reader binary reader that deserializes a terrain data Returns Type Description HexTerrainSettings deserialized terrain settings ReadToNativeList(BinaryReader, NativeList<CellEntity>) Reads a native list of CellEntity from a binary reader. Declaration public static bool ReadToNativeList(this BinaryReader reader, NativeList<CellEntity> list) Parameters Type Name Description BinaryReader reader binary reader that deserializes a terrain data NativeList<CellEntity> list List to deserialize data into Returns Type Description bool true if successfull, otherwise - false ReadToNativeList(BinaryReader, NativeList<CellItem>) Reads a native list of CellItem from a binary reader. Declaration public static bool ReadToNativeList(this BinaryReader reader, NativeList<CellItem> list) Parameters Type Name Description BinaryReader reader binary reader that deserializes a terrain data NativeList<CellItem> list List to deserialize data into Returns Type Description bool true if successfull, otherwise - false ReadVersion1(BinaryReader, Entity, EntityManager, HexTerrainSettings, CustomDeserializerCallback) Reads the terrain entity data from a binary reader. Called if the data was saved by a Serializer of version 1 or more. Declaration public static bool ReadVersion1(BinaryReader reader, Entity terrainEntity, EntityManager entityManager, HexTerrainSettings terrainSettings, HexTerrainSerializer.CustomDeserializerCallback customDeserializer) Parameters Type Name Description BinaryReader reader binary reader that deserializes a terrain data Entity terrainEntity EntityManager entityManager entity manager from the world the terrain entity lives HexTerrainSettings terrainSettings Deserialized settings of the terrain that is being deserialized HexTerrainSerializer.CustomDeserializerCallback customDeserializer If provided, this function is called to give the user an ability to insert their own load data layer logic Returns Type Description bool true if successfull, otherwise - false SaveTerrainToFile(string, Entity, EntityManager, CustomSerializerCallback) Saves the terrain entity to a file. Declaration public static bool SaveTerrainToFile(string filePath, Entity terrainEntity, EntityManager entityManager, HexTerrainSerializer.CustomSerializerCallback customSerializer) Parameters Type Name Description string filePath full path to the file Entity terrainEntity terrain entity to save EntityManager entityManager entity manager from the world the terrain entity lives HexTerrainSerializer.CustomSerializerCallback customSerializer If provided, this function is called to give the user an ability to insert their own save data layer logic Returns Type Description bool true if successfull, otherwise - false Serialize(BinaryWriter, Entity, EntityManager, CustomSerializerCallback) Serializes the terrain entity using a binary writer Declaration public static bool Serialize(BinaryWriter writer, Entity terrainEntity, EntityManager entityManager, HexTerrainSerializer.CustomSerializerCallback customSerializer) Parameters Type Name Description BinaryWriter writer binary writer that serializes the terrain data Entity terrainEntity terrain entity to serialize EntityManager entityManager entity manager from the world the terrain entity lives HexTerrainSerializer.CustomSerializerCallback customSerializer If provided, this function is called to give the user an ability to insert their own save data layer logic Returns Type Description bool true if successfull, otherwise - false Serialize(Stream, Entity, EntityManager, CustomSerializerCallback) Serializes the terrain entity to a stream. Declaration public static bool Serialize(Stream stream, Entity terrainEntity, EntityManager entityManager, HexTerrainSerializer.CustomSerializerCallback customSerializer) Parameters Type Name Description Stream stream stream to serialize an entity into Entity terrainEntity terrain entity to serialize EntityManager entityManager entity manager from the world the terrain entity lives HexTerrainSerializer.CustomSerializerCallback customSerializer If provided, this function is called to give the user an ability to insert their own save data layer logic Returns Type Description bool true if successfull, otherwise - false Write(BinaryWriter, CellEntity) Writes a CellEntity to the binary writer. Declaration public static bool Write(this BinaryWriter writer, CellEntity cellEntity) Parameters Type Name Description BinaryWriter writer binary writer that serializes the terrain CellEntity cellEntity Returns Type Description bool true if successfull, otherwise - false Write(BinaryWriter, CellItem) Writes a CellItem to the binary writer. Declaration public static bool Write(this BinaryWriter writer, CellItem cellItem) Parameters Type Name Description BinaryWriter writer binary writer that serializes the terrain CellItem cellItem data to serialize Returns Type Description bool true if successfull, otherwise - false WriteCellEntitiesData(BinaryWriter, CellEntitiesData) Writes the cell entities data to the binary writer. Declaration public static void WriteCellEntitiesData(BinaryWriter writer, CellEntitiesData entitiesData) Parameters Type Name Description BinaryWriter writer binary writer that serializes the terrain CellEntitiesData entitiesData entities data to serialize WriteCellItemsData(BinaryWriter, CellItemsData) Writes the cell items data to the binary writer. Declaration public static void WriteCellItemsData(BinaryWriter writer, CellItemsData itemsData) Parameters Type Name Description BinaryWriter writer binary writer that serializes the terrain CellItemsData itemsData items data to serialize WriteNativeArray(BinaryWriter, NativeArray<CellEntity>) Writes a native array of CellEntity to the binary writer. Declaration public static bool WriteNativeArray(this BinaryWriter writer, NativeArray<CellEntity> array) Parameters Type Name Description BinaryWriter writer binary writer that serializes the terrain NativeArray<CellEntity> array data to serialize Returns Type Description bool true if successfull, otherwise - false WriteNativeArray(BinaryWriter, NativeArray<CellItem>) Writes a native array of CellItem to the binary writer. Declaration public static bool WriteNativeArray(this BinaryWriter writer, NativeArray<CellItem> array) Parameters Type Name Description BinaryWriter writer binary writer that serializes the terrain NativeArray<CellItem> array data to serialize Returns Type Description bool true if successfull, otherwise - false WriteSurfaceData(BinaryWriter, HexSurfaceData) Writes the surface data to the binary writer. Declaration public static bool WriteSurfaceData(BinaryWriter writer, HexSurfaceData surfaceData) Parameters Type Name Description BinaryWriter writer binary writer that serializes the terrain HexSurfaceData surfaceData surface data to serialize Returns Type Description bool true if successfull, otherwise - false WriteTerrainAreasData(BinaryWriter, HexTerrainAreasData) Writes the terrain areas data to the binary writer. Declaration public static void WriteTerrainAreasData(BinaryWriter writer, HexTerrainAreasData areasData) Parameters Type Name Description BinaryWriter writer binary writer that serializes the terrain HexTerrainAreasData areasData area data to serialize WriteTerrainSettings(HexTerrainSettings, BinaryWriter) Writes the terrain settings to the binary writer. Declaration public static bool WriteTerrainSettings(HexTerrainSettings terrainSettings, BinaryWriter writer) Parameters Type Name Description HexTerrainSettings terrainSettings terrain settings to write BinaryWriter writer binary writer that serializes the terrain Returns Type Description bool true if successfull, otherwise - false WriteTypeHash(BinaryWriter, ComponentType) Writes the type hash of the component type to the binary writer. Declaration public static void WriteTypeHash(BinaryWriter writer, ComponentType componentType) Parameters Type Name Description BinaryWriter writer binary writer that serializes the terrain data ComponentType componentType type of the component data that is being serialized WriteVersion1(BinaryWriter, Entity, EntityManager, CustomSerializerCallback) Writes the terrain entity data to a binary writer. Called if the Serializer version is 1 or more. Declaration public static bool WriteVersion1(BinaryWriter writer, Entity terrainEntity, EntityManager entityManager, HexTerrainSerializer.CustomSerializerCallback customSerializer) Parameters Type Name Description BinaryWriter writer binary writer that serializes the terrain data Entity terrainEntity terrain entity to serialize EntityManager entityManager entity manager from the world the terrain entity lives HexTerrainSerializer.CustomSerializerCallback customSerializer If provided, this function is called to give the user an ability to insert their own save data layer logic Returns Type Description bool true if successfull, otherwise - false"
  },
  "api/Fwt.HexTerrains.HexTerrainsCleanupBarrier.html": {
    "href": "api/Fwt.HexTerrains.HexTerrainsCleanupBarrier.html",
    "title": "Class HexTerrainsCleanupBarrier | Hex Terrains",
    "summary": "Class HexTerrainsCleanupBarrier Buffer system for the HexTerrains cleanup systems (executes the last of all cleanup systems). Inheritance object ComponentSystemBase SystemBase EntityCommandBufferSystem HexTerrainsCleanupBarrier Inherited Members EntityCommandBufferSystem.m_PendingBuffers EntityCommandBufferSystem.PendingBuffers EntityCommandBufferSystem.CreateCommandBuffer() EntityCommandBufferSystem.AddJobHandleForProducer(JobHandle) EntityCommandBufferSystem.OnCreate() EntityCommandBufferSystem.OnDestroy() EntityCommandBufferSystem.OnUpdate() EntityCommandBufferSystem.CreateCommandBuffer(ref UnsafeList<EntityCommandBuffer>, AllocatorManager.AllocatorHandle, WorldUnmanaged) EntityCommandBufferSystem.CreateCommandBuffer(ref UnsafeList<EntityCommandBuffer>, WorldUnmanaged) SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains Assembly: fwt.hexterrains.dll Syntax [UpdateInGroup(typeof(HexTerrainsCleanupGroup), OrderLast = true)] public class HexTerrainsCleanupBarrier : EntityCommandBufferSystem Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.HexTerrainsCleanupGroup.html": {
    "href": "api/Fwt.HexTerrains.HexTerrainsCleanupGroup.html",
    "title": "Class HexTerrainsCleanupGroup | Hex Terrains",
    "summary": "Class HexTerrainsCleanupGroup System group for the HexTerrains cleanup systems. This systems usually reset the dirty flags. This system group is executed at the very beginning of the frame Inheritance object ComponentSystemBase SystemBase ComponentSystemGroup HexTerrainsCleanupGroup Inherited Members ComponentSystemGroup.EnableSystemSorting ComponentSystemGroup.Created ComponentSystemGroup.ManagedSystems ComponentSystemGroup.GetUnmanagedSystems(Allocator) ComponentSystemGroup.GetAllSystems(Allocator) ComponentSystemGroup.OnCreate() ComponentSystemGroup.OnDestroy() ComponentSystemGroup.AddSystemToUpdateList(ComponentSystemBase) ComponentSystemGroup.AddSystemToUpdateList(SystemHandle) ComponentSystemGroup.RemoveSystemFromUpdateList(ComponentSystemBase) ComponentSystemGroup.RemoveSystemFromUpdateList(SystemHandle) ComponentSystemGroup.SortSystems() ComponentSystemGroup.FixedRateManager ComponentSystemGroup.RateManager ComponentSystemGroup.SetRateManagerCreateAllocator(IRateManager) ComponentSystemGroup.RateGroupAllocators ComponentSystemGroup.OnUpdate() SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains Assembly: fwt.hexterrains.dll Syntax [UpdateInGroup(typeof(InitializationSystemGroup), OrderFirst = true)] public class HexTerrainsCleanupGroup : ComponentSystemGroup Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.HexTerrainsCreateAllBarrier.html": {
    "href": "api/Fwt.HexTerrains.HexTerrainsCreateAllBarrier.html",
    "title": "Class HexTerrainsCreateAllBarrier | Hex Terrains",
    "summary": "Class HexTerrainsCreateAllBarrier Buffer system for the HexTerrains creation systems (executes the last of all creation systems). Inheritance object ComponentSystemBase SystemBase EntityCommandBufferSystem HexTerrainsCreateAllBarrier Inherited Members EntityCommandBufferSystem.m_PendingBuffers EntityCommandBufferSystem.PendingBuffers EntityCommandBufferSystem.CreateCommandBuffer() EntityCommandBufferSystem.AddJobHandleForProducer(JobHandle) EntityCommandBufferSystem.OnCreate() EntityCommandBufferSystem.OnDestroy() EntityCommandBufferSystem.OnUpdate() EntityCommandBufferSystem.CreateCommandBuffer(ref UnsafeList<EntityCommandBuffer>, AllocatorManager.AllocatorHandle, WorldUnmanaged) EntityCommandBufferSystem.CreateCommandBuffer(ref UnsafeList<EntityCommandBuffer>, WorldUnmanaged) SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains Assembly: fwt.hexterrains.dll Syntax [UpdateInGroup(typeof(CreateHexTerrainsGroup), OrderLast = true)] public class HexTerrainsCreateAllBarrier : EntityCommandBufferSystem Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.HexTerrainsFinishPreRenderBarrier.html": {
    "href": "api/Fwt.HexTerrains.HexTerrainsFinishPreRenderBarrier.html",
    "title": "Class HexTerrainsFinishPreRenderBarrier | Hex Terrains",
    "summary": "Class HexTerrainsFinishPreRenderBarrier Barrier system for the HexTerrains finish pre-render systems (executes the last of all Finish Pre Render Systems). Inheritance object ComponentSystemBase SystemBase EntityCommandBufferSystem HexTerrainsFinishPreRenderBarrier Inherited Members EntityCommandBufferSystem.m_PendingBuffers EntityCommandBufferSystem.PendingBuffers EntityCommandBufferSystem.CreateCommandBuffer() EntityCommandBufferSystem.AddJobHandleForProducer(JobHandle) EntityCommandBufferSystem.OnCreate() EntityCommandBufferSystem.OnDestroy() EntityCommandBufferSystem.OnUpdate() EntityCommandBufferSystem.CreateCommandBuffer(ref UnsafeList<EntityCommandBuffer>, AllocatorManager.AllocatorHandle, WorldUnmanaged) EntityCommandBufferSystem.CreateCommandBuffer(ref UnsafeList<EntityCommandBuffer>, WorldUnmanaged) SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains Assembly: fwt.hexterrains.dll Syntax [UpdateInGroup(typeof(HexTerrainsFinishPreRenderGroup), OrderLast = true)] public class HexTerrainsFinishPreRenderBarrier : EntityCommandBufferSystem Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.HexTerrainsFinishPreRenderGroup.html": {
    "href": "api/Fwt.HexTerrains.HexTerrainsFinishPreRenderGroup.html",
    "title": "Class HexTerrainsFinishPreRenderGroup | Hex Terrains",
    "summary": "Class HexTerrainsFinishPreRenderGroup System group for the HexTerrains finish pre-render systems Inheritance object ComponentSystemBase SystemBase ComponentSystemGroup HexTerrainsFinishPreRenderGroup Inherited Members ComponentSystemGroup.EnableSystemSorting ComponentSystemGroup.Created ComponentSystemGroup.ManagedSystems ComponentSystemGroup.GetUnmanagedSystems(Allocator) ComponentSystemGroup.GetAllSystems(Allocator) ComponentSystemGroup.OnCreate() ComponentSystemGroup.OnDestroy() ComponentSystemGroup.AddSystemToUpdateList(ComponentSystemBase) ComponentSystemGroup.AddSystemToUpdateList(SystemHandle) ComponentSystemGroup.RemoveSystemFromUpdateList(ComponentSystemBase) ComponentSystemGroup.RemoveSystemFromUpdateList(SystemHandle) ComponentSystemGroup.SortSystems() ComponentSystemGroup.FixedRateManager ComponentSystemGroup.RateManager ComponentSystemGroup.SetRateManagerCreateAllocator(IRateManager) ComponentSystemGroup.RateGroupAllocators ComponentSystemGroup.OnUpdate() SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains Assembly: fwt.hexterrains.dll Syntax [UpdateInGroup(typeof(LateSimulationSystemGroup))] public class HexTerrainsFinishPreRenderGroup : ComponentSystemGroup Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.HexTerrainsInitializationBuffer.html": {
    "href": "api/Fwt.HexTerrains.HexTerrainsInitializationBuffer.html",
    "title": "Class HexTerrainsInitializationBuffer | Hex Terrains",
    "summary": "Class HexTerrainsInitializationBuffer Buffer system for the HexTerrains initialization systems (executes the last of all initialization systems). Inheritance object ComponentSystemBase SystemBase EntityCommandBufferSystem HexTerrainsInitializationBuffer Inherited Members EntityCommandBufferSystem.m_PendingBuffers EntityCommandBufferSystem.PendingBuffers EntityCommandBufferSystem.CreateCommandBuffer() EntityCommandBufferSystem.AddJobHandleForProducer(JobHandle) EntityCommandBufferSystem.OnCreate() EntityCommandBufferSystem.OnDestroy() EntityCommandBufferSystem.OnUpdate() EntityCommandBufferSystem.CreateCommandBuffer(ref UnsafeList<EntityCommandBuffer>, AllocatorManager.AllocatorHandle, WorldUnmanaged) EntityCommandBufferSystem.CreateCommandBuffer(ref UnsafeList<EntityCommandBuffer>, WorldUnmanaged) SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains Assembly: fwt.hexterrains.dll Syntax [UpdateInGroup(typeof(HexTerrainsInitializationGroup), OrderLast = true)] public class HexTerrainsInitializationBuffer : EntityCommandBufferSystem Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.HexTerrainsInitializationGroup.html": {
    "href": "api/Fwt.HexTerrains.HexTerrainsInitializationGroup.html",
    "title": "Class HexTerrainsInitializationGroup | Hex Terrains",
    "summary": "Class HexTerrainsInitializationGroup System Group where all HexTerrains initialization systems are executed. Inheritance object ComponentSystemBase SystemBase ComponentSystemGroup HexTerrainsInitializationGroup Inherited Members ComponentSystemGroup.EnableSystemSorting ComponentSystemGroup.Created ComponentSystemGroup.ManagedSystems ComponentSystemGroup.GetUnmanagedSystems(Allocator) ComponentSystemGroup.GetAllSystems(Allocator) ComponentSystemGroup.OnCreate() ComponentSystemGroup.OnDestroy() ComponentSystemGroup.AddSystemToUpdateList(ComponentSystemBase) ComponentSystemGroup.AddSystemToUpdateList(SystemHandle) ComponentSystemGroup.RemoveSystemFromUpdateList(ComponentSystemBase) ComponentSystemGroup.RemoveSystemFromUpdateList(SystemHandle) ComponentSystemGroup.SortSystems() ComponentSystemGroup.FixedRateManager ComponentSystemGroup.RateManager ComponentSystemGroup.SetRateManagerCreateAllocator(IRateManager) ComponentSystemGroup.RateGroupAllocators ComponentSystemGroup.OnUpdate() SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains Assembly: fwt.hexterrains.dll Syntax [UpdateInGroup(typeof(SimulationSystemGroup))] public class HexTerrainsInitializationGroup : ComponentSystemGroup Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.HexTerrainsRenderBuffer.html": {
    "href": "api/Fwt.HexTerrains.HexTerrainsRenderBuffer.html",
    "title": "Class HexTerrainsRenderBuffer | Hex Terrains",
    "summary": "Class HexTerrainsRenderBuffer Buffer system for the HexTerrains render systems (executes the last of all Render Systems). Inheritance object ComponentSystemBase SystemBase EntityCommandBufferSystem HexTerrainsRenderBuffer Inherited Members EntityCommandBufferSystem.m_PendingBuffers EntityCommandBufferSystem.PendingBuffers EntityCommandBufferSystem.CreateCommandBuffer() EntityCommandBufferSystem.AddJobHandleForProducer(JobHandle) EntityCommandBufferSystem.OnCreate() EntityCommandBufferSystem.OnDestroy() EntityCommandBufferSystem.OnUpdate() EntityCommandBufferSystem.CreateCommandBuffer(ref UnsafeList<EntityCommandBuffer>, AllocatorManager.AllocatorHandle, WorldUnmanaged) EntityCommandBufferSystem.CreateCommandBuffer(ref UnsafeList<EntityCommandBuffer>, WorldUnmanaged) SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains Assembly: fwt.hexterrains.dll Syntax [UpdateInGroup(typeof(HexTerrainsRenderGroup), OrderLast = true)] public class HexTerrainsRenderBuffer : EntityCommandBufferSystem Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.HexTerrainsRenderGroup.html": {
    "href": "api/Fwt.HexTerrains.HexTerrainsRenderGroup.html",
    "title": "Class HexTerrainsRenderGroup | Hex Terrains",
    "summary": "Class HexTerrainsRenderGroup System Group where HexTerrains are rendered. Inheritance object ComponentSystemBase SystemBase ComponentSystemGroup HexTerrainsRenderGroup Inherited Members ComponentSystemGroup.EnableSystemSorting ComponentSystemGroup.Created ComponentSystemGroup.ManagedSystems ComponentSystemGroup.GetUnmanagedSystems(Allocator) ComponentSystemGroup.GetAllSystems(Allocator) ComponentSystemGroup.OnCreate() ComponentSystemGroup.OnDestroy() ComponentSystemGroup.AddSystemToUpdateList(ComponentSystemBase) ComponentSystemGroup.AddSystemToUpdateList(SystemHandle) ComponentSystemGroup.RemoveSystemFromUpdateList(ComponentSystemBase) ComponentSystemGroup.RemoveSystemFromUpdateList(SystemHandle) ComponentSystemGroup.SortSystems() ComponentSystemGroup.FixedRateManager ComponentSystemGroup.RateManager ComponentSystemGroup.SetRateManagerCreateAllocator(IRateManager) ComponentSystemGroup.RateGroupAllocators ComponentSystemGroup.OnUpdate() SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains Assembly: fwt.hexterrains.dll Syntax [UpdateInGroup(typeof(PresentationSystemGroup))] public class HexTerrainsRenderGroup : ComponentSystemGroup Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.HexTerrainsStartPreRenderBarrier.html": {
    "href": "api/Fwt.HexTerrains.HexTerrainsStartPreRenderBarrier.html",
    "title": "Class HexTerrainsStartPreRenderBarrier | Hex Terrains",
    "summary": "Class HexTerrainsStartPreRenderBarrier Buffer system for the HexTerrains start pre-render systems (executes the last of all Start Pre Render Systems). Inheritance object ComponentSystemBase SystemBase EntityCommandBufferSystem HexTerrainsStartPreRenderBarrier Inherited Members EntityCommandBufferSystem.m_PendingBuffers EntityCommandBufferSystem.PendingBuffers EntityCommandBufferSystem.CreateCommandBuffer() EntityCommandBufferSystem.AddJobHandleForProducer(JobHandle) EntityCommandBufferSystem.OnCreate() EntityCommandBufferSystem.OnDestroy() EntityCommandBufferSystem.OnUpdate() EntityCommandBufferSystem.CreateCommandBuffer(ref UnsafeList<EntityCommandBuffer>, AllocatorManager.AllocatorHandle, WorldUnmanaged) EntityCommandBufferSystem.CreateCommandBuffer(ref UnsafeList<EntityCommandBuffer>, WorldUnmanaged) SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains Assembly: fwt.hexterrains.dll Syntax [UpdateInGroup(typeof(HexTerrainsStartPreRenderGroup), OrderLast = true)] public class HexTerrainsStartPreRenderBarrier : EntityCommandBufferSystem Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.HexTerrainsStartPreRenderBuffer.html": {
    "href": "api/Fwt.HexTerrains.HexTerrainsStartPreRenderBuffer.html",
    "title": "Class HexTerrainsStartPreRenderBuffer | Hex Terrains",
    "summary": "Class HexTerrainsStartPreRenderBuffer Inheritance object ComponentSystemBase SystemBase EntityCommandBufferSystem HexTerrainsStartPreRenderBuffer Inherited Members EntityCommandBufferSystem.m_PendingBuffers EntityCommandBufferSystem.PendingBuffers EntityCommandBufferSystem.CreateCommandBuffer() EntityCommandBufferSystem.AddJobHandleForProducer(JobHandle) EntityCommandBufferSystem.OnCreate() EntityCommandBufferSystem.OnDestroy() EntityCommandBufferSystem.OnUpdate() EntityCommandBufferSystem.CreateCommandBuffer(ref UnsafeList<EntityCommandBuffer>, AllocatorManager.AllocatorHandle, WorldUnmanaged) EntityCommandBufferSystem.CreateCommandBuffer(ref UnsafeList<EntityCommandBuffer>, WorldUnmanaged) SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains Assembly: fwt.hexterrains.dll Syntax [UpdateInGroup(typeof(HexTerrainsStartPreRenderGroup), OrderLast = true)] public class HexTerrainsStartPreRenderBuffer : EntityCommandBufferSystem Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.HexTerrainsStartPreRenderGroup.html": {
    "href": "api/Fwt.HexTerrains.HexTerrainsStartPreRenderGroup.html",
    "title": "Class HexTerrainsStartPreRenderGroup | Hex Terrains",
    "summary": "Class HexTerrainsStartPreRenderGroup System Group where the HexTerrains start pre-render systems are executed. Inheritance object ComponentSystemBase SystemBase ComponentSystemGroup HexTerrainsStartPreRenderGroup Inherited Members ComponentSystemGroup.EnableSystemSorting ComponentSystemGroup.Created ComponentSystemGroup.ManagedSystems ComponentSystemGroup.GetUnmanagedSystems(Allocator) ComponentSystemGroup.GetAllSystems(Allocator) ComponentSystemGroup.OnCreate() ComponentSystemGroup.OnDestroy() ComponentSystemGroup.AddSystemToUpdateList(ComponentSystemBase) ComponentSystemGroup.AddSystemToUpdateList(SystemHandle) ComponentSystemGroup.RemoveSystemFromUpdateList(ComponentSystemBase) ComponentSystemGroup.RemoveSystemFromUpdateList(SystemHandle) ComponentSystemGroup.SortSystems() ComponentSystemGroup.FixedRateManager ComponentSystemGroup.RateManager ComponentSystemGroup.SetRateManagerCreateAllocator(IRateManager) ComponentSystemGroup.RateGroupAllocators ComponentSystemGroup.OnUpdate() SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains Assembly: fwt.hexterrains.dll Syntax [UpdateInGroup(typeof(SimulationSystemGroup))] [UpdateAfter(typeof(HexTerrainsInitializationGroup))] public class HexTerrainsStartPreRenderGroup : ComponentSystemGroup Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.HexWaterDataAuthoring.html": {
    "href": "api/Fwt.HexTerrains.HexWaterDataAuthoring.html",
    "title": "Class HexWaterDataAuthoring | Hex Terrains",
    "summary": "Class HexWaterDataAuthoring Authoring component for hex water data. Inheritance object Object Component Behaviour MonoBehaviour HexSurfaceDataAuthoring HexWaterDataAuthoring Inherited Members HexSurfaceDataAuthoring.IsFillHeightmap HexSurfaceDataAuthoring.FillHeightmapValue HexSurfaceDataAuthoring.IsRandomHeightmap HexSurfaceDataAuthoring.MinRandomHeight HexSurfaceDataAuthoring.MaxRandomHeight HexSurfaceDataAuthoring.IsRandomBiomesMap HexSurfaceDataAuthoring.MinRandomBiome HexSurfaceDataAuthoring.MaxRandomBiome HexSurfaceDataAuthoring.IsFillBiomesMap HexSurfaceDataAuthoring.FillBiomesMapValue HexSurfaceDataAuthoring.IsApplyHeightmap HexSurfaceDataAuthoring.Heightmap HexSurfaceDataAuthoring.HeightmapOffset HexSurfaceDataAuthoring.HeightmapScale HexSurfaceDataAuthoring.IsAutoCellBiomes HexSurfaceDataAuthoring.AutoCellBiomeLevels HexSurfaceDataAuthoring.ColorPalette HexSurfaceDataAuthoring.ColorMapTextureIndex MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains Assembly: fwt.hexterrains.dll Syntax public class HexWaterDataAuthoring : HexSurfaceDataAuthoring Extension Methods Extensions_UnityObject.SmartDestroy<TObject>(TObject) Extensions_UnityObject.SmartDisableGameObject<TObject>(TObject) Extensions_UnityObject.SmartEnableGameObject<TObject>(TObject) HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.HexWaterDataBaker.html": {
    "href": "api/Fwt.HexTerrains.HexWaterDataBaker.html",
    "title": "Class HexWaterDataBaker | Hex Terrains",
    "summary": "Class HexWaterDataBaker Baker class for hex water data. Inheritance object IBaker Baker<HexWaterDataAuthoring> HexSurfaceDataBaker<HexWaterDataAuthoring, CreateHexWaterDataRequest> HexWaterDataBaker Inherited Members HexSurfaceDataBaker<HexWaterDataAuthoring, CreateHexWaterDataRequest>.BakeData(HexWaterDataAuthoring) IBaker.GetSceneGUID() IBaker.GetComponent<T>() IBaker.GetComponent<T>(Component) IBaker.GetComponent<T>(GameObject) IBaker.GetComponents<T>(List<T>) IBaker.GetComponents<T>(Component, List<T>) IBaker.GetComponents<T>(GameObject, List<T>) IBaker.GetComponents<T>() IBaker.GetComponents<T>(Component) IBaker.GetComponents<T>(GameObject) IBaker.GetComponentInParent<T>() IBaker.GetComponentInParent<T>(Component) IBaker.GetComponentInParent<T>(GameObject) IBaker.GetComponentsInParent<T>(List<T>) IBaker.GetComponentsInParent<T>(Component, List<T>) IBaker.GetComponentsInParent<T>(GameObject, List<T>) IBaker.GetComponentsInParent<T>() IBaker.GetComponentsInParent<T>(Component) IBaker.GetComponentsInParent<T>(GameObject) IBaker.GetComponentInChildren<T>() IBaker.GetComponentInChildren<T>(Component) IBaker.GetComponentInChildren<T>(GameObject) IBaker.GetComponentsInChildren<T>(List<T>) IBaker.GetComponentsInChildren<T>(Component, List<T>) IBaker.GetComponentsInChildren<T>(GameObject, List<T>) IBaker.GetComponentsInChildren<T>() IBaker.GetComponentsInChildren<T>(Component) IBaker.GetComponentsInChildren<T>(GameObject) IBaker.GetParent() IBaker.GetParent(Component) IBaker.GetParent(GameObject) IBaker.GetParents() IBaker.GetParents(Component) IBaker.GetParents(GameObject) IBaker.GetParents(List<GameObject>) IBaker.GetParents(Component, List<GameObject>) IBaker.GetParents(GameObject, List<GameObject>) IBaker.GetChild(int) IBaker.GetChild(Component, int) IBaker.GetChild(GameObject, int) IBaker.GetChildren(bool) IBaker.GetChildren(Component, bool) IBaker.GetChildren(GameObject, bool) IBaker.GetChildren(List<GameObject>, bool) IBaker.GetChildren(Component, List<GameObject>, bool) IBaker.GetChildren(GameObject, List<GameObject>, bool) IBaker.GetChildCount() IBaker.GetChildCount(Component) IBaker.GetChildCount(GameObject) IBaker.GetName() IBaker.GetName(Component) IBaker.GetName(GameObject) IBaker.GetLayer() IBaker.GetLayer(Component) IBaker.GetLayer(GameObject) IBaker.GetTag() IBaker.GetTag(Component) IBaker.GetTag(GameObject) IBaker.GetEntity() IBaker.GetEntity(GameObject) IBaker.GetEntity(Component) IBaker.GetEntity(TransformUsageFlags) IBaker.GetEntity(GameObject, TransformUsageFlags) IBaker.GetEntity(Component, TransformUsageFlags) IBaker.GetEntityWithoutDependency() IBaker.IsActive() IBaker.IsActive(Component) IBaker.IsActive(GameObject) IBaker.IsActiveAndEnabled() IBaker.IsActiveAndEnabled(Component) IBaker.IsStatic() IBaker.IsStatic(Component) IBaker.IsStatic(GameObject) IBaker.IsClient() IBaker.IsServer() IBaker.DependsOn<T>(T) IBaker.DependsOnComponentInParent<T>() IBaker.DependsOnComponentInParent<T>(Component) IBaker.DependsOnComponentInParent<T>(GameObject) IBaker.DependsOnComponentsInParent<T>() IBaker.DependsOnComponentsInParent<T>(Component) IBaker.DependsOnComponentsInParent<T>(GameObject) IBaker.DependsOnComponentInChildren<T>() IBaker.DependsOnComponentInChildren<T>(Component) IBaker.DependsOnComponentInChildren<T>(GameObject) IBaker.DependsOnComponentsInChildren<T>() IBaker.DependsOnComponentsInChildren<T>(GameObject) IBaker.DependsOnComponentsInChildren<T>(Component) IBaker.DependsOnLightBaking() IBaker.AddBlobAsset<T>(ref BlobAssetReference<T>, out Hash128) IBaker.AddBlobAssetWithCustomHash<T>(ref BlobAssetReference<T>, Hash128) IBaker.TryGetBlobAssetReference<T>(Hash128, out BlobAssetReference<T>) IBaker.AddComponent<T>() IBaker.AddComponent<T>(in T) IBaker.AddComponent<T>(Entity) IBaker.AddComponent<T>(Entity, in T) IBaker.AddComponent(ComponentType) IBaker.AddComponent(Entity, ComponentType) IBaker.AddComponent(in ComponentTypeSet) IBaker.AddComponent(Entity, in ComponentTypeSet) IBaker.AddComponentObject<T>(T) IBaker.AddComponentObject<T>(Entity, T) IBaker.AddSharedComponentManaged<T>(T) IBaker.AddSharedComponentManaged<T>(Entity, T) IBaker.AddSharedComponent<T>(T) IBaker.AddSharedComponent<T>(Entity, T) IBaker.AddBuffer<T>() IBaker.AddBuffer<T>(Entity) IBaker.SetComponent<T>(Entity, in T) IBaker.SetComponentEnabled<T>(Entity, bool) IBaker.SetComponentEnabled<T>(bool) IBaker.SetSharedComponentManaged<T>(Entity, in T) IBaker.SetSharedComponent<T>(Entity, in T) IBaker.SetBuffer<T>() IBaker.SetBuffer<T>(Entity) IBaker.AppendToBuffer<T>(T) IBaker.AppendToBuffer<T>(Entity, T) IBaker.CreateAdditionalEntity() IBaker.CreateAdditionalEntity(TransformUsageFlags, bool, string) IBaker.CreateAdditionalEntities(NativeArray<Entity>, TransformUsageFlags, bool) IBaker.RegisterPrefabForBaking(GameObject) IBaker.AddTransformUsageFlags(TransformUsageFlags) IBaker.AddTransformUsageFlags(Entity, TransformUsageFlags) IBaker.IsBakingForEditor() IBaker.GetDotsSettings() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains Assembly: fwt.hexterrains.dll Syntax public class HexWaterDataBaker : HexSurfaceDataBaker<HexWaterDataAuthoring, CreateHexWaterDataRequest> Methods Bake(HexWaterDataAuthoring) Called in the baking process to bake the authoring component Declaration public override void Bake(HexWaterDataAuthoring authoring) Parameters Type Name Description HexWaterDataAuthoring authoring The authoring component to bake Overrides Baker<HexWaterDataAuthoring>.Bake(HexWaterDataAuthoring) Remarks This method will be called for every instance of TAuthoringType in order to bake that instance. Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.HexWaterRenderDataAuthoring.html": {
    "href": "api/Fwt.HexTerrains.HexWaterRenderDataAuthoring.html",
    "title": "Class HexWaterRenderDataAuthoring | Hex Terrains",
    "summary": "Class HexWaterRenderDataAuthoring Authoring component for hex water render data. Inheritance object Object Component Behaviour MonoBehaviour HexSurfaceRenderDataAuthoring HexWaterRenderDataAuthoring Inherited Members HexSurfaceRenderDataAuthoring.RenderSettings HexSurfaceRenderDataAuthoring.ViewMode HexSurfaceRenderDataAuthoring.RenderConfigs MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains Assembly: fwt.hexterrains.dll Syntax public class HexWaterRenderDataAuthoring : HexSurfaceRenderDataAuthoring Extension Methods Extensions_UnityObject.SmartDestroy<TObject>(TObject) Extensions_UnityObject.SmartDisableGameObject<TObject>(TObject) Extensions_UnityObject.SmartEnableGameObject<TObject>(TObject) HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.HexWaterRenderDataBaker.html": {
    "href": "api/Fwt.HexTerrains.HexWaterRenderDataBaker.html",
    "title": "Class HexWaterRenderDataBaker | Hex Terrains",
    "summary": "Class HexWaterRenderDataBaker Baker for hex water render data. Inheritance object IBaker Baker<HexWaterRenderDataAuthoring> HexSurfaceRenderDataBaker<HexWaterRenderDataAuthoring, CreateHexWaterRenderDataRequest, HexWaterRenderConfig> HexWaterRenderDataBaker Inherited Members HexSurfaceRenderDataBaker<HexWaterRenderDataAuthoring, CreateHexWaterRenderDataRequest, HexWaterRenderConfig>.BakeData(HexWaterRenderDataAuthoring) IBaker.GetSceneGUID() IBaker.GetComponent<T>() IBaker.GetComponent<T>(Component) IBaker.GetComponent<T>(GameObject) IBaker.GetComponents<T>(List<T>) IBaker.GetComponents<T>(Component, List<T>) IBaker.GetComponents<T>(GameObject, List<T>) IBaker.GetComponents<T>() IBaker.GetComponents<T>(Component) IBaker.GetComponents<T>(GameObject) IBaker.GetComponentInParent<T>() IBaker.GetComponentInParent<T>(Component) IBaker.GetComponentInParent<T>(GameObject) IBaker.GetComponentsInParent<T>(List<T>) IBaker.GetComponentsInParent<T>(Component, List<T>) IBaker.GetComponentsInParent<T>(GameObject, List<T>) IBaker.GetComponentsInParent<T>() IBaker.GetComponentsInParent<T>(Component) IBaker.GetComponentsInParent<T>(GameObject) IBaker.GetComponentInChildren<T>() IBaker.GetComponentInChildren<T>(Component) IBaker.GetComponentInChildren<T>(GameObject) IBaker.GetComponentsInChildren<T>(List<T>) IBaker.GetComponentsInChildren<T>(Component, List<T>) IBaker.GetComponentsInChildren<T>(GameObject, List<T>) IBaker.GetComponentsInChildren<T>() IBaker.GetComponentsInChildren<T>(Component) IBaker.GetComponentsInChildren<T>(GameObject) IBaker.GetParent() IBaker.GetParent(Component) IBaker.GetParent(GameObject) IBaker.GetParents() IBaker.GetParents(Component) IBaker.GetParents(GameObject) IBaker.GetParents(List<GameObject>) IBaker.GetParents(Component, List<GameObject>) IBaker.GetParents(GameObject, List<GameObject>) IBaker.GetChild(int) IBaker.GetChild(Component, int) IBaker.GetChild(GameObject, int) IBaker.GetChildren(bool) IBaker.GetChildren(Component, bool) IBaker.GetChildren(GameObject, bool) IBaker.GetChildren(List<GameObject>, bool) IBaker.GetChildren(Component, List<GameObject>, bool) IBaker.GetChildren(GameObject, List<GameObject>, bool) IBaker.GetChildCount() IBaker.GetChildCount(Component) IBaker.GetChildCount(GameObject) IBaker.GetName() IBaker.GetName(Component) IBaker.GetName(GameObject) IBaker.GetLayer() IBaker.GetLayer(Component) IBaker.GetLayer(GameObject) IBaker.GetTag() IBaker.GetTag(Component) IBaker.GetTag(GameObject) IBaker.GetEntity() IBaker.GetEntity(GameObject) IBaker.GetEntity(Component) IBaker.GetEntity(TransformUsageFlags) IBaker.GetEntity(GameObject, TransformUsageFlags) IBaker.GetEntity(Component, TransformUsageFlags) IBaker.GetEntityWithoutDependency() IBaker.IsActive() IBaker.IsActive(Component) IBaker.IsActive(GameObject) IBaker.IsActiveAndEnabled() IBaker.IsActiveAndEnabled(Component) IBaker.IsStatic() IBaker.IsStatic(Component) IBaker.IsStatic(GameObject) IBaker.IsClient() IBaker.IsServer() IBaker.DependsOn<T>(T) IBaker.DependsOnComponentInParent<T>() IBaker.DependsOnComponentInParent<T>(Component) IBaker.DependsOnComponentInParent<T>(GameObject) IBaker.DependsOnComponentsInParent<T>() IBaker.DependsOnComponentsInParent<T>(Component) IBaker.DependsOnComponentsInParent<T>(GameObject) IBaker.DependsOnComponentInChildren<T>() IBaker.DependsOnComponentInChildren<T>(Component) IBaker.DependsOnComponentInChildren<T>(GameObject) IBaker.DependsOnComponentsInChildren<T>() IBaker.DependsOnComponentsInChildren<T>(GameObject) IBaker.DependsOnComponentsInChildren<T>(Component) IBaker.DependsOnLightBaking() IBaker.AddBlobAsset<T>(ref BlobAssetReference<T>, out Hash128) IBaker.AddBlobAssetWithCustomHash<T>(ref BlobAssetReference<T>, Hash128) IBaker.TryGetBlobAssetReference<T>(Hash128, out BlobAssetReference<T>) IBaker.AddComponent<T>() IBaker.AddComponent<T>(in T) IBaker.AddComponent<T>(Entity) IBaker.AddComponent<T>(Entity, in T) IBaker.AddComponent(ComponentType) IBaker.AddComponent(Entity, ComponentType) IBaker.AddComponent(in ComponentTypeSet) IBaker.AddComponent(Entity, in ComponentTypeSet) IBaker.AddComponentObject<T>(T) IBaker.AddComponentObject<T>(Entity, T) IBaker.AddSharedComponentManaged<T>(T) IBaker.AddSharedComponentManaged<T>(Entity, T) IBaker.AddSharedComponent<T>(T) IBaker.AddSharedComponent<T>(Entity, T) IBaker.AddBuffer<T>() IBaker.AddBuffer<T>(Entity) IBaker.SetComponent<T>(Entity, in T) IBaker.SetComponentEnabled<T>(Entity, bool) IBaker.SetComponentEnabled<T>(bool) IBaker.SetSharedComponentManaged<T>(Entity, in T) IBaker.SetSharedComponent<T>(Entity, in T) IBaker.SetBuffer<T>() IBaker.SetBuffer<T>(Entity) IBaker.AppendToBuffer<T>(T) IBaker.AppendToBuffer<T>(Entity, T) IBaker.CreateAdditionalEntity() IBaker.CreateAdditionalEntity(TransformUsageFlags, bool, string) IBaker.CreateAdditionalEntities(NativeArray<Entity>, TransformUsageFlags, bool) IBaker.RegisterPrefabForBaking(GameObject) IBaker.AddTransformUsageFlags(TransformUsageFlags) IBaker.AddTransformUsageFlags(Entity, TransformUsageFlags) IBaker.IsBakingForEditor() IBaker.GetDotsSettings() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains Assembly: fwt.hexterrains.dll Syntax public class HexWaterRenderDataBaker : HexSurfaceRenderDataBaker<HexWaterRenderDataAuthoring, CreateHexWaterRenderDataRequest, HexWaterRenderConfig> Methods Bake(HexWaterRenderDataAuthoring) Called in the baking process to bake the authoring component Declaration public override void Bake(HexWaterRenderDataAuthoring authoring) Parameters Type Name Description HexWaterRenderDataAuthoring authoring The authoring component to bake Overrides Baker<HexWaterRenderDataAuthoring>.Bake(HexWaterRenderDataAuthoring) Remarks This method will be called for every instance of TAuthoringType in order to bake that instance. Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Jobs.CalcChangedChunksJob.html": {
    "href": "api/Fwt.HexTerrains.Jobs.CalcChangedChunksJob.html",
    "title": "Struct CalcChangedChunksJob | Hex Terrains",
    "summary": "Struct CalcChangedChunksJob Job that goes over Chunk Changes Log and adds into the ChunkDirtyLayer list flag that marks the chunk as dirty Implements IJob Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.Jobs Assembly: fwt.hexterrains.dll Syntax [BurstCompile] public struct CalcChangedChunksJob : IJob Fields ChunkChangesLog Declaration [ReadOnly] public NativeList<ChunkChangesLog> ChunkChangesLog Field Value Type Description NativeList<ChunkChangesLog> ChunkDirtyLayer Declaration [WriteOnly] public NativeArray<bool> ChunkDirtyLayer Field Value Type Description NativeArray<bool> TerrainMetrics Declaration public HexTerrainMetrics TerrainMetrics Field Value Type Description HexTerrainMetrics Methods Execute() Implement this method to perform work on a worker thread. Declaration public void Execute() Implements Unity.Jobs.IJob Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Jobs.CalcChunksToCreateJob.html": {
    "href": "api/Fwt.HexTerrains.Jobs.CalcChunksToCreateJob.html",
    "title": "Struct CalcChunksToCreateJob | Hex Terrains",
    "summary": "Struct CalcChunksToCreateJob Fills a hash map with indexes of chunks that need to be created. Key is the terrain entity, value is the chunk index. Implements IJobParallelFor Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.Jobs Assembly: fwt.hexterrains.dll Syntax [BurstCompile] public struct CalcChunksToCreateJob : IJobParallelFor Fields ChunkEntities Declaration [ReadOnly] public NativeList<Entity> ChunkEntities Field Value Type Description NativeList<Entity> ChunksToCreate Declaration [WriteOnly] public NativeParallelHashSet<int>.ParallelWriter ChunksToCreate Field Value Type Description NativeParallelHashSet<int>.ParallelWriter EntityInfo Declaration [ReadOnly] public EntityStorageInfoLookup EntityInfo Field Value Type Description EntityStorageInfoLookup TerrainEntity Declaration public Entity TerrainEntity Field Value Type Description Entity Methods Execute(int) Performs work against a specific iteration index. Declaration public void Execute(int index) Parameters Type Name Description int index The index of the Parallel for loop at which to perform work. Implements Unity.Jobs.IJobParallelFor Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Jobs.CalcHexCellMetricsJob.html": {
    "href": "api/Fwt.HexTerrains.Jobs.CalcHexCellMetricsJob.html",
    "title": "Struct CalcHexCellMetricsJob | Hex Terrains",
    "summary": "Struct CalcHexCellMetricsJob Job that calculates cell metrics Implements IJobParallelFor Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.Jobs Assembly: fwt.hexterrains.dll Syntax [BurstCompile] public struct CalcHexCellMetricsJob : IJobParallelFor Fields CellMetrics Declaration [WriteOnly] public NativeArray<HexCellMetrics> CellMetrics Field Value Type Description NativeArray<HexCellMetrics> CellPositions Declaration [WriteOnly] public NativeArray<float3> CellPositions Field Value Type Description NativeArray<float3> ChunkDirtyGrid index = cell metrics layer chunk index. if true = cell metrics layer chunk is dirty Declaration [ReadOnly] public NativeList<bool> ChunkDirtyGrid Field Value Type Description NativeList<bool> ColorMap Declaration [ReadOnly] public NativeList<byte> ColorMap Field Value Type Description NativeList<byte> HeightMap Declaration [ReadOnly] public NativeList<byte> HeightMap Field Value Type Description NativeList<byte> TerrainMetrics Declaration public HexTerrainMetrics TerrainMetrics Field Value Type Description HexTerrainMetrics TerrainSettings Declaration public HexTerrainSettings TerrainSettings Field Value Type Description HexTerrainSettings Methods Execute(int) Performs work against a specific iteration index. Declaration public void Execute(int index) Parameters Type Name Description int index The index of the Parallel for loop at which to perform work. Implements Unity.Jobs.IJobParallelFor Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Jobs.CalcHexChunkMetricsJob.html": {
    "href": "api/Fwt.HexTerrains.Jobs.CalcHexChunkMetricsJob.html",
    "title": "Struct CalcHexChunkMetricsJob | Hex Terrains",
    "summary": "Struct CalcHexChunkMetricsJob Job that calculates chunk metrics Implements IJobParallelFor Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.Jobs Assembly: fwt.hexterrains.dll Syntax [BurstCompile] public struct CalcHexChunkMetricsJob : IJobParallelFor Fields ChunkMetrics Declaration [WriteOnly] public NativeArray<HexChunkMetrics> ChunkMetrics Field Value Type Description NativeArray<HexChunkMetrics> TerrainMetrics Declaration [ReadOnly] public HexTerrainMetrics TerrainMetrics Field Value Type Description HexTerrainMetrics TerrainSettings Declaration [ReadOnly] public HexTerrainSettings TerrainSettings Field Value Type Description HexTerrainSettings Methods Execute(int) Performs work against a specific iteration index. Declaration public void Execute(int index) Parameters Type Name Description int index The index of the Parallel for loop at which to perform work. Implements Unity.Jobs.IJobParallelFor Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Jobs.CalcHexChunkVisibilityJob.html": {
    "href": "api/Fwt.HexTerrains.Jobs.CalcHexChunkVisibilityJob.html",
    "title": "Struct CalcHexChunkVisibilityJob | Hex Terrains",
    "summary": "Struct CalcHexChunkVisibilityJob Job that calculates chunk visibility depending on camera frustum and chunk metrics. Saves a list of visible chunks and a two lists of chunks that became visible or invisible. Implements IJobParallelFor Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.Jobs Assembly: fwt.hexterrains.dll Syntax [BurstCompile] public struct CalcHexChunkVisibilityJob : IJobParallelFor Fields ChunkMetrics Declaration [ReadOnly] public NativeList<HexChunkMetrics> ChunkMetrics Field Value Type Description NativeList<HexChunkMetrics> ChunkVisibility Declaration public NativeArray<ChunkVisibility> ChunkVisibility Field Value Type Description NativeArray<ChunkVisibility> FrustumPlanes Declaration [ReadOnly] public FixedArray8<Plane> FrustumPlanes Field Value Type Description FixedArray8<Plane> NewInvisibleChunkIndexes Declaration [WriteOnly] public NativeParallelHashSet<int>.ParallelWriter NewInvisibleChunkIndexes Field Value Type Description NativeParallelHashSet<int>.ParallelWriter NewVisibleChunkIndexes Declaration [WriteOnly] public NativeParallelHashSet<int>.ParallelWriter NewVisibleChunkIndexes Field Value Type Description NativeParallelHashSet<int>.ParallelWriter TerrainSettings Declaration public HexTerrainSettings TerrainSettings Field Value Type Description HexTerrainSettings VisibleChunkIndexes Declaration [WriteOnly] public NativeParallelHashSet<int>.ParallelWriter VisibleChunkIndexes Field Value Type Description NativeParallelHashSet<int>.ParallelWriter Methods Execute(int) Performs work against a specific iteration index. Declaration public void Execute(int index) Parameters Type Name Description int index The index of the Parallel for loop at which to perform work. Implements Unity.Jobs.IJobParallelFor Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Jobs.CalculateBiomesColorMapJob.html": {
    "href": "api/Fwt.HexTerrains.Jobs.CalculateBiomesColorMapJob.html",
    "title": "Struct CalculateBiomesColorMapJob | Hex Terrains",
    "summary": "Struct CalculateBiomesColorMapJob Job that calculates a color map for a HexSurface using a biomes data (ground) HexSurfaceData. Implements IJobParallelFor Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.Jobs Assembly: fwt.hexterrains.dll Syntax [BurstCompile] public struct CalculateBiomesColorMapJob : IJobParallelFor Fields CellColorMap Resulting color map. The job fills this array with colors. Declaration [WriteOnly] public NativeArray<Color32> CellColorMap Field Value Type Description NativeArray<Color32> CellValuesMap Map of cell values (biomes). Declaration [ReadOnly] public NativeList<byte> CellValuesMap Field Value Type Description NativeList<byte> ChunkDirtyGrid Chunk dirty flags grid. If chunk is not dirty, it is skipped. Declaration [ReadOnly] public NativeList<bool> ChunkDirtyGrid Field Value Type Description NativeList<bool> Colors Colors palette for the biomes. Index in this list = cell value in the biomes map. Declaration [ReadOnly] public NativeList<Color32> Colors Field Value Type Description NativeList<Color32> DefaultColor Default color to use if no color is found in the colors palette. Declaration public Color32 DefaultColor Field Value Type Description Color32 Settings Settings for the hex terrain. Declaration public HexTerrainSettings Settings Field Value Type Description HexTerrainSettings Methods Execute(int) Performs work against a specific iteration index. Declaration public void Execute(int index) Parameters Type Name Description int index The index of the Parallel for loop at which to perform work. Implements Unity.Jobs.IJobParallelFor Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Jobs.CalculateWaterColorMapJob.html": {
    "href": "api/Fwt.HexTerrains.Jobs.CalculateWaterColorMapJob.html",
    "title": "Struct CalculateWaterColorMapJob | Hex Terrains",
    "summary": "Struct CalculateWaterColorMapJob Job to calculate the color map, meaning skips cells that are under the terrain surface OtherHeightmap Implements IJobParallelFor Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.Jobs Assembly: fwt.hexterrains.dll Syntax [BurstCompile] public struct CalculateWaterColorMapJob : IJobParallelFor Fields CellColorMap Resulting color map. The job fills this array with colors. Declaration [WriteOnly] public NativeArray<Color32> CellColorMap Field Value Type Description NativeArray<Color32> CellValuesMap Map of cell values. Declaration [ReadOnly] public NativeList<byte> CellValuesMap Field Value Type Description NativeList<byte> ChunkDirtyGrid Chunk dirty flags grid. If chunk is not dirty, it is skipped. Declaration [ReadOnly] public NativeList<bool> ChunkDirtyGrid Field Value Type Description NativeList<bool> Colors Colors palette for the biomes. Index in this list = cell value in the biomes map. Declaration [ReadOnly] public NativeList<Color32> Colors Field Value Type Description NativeList<Color32> DefaultColor Default color to use if no color is found in the colors palette. Declaration public Color32 DefaultColor Field Value Type Description Color32 MyHeightmap Heightmap of the current surface (water). Declaration [ReadOnly] public NativeList<byte> MyHeightmap Field Value Type Description NativeList<byte> OtherHeightmap Heightmap of the other surface (terrain). Skip cell if my heightmap is lower or equals than other heightmap. Declaration [ReadOnly] public NativeList<byte> OtherHeightmap Field Value Type Description NativeList<byte> Settings Settings for the hex terrain. Declaration public HexTerrainSettings Settings Field Value Type Description HexTerrainSettings Methods Execute(int) Performs work against a specific iteration index. Declaration public void Execute(int index) Parameters Type Name Description int index The index of the Parallel for loop at which to perform work. Implements Unity.Jobs.IJobParallelFor Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Jobs.CleanChunkChangesLogJob.html": {
    "href": "api/Fwt.HexTerrains.Jobs.CleanChunkChangesLogJob.html",
    "title": "Struct CleanChunkChangesLogJob | Hex Terrains",
    "summary": "Struct CleanChunkChangesLogJob Job that cleans the ChunkChanges log list Implements IJob Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.Jobs Assembly: fwt.hexterrains.dll Syntax [BurstCompile] public struct CleanChunkChangesLogJob : IJob Fields ChunkChanges Declaration [WriteOnly] public NativeList<ChunkChangesLog> ChunkChanges Field Value Type Description NativeList<ChunkChangesLog> Methods Execute() Implement this method to perform work on a worker thread. Declaration public void Execute() Implements Unity.Jobs.IJob Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Jobs.GenerateHexChunkMeshJob.html": {
    "href": "api/Fwt.HexTerrains.Jobs.GenerateHexChunkMeshJob.html",
    "title": "Struct GenerateHexChunkMeshJob | Hex Terrains",
    "summary": "Struct GenerateHexChunkMeshJob Job that generates a hex terrain chunk mesh Implements IJob Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.Jobs Assembly: fwt.hexterrains.dll Syntax [BurstCompile] public struct GenerateHexChunkMeshJob : IJob Fields CellMetrics Declaration [ReadOnly] public NativeList<HexCellMetrics> CellMetrics Field Value Type Description NativeList<HexCellMetrics> ChunkIndex Declaration public int ChunkIndex Field Value Type Description int ChunkMetrics Declaration public HexChunkMetrics ChunkMetrics Field Value Type Description HexChunkMetrics IsDrawWater Declaration public bool IsDrawWater Field Value Type Description bool MeshData Declaration public MeshSource MeshData Field Value Type Description MeshSource RenderSettings Declaration public HexTerrainRenderSettings RenderSettings Field Value Type Description HexTerrainRenderSettings TerrainMetrics Declaration public HexTerrainMetrics TerrainMetrics Field Value Type Description HexTerrainMetrics TerrainSettings Declaration public HexTerrainSettings TerrainSettings Field Value Type Description HexTerrainSettings Methods CalcAdjacentCellData(HexCellMetrics, int, out int2, out float2) Declaration [BurstCompile] public HexCellMetrics CalcAdjacentCellData(HexCellMetrics cellMetrics, int sideIndex, out int2 adjCellCoordUnclamped, out float2 adjCellPointUnclamped) Parameters Type Name Description HexCellMetrics cellMetrics int sideIndex int2 adjCellCoordUnclamped float2 adjCellPointUnclamped Returns Type Description HexCellMetrics CalculateGroundType_Bridge(HexCellMetrics, HexCellMetrics) Declaration [BurstCompile] public byte CalculateGroundType_Bridge(HexCellMetrics cellMetrics, HexCellMetrics adjacentCellMetrics) Parameters Type Name Description HexCellMetrics cellMetrics HexCellMetrics adjacentCellMetrics Returns Type Description byte CalculateGroundType_BridgeCorner(HexCellMetrics, HexCellMetrics, HexCellMetrics) Declaration [BurstCompile] public byte CalculateGroundType_BridgeCorner(HexCellMetrics cellMetrics, HexCellMetrics adjacentCellMetrics0, HexCellMetrics adjacentCellMetrics1) Parameters Type Name Description HexCellMetrics cellMetrics HexCellMetrics adjacentCellMetrics0 HexCellMetrics adjacentCellMetrics1 Returns Type Description byte CalculateUvCell(float2, HexCellMetrics) Declaration [BurstCompile] public float2 CalculateUvCell(float2 vertexPos, HexCellMetrics cellMetrics) Parameters Type Name Description float2 vertexPos HexCellMetrics cellMetrics Returns Type Description float2 CalculateUvCellCoord(float2, HexCellMetrics) Declaration [BurstCompile] public float2 CalculateUvCellCoord(float2 vertexPos, HexCellMetrics cellMetrics) Parameters Type Name Description float2 vertexPos HexCellMetrics cellMetrics Returns Type Description float2 CalculateUvChunk(float2, HexCellMetrics) Declaration [BurstCompile] public float2 CalculateUvChunk(float2 vertexPos, HexCellMetrics cellMetrics) Parameters Type Name Description float2 vertexPos HexCellMetrics cellMetrics Returns Type Description float2 CalculateUvTerrain(float2) Declaration [BurstCompile] public float2 CalculateUvTerrain(float2 vertexPos) Parameters Type Name Description float2 vertexPos Returns Type Description float2 DrawCell(HexCellMetrics) Declaration [BurstCompile] public bool DrawCell(HexCellMetrics cellMetrics) Parameters Type Name Description HexCellMetrics cellMetrics Returns Type Description bool DrawCellBridges(HexCellMetrics) Declaration [BurstCompile] public void DrawCellBridges(HexCellMetrics cellMetrics) Parameters Type Name Description HexCellMetrics cellMetrics DrawCellPlato(HexCellMetrics) Declaration [BurstCompile] public void DrawCellPlato(HexCellMetrics cellMetrics) Parameters Type Name Description HexCellMetrics cellMetrics Execute() Implement this method to perform work on a worker thread. Declaration public void Execute() GetAdjacentCellMetrics(HexCellMetrics, int, out int2) Declaration [BurstCompile] public HexCellMetrics GetAdjacentCellMetrics(HexCellMetrics cellMetrics, int sideIndex, out int2 adjCellCoordUnclamped) Parameters Type Name Description HexCellMetrics cellMetrics int sideIndex int2 adjCellCoordUnclamped Returns Type Description HexCellMetrics Implements Unity.Jobs.IJob Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Jobs.GenerateHexChunkMeshWaterJob.html": {
    "href": "api/Fwt.HexTerrains.Jobs.GenerateHexChunkMeshWaterJob.html",
    "title": "Struct GenerateHexChunkMeshWaterJob | Hex Terrains",
    "summary": "Struct GenerateHexChunkMeshWaterJob Job that generates a water hex terrain chunk mesh Implements IJob Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.Jobs Assembly: fwt.hexterrains.dll Syntax [BurstCompile] public struct GenerateHexChunkMeshWaterJob : IJob Fields CellMetrics Declaration [ReadOnly] public NativeList<HexCellMetrics> CellMetrics Field Value Type Description NativeList<HexCellMetrics> ChunkIndex Declaration public int ChunkIndex Field Value Type Description int ChunkMetrics Declaration public HexChunkMetrics ChunkMetrics Field Value Type Description HexChunkMetrics MeshData Declaration public MeshSource MeshData Field Value Type Description MeshSource RenderSettings Declaration public HexTerrainRenderSettings RenderSettings Field Value Type Description HexTerrainRenderSettings TerrainMetrics Declaration public HexTerrainMetrics TerrainMetrics Field Value Type Description HexTerrainMetrics TerrainSettings Declaration public HexTerrainSettings TerrainSettings Field Value Type Description HexTerrainSettings Methods CalcAdjacentCellData(HexCellMetrics, int, out int2, out float2) Declaration [BurstCompile] public HexCellMetrics CalcAdjacentCellData(HexCellMetrics cellMetrics, int sideIndex, out int2 adjCellCoordUnclamped, out float2 adjCellPointUnclamped) Parameters Type Name Description HexCellMetrics cellMetrics int sideIndex int2 adjCellCoordUnclamped float2 adjCellPointUnclamped Returns Type Description HexCellMetrics CalculateGroundType_Bridge(HexCellMetrics, HexCellMetrics) Declaration [BurstCompile] public byte CalculateGroundType_Bridge(HexCellMetrics cellMetrics, HexCellMetrics adjacentCellMetrics) Parameters Type Name Description HexCellMetrics cellMetrics HexCellMetrics adjacentCellMetrics Returns Type Description byte CalculateGroundType_BridgeCorner(HexCellMetrics, HexCellMetrics, HexCellMetrics) Declaration [BurstCompile] public byte CalculateGroundType_BridgeCorner(HexCellMetrics cellMetrics, HexCellMetrics adjacentCellMetrics0, HexCellMetrics adjacentCellMetrics1) Parameters Type Name Description HexCellMetrics cellMetrics HexCellMetrics adjacentCellMetrics0 HexCellMetrics adjacentCellMetrics1 Returns Type Description byte CalculateUvCell(float2, HexCellMetrics) Declaration [BurstCompile] public float2 CalculateUvCell(float2 vertexPos, HexCellMetrics cellMetrics) Parameters Type Name Description float2 vertexPos HexCellMetrics cellMetrics Returns Type Description float2 CalculateUvCellCoord(float2, HexCellMetrics) Declaration [BurstCompile] public float2 CalculateUvCellCoord(float2 vertexPos, HexCellMetrics cellMetrics) Parameters Type Name Description float2 vertexPos HexCellMetrics cellMetrics Returns Type Description float2 CalculateUvChunk(float2, HexCellMetrics) Declaration [BurstCompile] public float2 CalculateUvChunk(float2 vertexPos, HexCellMetrics cellMetrics) Parameters Type Name Description float2 vertexPos HexCellMetrics cellMetrics Returns Type Description float2 CalculateUvTerrain(float2) Declaration [BurstCompile] public float2 CalculateUvTerrain(float2 vertexPos) Parameters Type Name Description float2 vertexPos Returns Type Description float2 DrawCell(HexCellMetrics) Declaration [BurstCompile] public bool DrawCell(HexCellMetrics cellMetrics) Parameters Type Name Description HexCellMetrics cellMetrics Returns Type Description bool DrawCellBridges(HexCellMetrics) Declaration [BurstCompile] public void DrawCellBridges(HexCellMetrics cellMetrics) Parameters Type Name Description HexCellMetrics cellMetrics DrawCellPlato(HexCellMetrics) Declaration [BurstCompile] public void DrawCellPlato(HexCellMetrics cellMetrics) Parameters Type Name Description HexCellMetrics cellMetrics Execute() Implement this method to perform work on a worker thread. Declaration public void Execute() GetAdjacentCellMetrics(HexCellMetrics, int, out int2) Declaration [BurstCompile] public HexCellMetrics GetAdjacentCellMetrics(HexCellMetrics cellMetrics, int sideIndex, out int2 adjCellCoordUnclamped) Parameters Type Name Description HexCellMetrics cellMetrics int sideIndex int2 adjCellCoordUnclamped Returns Type Description HexCellMetrics Implements Unity.Jobs.IJob Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Jobs.RaycastHexTerrain2Job.html": {
    "href": "api/Fwt.HexTerrains.Jobs.RaycastHexTerrain2Job.html",
    "title": "Struct RaycastHexTerrain2Job | Hex Terrains",
    "summary": "Struct RaycastHexTerrain2Job Job that raycasts against a hex terrain and calculates a raycast hit (if any). Job for raycasting against two HexSurfaces (like ground and water). Implements IJob Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.Jobs Assembly: fwt.hexterrains.dll Syntax [BurstCompile] public struct RaycastHexTerrain2Job : IJob Fields Heightmap1 First heightmap data (for instance, ground). Declaration [ReadOnly] public NativeArray<byte> Heightmap1 Field Value Type Description NativeArray<byte> Heightmap2 Second heightmap data (for instance, water). Declaration [ReadOnly] public NativeArray<byte> Heightmap2 Field Value Type Description NativeArray<byte> MaxDistance Maximum distance for the raycast. Declaration public float MaxDistance Field Value Type Description float Ray Ray used for the raycast. Declaration public Ray Ray Field Value Type Description Ray RayStep Step size for the raycast. Declaration public float RayStep Field Value Type Description float Result Heightmap data for the first hex terrain. Declaration [WriteOnly] public NativeArray<HexTerrainRaycastData> Result Field Value Type Description NativeArray<HexTerrainRaycastData> Settings Settings for the hex terrain. Declaration public HexTerrainSettings Settings Field Value Type Description HexTerrainSettings Methods Execute() Implement this method to perform work on a worker thread. Declaration public void Execute() Implements Unity.Jobs.IJob Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Jobs.RaycastHexTerrainJob.html": {
    "href": "api/Fwt.HexTerrains.Jobs.RaycastHexTerrainJob.html",
    "title": "Struct RaycastHexTerrainJob | Hex Terrains",
    "summary": "Struct RaycastHexTerrainJob Job that raycasts against a hex terrain and calculates a raycast hit (if any). Job for raycasting against a single HexSurface. Implements IJob Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.Jobs Assembly: fwt.hexterrains.dll Syntax [BurstCompile] public struct RaycastHexTerrainJob : IJob Fields Heightmap Heightmap data for the hex terrain. Declaration [ReadOnly] public NativeArray<byte> Heightmap Field Value Type Description NativeArray<byte> MaxDistance Maximum distance for the raycast. Declaration public float MaxDistance Field Value Type Description float Ray Ray used for the raycast. Declaration public Ray Ray Field Value Type Description Ray RayStep Step size for the raycast. Declaration public float RayStep Field Value Type Description float Result Result array to store the raycast hit data. Declaration [WriteOnly] public NativeArray<HexTerrainRaycastData> Result Field Value Type Description NativeArray<HexTerrainRaycastData> Settings Settings for the hex terrain. Declaration public HexTerrainSettings Settings Field Value Type Description HexTerrainSettings Methods Execute() Implement this method to perform work on a worker thread. Declaration public void Execute() Implements Unity.Jobs.IJob Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Jobs.html": {
    "href": "api/Fwt.HexTerrains.Jobs.html",
    "title": "Namespace Fwt.HexTerrains.Jobs | Hex Terrains",
    "summary": "Namespace Fwt.HexTerrains.Jobs Structs CalcChangedChunksJob Job that goes over Chunk Changes Log and adds into the ChunkDirtyLayer list flag that marks the chunk as dirty CalcChunksToCreateJob Fills a hash map with indexes of chunks that need to be created. Key is the terrain entity, value is the chunk index. CalcHexCellMetricsJob Job that calculates cell metrics CalcHexChunkMetricsJob Job that calculates chunk metrics CalcHexChunkVisibilityJob Job that calculates chunk visibility depending on camera frustum and chunk metrics. Saves a list of visible chunks and a two lists of chunks that became visible or invisible. CalculateBiomesColorMapJob Job that calculates a color map for a HexSurface using a biomes data (ground) HexSurfaceData. CalculateWaterColorMapJob Job to calculate the color map, meaning skips cells that are under the terrain surface OtherHeightmap CleanChunkChangesLogJob Job that cleans the ChunkChanges log list GenerateHexChunkMeshJob Job that generates a hex terrain chunk mesh GenerateHexChunkMeshWaterJob Job that generates a water hex terrain chunk mesh RaycastHexTerrain2Job Job that raycasts against a hex terrain and calculates a raycast hit (if any). Job for raycasting against two HexSurfaces (like ground and water). RaycastHexTerrainJob Job that raycasts against a hex terrain and calculates a raycast hit (if any). Job for raycasting against a single HexSurface."
  },
  "api/Fwt.HexTerrains.Samples.CreateNewSampleTerrainUserToolState.html": {
    "href": "api/Fwt.HexTerrains.Samples.CreateNewSampleTerrainUserToolState.html",
    "title": "Class CreateNewSampleTerrainUserToolState | Hex Terrains",
    "summary": "Class CreateNewSampleTerrainUserToolState State for creating a new terrain using the CreateNewTerrainUserTool. Inheritance object SmState UserToolState CreateNewTerrainUserToolStateBase<CreateNewTerrainScreen, CreateNewTerrainCallbackDataSource> CreateNewSampleTerrainUserToolState Implements ISmState Inherited Members CreateNewTerrainUserToolStateBase<CreateNewTerrainScreen, CreateNewTerrainCallbackDataSource>.UserToolType CreateNewTerrainUserToolStateBase<CreateNewTerrainScreen, CreateNewTerrainCallbackDataSource>.Screen CreateNewTerrainUserToolStateBase<CreateNewTerrainScreen, CreateNewTerrainCallbackDataSource>.CallbackDataSource CreateNewTerrainUserToolStateBase<CreateNewTerrainScreen, CreateNewTerrainCallbackDataSource>.TerrainPrefab CreateNewTerrainUserToolStateBase<CreateNewTerrainScreen, CreateNewTerrainCallbackDataSource>.ParentStateMachine CreateNewTerrainUserToolStateBase<CreateNewTerrainScreen, CreateNewTerrainCallbackDataSource>.PrepareToRun() CreateNewTerrainUserToolStateBase<CreateNewTerrainScreen, CreateNewTerrainCallbackDataSource>.PrepareToStop() CreateNewTerrainUserToolStateBase<CreateNewTerrainScreen, CreateNewTerrainCallbackDataSource>.HideUIScreen() CreateNewTerrainUserToolStateBase<CreateNewTerrainScreen, CreateNewTerrainCallbackDataSource>.ShowUIScreen() CreateNewTerrainUserToolStateBase<CreateNewTerrainScreen, CreateNewTerrainCallbackDataSource>.GetUIScreen() CreateNewTerrainUserToolStateBase<CreateNewTerrainScreen, CreateNewTerrainCallbackDataSource>.GetCallbackDataSource(CreateNewTerrainScreen) CreateNewTerrainUserToolStateBase<CreateNewTerrainScreen, CreateNewTerrainCallbackDataSource>.CreateScreenCallback() CreateNewTerrainUserToolStateBase<CreateNewTerrainScreen, CreateNewTerrainCallbackDataSource>.CreateTerrain(Entity) CreateNewTerrainUserToolStateBase<CreateNewTerrainScreen, CreateNewTerrainCallbackDataSource>.CancelResizing() UserToolState.Settings UserToolState.IsSubstatesVisible UserToolState.SubStateMachine UserToolState.UserToolType UserToolState.UserToolAPI UserToolState.HasSubtools UserToolState.IsChangeViewMode UserToolState.RequiredViewMode UserToolState.OriginalViewMode UserToolState.PrepareToRun() UserToolState.PrepareToStop() UserToolState.Tick() UserToolState.ShowSettingsScreen<TViewData, TScreen>(TViewData) UserToolState.GetUIScreen<TScreen>() UserToolState.HideSettingsScreen<TScreen>() UserToolState.SetupPlanetCursor(bool, int) UserToolState.SetupPlanetCursor(bool, int, Color32) UserToolState.SetupPlanetCursor(bool, int, Color32, bool) UserToolState.SetupPlanetCursor(bool) UserToolState.TrySetViewMode() UserToolState.TryRestoreViewMode() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Samples Assembly: FwtHexTerrainSamples.dll Syntax public class CreateNewSampleTerrainUserToolState : CreateNewTerrainUserToolStateBase<CreateNewTerrainScreen, CreateNewTerrainCallbackDataSource>, ISmState Constructors View Source CreateNewSampleTerrainUserToolState(IUserToolAPI, UserToolStateMachine, Entity) Declaration public CreateNewSampleTerrainUserToolState(IUserToolAPI userToolAPI, UserToolStateMachine parentStateMachine, Entity terrainPrefab) Parameters Type Name Description IUserToolAPI userToolAPI UserToolStateMachine parentStateMachine Entity terrainPrefab Implements ISmState Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Samples.Data.CreateSamplesUserToolsDataRequest.html": {
    "href": "api/Fwt.HexTerrains.Samples.Data.CreateSamplesUserToolsDataRequest.html",
    "title": "Struct CreateSamplesUserToolsDataRequest | Hex Terrains",
    "summary": "Struct CreateSamplesUserToolsDataRequest Request to create a new sample UserTools. Implements IComponentData IQueryTypeParameter Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.Samples.Data Assembly: FwtHexTerrainSamples.dll Syntax public struct CreateSamplesUserToolsDataRequest : IComponentData, IQueryTypeParameter Fields View Source Heightmap The heightmap texture to use for ApplyHeightmap user tool. Declaration public UnityObjectRef<Texture2D> Heightmap Field Value Type Description UnityObjectRef<Texture2D> View Source TerrainEntity The terrain entity to create the UserTools for. Declaration public Entity TerrainEntity Field Value Type Description Entity View Source TerrainPrefab The terrain prefab to use when user requests to create a new terrain. Declaration public Entity TerrainPrefab Field Value Type Description Entity Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Samples.Data.SamplesUserToolStateMachine.html": {
    "href": "api/Fwt.HexTerrains.Samples.Data.SamplesUserToolStateMachine.html",
    "title": "Class SamplesUserToolStateMachine | Hex Terrains",
    "summary": "Class SamplesUserToolStateMachine Samples project's state machine for the user tools. Inheritance object SmState SmStateMachine UserToolStateMachine SamplesUserToolStateMachine Implements ISmState IStateMachine IDisposable Inherited Members UserToolStateMachine.StatesByType UserToolStateMachine.UserToolAPI UserToolStateMachine.AddState(ISmState) UserToolStateMachine.GetStateByUserToolType(int) UserToolStateMachine.GetState<TState>(int) UserToolStateMachine.SwitchStateByUserToolType(int) UserToolStateMachine.SwitchState<TState>(int) UserToolStateMachine.Dispose() SmStateMachine.States SmStateMachine.SortedStates SmStateMachine.CurrentState SmStateMachine.AddState<TState>(TState) SmStateMachine.SwitchState<TState>() SmStateMachine.SwitchState<TState, TContext>(TContext) SmStateMachine.SwitchState(int) SmStateMachine.SwitchState<TState, TContext>(TState, TContext) SmStateMachine.SwitchState(ISmState) SmStateMachine.GetState<TState>(Type) SmStateMachine.GetState(int) SmStateMachine.GetState(Type) SmStateMachine.Tick() SmStateMachine.PrepareToRun() SmStateMachine.PrepareToStop() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Samples.Data Assembly: FwtHexTerrainSamples.dll Syntax public class SamplesUserToolStateMachine : UserToolStateMachine, ISmState, IStateMachine, IDisposable Constructors View Source SamplesUserToolStateMachine(IUserToolAPI, Entity) Constructor for the SamplesUserToolStateMachine. Creates and initializes all the states inside. Declaration public SamplesUserToolStateMachine(IUserToolAPI userToolAPI, Entity terrainPrefab) Parameters Type Name Description IUserToolAPI userToolAPI API object that allows to get/set data from/to the terrain and send requests to the UI system Entity terrainPrefab Terrain prefab to use when user requests to create a new terrain Implements ISmState IStateMachine IDisposable Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Samples.Data.SamplesUserToolsData.html": {
    "href": "api/Fwt.HexTerrains.Samples.Data.SamplesUserToolsData.html",
    "title": "Class SamplesUserToolsData | Hex Terrains",
    "summary": "Class SamplesUserToolsData Samples project implementation of the UserToolsData Inheritance object UserToolsData SamplesUserToolsData Implements IDisposable IComponentData IQueryTypeParameter Inherited Members UserToolsData.StateMachine UserToolsData.Init(IUserToolAPI, Entity) UserToolsData.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Samples.Data Assembly: FwtHexTerrainSamples.dll Syntax public class SamplesUserToolsData : UserToolsData, IDisposable, IComponentData, IQueryTypeParameter Methods View Source CreateStateMachine(IUserToolAPI, Entity) Creates the state machine for the user tools Declaration protected override UserToolStateMachine CreateStateMachine(IUserToolAPI userToolAPI, Entity terrainPrefab) Parameters Type Name Description IUserToolAPI userToolAPI API object that allows to get/set data to/from terrain as well as send commands to the UI system Entity terrainPrefab prefab of the terrain that is used when user requests to create a new terrain Returns Type Description UserToolStateMachine Overrides UserToolsData.CreateStateMachine(IUserToolAPI, Entity) Implements IDisposable Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Samples.Data.html": {
    "href": "api/Fwt.HexTerrains.Samples.Data.html",
    "title": "Namespace Fwt.HexTerrains.Samples.Data | Hex Terrains",
    "summary": "Namespace Fwt.HexTerrains.Samples.Data Classes SamplesUserToolStateMachine Samples project's state machine for the user tools. SamplesUserToolsData Samples project implementation of the UserToolsData Structs CreateSamplesUserToolsDataRequest Request to create a new sample UserTools."
  },
  "api/Fwt.HexTerrains.Samples.HexTerrainCursorView.html": {
    "href": "api/Fwt.HexTerrains.Samples.HexTerrainCursorView.html",
    "title": "Class HexTerrainCursorView | Hex Terrains",
    "summary": "Class HexTerrainCursorView This class is used to visualize the brush size and rotation in the scene view. Uses a Projector to project the brush material on the terrain. Inheritance object Object Component Behaviour MonoBehaviour HexTerrainCursorViewBase HexTerrainCursorView Inherited Members HexTerrainCursorViewBase.SizeMultiplier HexTerrainCursorViewBase.BaseRotationAngle HexTerrainCursorViewBase._brushSize HexTerrainCursorViewBase._brushOpacity HexTerrainCursorViewBase._isResizable HexTerrainCursorViewBase._brushColor HexTerrainCursorViewBase._terrainSettings HexTerrainCursorViewBase.SetBrushMaterial(Material) HexTerrainCursorViewBase.GetBrushSize() HexTerrainCursorViewBase.GetBrushColor() HexTerrainCursorViewBase.SetBrushColor(Color32) HexTerrainCursorViewBase.GetBrushOpacity() HexTerrainCursorViewBase.SetBrushOpacity(float) HexTerrainCursorViewBase.SetTerrainSettings(HexTerrainSettings) HexTerrainCursorViewBase.GetIsResizable() HexTerrainCursorViewBase.SetIsResizable(bool) MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.Samples Assembly: FwtHexTerrainSamplesHDRP.dll Syntax public class HexTerrainCursorView : HexTerrainCursorViewBase Fields View Source Projector The projector used to project the brush material on the terrain. Declaration public DecalProjector Projector Field Value Type Description DecalProjector Methods View Source GetBrushMaterial() Returns the brush material used by the projector. Declaration public override Material GetBrushMaterial() Returns Type Description Material Overrides HexTerrainCursorViewBase.GetBrushMaterial() View Source SetBrushSize(int) Sets the size of brush so it covers the needed area of cells. Declaration public override bool SetBrushSize(int size) Parameters Type Name Description int size size of the brush in cells Returns Type Description bool True if value was changed and set, otherwise - false Overrides HexTerrainCursorViewBase.SetBrushSize(int) Extension Methods Extensions_UnityObject.SmartDestroy<TObject>(TObject) Extensions_UnityObject.SmartDisableGameObject<TObject>(TObject) Extensions_UnityObject.SmartEnableGameObject<TObject>(TObject) HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Samples.LoadTerrainUserToolState.html": {
    "href": "api/Fwt.HexTerrains.Samples.LoadTerrainUserToolState.html",
    "title": "Class LoadTerrainUserToolState | Hex Terrains",
    "summary": "Class LoadTerrainUserToolState State for loading terrain using the LoadTerrainUserTool. Inheritance object SmState UserToolState LoadTerrainUserToolStateBase<LoadGameScreen, LoadTerrainCallbackDataSource> LoadTerrainUserToolState Implements ISmState Inherited Members LoadTerrainUserToolStateBase<LoadGameScreen, LoadTerrainCallbackDataSource>.UserToolType LoadTerrainUserToolStateBase<LoadGameScreen, LoadTerrainCallbackDataSource>.Screen LoadTerrainUserToolStateBase<LoadGameScreen, LoadTerrainCallbackDataSource>.CallbackDataSource LoadTerrainUserToolStateBase<LoadGameScreen, LoadTerrainCallbackDataSource>.ParentStateMachine LoadTerrainUserToolStateBase<LoadGameScreen, LoadTerrainCallbackDataSource>.PrepareToRun() LoadTerrainUserToolStateBase<LoadGameScreen, LoadTerrainCallbackDataSource>.PrepareToStop() LoadTerrainUserToolStateBase<LoadGameScreen, LoadTerrainCallbackDataSource>.HideUIScreen() LoadTerrainUserToolStateBase<LoadGameScreen, LoadTerrainCallbackDataSource>.ShowUIScreen() LoadTerrainUserToolStateBase<LoadGameScreen, LoadTerrainCallbackDataSource>.GetUIScreen() LoadTerrainUserToolStateBase<LoadGameScreen, LoadTerrainCallbackDataSource>.GetCallbackDataSource() LoadTerrainUserToolStateBase<LoadGameScreen, LoadTerrainCallbackDataSource>.CreateScreenCallback() LoadTerrainUserToolStateBase<LoadGameScreen, LoadTerrainCallbackDataSource>.LoadTerrain(string) LoadTerrainUserToolStateBase<LoadGameScreen, LoadTerrainCallbackDataSource>.CancelLoading() UserToolState.Settings UserToolState.IsSubstatesVisible UserToolState.SubStateMachine UserToolState.UserToolType UserToolState.UserToolAPI UserToolState.HasSubtools UserToolState.IsChangeViewMode UserToolState.RequiredViewMode UserToolState.OriginalViewMode UserToolState.PrepareToRun() UserToolState.PrepareToStop() UserToolState.Tick() UserToolState.ShowSettingsScreen<TViewData, TScreen>(TViewData) UserToolState.GetUIScreen<TScreen>() UserToolState.HideSettingsScreen<TScreen>() UserToolState.SetupPlanetCursor(bool, int) UserToolState.SetupPlanetCursor(bool, int, Color32) UserToolState.SetupPlanetCursor(bool, int, Color32, bool) UserToolState.SetupPlanetCursor(bool) UserToolState.TrySetViewMode() UserToolState.TryRestoreViewMode() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Samples Assembly: FwtHexTerrainSamples.dll Syntax public class LoadTerrainUserToolState : LoadTerrainUserToolStateBase<LoadGameScreen, LoadTerrainCallbackDataSource>, ISmState Constructors View Source LoadTerrainUserToolState(IUserToolAPI, UserToolStateMachine) Declaration public LoadTerrainUserToolState(IUserToolAPI userToolAPI, UserToolStateMachine parentStateMachine) Parameters Type Name Description IUserToolAPI userToolAPI UserToolStateMachine parentStateMachine Implements ISmState Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Samples.ResizeTerrainUserToolState.html": {
    "href": "api/Fwt.HexTerrains.Samples.ResizeTerrainUserToolState.html",
    "title": "Class ResizeTerrainUserToolState | Hex Terrains",
    "summary": "Class ResizeTerrainUserToolState State for the Resize Terrain User Tool. Inheritance object SmState UserToolState ResizeTerrainUserToolStateBase<ResizeTerrainScreen, ResizeTerrainCallbackDataSource> ResizeTerrainUserToolState Implements ISmState Inherited Members ResizeTerrainUserToolStateBase<ResizeTerrainScreen, ResizeTerrainCallbackDataSource>.UserToolType ResizeTerrainUserToolStateBase<ResizeTerrainScreen, ResizeTerrainCallbackDataSource>.Screen ResizeTerrainUserToolStateBase<ResizeTerrainScreen, ResizeTerrainCallbackDataSource>.CallbackDataSource ResizeTerrainUserToolStateBase<ResizeTerrainScreen, ResizeTerrainCallbackDataSource>.ParentStateMachine ResizeTerrainUserToolStateBase<ResizeTerrainScreen, ResizeTerrainCallbackDataSource>.PrepareToRun() ResizeTerrainUserToolStateBase<ResizeTerrainScreen, ResizeTerrainCallbackDataSource>.PrepareToStop() ResizeTerrainUserToolStateBase<ResizeTerrainScreen, ResizeTerrainCallbackDataSource>.HideUIScreen() ResizeTerrainUserToolStateBase<ResizeTerrainScreen, ResizeTerrainCallbackDataSource>.ShowUIScreen() ResizeTerrainUserToolStateBase<ResizeTerrainScreen, ResizeTerrainCallbackDataSource>.GetUIScreen() ResizeTerrainUserToolStateBase<ResizeTerrainScreen, ResizeTerrainCallbackDataSource>.GetCallbackDataSource() ResizeTerrainUserToolStateBase<ResizeTerrainScreen, ResizeTerrainCallbackDataSource>.CreateScreenCallback() ResizeTerrainUserToolStateBase<ResizeTerrainScreen, ResizeTerrainCallbackDataSource>.ResizeTerrain(int2) ResizeTerrainUserToolStateBase<ResizeTerrainScreen, ResizeTerrainCallbackDataSource>.CancelResizing() UserToolState.Settings UserToolState.IsSubstatesVisible UserToolState.SubStateMachine UserToolState.UserToolType UserToolState.UserToolAPI UserToolState.HasSubtools UserToolState.IsChangeViewMode UserToolState.RequiredViewMode UserToolState.OriginalViewMode UserToolState.PrepareToRun() UserToolState.PrepareToStop() UserToolState.Tick() UserToolState.ShowSettingsScreen<TViewData, TScreen>(TViewData) UserToolState.GetUIScreen<TScreen>() UserToolState.HideSettingsScreen<TScreen>() UserToolState.SetupPlanetCursor(bool, int) UserToolState.SetupPlanetCursor(bool, int, Color32) UserToolState.SetupPlanetCursor(bool, int, Color32, bool) UserToolState.SetupPlanetCursor(bool) UserToolState.TrySetViewMode() UserToolState.TryRestoreViewMode() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Samples Assembly: FwtHexTerrainSamples.dll Syntax public class ResizeTerrainUserToolState : ResizeTerrainUserToolStateBase<ResizeTerrainScreen, ResizeTerrainCallbackDataSource>, ISmState Constructors View Source ResizeTerrainUserToolState(IUserToolAPI, UserToolStateMachine) Declaration public ResizeTerrainUserToolState(IUserToolAPI userToolAPI, UserToolStateMachine parentStateMachine) Parameters Type Name Description IUserToolAPI userToolAPI UserToolStateMachine parentStateMachine Implements ISmState Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Samples.SamplesCameraControllerComponent.html": {
    "href": "api/Fwt.HexTerrains.Samples.SamplesCameraControllerComponent.html",
    "title": "Class SamplesCameraControllerComponent | Hex Terrains",
    "summary": "Class SamplesCameraControllerComponent A simple camera controller that allows zooming in and out using the mouse scroll wheel and moving the camera using the WASD keys. Prevents moving out of terrain bounds. If terrain's edges are connected, teleports to the opposite side of the terrain if the camera moves past the terrain edge. Inheritance object Object Component Behaviour MonoBehaviour CameraControllerComponentBase SamplesCameraControllerComponent Inherited Members CameraControllerComponentBase.AccelerationKey CameraControllerComponentBase.ZoomSpeed CameraControllerComponentBase.AccelerationMultiplier CameraControllerComponentBase.CurrentZoom CameraControllerComponentBase.MinZoomOffset CameraControllerComponentBase.MaxZoomOffset CameraControllerComponentBase.CurrentZoomOffset MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.Samples Assembly: FwtHexTerrainSamples.dll Syntax public class SamplesCameraControllerComponent : CameraControllerComponentBase Fields View Source Camera The camera to control. Declaration public Camera Camera Field Value Type Description Camera View Source PreventZoomKeys If any of these keys are pressed, zooming is ignored. Declaration public List<KeyCode> PreventZoomKeys Field Value Type Description List<KeyCode> View Source TargetTransform The transform of the target object to follow. Declaration public Transform TargetTransform Field Value Type Description Transform Methods View Source SetTarget(Transform) Sets the target transform to follow. Declaration public override void SetTarget(Transform targetTransform) Parameters Type Name Description Transform targetTransform Target transform to follow Overrides CameraControllerComponentBase.SetTarget(Transform) View Source Update() Updates the camera position based on the target transform and zoom level. Declaration public virtual void Update() View Source UpdatePosition() Updates the camera position based on the target transform and zoom level. Declaration public override void UpdatePosition() Overrides CameraControllerComponentBase.UpdatePosition() Extension Methods Extensions_UnityObject.SmartDestroy<TObject>(TObject) Extensions_UnityObject.SmartDisableGameObject<TObject>(TObject) Extensions_UnityObject.SmartEnableGameObject<TObject>(TObject) HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Samples.SamplesUserToolDataAuthoring.html": {
    "href": "api/Fwt.HexTerrains.Samples.SamplesUserToolDataAuthoring.html",
    "title": "Class SamplesUserToolDataAuthoring | Hex Terrains",
    "summary": "Class SamplesUserToolDataAuthoring Authoring component for the SamplesUserToolData. This component is used to create a SamplesUserToolData entity in the ECS world. Inheritance object Object Component Behaviour MonoBehaviour UserToolDataAuthoring SamplesUserToolDataAuthoring Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.Samples Assembly: FwtHexTerrainSamples.dll Syntax public class SamplesUserToolDataAuthoring : UserToolDataAuthoring Fields View Source Heightmap Heightmap texture used by ApplyHeightmapUserTool. Declaration [Tooltip(\"Heightmap texture used by ApplyHeightmapUserTool.\")] public Texture2D Heightmap Field Value Type Description Texture2D View Source TerrainAuthoring Reference to the HexTerrainAuthoring component. Declaration [Tooltip(\"Reference to the HexTerrainAuthoring component.\")] public HexTerrainAuthoring TerrainAuthoring Field Value Type Description HexTerrainAuthoring View Source TerrainPrefab Reference to the HexTerrain prefab (used by CreateNewTerrainUserTool). Declaration [Tooltip(\"Reference to the HexTerrain prefab (used by CreateNewTerrainUserTool).\")] public HexTerrainAuthoring TerrainPrefab Field Value Type Description HexTerrainAuthoring Extension Methods Extensions_UnityObject.SmartDestroy<TObject>(TObject) Extensions_UnityObject.SmartDisableGameObject<TObject>(TObject) Extensions_UnityObject.SmartEnableGameObject<TObject>(TObject) HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Samples.SamplesUserToolDataBaker.html": {
    "href": "api/Fwt.HexTerrains.Samples.SamplesUserToolDataBaker.html",
    "title": "Class SamplesUserToolDataBaker | Hex Terrains",
    "summary": "Class SamplesUserToolDataBaker Baker for the SamplesUserToolDataAuthoring component. Inheritance object IBaker Baker<SamplesUserToolDataAuthoring> UserToolDataBaker<SamplesUserToolDataAuthoring, CreateSamplesUserToolsDataRequest> SamplesUserToolDataBaker Inherited Members UserToolDataBaker<SamplesUserToolDataAuthoring, CreateSamplesUserToolsDataRequest>.Bake(SamplesUserToolDataAuthoring) UserToolDataBaker<SamplesUserToolDataAuthoring, CreateSamplesUserToolsDataRequest>.GetCreateUserToolDataRequest(SamplesUserToolDataAuthoring) Baker<SamplesUserToolDataAuthoring>.Bake(SamplesUserToolDataAuthoring) IBaker.GetSceneGUID() IBaker.GetComponent<T>() IBaker.GetComponent<T>(Component) IBaker.GetComponent<T>(GameObject) IBaker.GetComponents<T>(List<T>) IBaker.GetComponents<T>(Component, List<T>) IBaker.GetComponents<T>(GameObject, List<T>) IBaker.GetComponents<T>() IBaker.GetComponents<T>(Component) IBaker.GetComponents<T>(GameObject) IBaker.GetComponentInParent<T>() IBaker.GetComponentInParent<T>(Component) IBaker.GetComponentInParent<T>(GameObject) IBaker.GetComponentsInParent<T>(List<T>) IBaker.GetComponentsInParent<T>(Component, List<T>) IBaker.GetComponentsInParent<T>(GameObject, List<T>) IBaker.GetComponentsInParent<T>() IBaker.GetComponentsInParent<T>(Component) IBaker.GetComponentsInParent<T>(GameObject) IBaker.GetComponentInChildren<T>() IBaker.GetComponentInChildren<T>(Component) IBaker.GetComponentInChildren<T>(GameObject) IBaker.GetComponentsInChildren<T>(List<T>) IBaker.GetComponentsInChildren<T>(Component, List<T>) IBaker.GetComponentsInChildren<T>(GameObject, List<T>) IBaker.GetComponentsInChildren<T>() IBaker.GetComponentsInChildren<T>(Component) IBaker.GetComponentsInChildren<T>(GameObject) IBaker.GetParent() IBaker.GetParent(Component) IBaker.GetParent(GameObject) IBaker.GetParents() IBaker.GetParents(Component) IBaker.GetParents(GameObject) IBaker.GetParents(List<GameObject>) IBaker.GetParents(Component, List<GameObject>) IBaker.GetParents(GameObject, List<GameObject>) IBaker.GetChild(int) IBaker.GetChild(Component, int) IBaker.GetChild(GameObject, int) IBaker.GetChildren(bool) IBaker.GetChildren(Component, bool) IBaker.GetChildren(GameObject, bool) IBaker.GetChildren(List<GameObject>, bool) IBaker.GetChildren(Component, List<GameObject>, bool) IBaker.GetChildren(GameObject, List<GameObject>, bool) IBaker.GetChildCount() IBaker.GetChildCount(Component) IBaker.GetChildCount(GameObject) IBaker.GetName() IBaker.GetName(Component) IBaker.GetName(GameObject) IBaker.GetLayer() IBaker.GetLayer(Component) IBaker.GetLayer(GameObject) IBaker.GetTag() IBaker.GetTag(Component) IBaker.GetTag(GameObject) IBaker.GetEntity() IBaker.GetEntity(GameObject) IBaker.GetEntity(Component) IBaker.GetEntity(TransformUsageFlags) IBaker.GetEntity(GameObject, TransformUsageFlags) IBaker.GetEntity(Component, TransformUsageFlags) IBaker.GetEntityWithoutDependency() IBaker.IsActive() IBaker.IsActive(Component) IBaker.IsActive(GameObject) IBaker.IsActiveAndEnabled() IBaker.IsActiveAndEnabled(Component) IBaker.IsStatic() IBaker.IsStatic(Component) IBaker.IsStatic(GameObject) IBaker.IsClient() IBaker.IsServer() IBaker.DependsOn<T>(T) IBaker.DependsOnComponentInParent<T>() IBaker.DependsOnComponentInParent<T>(Component) IBaker.DependsOnComponentInParent<T>(GameObject) IBaker.DependsOnComponentsInParent<T>() IBaker.DependsOnComponentsInParent<T>(Component) IBaker.DependsOnComponentsInParent<T>(GameObject) IBaker.DependsOnComponentInChildren<T>() IBaker.DependsOnComponentInChildren<T>(Component) IBaker.DependsOnComponentInChildren<T>(GameObject) IBaker.DependsOnComponentsInChildren<T>() IBaker.DependsOnComponentsInChildren<T>(GameObject) IBaker.DependsOnComponentsInChildren<T>(Component) IBaker.DependsOnLightBaking() IBaker.AddBlobAsset<T>(ref BlobAssetReference<T>, out Hash128) IBaker.AddBlobAssetWithCustomHash<T>(ref BlobAssetReference<T>, Hash128) IBaker.TryGetBlobAssetReference<T>(Hash128, out BlobAssetReference<T>) IBaker.AddComponent<T>() IBaker.AddComponent<T>(in T) IBaker.AddComponent<T>(Entity) IBaker.AddComponent<T>(Entity, in T) IBaker.AddComponent(ComponentType) IBaker.AddComponent(Entity, ComponentType) IBaker.AddComponent(in ComponentTypeSet) IBaker.AddComponent(Entity, in ComponentTypeSet) IBaker.AddComponentObject<T>(T) IBaker.AddComponentObject<T>(Entity, T) IBaker.AddSharedComponentManaged<T>(T) IBaker.AddSharedComponentManaged<T>(Entity, T) IBaker.AddSharedComponent<T>(T) IBaker.AddSharedComponent<T>(Entity, T) IBaker.AddBuffer<T>() IBaker.AddBuffer<T>(Entity) IBaker.SetComponent<T>(Entity, in T) IBaker.SetComponentEnabled<T>(Entity, bool) IBaker.SetComponentEnabled<T>(bool) IBaker.SetSharedComponentManaged<T>(Entity, in T) IBaker.SetSharedComponent<T>(Entity, in T) IBaker.SetBuffer<T>() IBaker.SetBuffer<T>(Entity) IBaker.AppendToBuffer<T>(T) IBaker.AppendToBuffer<T>(Entity, T) IBaker.CreateAdditionalEntity() IBaker.CreateAdditionalEntity(TransformUsageFlags, bool, string) IBaker.CreateAdditionalEntities(NativeArray<Entity>, TransformUsageFlags, bool) IBaker.RegisterPrefabForBaking(GameObject) IBaker.AddTransformUsageFlags(TransformUsageFlags) IBaker.AddTransformUsageFlags(Entity, TransformUsageFlags) IBaker.IsBakingForEditor() IBaker.GetDotsSettings() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Samples Assembly: FwtHexTerrainSamples.dll Syntax public class SamplesUserToolDataBaker : UserToolDataBaker<SamplesUserToolDataAuthoring, CreateSamplesUserToolsDataRequest> Methods View Source GetCreateUserToolDataRequest(SamplesUserToolDataAuthoring) Declaration protected override CreateSamplesUserToolsDataRequest GetCreateUserToolDataRequest(SamplesUserToolDataAuthoring authoring) Parameters Type Name Description SamplesUserToolDataAuthoring authoring Returns Type Description CreateSamplesUserToolsDataRequest Overrides UserToolDataBaker<SamplesUserToolDataAuthoring, CreateSamplesUserToolsDataRequest>.GetCreateUserToolDataRequest(SamplesUserToolDataAuthoring) Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Samples.SaveTerrainUserToolState.html": {
    "href": "api/Fwt.HexTerrains.Samples.SaveTerrainUserToolState.html",
    "title": "Class SaveTerrainUserToolState | Hex Terrains",
    "summary": "Class SaveTerrainUserToolState State for saving terrain using the user tool. Inheritance object SmState UserToolState SaveTerrainUserToolStateBase<SaveGameScreen, SaveTerrainCallbackDataSource> SaveTerrainUserToolState Implements ISmState Inherited Members SaveTerrainUserToolStateBase<SaveGameScreen, SaveTerrainCallbackDataSource>.UserToolType SaveTerrainUserToolStateBase<SaveGameScreen, SaveTerrainCallbackDataSource>.Screen SaveTerrainUserToolStateBase<SaveGameScreen, SaveTerrainCallbackDataSource>.CallbackDataSource SaveTerrainUserToolStateBase<SaveGameScreen, SaveTerrainCallbackDataSource>.ParentStateMachine SaveTerrainUserToolStateBase<SaveGameScreen, SaveTerrainCallbackDataSource>.PrepareToRun() SaveTerrainUserToolStateBase<SaveGameScreen, SaveTerrainCallbackDataSource>.PrepareToStop() SaveTerrainUserToolStateBase<SaveGameScreen, SaveTerrainCallbackDataSource>.HideUIScreen() SaveTerrainUserToolStateBase<SaveGameScreen, SaveTerrainCallbackDataSource>.ShowUIScreen() SaveTerrainUserToolStateBase<SaveGameScreen, SaveTerrainCallbackDataSource>.GetUIScreen() SaveTerrainUserToolStateBase<SaveGameScreen, SaveTerrainCallbackDataSource>.GetCallbackDataSource() SaveTerrainUserToolStateBase<SaveGameScreen, SaveTerrainCallbackDataSource>.CreateScreenCallback() SaveTerrainUserToolStateBase<SaveGameScreen, SaveTerrainCallbackDataSource>.SaveTerrain(string) SaveTerrainUserToolStateBase<SaveGameScreen, SaveTerrainCallbackDataSource>.CancelLoading() UserToolState.Settings UserToolState.IsSubstatesVisible UserToolState.SubStateMachine UserToolState.UserToolType UserToolState.UserToolAPI UserToolState.HasSubtools UserToolState.IsChangeViewMode UserToolState.RequiredViewMode UserToolState.OriginalViewMode UserToolState.PrepareToRun() UserToolState.PrepareToStop() UserToolState.Tick() UserToolState.ShowSettingsScreen<TViewData, TScreen>(TViewData) UserToolState.GetUIScreen<TScreen>() UserToolState.HideSettingsScreen<TScreen>() UserToolState.SetupPlanetCursor(bool, int) UserToolState.SetupPlanetCursor(bool, int, Color32) UserToolState.SetupPlanetCursor(bool, int, Color32, bool) UserToolState.SetupPlanetCursor(bool) UserToolState.TrySetViewMode() UserToolState.TryRestoreViewMode() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Samples Assembly: FwtHexTerrainSamples.dll Syntax public class SaveTerrainUserToolState : SaveTerrainUserToolStateBase<SaveGameScreen, SaveTerrainCallbackDataSource>, ISmState Constructors View Source SaveTerrainUserToolState(IUserToolAPI, UserToolStateMachine) Declaration public SaveTerrainUserToolState(IUserToolAPI userToolAPI, UserToolStateMachine parentStateMachine) Parameters Type Name Description IUserToolAPI userToolAPI UserToolStateMachine parentStateMachine Implements ISmState Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Samples.Scripts.UI.UserToolParameterElement.UxmlSerializedData.html": {
    "href": "api/Fwt.HexTerrains.Samples.Scripts.UI.UserToolParameterElement.UxmlSerializedData.html",
    "title": "Class UserToolParameterElement.UxmlSerializedData | Hex Terrains",
    "summary": "Class UserToolParameterElement.UxmlSerializedData Inheritance object UxmlSerializedData VisualElement.UxmlSerializedData TemplateSelectorElement.UxmlSerializedData UserToolParameterElement.UxmlSerializedData Inherited Members TemplateSelectorElement.UxmlSerializedData.Register() TemplateSelectorElement.UxmlSerializedData.Deserialize(object) UxmlSerializedData.ShouldWriteAttributeValue(UxmlSerializedData.UxmlAttributeFlags) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Samples.Scripts.UI Assembly: FwtHexTerrainSamples.dll Syntax [Serializable] public class UserToolParameterElement.UxmlSerializedData : TemplateSelectorElement.UxmlSerializedData Methods CreateInstance() <p> Returns an instance of the declaring element. Declaration public override object CreateInstance() Returns Type Description object The new instance of the declaring element. Overrides UnityEngine.UIElements.VisualElement.UxmlSerializedData.CreateInstance() Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Samples.Scripts.UI.UserToolParameterElement.html": {
    "href": "api/Fwt.HexTerrains.Samples.Scripts.UI.UserToolParameterElement.html",
    "title": "Class UserToolParameterElement | Hex Terrains",
    "summary": "Class UserToolParameterElement UI Toolkit visual element that takes a visual element to display a provided parameter by parameter object type. Inheritance object CallbackEventHandler Focusable VisualElement TemplateSelectorElement UserToolParameterElement Implements IEventHandler IResolvedStyle ITransform ITransitionAnimations IExperimentalFeatures IVisualElementScheduler IRefreshableView ICommitChanges Inherited Members TemplateSelectorElement._templateSelector TemplateSelectorElement.TemplateSelector TemplateSelectorElement._templateSelectorAsset TemplateSelectorElement.TemplateSelectorAsset TemplateSelectorElement._view TemplateSelectorElement._viewTemplate TemplateSelectorElement.RefreshView() TemplateSelectorElement.CommitChanges() TemplateSelectorElement.OnAttachToPanel(AttachToPanelEvent) TemplateSelectorElement.GetDataSource() TemplateSelectorElement.OnTemplateSelectorChange() TemplateSelectorElement.OnTemplateSelectorAssetChange() TemplateSelectorElement.CreateView(VisualTreeAsset) TemplateSelectorElement.DestroyView() TemplateSelectorElement.UpdateViewData(object) TemplateSelectorElement.ValidateView(object) TemplateSelectorElement.GetDataTemplate(object) TemplateSelectorElement.GetTemplateSelector() VisualElement.disabledUssClassName VisualElement.Focus() VisualElement.SendEvent(EventBase) VisualElement.SetEnabledFromHierarchy(bool) VisualElement.SetEnabled(bool) VisualElement.MarkDirtyRepaint() VisualElement.ContainsPoint(Vector2) VisualElement.Overlaps(Rect) VisualElement.DoMeasure(float, VisualElement.MeasureMode, float, VisualElement.MeasureMode) VisualElement.ToString() VisualElement.GetClasses() VisualElement.ClearClassList() VisualElement.AddToClassList(string) VisualElement.RemoveFromClassList(string) VisualElement.ToggleInClassList(string) VisualElement.EnableInClassList(string, bool) VisualElement.ClassListContains(string) VisualElement.FindAncestorUserData() VisualElement.SetBinding(BindingId, Binding) VisualElement.GetBinding(BindingId) VisualElement.TryGetBinding(BindingId, out Binding) VisualElement.GetBindingInfos() VisualElement.HasBinding(BindingId) VisualElement.ClearBinding(BindingId) VisualElement.ClearBindings() VisualElement.GetHierarchicalDataSourceContext() VisualElement.GetDataSourceContext(BindingId) VisualElement.TryGetDataSourceContext(BindingId, out DataSourceContext) VisualElement.TryGetLastBindingToUIResult(in BindingId, out BindingResult) VisualElement.TryGetLastBindingToSourceResult(in BindingId, out BindingResult) VisualElement.Add(VisualElement) VisualElement.Insert(int, VisualElement) VisualElement.Remove(VisualElement) VisualElement.RemoveAt(int) VisualElement.Clear() VisualElement.ElementAt(int) VisualElement.IndexOf(VisualElement) VisualElement.Children() VisualElement.Sort(Comparison<VisualElement>) VisualElement.BringToFront() VisualElement.SendToBack() VisualElement.PlaceBehind(VisualElement) VisualElement.PlaceInFront(VisualElement) VisualElement.RemoveFromHierarchy() VisualElement.GetFirstOfType<T>() VisualElement.GetFirstAncestorOfType<T>() VisualElement.Contains(VisualElement) VisualElement.FindCommonAncestor(VisualElement) VisualElement.viewDataKey VisualElement.userData VisualElement.canGrabFocus VisualElement.focusController VisualElement.disablePlayModeTint VisualElement.usageHints VisualElement.transform VisualElement.scaledPixelsPerPoint VisualElement.layout VisualElement.contentRect VisualElement.paddingRect VisualElement.worldBound VisualElement.localBound VisualElement.worldTransform VisualElement.pickingMode VisualElement.name VisualElement.enabledInHierarchy VisualElement.enabledSelf VisualElement.languageDirection VisualElement.visible VisualElement.generateVisualContent VisualElement.dataSource VisualElement.dataSourcePath VisualElement.dataSourceType VisualElement.experimental VisualElement.hierarchy VisualElement.cacheAsBitmap VisualElement.parent VisualElement.panel VisualElement.contentContainer VisualElement.visualTreeAssetSource VisualElement.this[int] VisualElement.childCount VisualElement.schedule VisualElement.style VisualElement.resolvedStyle VisualElement.customStyle VisualElement.styleSheets VisualElement.tooltip Focusable.Blur() Focusable.focusable Focusable.tabIndex Focusable.delegatesFocus CallbackEventHandler.RegisterCallback<TEventType>(EventCallback<TEventType>, TrickleDown) CallbackEventHandler.RegisterCallbackOnce<TEventType>(EventCallback<TEventType>, TrickleDown) CallbackEventHandler.RegisterCallback<TEventType, TUserArgsType>(EventCallback<TEventType, TUserArgsType>, TUserArgsType, TrickleDown) CallbackEventHandler.RegisterCallbackOnce<TEventType, TUserArgsType>(EventCallback<TEventType, TUserArgsType>, TUserArgsType, TrickleDown) CallbackEventHandler.UnregisterCallback<TEventType>(EventCallback<TEventType>, TrickleDown) CallbackEventHandler.UnregisterCallback<TEventType, TUserArgsType>(EventCallback<TEventType, TUserArgsType>, TrickleDown) CallbackEventHandler.HasTrickleDownHandlers() CallbackEventHandler.HasBubbleUpHandlers() CallbackEventHandler.ExecuteDefaultActionAtTarget(EventBase) CallbackEventHandler.HandleEventBubbleUp(EventBase) CallbackEventHandler.HandleEventTrickleDown(EventBase) CallbackEventHandler.ExecuteDefaultAction(EventBase) CallbackEventHandler.NotifyPropertyChanged(in BindingId) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.Samples.Scripts.UI Assembly: FwtHexTerrainSamples.dll Syntax [UxmlElement] public class UserToolParameterElement : TemplateSelectorElement, IEventHandler, IResolvedStyle, ITransform, ITransitionAnimations, IExperimentalFeatures, IVisualElementScheduler, IRefreshableView, ICommitChanges Implements UnityEngine.UIElements.IEventHandler UnityEngine.UIElements.IResolvedStyle UnityEngine.UIElements.ITransform UnityEngine.UIElements.Experimental.ITransitionAnimations UnityEngine.UIElements.IExperimentalFeatures UnityEngine.UIElements.IVisualElementScheduler IRefreshableView ICommitChanges Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Samples.Scripts.UI.html": {
    "href": "api/Fwt.HexTerrains.Samples.Scripts.UI.html",
    "title": "Namespace Fwt.HexTerrains.Samples.Scripts.UI | Hex Terrains",
    "summary": "Namespace Fwt.HexTerrains.Samples.Scripts.UI Classes UserToolParameterElement UI Toolkit visual element that takes a visual element to display a provided parameter by parameter object type. UserToolParameterElement.UxmlSerializedData"
  },
  "api/Fwt.HexTerrains.Samples.Systems.CreateSamplesUserToolsDataSystem.html": {
    "href": "api/Fwt.HexTerrains.Samples.Systems.CreateSamplesUserToolsDataSystem.html",
    "title": "Class CreateSamplesUserToolsDataSystem | Hex Terrains",
    "summary": "Class CreateSamplesUserToolsDataSystem System to create user tools data for the samples. Inheritance object ComponentSystemBase SystemBase CreateUserToolsDataSystem<SamplesUserToolsData, CreateSamplesUserToolsDataRequest> CreateSamplesUserToolsDataSystem Inherited Members CreateUserToolsDataSystem<SamplesUserToolsData, CreateSamplesUserToolsDataRequest>.CreateData(Entity, Entity, Entity, CreateSamplesUserToolsDataRequest, EntityCommandBuffer) CreateUserToolsDataSystem<SamplesUserToolsData, CreateSamplesUserToolsDataRequest>.CreateUserToolsData(Entity, CreateSamplesUserToolsDataRequest) CreateUserToolsDataSystem<SamplesUserToolsData, CreateSamplesUserToolsDataRequest>.CreateUISystemAPI(Entity, CreateSamplesUserToolsDataRequest) CreateUserToolsDataSystem<SamplesUserToolsData, CreateSamplesUserToolsDataRequest>.CreateUserToolAPI(Entity, CreateSamplesUserToolsDataRequest) SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Samples.Systems Assembly: FwtHexTerrainSamples.dll Syntax [UpdateInGroup(typeof(CreateHexTerrainsGroup))] public class CreateSamplesUserToolsDataSystem : CreateUserToolsDataSystem<SamplesUserToolsData, CreateSamplesUserToolsDataRequest> Fields View Source _samplesUISystem Declaration protected SamplesUISystem _samplesUISystem Field Value Type Description SamplesUISystem View Source _userToolsScreen Declaration protected UserToolsScreen _userToolsScreen Field Value Type Description UserToolsScreen Properties View Source SamplesUISystem Cached reference to the UI System; Declaration public SamplesUISystem SamplesUISystem { get; } Property Value Type Description SamplesUISystem View Source UserToolsScreen Cached version of the UserToolScreen. Declaration public UserToolsScreen UserToolsScreen { get; } Property Value Type Description UserToolsScreen Methods View Source CreateUISystemAPI(Entity, CreateSamplesUserToolsDataRequest) Creates the API object for the user tools state. User tools use this object to request a terrain data as well as to send a requests to the UI system. Declaration protected override IUISystemAPI CreateUISystemAPI(Entity terrainEntity, CreateSamplesUserToolsDataRequest request) Parameters Type Name Description Entity terrainEntity Terrain entity CreateSamplesUserToolsDataRequest request request to create a UserToolsData Returns Type Description IUISystemAPI reference to the object that implements the IUISystemAPI interface and allows to send commands to the UI system Overrides CreateUserToolsDataSystem<SamplesUserToolsData, CreateSamplesUserToolsDataRequest>.CreateUISystemAPI(Entity, CreateSamplesUserToolsDataRequest) View Source CreateUserToolsData(Entity, CreateSamplesUserToolsDataRequest) Creates the user tools data object. Declaration protected override SamplesUserToolsData CreateUserToolsData(Entity terrainEntity, CreateSamplesUserToolsDataRequest request) Parameters Type Name Description Entity terrainEntity terrain entity the user tools data will be created for CreateSamplesUserToolsDataRequest request request to create a user tools data Returns Type Description SamplesUserToolsData reference to the created user tools data Overrides CreateUserToolsDataSystem<SamplesUserToolsData, CreateSamplesUserToolsDataRequest>.CreateUserToolsData(Entity, CreateSamplesUserToolsDataRequest) OnCreateForCompiler() Declaration protected override void OnCreateForCompiler() Overrides Unity.Entities.ComponentSystemBase.OnCreateForCompiler() View Source OnUpdate() Implement OnUpdate() to perform the major work of this system. Declaration protected override void OnUpdate() Overrides Unity.Entities.SystemBase.OnUpdate() Remarks By default, the system invokes `OnUpdate()` once every frame on the main thread. To skip OnUpdate if all of the system's [EntityQueries] are empty, use the [RequireMatchingQueriesForUpdateAttribute]. To limit when OnUpdate is invoked, you can specify components that must exist, or queries that match specific Entities. To do this, call Unity.Entities.ComponentSystemBase.RequireForUpdate<T>() or Unity.Entities.ComponentSystemBase.RequireForUpdate(Unity.Entities.EntityQuery) in the system's OnCreate method. For more information, see [ShouldRunSystem]. The [Entities.ForEach] and [Job.WithCode] constructions provide convenient mechanisms for defining jobs. You can also instantiate and schedule an Unity.Entities.IJobChunk instance; you can use the [C# Job System] or you can perform work on the main thread. If you call Unity.Entities.EntityManager methods that perform structural changes on the main thread, be sure to arrange the system order to minimize the performance impact of the resulting [sync points]. View Source SetHeightmapToUserTools(SamplesUserToolsData, Texture2D) Sets the heightmap texture to the user tools data. This texture is used to apply a heightmap to the terrain. Declaration protected virtual void SetHeightmapToUserTools(SamplesUserToolsData userToolsData, Texture2D heightmap) Parameters Type Name Description SamplesUserToolsData userToolsData user tools data to set a texture for Texture2D heightmap heightmap texture to set to the user tools data Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Samples.Systems.SamplesUISystem.html": {
    "href": "api/Fwt.HexTerrains.Samples.Systems.SamplesUISystem.html",
    "title": "Class SamplesUISystem | Hex Terrains",
    "summary": "Class SamplesUISystem Samples implementation of the UISystem. Inheritance object ComponentSystemBase SystemBase UISystemBase SamplesUISystem Implements IUISystemAPI Inherited Members UISystemBase.ScreenPrefabs UISystemBase.ScreenPrefabByName UISystemBase.ScreenPrefabByType UISystemBase.AllScreens UISystemBase.ScreensByName UISystemBase.ScreensByType UISystemBase.UIRoot UISystemBase.UIScreenRoot UISystemBase.GetOrCreateScreen<TScreen>(string) UISystemBase.GetOrCreateScreen(string) UISystemBase.GetOrCreateScreen<TScreen>() UISystemBase.GetOrCreateScreen(Type) UISystemBase.CreateScreen<TScreen>() UISystemBase.CreateScreen(Type) UISystemBase.CreateScreen<TScreen>(string) UISystemBase.CreateScreen(string) UISystemBase.CreateScreen(UIScreen) UISystemBase.DestroyAllScreens() UISystemBase.DestroyScreen(string) UISystemBase.DestroyScreen<TScreen>() UISystemBase.DestroyScreen(Type) UISystemBase.DestroyScreen(UIScreen) UISystemBase.GetScreen(string) UISystemBase.GetScreen<TScreen>() UISystemBase.GetScreen(Type) UISystemBase.AddScreenPrefab(UIScreen) UISystemBase.GetScreenPrefab<TScreen>(string) UISystemBase.GetScreenPrefab(string) UISystemBase.GetScreenPrefab<TScreen>() UISystemBase.GetScreenPrefab(Type) UISystemBase.DeleteAllScreenPrefabs() UISystemBase.DeleteScreenPrefab(string) UISystemBase.DeleteScreenPrefab<TScreen>() UISystemBase.DeleteScreenPrefab(UIScreen) UISystemBase.ApplyConfig(IList<UIScreen>) UISystemBase.IsCursorOverUI() UISystemBase.FindObjectOnScene<TObject>(ref TObject, FindObjectsInactive) UISystemBase.OnCreate() UISystemBase.OnUpdate() UISystemBase.CollectUIScreensFromScene() SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Samples.Systems Assembly: FwtHexTerrainSamples.dll Syntax public class SamplesUISystem : UISystemBase, IUISystemAPI Properties View Source IsCollectUIScreensFromSceneOnStart If true, the system will collect all UIScreens from the scene on start. Declaration public override bool IsCollectUIScreensFromSceneOnStart { get; } Property Value Type Description bool Overrides UISystemBase.IsCollectUIScreensFromSceneOnStart Implements IUISystemAPI Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Samples.Systems.UpdateSamplesCameraControllerSystem.html": {
    "href": "api/Fwt.HexTerrains.Samples.Systems.UpdateSamplesCameraControllerSystem.html",
    "title": "Class UpdateSamplesCameraControllerSystem | Hex Terrains",
    "summary": "Class UpdateSamplesCameraControllerSystem System that updates the camera controller data for the minimap. Inheritance object ComponentSystemBase SystemBase UpdateCameraControllerSystemBase UpdateSamplesCameraControllerSystem Inherited Members UpdateCameraControllerSystemBase.OnUpdate() UpdateCameraControllerSystemBase.UpdateMinimapScreen(Entity, CameraControllerTarget, HexTerrainSettings) UpdateCameraControllerSystemBase.OnCreateForCompiler() SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Samples.Systems Assembly: FwtHexTerrainSamples.dll Syntax public class UpdateSamplesCameraControllerSystem : UpdateCameraControllerSystemBase Fields View Source _uiSystem Declaration protected SamplesUISystem _uiSystem Field Value Type Description SamplesUISystem Properties View Source UISystem Declaration public SamplesUISystem UISystem { get; } Property Value Type Description SamplesUISystem Methods View Source GetMinimapScreen(Entity) Returns a minimap screen for the given terrain entity. Declaration public override IMinimapScreen GetMinimapScreen(Entity terrainEntity) Parameters Type Name Description Entity terrainEntity terrain entity to return a minimap screen for Returns Type Description IMinimapScreen Minimap screen reference Overrides UpdateCameraControllerSystemBase.GetMinimapScreen(Entity) Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Samples.Systems.UpdateSamplesColorMapTexturesSystem.html": {
    "href": "api/Fwt.HexTerrains.Samples.Systems.UpdateSamplesColorMapTexturesSystem.html",
    "title": "Class UpdateSamplesColorMapTexturesSystem | Hex Terrains",
    "summary": "Class UpdateSamplesColorMapTexturesSystem This system is responsible for updating the color map textures of the samples. Inheritance object ComponentSystemBase SystemBase UpdateColorMapTextureSystem UpdateSamplesColorMapTexturesSystem Inherited Members UpdateColorMapTextureSystem.OnUpdate() UpdateColorMapTextureSystem.UpdateColorMapTextures(Entity, ref ColorMapTexturesCache, in DynamicBuffer<ColorMapTexture>, HexTerrain, in HexTerrainViewMode) UpdateColorMapTextureSystem.UpdateColorMap_0(Entity, ref ColorMapTexturesCache, in DynamicBuffer<ColorMapTexture>, HexTerrain, in HexTerrainViewMode) UpdateColorMapTextureSystem.UpdateColorMap_1(Entity, ref ColorMapTexturesCache, in DynamicBuffer<ColorMapTexture>, HexTerrain, in HexTerrainViewMode) UpdateColorMapTextureSystem.UpdateColorMap_2(Entity, ref ColorMapTexturesCache, in DynamicBuffer<ColorMapTexture>, HexTerrain, in HexTerrainViewMode) UpdateColorMapTextureSystem.UpdateColorMap_3(Entity, ref ColorMapTexturesCache, in DynamicBuffer<ColorMapTexture>, HexTerrain, in HexTerrainViewMode) UpdateColorMapTextureSystem.OnCreateForCompiler() SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Samples.Systems Assembly: FwtHexTerrainSamples.dll Syntax public class UpdateSamplesColorMapTexturesSystem : UpdateColorMapTextureSystem Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Samples.Systems.UpdateSamplesMinimapScreen.html": {
    "href": "api/Fwt.HexTerrains.Samples.Systems.UpdateSamplesMinimapScreen.html",
    "title": "Class UpdateSamplesMinimapScreen | Hex Terrains",
    "summary": "Class UpdateSamplesMinimapScreen System that updates the minimap screen in the UI. Inheritance object ComponentSystemBase SystemBase UpdateMiniMapScreenSystemBase UpdateSamplesMinimapScreen Inherited Members UpdateMiniMapScreenSystemBase.UpdateMiniMapScreen(Entity, in ColorMapTexturesCache, in DynamicBuffer<ColorMapTexture>, in HexTerrainViewMode) SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Samples.Systems Assembly: FwtHexTerrainSamples.dll Syntax [UpdateAfter(typeof(UpdateSamplesColorMapTexturesSystem))] public class UpdateSamplesMinimapScreen : UpdateMiniMapScreenSystemBase Fields View Source _uiSystem Declaration protected SamplesUISystem _uiSystem Field Value Type Description SamplesUISystem Properties View Source UISystem Declaration public SamplesUISystem UISystem { get; } Property Value Type Description SamplesUISystem Methods View Source GetMinimapScreen(Entity) Returns a reference to the minimap UIScreen. Declaration public override IMinimapScreen GetMinimapScreen(Entity terrainEntity) Parameters Type Name Description Entity terrainEntity terrain entity for which the terrain screen is returned Returns Type Description IMinimapScreen Minimap screen reference Overrides UpdateMiniMapScreenSystemBase.GetMinimapScreen(Entity) OnCreateForCompiler() Declaration protected override void OnCreateForCompiler() Overrides Unity.Entities.ComponentSystemBase.OnCreateForCompiler() View Source OnUpdate() Implement OnUpdate() to perform the major work of this system. Declaration protected override void OnUpdate() Overrides Unity.Entities.SystemBase.OnUpdate() Remarks By default, the system invokes `OnUpdate()` once every frame on the main thread. To skip OnUpdate if all of the system's [EntityQueries] are empty, use the [RequireMatchingQueriesForUpdateAttribute]. To limit when OnUpdate is invoked, you can specify components that must exist, or queries that match specific Entities. To do this, call Unity.Entities.ComponentSystemBase.RequireForUpdate<T>() or Unity.Entities.ComponentSystemBase.RequireForUpdate(Unity.Entities.EntityQuery) in the system's OnCreate method. For more information, see [ShouldRunSystem]. The [Entities.ForEach] and [Job.WithCode] constructions provide convenient mechanisms for defining jobs. You can also instantiate and schedule an Unity.Entities.IJobChunk instance; you can use the [C# Job System] or you can perform work on the main thread. If you call Unity.Entities.EntityManager methods that perform structural changes on the main thread, be sure to arrange the system order to minimize the performance impact of the resulting [sync points]. Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Samples.Systems.UpdateSamplesUserToolsStateMachineSystem.html": {
    "href": "api/Fwt.HexTerrains.Samples.Systems.UpdateSamplesUserToolsStateMachineSystem.html",
    "title": "Class UpdateSamplesUserToolsStateMachineSystem | Hex Terrains",
    "summary": "Class UpdateSamplesUserToolsStateMachineSystem System that updates the state machine of the user tools. Inheritance object ComponentSystemBase SystemBase UpdateUserToolsStateMachineSystem<SamplesUserToolsData> UpdateSamplesUserToolsStateMachineSystem Inherited Members UpdateUserToolsStateMachineSystem<SamplesUserToolsData>.UpdateData(SamplesUserToolsData) SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Samples.Systems Assembly: FwtHexTerrainSamples.dll Syntax [UpdateInGroup(typeof(HexTerrainsInitializationGroup), OrderFirst = true)] [UpdateBefore(typeof(CalcHexGroundCellMetricsSystem))] [UpdateBefore(typeof(CalcHexWaterCellMetricsSystem))] [UpdateBefore(typeof(CalcHexTerrainCountriesDataSystem))] [UpdateBefore(typeof(CalcHexTerrainProvincesDataSystem))] public class UpdateSamplesUserToolsStateMachineSystem : UpdateUserToolsStateMachineSystem<SamplesUserToolsData> Methods OnCreateForCompiler() Declaration protected override void OnCreateForCompiler() Overrides Unity.Entities.ComponentSystemBase.OnCreateForCompiler() View Source OnUpdate() Implement OnUpdate() to perform the major work of this system. Declaration protected override void OnUpdate() Overrides Unity.Entities.SystemBase.OnUpdate() Remarks By default, the system invokes `OnUpdate()` once every frame on the main thread. To skip OnUpdate if all of the system's [EntityQueries] are empty, use the [RequireMatchingQueriesForUpdateAttribute]. To limit when OnUpdate is invoked, you can specify components that must exist, or queries that match specific Entities. To do this, call Unity.Entities.ComponentSystemBase.RequireForUpdate<T>() or Unity.Entities.ComponentSystemBase.RequireForUpdate(Unity.Entities.EntityQuery) in the system's OnCreate method. For more information, see [ShouldRunSystem]. The [Entities.ForEach] and [Job.WithCode] constructions provide convenient mechanisms for defining jobs. You can also instantiate and schedule an Unity.Entities.IJobChunk instance; you can use the [C# Job System] or you can perform work on the main thread. If you call Unity.Entities.EntityManager methods that perform structural changes on the main thread, be sure to arrange the system order to minimize the performance impact of the resulting [sync points]. Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Samples.Systems.html": {
    "href": "api/Fwt.HexTerrains.Samples.Systems.html",
    "title": "Namespace Fwt.HexTerrains.Samples.Systems | Hex Terrains",
    "summary": "Namespace Fwt.HexTerrains.Samples.Systems Classes CreateSamplesUserToolsDataSystem System to create user tools data for the samples. SamplesUISystem Samples implementation of the UISystem. UpdateSamplesCameraControllerSystem System that updates the camera controller data for the minimap. UpdateSamplesColorMapTexturesSystem This system is responsible for updating the color map textures of the samples. UpdateSamplesMinimapScreen System that updates the minimap screen in the UI. UpdateSamplesUserToolsStateMachineSystem System that updates the state machine of the user tools."
  },
  "api/Fwt.HexTerrains.Samples.UI.CreateNewTerrainScreen.html": {
    "href": "api/Fwt.HexTerrains.Samples.UI.CreateNewTerrainScreen.html",
    "title": "Class CreateNewTerrainScreen | Hex Terrains",
    "summary": "Class CreateNewTerrainScreen Sample implementation of a screen that shows user a dialog with options to create a new terrain. Inheritance object Object Component Behaviour MonoBehaviour UIView UIDocumentView UIScreen UIScreen<CreateNewTerrainDataSource> CreateNewTerrainScreenBase CreateNewTerrainScreen Implements IViewDataReceiver<CreateNewTerrainCallbackDataSource> Inherited Members UIScreen<CreateNewTerrainDataSource>.ViewData UIScreen<CreateNewTerrainDataSource>.InitUI() UIScreen<CreateNewTerrainDataSource>.SetViewData(CreateNewTerrainDataSource) UIScreen<CreateNewTerrainDataSource>.SetUIDocumentViewData(CreateNewTerrainDataSource) UIScreen.Name UIScreen.Show() UIScreen.Hide() UIDocumentView.UIDocument UIDocumentView.Start() UIDocumentView.OnValidate() UIDocumentView.OnEnable() UIDocumentView.OnDisable() UIDocumentView.TryGetRootElement(out VisualElement) UIDocumentView.FindUIDocument() UIDocumentView.DisposeUI() UIDocumentView.AssignButtonClickEvent(VisualElement, string, Action) UIDocumentView.InitIntegerField(VisualElement, string, EventCallback<ChangeEvent<int>>, int) UIDocumentView.InitFloatField(VisualElement, string, EventCallback<ChangeEvent<float>>, float) UIDocumentView.InitTextField(VisualElement, string, EventCallback<ChangeEvent<string>>, string) UIDocumentView.InitSlider(VisualElement, string, EventCallback<ChangeEvent<int>>, int) UIDocumentView.InitSlider(VisualElement, string, EventCallback<ChangeEvent<float>>, int) UIDocumentView.InitVector2Field(VisualElement, string, EventCallback<ChangeEvent<Vector2>>, Vector2) UIDocumentView.InitVector2IntField(VisualElement, string, EventCallback<ChangeEvent<Vector2Int>>, Vector2Int) UIView.Transform UIView.RectTransform UIView.Awake() UIView.OnDestroy() MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.Samples.UI Assembly: FwtHexTerrainSamples.dll Syntax public class CreateNewTerrainScreen : CreateNewTerrainScreenBase, IViewDataReceiver<CreateNewTerrainCallbackDataSource> Properties View Source CreateTerrainCallback Callbacks that are called when user makes a decicion to create a new terrain or to cancel the operation. Declaration public CreateNewTerrainCallbackDataSource CreateTerrainCallback { get; set; } Property Value Type Description CreateNewTerrainCallbackDataSource Methods View Source Cancel() Called when user cancels the creation of a new terrain. Declaration public override void Cancel() Overrides CreateNewTerrainScreenBase.Cancel() View Source Create() Called when user decides to create a new terrain. Declaration public override void Create() Overrides CreateNewTerrainScreenBase.Create() View Source SetViewData(CreateNewTerrainCallbackDataSource) Sets the view data for the screen. Declaration public void SetViewData(CreateNewTerrainCallbackDataSource callback) Parameters Type Name Description CreateNewTerrainCallbackDataSource callback view data for the screen Implements IViewDataReceiver<TViewData> Extension Methods Extensions_UnityObject.SmartDestroy<TObject>(TObject) Extensions_UnityObject.SmartDisableGameObject<TObject>(TObject) Extensions_UnityObject.SmartEnableGameObject<TObject>(TObject) HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Samples.UI.LoadGameScreen.html": {
    "href": "api/Fwt.HexTerrains.Samples.UI.LoadGameScreen.html",
    "title": "Class LoadGameScreen | Hex Terrains",
    "summary": "Class LoadGameScreen Sample implementation of a screen that allows the user to load a saved terrain. Inheritance object Object Component Behaviour MonoBehaviour UIView UIDocumentView UIScreen UIScreen<SaveFilesDataSource> LoadFileScreenBase LoadGameScreen Implements IViewDataReceiver<LoadTerrainCallbackDataSource> Inherited Members LoadFileScreenBase.Load() LoadFileScreenBase.Delete() LoadFileScreenBase.GetSelectedFileFullName() LoadFileScreenBase.OnEnable() LoadFileScreenBase.RefreshDataSource() LoadFileScreenBase.CreateSaveFileData(string, string, string) LoadFileScreenBase.OnDataChanged() UIScreen<SaveFilesDataSource>.ViewData UIScreen<SaveFilesDataSource>.InitUI() UIScreen<SaveFilesDataSource>.SetViewData(SaveFilesDataSource) UIScreen<SaveFilesDataSource>.SetUIDocumentViewData(SaveFilesDataSource) UIScreen.Name UIScreen.Show() UIScreen.Hide() UIDocumentView.UIDocument UIDocumentView.Start() UIDocumentView.OnValidate() UIDocumentView.OnDisable() UIDocumentView.TryGetRootElement(out VisualElement) UIDocumentView.FindUIDocument() UIDocumentView.DisposeUI() UIDocumentView.AssignButtonClickEvent(VisualElement, string, Action) UIDocumentView.InitIntegerField(VisualElement, string, EventCallback<ChangeEvent<int>>, int) UIDocumentView.InitFloatField(VisualElement, string, EventCallback<ChangeEvent<float>>, float) UIDocumentView.InitTextField(VisualElement, string, EventCallback<ChangeEvent<string>>, string) UIDocumentView.InitSlider(VisualElement, string, EventCallback<ChangeEvent<int>>, int) UIDocumentView.InitSlider(VisualElement, string, EventCallback<ChangeEvent<float>>, int) UIDocumentView.InitVector2Field(VisualElement, string, EventCallback<ChangeEvent<Vector2>>, Vector2) UIDocumentView.InitVector2IntField(VisualElement, string, EventCallback<ChangeEvent<Vector2Int>>, Vector2Int) UIView.Transform UIView.RectTransform UIView.Awake() UIView.OnDestroy() MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.Samples.UI Assembly: FwtHexTerrainSamples.dll Syntax public class LoadGameScreen : LoadFileScreenBase, IViewDataReceiver<LoadTerrainCallbackDataSource> Properties View Source DefaultFileName The default file name to be used when no file is selected. Declaration public override string DefaultFileName { get; } Property Value Type Description string Overrides LoadFileScreenBase.DefaultFileName View Source FileExtension The file extension for the files to be shown in a screen. Declaration public override string FileExtension { get; } Property Value Type Description string Overrides LoadFileScreenBase.FileExtension View Source FilesDirectory The directory where the files are stored. Declaration public override string FilesDirectory { get; } Property Value Type Description string Overrides LoadFileScreenBase.FilesDirectory View Source LoadTerrainCallback Callbacks that are called when user makes a decision to load a terrain or to cancel an operation. Declaration protected LoadTerrainCallbackDataSource LoadTerrainCallback { get; set; } Property Value Type Description LoadTerrainCallbackDataSource Methods View Source Cancel() Called when user cancels the loading process. Declaration public override void Cancel() Overrides LoadFileScreenBase.Cancel() View Source Load(string) Called when user selects a file to load. Declaration public override void Load(string fileName) Parameters Type Name Description string fileName full path to the file user selected Overrides LoadFileScreenBase.Load(string) View Source SetViewData(LoadTerrainCallbackDataSource) Sets the view data for this screen. Declaration public void SetViewData(LoadTerrainCallbackDataSource viewData) Parameters Type Name Description LoadTerrainCallbackDataSource viewData view data for the screen Implements IViewDataReceiver<TViewData> Extension Methods Extensions_UnityObject.SmartDestroy<TObject>(TObject) Extensions_UnityObject.SmartDisableGameObject<TObject>(TObject) Extensions_UnityObject.SmartEnableGameObject<TObject>(TObject) HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Samples.UI.ResizeTerrainScreen.html": {
    "href": "api/Fwt.HexTerrains.Samples.UI.ResizeTerrainScreen.html",
    "title": "Class ResizeTerrainScreen | Hex Terrains",
    "summary": "Class ResizeTerrainScreen Sample implementation of the resize terrain screen. Inheritance object Object Component Behaviour MonoBehaviour UIView UIDocumentView UIScreen UIScreen<ResizeTerrainDataSource> ResizeTerrainScreenBase ResizeTerrainScreen Implements IViewDataReceiver<ResizeTerrainCallbackDataSource> Inherited Members ResizeTerrainScreenBase.Resize() UIScreen<ResizeTerrainDataSource>.ViewData UIScreen<ResizeTerrainDataSource>.InitUI() UIScreen<ResizeTerrainDataSource>.SetViewData(ResizeTerrainDataSource) UIScreen<ResizeTerrainDataSource>.SetUIDocumentViewData(ResizeTerrainDataSource) UIScreen.Name UIScreen.Show() UIScreen.Hide() UIDocumentView.UIDocument UIDocumentView.Start() UIDocumentView.OnValidate() UIDocumentView.OnEnable() UIDocumentView.OnDisable() UIDocumentView.TryGetRootElement(out VisualElement) UIDocumentView.FindUIDocument() UIDocumentView.DisposeUI() UIDocumentView.AssignButtonClickEvent(VisualElement, string, Action) UIDocumentView.InitIntegerField(VisualElement, string, EventCallback<ChangeEvent<int>>, int) UIDocumentView.InitFloatField(VisualElement, string, EventCallback<ChangeEvent<float>>, float) UIDocumentView.InitTextField(VisualElement, string, EventCallback<ChangeEvent<string>>, string) UIDocumentView.InitSlider(VisualElement, string, EventCallback<ChangeEvent<int>>, int) UIDocumentView.InitSlider(VisualElement, string, EventCallback<ChangeEvent<float>>, int) UIDocumentView.InitVector2Field(VisualElement, string, EventCallback<ChangeEvent<Vector2>>, Vector2) UIDocumentView.InitVector2IntField(VisualElement, string, EventCallback<ChangeEvent<Vector2Int>>, Vector2Int) UIView.Transform UIView.RectTransform UIView.Awake() UIView.OnDestroy() MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.Samples.UI Assembly: FwtHexTerrainSamples.dll Syntax public class ResizeTerrainScreen : ResizeTerrainScreenBase, IViewDataReceiver<ResizeTerrainCallbackDataSource> Fields View Source ResizeTerrainCallback Callbacks that are called when user makes a decision to resize or cancel an operation. Declaration protected ResizeTerrainCallbackDataSource ResizeTerrainCallback Field Value Type Description ResizeTerrainCallbackDataSource Methods View Source Cancel() Called when user decides to cancel the operation. Declaration public override void Cancel() Overrides ResizeTerrainScreenBase.Cancel() View Source Resize(int2) Called when user decides to resize the terrain. Declaration public override void Resize(int2 terrainSize) Parameters Type Name Description int2 terrainSize desired terrain size Overrides ResizeTerrainScreenBase.Resize(int2) View Source SetViewData(ResizeTerrainCallbackDataSource) Sets the view data for the screen. Declaration public void SetViewData(ResizeTerrainCallbackDataSource viewData) Parameters Type Name Description ResizeTerrainCallbackDataSource viewData view data for the screen Implements IViewDataReceiver<TViewData> Extension Methods Extensions_UnityObject.SmartDestroy<TObject>(TObject) Extensions_UnityObject.SmartDisableGameObject<TObject>(TObject) Extensions_UnityObject.SmartEnableGameObject<TObject>(TObject) HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Samples.UI.SamplesMinimapCameraIndicator.UxmlSerializedData.html": {
    "href": "api/Fwt.HexTerrains.Samples.UI.SamplesMinimapCameraIndicator.UxmlSerializedData.html",
    "title": "Class SamplesMinimapCameraIndicator.UxmlSerializedData | Hex Terrains",
    "summary": "Class SamplesMinimapCameraIndicator.UxmlSerializedData Inheritance object UxmlSerializedData VisualElement.UxmlSerializedData SamplesMinimapCameraIndicator.UxmlSerializedData Inherited Members UxmlSerializedData.ShouldWriteAttributeValue(UxmlSerializedData.UxmlAttributeFlags) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Samples.UI Assembly: FwtHexTerrainSamples.dll Syntax [Serializable] public class SamplesMinimapCameraIndicator.UxmlSerializedData : VisualElement.UxmlSerializedData Methods CreateInstance() <p> Returns an instance of the declaring element. Declaration public override object CreateInstance() Returns Type Description object The new instance of the declaring element. Overrides UnityEngine.UIElements.VisualElement.UxmlSerializedData.CreateInstance() Deserialize(object) <p> Applies serialized field values to a compatible visual element. Declaration public override void Deserialize(object obj) Parameters Type Name Description object obj The element to have the serialized data applied to. Overrides VisualElement.UxmlSerializedData.Deserialize(object) Register() Declaration [RegisterUxmlCache] [Conditional(\"UNITY_EDITOR\")] public static void Register() Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Samples.UI.SamplesMinimapCameraIndicator.html": {
    "href": "api/Fwt.HexTerrains.Samples.UI.SamplesMinimapCameraIndicator.html",
    "title": "Class SamplesMinimapCameraIndicator | Hex Terrains",
    "summary": "Class SamplesMinimapCameraIndicator UI Toolkit visual element that displays a camera indicator on the minimap, so on the minimap it is visible where the camera is relative to the terrain. Inheritance object CallbackEventHandler Focusable VisualElement SamplesMinimapCameraIndicator Implements IEventHandler IResolvedStyle ITransform ITransitionAnimations IExperimentalFeatures IVisualElementScheduler Inherited Members VisualElement.disabledUssClassName VisualElement.Focus() VisualElement.SendEvent(EventBase) VisualElement.SetEnabledFromHierarchy(bool) VisualElement.SetEnabled(bool) VisualElement.MarkDirtyRepaint() VisualElement.ContainsPoint(Vector2) VisualElement.Overlaps(Rect) VisualElement.DoMeasure(float, VisualElement.MeasureMode, float, VisualElement.MeasureMode) VisualElement.ToString() VisualElement.GetClasses() VisualElement.ClearClassList() VisualElement.AddToClassList(string) VisualElement.RemoveFromClassList(string) VisualElement.ToggleInClassList(string) VisualElement.EnableInClassList(string, bool) VisualElement.ClassListContains(string) VisualElement.FindAncestorUserData() VisualElement.SetBinding(BindingId, Binding) VisualElement.GetBinding(BindingId) VisualElement.TryGetBinding(BindingId, out Binding) VisualElement.GetBindingInfos() VisualElement.HasBinding(BindingId) VisualElement.ClearBinding(BindingId) VisualElement.ClearBindings() VisualElement.GetHierarchicalDataSourceContext() VisualElement.GetDataSourceContext(BindingId) VisualElement.TryGetDataSourceContext(BindingId, out DataSourceContext) VisualElement.TryGetLastBindingToUIResult(in BindingId, out BindingResult) VisualElement.TryGetLastBindingToSourceResult(in BindingId, out BindingResult) VisualElement.Add(VisualElement) VisualElement.Insert(int, VisualElement) VisualElement.Remove(VisualElement) VisualElement.RemoveAt(int) VisualElement.Clear() VisualElement.ElementAt(int) VisualElement.IndexOf(VisualElement) VisualElement.Children() VisualElement.Sort(Comparison<VisualElement>) VisualElement.BringToFront() VisualElement.SendToBack() VisualElement.PlaceBehind(VisualElement) VisualElement.PlaceInFront(VisualElement) VisualElement.RemoveFromHierarchy() VisualElement.GetFirstOfType<T>() VisualElement.GetFirstAncestorOfType<T>() VisualElement.Contains(VisualElement) VisualElement.FindCommonAncestor(VisualElement) VisualElement.viewDataKey VisualElement.userData VisualElement.canGrabFocus VisualElement.focusController VisualElement.disablePlayModeTint VisualElement.usageHints VisualElement.transform VisualElement.scaledPixelsPerPoint VisualElement.layout VisualElement.contentRect VisualElement.paddingRect VisualElement.worldBound VisualElement.localBound VisualElement.worldTransform VisualElement.pickingMode VisualElement.name VisualElement.enabledInHierarchy VisualElement.enabledSelf VisualElement.languageDirection VisualElement.visible VisualElement.generateVisualContent VisualElement.dataSource VisualElement.dataSourcePath VisualElement.dataSourceType VisualElement.experimental VisualElement.hierarchy VisualElement.cacheAsBitmap VisualElement.parent VisualElement.panel VisualElement.contentContainer VisualElement.visualTreeAssetSource VisualElement.this[int] VisualElement.childCount VisualElement.schedule VisualElement.style VisualElement.resolvedStyle VisualElement.customStyle VisualElement.styleSheets VisualElement.tooltip Focusable.Blur() Focusable.focusable Focusable.tabIndex Focusable.delegatesFocus CallbackEventHandler.RegisterCallback<TEventType>(EventCallback<TEventType>, TrickleDown) CallbackEventHandler.RegisterCallbackOnce<TEventType>(EventCallback<TEventType>, TrickleDown) CallbackEventHandler.RegisterCallback<TEventType, TUserArgsType>(EventCallback<TEventType, TUserArgsType>, TUserArgsType, TrickleDown) CallbackEventHandler.RegisterCallbackOnce<TEventType, TUserArgsType>(EventCallback<TEventType, TUserArgsType>, TUserArgsType, TrickleDown) CallbackEventHandler.UnregisterCallback<TEventType>(EventCallback<TEventType>, TrickleDown) CallbackEventHandler.UnregisterCallback<TEventType, TUserArgsType>(EventCallback<TEventType, TUserArgsType>, TrickleDown) CallbackEventHandler.HasTrickleDownHandlers() CallbackEventHandler.HasBubbleUpHandlers() CallbackEventHandler.ExecuteDefaultActionAtTarget(EventBase) CallbackEventHandler.HandleEventBubbleUp(EventBase) CallbackEventHandler.HandleEventTrickleDown(EventBase) CallbackEventHandler.ExecuteDefaultAction(EventBase) CallbackEventHandler.NotifyPropertyChanged(in BindingId) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.Samples.UI Assembly: FwtHexTerrainSamples.dll Syntax [UxmlElement] public class SamplesMinimapCameraIndicator : VisualElement, IEventHandler, IResolvedStyle, ITransform, ITransitionAnimations, IExperimentalFeatures, IVisualElementScheduler Constructors View Source SamplesMinimapCameraIndicator() Declaration public SamplesMinimapCameraIndicator() Fields View Source _cameraNormalizedPosition The normalized position of the camera on the minimap. (0..1 on terrain width and height) Declaration [UxmlAttribute(\"cameraNormalizedPosition\")] protected Vector2 _cameraNormalizedPosition Field Value Type Description Vector2 View Source _normalizedPosBinding The binding id for the camera normalized position property. Declaration protected BindingId _normalizedPosBinding Field Value Type Description BindingId Properties View Source CameraNormalizedPosition The normalized position of the camera on the minimap. (0..1 on terrain width and height) Declaration [CreateProperty] public Vector2 CameraNormalizedPosition { get; set; } Property Value Type Description Vector2 Methods View Source NormalizedPositionChanged(Vector2) Called when the camera normalized position changes. Declaration protected virtual void NormalizedPositionChanged(Vector2 normalizedPos) Parameters Type Name Description Vector2 normalizedPos Implements UnityEngine.UIElements.IEventHandler UnityEngine.UIElements.IResolvedStyle UnityEngine.UIElements.ITransform UnityEngine.UIElements.Experimental.ITransitionAnimations UnityEngine.UIElements.IExperimentalFeatures UnityEngine.UIElements.IVisualElementScheduler Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Samples.UI.SamplesMinimapScreen.html": {
    "href": "api/Fwt.HexTerrains.Samples.UI.SamplesMinimapScreen.html",
    "title": "Class SamplesMinimapScreen | Hex Terrains",
    "summary": "Class SamplesMinimapScreen Sample implementation of the minimap UIScreen. Inheritance object Object Component Behaviour MonoBehaviour UIView UIDocumentView UIScreen UIScreen<MinimapScreenDataSource> MinimapScreenBase SamplesMinimapScreen Implements IMinimapScreen Inherited Members MinimapScreenBase.TexturesSource MinimapScreenBase._terrainsQuery MinimapScreenBase._world MinimapScreenBase._entityManager MinimapScreenBase.TexturesVersion MinimapScreenBase.ViewModeVersion MinimapScreenBase.ViewMode MinimapScreenBase.ViewModes MinimapScreenBase.Start() MinimapScreenBase.SetColorTextures(NativeArray<ColorMapTexture>, long) MinimapScreenBase.SetViewMode(int) MinimapScreenBase.SetViewMode(int, long) MinimapScreenBase.OnViewModeChanged() MinimapScreenBase.SetCameraControllerData(CameraControllerTarget, HexTerrainSettings) UIScreen<MinimapScreenDataSource>.ViewData UIScreen<MinimapScreenDataSource>.InitUI() UIScreen<MinimapScreenDataSource>.SetViewData(MinimapScreenDataSource) UIScreen<MinimapScreenDataSource>.SetUIDocumentViewData(MinimapScreenDataSource) UIScreen.Name UIScreen.Show() UIScreen.Hide() UIDocumentView.UIDocument UIDocumentView.OnValidate() UIDocumentView.OnEnable() UIDocumentView.OnDisable() UIDocumentView.TryGetRootElement(out VisualElement) UIDocumentView.FindUIDocument() UIDocumentView.DisposeUI() UIDocumentView.AssignButtonClickEvent(VisualElement, string, Action) UIDocumentView.InitIntegerField(VisualElement, string, EventCallback<ChangeEvent<int>>, int) UIDocumentView.InitFloatField(VisualElement, string, EventCallback<ChangeEvent<float>>, float) UIDocumentView.InitTextField(VisualElement, string, EventCallback<ChangeEvent<string>>, string) UIDocumentView.InitSlider(VisualElement, string, EventCallback<ChangeEvent<int>>, int) UIDocumentView.InitSlider(VisualElement, string, EventCallback<ChangeEvent<float>>, int) UIDocumentView.InitVector2Field(VisualElement, string, EventCallback<ChangeEvent<Vector2>>, Vector2) UIDocumentView.InitVector2IntField(VisualElement, string, EventCallback<ChangeEvent<Vector2Int>>, Vector2Int) UIView.Transform UIView.RectTransform UIView.Awake() UIView.OnDestroy() MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.Samples.UI Assembly: FwtHexTerrainSamples.dll Syntax public class SamplesMinimapScreen : MinimapScreenBase, IMinimapScreen Methods View Source OnMinimapClick(float2) Called from UI when user clicks on the minimap. (Makes a camera to center at clicked position). Declaration public virtual void OnMinimapClick(float2 normalizedPos) Parameters Type Name Description float2 normalizedPos Click position in range x 0..1 and y 0..1 where 1 is the full width/height of the terrain Implements IMinimapScreen Extension Methods Extensions_UnityObject.SmartDestroy<TObject>(TObject) Extensions_UnityObject.SmartDisableGameObject<TObject>(TObject) Extensions_UnityObject.SmartEnableGameObject<TObject>(TObject) HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Samples.UI.SaveGameScreen.html": {
    "href": "api/Fwt.HexTerrains.Samples.UI.SaveGameScreen.html",
    "title": "Class SaveGameScreen | Hex Terrains",
    "summary": "Class SaveGameScreen Save game UIScreen that allows user to choose file to save a terrain into. Inheritance object Object Component Behaviour MonoBehaviour UIView UIDocumentView UIScreen UIScreen<SaveFilesDataSource> SaveFileScreenBase SaveGameScreen Implements IViewDataReceiver<SaveTerrainCallbackDataSource> Inherited Members SaveFileScreenBase.Save() SaveFileScreenBase.Delete() SaveFileScreenBase.GetSelectedFileFullName() SaveFileScreenBase.OnEnable() SaveFileScreenBase.RefreshDataSource() SaveFileScreenBase.CreateSaveFileData(string, string, string) SaveFileScreenBase.OnDataChanged() UIScreen<SaveFilesDataSource>.ViewData UIScreen<SaveFilesDataSource>.InitUI() UIScreen<SaveFilesDataSource>.SetViewData(SaveFilesDataSource) UIScreen<SaveFilesDataSource>.SetUIDocumentViewData(SaveFilesDataSource) UIScreen.Name UIScreen.Show() UIScreen.Hide() UIDocumentView.UIDocument UIDocumentView.Start() UIDocumentView.OnValidate() UIDocumentView.OnDisable() UIDocumentView.TryGetRootElement(out VisualElement) UIDocumentView.FindUIDocument() UIDocumentView.DisposeUI() UIDocumentView.AssignButtonClickEvent(VisualElement, string, Action) UIDocumentView.InitIntegerField(VisualElement, string, EventCallback<ChangeEvent<int>>, int) UIDocumentView.InitFloatField(VisualElement, string, EventCallback<ChangeEvent<float>>, float) UIDocumentView.InitTextField(VisualElement, string, EventCallback<ChangeEvent<string>>, string) UIDocumentView.InitSlider(VisualElement, string, EventCallback<ChangeEvent<int>>, int) UIDocumentView.InitSlider(VisualElement, string, EventCallback<ChangeEvent<float>>, int) UIDocumentView.InitVector2Field(VisualElement, string, EventCallback<ChangeEvent<Vector2>>, Vector2) UIDocumentView.InitVector2IntField(VisualElement, string, EventCallback<ChangeEvent<Vector2Int>>, Vector2Int) UIView.Transform UIView.RectTransform UIView.Awake() UIView.OnDestroy() MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.Samples.UI Assembly: FwtHexTerrainSamples.dll Syntax public class SaveGameScreen : SaveFileScreenBase, IViewDataReceiver<SaveTerrainCallbackDataSource> Fields View Source SaveTerrainCallback Called from UI to save the selected file or cancel an operation. Declaration protected SaveTerrainCallbackDataSource SaveTerrainCallback Field Value Type Description SaveTerrainCallbackDataSource Properties View Source DefaultFileName The default file name to use when saving a new file. Declaration public override string DefaultFileName { get; } Property Value Type Description string Overrides SaveFileScreenBase.DefaultFileName View Source FileExtension The file extension for the save files. Declaration public override string FileExtension { get; } Property Value Type Description string Overrides SaveFileScreenBase.FileExtension View Source FilesDirectory The directory where save files are stored. Declaration public override string FilesDirectory { get; } Property Value Type Description string Overrides SaveFileScreenBase.FilesDirectory Methods View Source Cancel() Called from UI when user cancels the operation. Declaration public override void Cancel() Overrides SaveFileScreenBase.Cancel() View Source Save(string) Called when user has selected a file to save. Declaration public override void Save(string fileName) Parameters Type Name Description string fileName file path selected by user Overrides SaveFileScreenBase.Save(string) View Source SetViewData(SaveTerrainCallbackDataSource) Sets the view data for the screen. Declaration public void SetViewData(SaveTerrainCallbackDataSource viewData) Parameters Type Name Description SaveTerrainCallbackDataSource viewData view data for the screen Implements IViewDataReceiver<TViewData> Extension Methods Extensions_UnityObject.SmartDestroy<TObject>(TObject) Extensions_UnityObject.SmartDisableGameObject<TObject>(TObject) Extensions_UnityObject.SmartEnableGameObject<TObject>(TObject) HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Samples.UI.html": {
    "href": "api/Fwt.HexTerrains.Samples.UI.html",
    "title": "Namespace Fwt.HexTerrains.Samples.UI | Hex Terrains",
    "summary": "Namespace Fwt.HexTerrains.Samples.UI Classes CreateNewTerrainScreen Sample implementation of a screen that shows user a dialog with options to create a new terrain. LoadGameScreen Sample implementation of a screen that allows the user to load a saved terrain. ResizeTerrainScreen Sample implementation of the resize terrain screen. SamplesMinimapCameraIndicator UI Toolkit visual element that displays a camera indicator on the minimap, so on the minimap it is visible where the camera is relative to the terrain. SamplesMinimapCameraIndicator.UxmlSerializedData SamplesMinimapScreen Sample implementation of the minimap UIScreen. SaveGameScreen Save game UIScreen that allows user to choose file to save a terrain into."
  },
  "api/Fwt.HexTerrains.Samples.html": {
    "href": "api/Fwt.HexTerrains.Samples.html",
    "title": "Namespace Fwt.HexTerrains.Samples | Hex Terrains",
    "summary": "Namespace Fwt.HexTerrains.Samples Classes CreateNewSampleTerrainUserToolState State for creating a new terrain using the CreateNewTerrainUserTool. HexTerrainCursorView This class is used to visualize the brush size and rotation in the scene view. Uses a Projector to project the brush material on the terrain. LoadTerrainUserToolState State for loading terrain using the LoadTerrainUserTool. ResizeTerrainUserToolState State for the Resize Terrain User Tool. SamplesCameraControllerComponent A simple camera controller that allows zooming in and out using the mouse scroll wheel and moving the camera using the WASD keys. Prevents moving out of terrain bounds. If terrain's edges are connected, teleports to the opposite side of the terrain if the camera moves past the terrain edge. SamplesUserToolDataAuthoring Authoring component for the SamplesUserToolData. This component is used to create a SamplesUserToolData entity in the ECS world. SamplesUserToolDataBaker Baker for the SamplesUserToolDataAuthoring component. SaveTerrainUserToolState State for saving terrain using the user tool."
  },
  "api/Fwt.HexTerrains.Systems.CalcCellBiomeColorsSystem-1.html": {
    "href": "api/Fwt.HexTerrains.Systems.CalcCellBiomeColorsSystem-1.html",
    "title": "Class CalcCellBiomeColorsSystem<TSurfaceData> | Hex Terrains",
    "summary": "Class CalcCellBiomeColorsSystem<TSurfaceData> Inheritance object ComponentSystemBase SystemBase CalcCellBiomeColorsSystem<TSurfaceData> CalcGroundBiomeColorsSystem CalcWaterBiomeColorsSystem Inherited Members SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.OnUpdate() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Systems Assembly: fwt.hexterrains.dll Syntax [UpdateInGroup(typeof(HexTerrainsInitializationGroup))] public abstract class CalcCellBiomeColorsSystem<TSurfaceData> : SystemBase where TSurfaceData : HexSurfaceData Type Parameters Name Description TSurfaceData Methods UpdateData(TSurfaceData) Declaration public void UpdateData(TSurfaceData surfaceData) Parameters Type Name Description TSurfaceData surfaceData UpdateData(TSurfaceData, HexSurfaceData) Declaration public void UpdateData(TSurfaceData mySurfaceData, HexSurfaceData otherSurfaceData) Parameters Type Name Description TSurfaceData mySurfaceData HexSurfaceData otherSurfaceData Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Systems.CalcChunkVisibilitySystem.html": {
    "href": "api/Fwt.HexTerrains.Systems.CalcChunkVisibilitySystem.html",
    "title": "Class CalcChunkVisibilitySystem | Hex Terrains",
    "summary": "Class CalcChunkVisibilitySystem Inheritance object ComponentSystemBase SystemBase CalcChunkVisibilitySystem Inherited Members SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Systems Assembly: fwt.hexterrains.dll Syntax [UpdateInGroup(typeof(HexTerrainsInitializationGroup))] [UpdateAfter(typeof(CalcHexGroundCellMetricsSystem))] [UpdateAfter(typeof(CalcHexWaterCellMetricsSystem))] public class CalcChunkVisibilitySystem : SystemBase Fields CameraPlanes Array of camera planes that make a camera frustum Declaration public Plane[] CameraPlanes Field Value Type Description Plane[] Methods OnCreateForCompiler() Declaration protected override void OnCreateForCompiler() Overrides Unity.Entities.ComponentSystemBase.OnCreateForCompiler() OnUpdate() Implement OnUpdate() to perform the major work of this system. Declaration protected override void OnUpdate() Overrides Unity.Entities.SystemBase.OnUpdate() Remarks By default, the system invokes `OnUpdate()` once every frame on the main thread. To skip OnUpdate if all of the system's [EntityQueries] are empty, use the [RequireMatchingQueriesForUpdateAttribute]. To limit when OnUpdate is invoked, you can specify components that must exist, or queries that match specific Entities. To do this, call Unity.Entities.ComponentSystemBase.RequireForUpdate<T>() or Unity.Entities.ComponentSystemBase.RequireForUpdate(Unity.Entities.EntityQuery) in the system's OnCreate method. For more information, see [ShouldRunSystem]. The [Entities.ForEach] and [Job.WithCode] constructions provide convenient mechanisms for defining jobs. You can also instantiate and schedule an Unity.Entities.IJobChunk instance; you can use the [C# Job System] or you can perform work on the main thread. If you call Unity.Entities.EntityManager methods that perform structural changes on the main thread, be sure to arrange the system order to minimize the performance impact of the resulting [sync points]. Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Systems.CalcDirtyHexChunksSystem-2.html": {
    "href": "api/Fwt.HexTerrains.Systems.CalcDirtyHexChunksSystem-2.html",
    "title": "Class CalcDirtyHexChunksSystem<TSurface, TRenderData> | Hex Terrains",
    "summary": "Class CalcDirtyHexChunksSystem<TSurface, TRenderData> Inheritance object ComponentSystemBase SystemBase CalcDirtyHexChunksSystem<TSurface, TRenderData> CalcDirtyHexGroundChunksSystem CalcDirtyHexWaterChunksSystem Inherited Members SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.OnUpdate() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Systems Assembly: fwt.hexterrains.dll Syntax public abstract class CalcDirtyHexChunksSystem<TSurface, TRenderData> : SystemBase where TSurface : HexSurfaceData where TRenderData : HexSurfaceRenderData<TSurface> Type Parameters Name Description TSurface TRenderData Methods CalcDirtyChunks(TSurface, TRenderData) Declaration public virtual void CalcDirtyChunks(TSurface surfaceData, TRenderData renderData) Parameters Type Name Description TSurface surfaceData TRenderData renderData Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Systems.CalcDirtyHexGroundChunksSystem.html": {
    "href": "api/Fwt.HexTerrains.Systems.CalcDirtyHexGroundChunksSystem.html",
    "title": "Class CalcDirtyHexGroundChunksSystem | Hex Terrains",
    "summary": "Class CalcDirtyHexGroundChunksSystem Inheritance object ComponentSystemBase SystemBase CalcDirtyHexChunksSystem<HexGroundData, HexGroundRenderData> CalcDirtyHexGroundChunksSystem Inherited Members CalcDirtyHexChunksSystem<HexGroundData, HexGroundRenderData>.CalcDirtyChunks(HexGroundData, HexGroundRenderData) SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Systems Assembly: fwt.hexterrains.dll Syntax [UpdateInGroup(typeof(HexTerrainsInitializationGroup))] [UpdateAfter(typeof(CalcHexGroundCellMetricsSystem))] public class CalcDirtyHexGroundChunksSystem : CalcDirtyHexChunksSystem<HexGroundData, HexGroundRenderData> Methods OnCreateForCompiler() Declaration protected override void OnCreateForCompiler() Overrides Unity.Entities.ComponentSystemBase.OnCreateForCompiler() OnUpdate() Implement OnUpdate() to perform the major work of this system. Declaration protected override void OnUpdate() Overrides Unity.Entities.SystemBase.OnUpdate() Remarks By default, the system invokes `OnUpdate()` once every frame on the main thread. To skip OnUpdate if all of the system's [EntityQueries] are empty, use the [RequireMatchingQueriesForUpdateAttribute]. To limit when OnUpdate is invoked, you can specify components that must exist, or queries that match specific Entities. To do this, call Unity.Entities.ComponentSystemBase.RequireForUpdate<T>() or Unity.Entities.ComponentSystemBase.RequireForUpdate(Unity.Entities.EntityQuery) in the system's OnCreate method. For more information, see [ShouldRunSystem]. The [Entities.ForEach] and [Job.WithCode] constructions provide convenient mechanisms for defining jobs. You can also instantiate and schedule an Unity.Entities.IJobChunk instance; you can use the [C# Job System] or you can perform work on the main thread. If you call Unity.Entities.EntityManager methods that perform structural changes on the main thread, be sure to arrange the system order to minimize the performance impact of the resulting [sync points]. Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Systems.CalcDirtyHexWaterChunksSystem.html": {
    "href": "api/Fwt.HexTerrains.Systems.CalcDirtyHexWaterChunksSystem.html",
    "title": "Class CalcDirtyHexWaterChunksSystem | Hex Terrains",
    "summary": "Class CalcDirtyHexWaterChunksSystem Inheritance object ComponentSystemBase SystemBase CalcDirtyHexChunksSystem<HexWaterData, HexWaterRenderData> CalcDirtyHexWaterChunksSystem Inherited Members CalcDirtyHexChunksSystem<HexWaterData, HexWaterRenderData>.CalcDirtyChunks(HexWaterData, HexWaterRenderData) SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Systems Assembly: fwt.hexterrains.dll Syntax [UpdateInGroup(typeof(HexTerrainsInitializationGroup))] [UpdateAfter(typeof(CalcHexWaterCellMetricsSystem))] public class CalcDirtyHexWaterChunksSystem : CalcDirtyHexChunksSystem<HexWaterData, HexWaterRenderData> Methods OnCreateForCompiler() Declaration protected override void OnCreateForCompiler() Overrides Unity.Entities.ComponentSystemBase.OnCreateForCompiler() OnUpdate() Implement OnUpdate() to perform the major work of this system. Declaration protected override void OnUpdate() Overrides Unity.Entities.SystemBase.OnUpdate() Remarks By default, the system invokes `OnUpdate()` once every frame on the main thread. To skip OnUpdate if all of the system's [EntityQueries] are empty, use the [RequireMatchingQueriesForUpdateAttribute]. To limit when OnUpdate is invoked, you can specify components that must exist, or queries that match specific Entities. To do this, call Unity.Entities.ComponentSystemBase.RequireForUpdate<T>() or Unity.Entities.ComponentSystemBase.RequireForUpdate(Unity.Entities.EntityQuery) in the system's OnCreate method. For more information, see [ShouldRunSystem]. The [Entities.ForEach] and [Job.WithCode] constructions provide convenient mechanisms for defining jobs. You can also instantiate and schedule an Unity.Entities.IJobChunk instance; you can use the [C# Job System] or you can perform work on the main thread. If you call Unity.Entities.EntityManager methods that perform structural changes on the main thread, be sure to arrange the system order to minimize the performance impact of the resulting [sync points]. Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Systems.CalcGroundBiomeColorsSystem.html": {
    "href": "api/Fwt.HexTerrains.Systems.CalcGroundBiomeColorsSystem.html",
    "title": "Class CalcGroundBiomeColorsSystem | Hex Terrains",
    "summary": "Class CalcGroundBiomeColorsSystem Inheritance object ComponentSystemBase SystemBase CalcCellBiomeColorsSystem<HexGroundData> CalcGroundBiomeColorsSystem Inherited Members CalcCellBiomeColorsSystem<HexGroundData>.UpdateData(HexGroundData) CalcCellBiomeColorsSystem<HexGroundData>.UpdateData(HexGroundData, HexSurfaceData) SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Systems Assembly: fwt.hexterrains.dll Syntax public class CalcGroundBiomeColorsSystem : CalcCellBiomeColorsSystem<HexGroundData> Methods OnCreateForCompiler() Declaration protected override void OnCreateForCompiler() Overrides Unity.Entities.ComponentSystemBase.OnCreateForCompiler() OnUpdate() Implement OnUpdate() to perform the major work of this system. Declaration protected override void OnUpdate() Overrides Unity.Entities.SystemBase.OnUpdate() Remarks By default, the system invokes `OnUpdate()` once every frame on the main thread. To skip OnUpdate if all of the system's [EntityQueries] are empty, use the [RequireMatchingQueriesForUpdateAttribute]. To limit when OnUpdate is invoked, you can specify components that must exist, or queries that match specific Entities. To do this, call Unity.Entities.ComponentSystemBase.RequireForUpdate<T>() or Unity.Entities.ComponentSystemBase.RequireForUpdate(Unity.Entities.EntityQuery) in the system's OnCreate method. For more information, see [ShouldRunSystem]. The [Entities.ForEach] and [Job.WithCode] constructions provide convenient mechanisms for defining jobs. You can also instantiate and schedule an Unity.Entities.IJobChunk instance; you can use the [C# Job System] or you can perform work on the main thread. If you call Unity.Entities.EntityManager methods that perform structural changes on the main thread, be sure to arrange the system order to minimize the performance impact of the resulting [sync points]. Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Systems.CalcHexCellMetricsSystem-1.html": {
    "href": "api/Fwt.HexTerrains.Systems.CalcHexCellMetricsSystem-1.html",
    "title": "Class CalcHexCellMetricsSystem<TSurface> | Hex Terrains",
    "summary": "Class CalcHexCellMetricsSystem<TSurface> Base class for systems that calculate cell metrics for provided surface (TSurface) Inheritance object ComponentSystemBase SystemBase CalcHexCellMetricsSystem<TSurface> CalcHexGroundCellMetricsSystem CalcHexWaterCellMetricsSystem Inherited Members SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.OnUpdate() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Systems Assembly: fwt.hexterrains.dll Syntax public abstract class CalcHexCellMetricsSystem<TSurface> : SystemBase where TSurface : HexSurfaceData Type Parameters Name Description TSurface type of surface data this system calculates metrics for Methods CalcCellMetrics(TSurface) Call this method from inherited system to calculate cell metrics for the provided surface data. Override this method if you need to change the way cell metrics are calculated. Declaration public virtual void CalcCellMetrics(TSurface surfaceData) Parameters Type Name Description TSurface surfaceData ScheduleCalculateMetricsJob(HeightMapDataLayer, CellBiomesDataLayer, CellMetricsDataLayer, HexTerrainSettings, HexTerrainMetrics, JobHandle) Schedules a job that calculates CellMetrics for the provided surface data. Override this function if you want to schedule another job to do this. Declaration protected virtual JobHandle ScheduleCalculateMetricsJob(HeightMapDataLayer heightMap, CellBiomesDataLayer biomesMap, CellMetricsDataLayer cellMetrics, HexTerrainSettings settings, HexTerrainMetrics terrainMetrics, JobHandle dependency) Parameters Type Name Description HeightMapDataLayer heightMap HeightMap data layer CellBiomesDataLayer biomesMap BiomesMap data layer CellMetricsDataLayer cellMetrics CellMetrics data layer HexTerrainSettings settings settings of the terrain HexTerrainMetrics terrainMetrics metrics of the terrain JobHandle dependency JobHandle for scheduling a job that calculates metrics Returns Type Description JobHandle JobHandle of the scheduled job Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Systems.CalcHexChunkMeshSourcesSystem-2.html": {
    "href": "api/Fwt.HexTerrains.Systems.CalcHexChunkMeshSourcesSystem-2.html",
    "title": "Class CalcHexChunkMeshSourcesSystem<TSurface, TRenderData> | Hex Terrains",
    "summary": "Class CalcHexChunkMeshSourcesSystem<TSurface, TRenderData> Base system that calculates mesh sources for the chunks that are visible and dirty. When creating your own surface, override this system to work with your own surface data. Inheritance object ComponentSystemBase SystemBase CalcHexChunkMeshSourcesSystem<TSurface, TRenderData> CalcHexTerrainChunkMeshSourcesSystem CalcHexWaterChunkMeshSourcesSystem Inherited Members SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.OnUpdate() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Systems Assembly: fwt.hexterrains.dll Syntax [UpdateInGroup(typeof(HexTerrainsStartPreRenderGroup))] public abstract class CalcHexChunkMeshSourcesSystem<TSurface, TRenderData> : SystemBase where TSurface : HexSurfaceData where TRenderData : HexSurfaceRenderData<TSurface> Type Parameters Name Description TSurface TRenderData Methods CalcMeshSources(TSurface, TRenderData, ChunksGridData) Calculates mesh sources for the chunks that are visible and dirty. Declaration public virtual void CalcMeshSources(TSurface surfaceData, TRenderData renderData, ChunksGridData chunksGridData) Parameters Type Name Description TSurface surfaceData Surface data to generate meshes based on TRenderData renderData Render data that holds meshes and mesh sources for mesh generation ChunksGridData chunksGridData Chunks data (visible, dirty, etc.) ScheduleGenerateMeshJob(TSurface, TRenderData, ChunkMetricsDataLayer, ChunkMeshSourcesDataLayer, CellMetricsDataLayer, int, JobHandle) Schedules a job to generate a mesh for the chunk with a given index. If you want to introduce your own mesh generator, override this method and schedule your own job. Declaration protected virtual JobHandle ScheduleGenerateMeshJob(TSurface surfaceData, TRenderData renderData, ChunkMetricsDataLayer chunkMetrics, ChunkMeshSourcesDataLayer chunkMeshSources, CellMetricsDataLayer cellMetrics, int chunkIndex, JobHandle dependency) Parameters Type Name Description TSurface surfaceData Surface data to render a mesh based on TRenderData renderData Render data that holds generated meshes and mesh sources ChunkMetricsDataLayer chunkMetrics Metrix of all terrain chunks ChunkMeshSourcesDataLayer chunkMeshSources MeshSources to save generated mesh data into CellMetricsDataLayer cellMetrics Metrics of all cells int chunkIndex Index of chunk to schedule a mesh generation for JobHandle dependency JobHandle to use as parameter when scheduling job Returns Type Description JobHandle Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Systems.CalcHexGroundCellMetricsSystem.html": {
    "href": "api/Fwt.HexTerrains.Systems.CalcHexGroundCellMetricsSystem.html",
    "title": "Class CalcHexGroundCellMetricsSystem | Hex Terrains",
    "summary": "Class CalcHexGroundCellMetricsSystem Inheritance object ComponentSystemBase SystemBase CalcHexCellMetricsSystem<HexGroundData> CalcHexGroundCellMetricsSystem Inherited Members CalcHexCellMetricsSystem<HexGroundData>.CalcCellMetrics(HexGroundData) CalcHexCellMetricsSystem<HexGroundData>.ScheduleCalculateMetricsJob(HeightMapDataLayer, CellBiomesDataLayer, CellMetricsDataLayer, HexTerrainSettings, HexTerrainMetrics, JobHandle) SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Systems Assembly: fwt.hexterrains.dll Syntax [UpdateInGroup(typeof(HexTerrainsInitializationGroup))] public class CalcHexGroundCellMetricsSystem : CalcHexCellMetricsSystem<HexGroundData> Methods OnCreateForCompiler() Declaration protected override void OnCreateForCompiler() Overrides Unity.Entities.ComponentSystemBase.OnCreateForCompiler() OnUpdate() Implement OnUpdate() to perform the major work of this system. Declaration protected override void OnUpdate() Overrides Unity.Entities.SystemBase.OnUpdate() Remarks By default, the system invokes `OnUpdate()` once every frame on the main thread. To skip OnUpdate if all of the system's [EntityQueries] are empty, use the [RequireMatchingQueriesForUpdateAttribute]. To limit when OnUpdate is invoked, you can specify components that must exist, or queries that match specific Entities. To do this, call Unity.Entities.ComponentSystemBase.RequireForUpdate<T>() or Unity.Entities.ComponentSystemBase.RequireForUpdate(Unity.Entities.EntityQuery) in the system's OnCreate method. For more information, see [ShouldRunSystem]. The [Entities.ForEach] and [Job.WithCode] constructions provide convenient mechanisms for defining jobs. You can also instantiate and schedule an Unity.Entities.IJobChunk instance; you can use the [C# Job System] or you can perform work on the main thread. If you call Unity.Entities.EntityManager methods that perform structural changes on the main thread, be sure to arrange the system order to minimize the performance impact of the resulting [sync points]. Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Systems.CalcHexSurfaceMeshesSystem-2.html": {
    "href": "api/Fwt.HexTerrains.Systems.CalcHexSurfaceMeshesSystem-2.html",
    "title": "Class CalcHexSurfaceMeshesSystem<TSurfaceData, TRenderData> | Hex Terrains",
    "summary": "Class CalcHexSurfaceMeshesSystem<TSurfaceData, TRenderData> Inheritance object ComponentSystemBase SystemBase CalcHexSurfaceMeshesSystem<TSurfaceData, TRenderData> CalcHexTerrainMeshesSystem CalcHexWaterMeshesSystem Inherited Members SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.OnUpdate() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Systems Assembly: fwt.hexterrains.dll Syntax public abstract class CalcHexSurfaceMeshesSystem<TSurfaceData, TRenderData> : SystemBase where TSurfaceData : HexSurfaceData where TRenderData : HexSurfaceRenderData<TSurfaceData> Type Parameters Name Description TSurfaceData TRenderData Methods CalcMeshes(TSurfaceData, TRenderData) Declaration public virtual void CalcMeshes(TSurfaceData surfaceData, TRenderData renderData) Parameters Type Name Description TSurfaceData surfaceData TRenderData renderData Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Systems.CalcHexTerrainChunkMeshSourcesSystem.html": {
    "href": "api/Fwt.HexTerrains.Systems.CalcHexTerrainChunkMeshSourcesSystem.html",
    "title": "Class CalcHexTerrainChunkMeshSourcesSystem | Hex Terrains",
    "summary": "Class CalcHexTerrainChunkMeshSourcesSystem Inheritance object ComponentSystemBase SystemBase CalcHexChunkMeshSourcesSystem<HexGroundData, HexGroundRenderData> CalcHexTerrainChunkMeshSourcesSystem Inherited Members CalcHexChunkMeshSourcesSystem<HexGroundData, HexGroundRenderData>.CalcMeshSources(HexGroundData, HexGroundRenderData, ChunksGridData) CalcHexChunkMeshSourcesSystem<HexGroundData, HexGroundRenderData>.ScheduleGenerateMeshJob(HexGroundData, HexGroundRenderData, ChunkMetricsDataLayer, ChunkMeshSourcesDataLayer, CellMetricsDataLayer, int, JobHandle) SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Systems Assembly: fwt.hexterrains.dll Syntax public class CalcHexTerrainChunkMeshSourcesSystem : CalcHexChunkMeshSourcesSystem<HexGroundData, HexGroundRenderData> Methods OnCreateForCompiler() Declaration protected override void OnCreateForCompiler() Overrides Unity.Entities.ComponentSystemBase.OnCreateForCompiler() OnUpdate() Implement OnUpdate() to perform the major work of this system. Declaration protected override void OnUpdate() Overrides Unity.Entities.SystemBase.OnUpdate() Remarks By default, the system invokes `OnUpdate()` once every frame on the main thread. To skip OnUpdate if all of the system's [EntityQueries] are empty, use the [RequireMatchingQueriesForUpdateAttribute]. To limit when OnUpdate is invoked, you can specify components that must exist, or queries that match specific Entities. To do this, call Unity.Entities.ComponentSystemBase.RequireForUpdate<T>() or Unity.Entities.ComponentSystemBase.RequireForUpdate(Unity.Entities.EntityQuery) in the system's OnCreate method. For more information, see [ShouldRunSystem]. The [Entities.ForEach] and [Job.WithCode] constructions provide convenient mechanisms for defining jobs. You can also instantiate and schedule an Unity.Entities.IJobChunk instance; you can use the [C# Job System] or you can perform work on the main thread. If you call Unity.Entities.EntityManager methods that perform structural changes on the main thread, be sure to arrange the system order to minimize the performance impact of the resulting [sync points]. Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Systems.CalcHexTerrainMeshesSystem.html": {
    "href": "api/Fwt.HexTerrains.Systems.CalcHexTerrainMeshesSystem.html",
    "title": "Class CalcHexTerrainMeshesSystem | Hex Terrains",
    "summary": "Class CalcHexTerrainMeshesSystem Inheritance object ComponentSystemBase SystemBase CalcHexSurfaceMeshesSystem<HexGroundData, HexGroundRenderData> CalcHexTerrainMeshesSystem Inherited Members CalcHexSurfaceMeshesSystem<HexGroundData, HexGroundRenderData>.CalcMeshes(HexGroundData, HexGroundRenderData) SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Systems Assembly: fwt.hexterrains.dll Syntax [UpdateInGroup(typeof(HexTerrainsFinishPreRenderGroup))] public class CalcHexTerrainMeshesSystem : CalcHexSurfaceMeshesSystem<HexGroundData, HexGroundRenderData> Methods OnCreateForCompiler() Declaration protected override void OnCreateForCompiler() Overrides Unity.Entities.ComponentSystemBase.OnCreateForCompiler() OnUpdate() Implement OnUpdate() to perform the major work of this system. Declaration protected override void OnUpdate() Overrides Unity.Entities.SystemBase.OnUpdate() Remarks By default, the system invokes `OnUpdate()` once every frame on the main thread. To skip OnUpdate if all of the system's [EntityQueries] are empty, use the [RequireMatchingQueriesForUpdateAttribute]. To limit when OnUpdate is invoked, you can specify components that must exist, or queries that match specific Entities. To do this, call Unity.Entities.ComponentSystemBase.RequireForUpdate<T>() or Unity.Entities.ComponentSystemBase.RequireForUpdate(Unity.Entities.EntityQuery) in the system's OnCreate method. For more information, see [ShouldRunSystem]. The [Entities.ForEach] and [Job.WithCode] constructions provide convenient mechanisms for defining jobs. You can also instantiate and schedule an Unity.Entities.IJobChunk instance; you can use the [C# Job System] or you can perform work on the main thread. If you call Unity.Entities.EntityManager methods that perform structural changes on the main thread, be sure to arrange the system order to minimize the performance impact of the resulting [sync points]. Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Systems.CalcHexWaterCellMetricsSystem.html": {
    "href": "api/Fwt.HexTerrains.Systems.CalcHexWaterCellMetricsSystem.html",
    "title": "Class CalcHexWaterCellMetricsSystem | Hex Terrains",
    "summary": "Class CalcHexWaterCellMetricsSystem Inheritance object ComponentSystemBase SystemBase CalcHexCellMetricsSystem<HexWaterData> CalcHexWaterCellMetricsSystem Inherited Members CalcHexCellMetricsSystem<HexWaterData>.CalcCellMetrics(HexWaterData) CalcHexCellMetricsSystem<HexWaterData>.ScheduleCalculateMetricsJob(HeightMapDataLayer, CellBiomesDataLayer, CellMetricsDataLayer, HexTerrainSettings, HexTerrainMetrics, JobHandle) SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Systems Assembly: fwt.hexterrains.dll Syntax [UpdateInGroup(typeof(HexTerrainsInitializationGroup))] public class CalcHexWaterCellMetricsSystem : CalcHexCellMetricsSystem<HexWaterData> Methods OnCreateForCompiler() Declaration protected override void OnCreateForCompiler() Overrides Unity.Entities.ComponentSystemBase.OnCreateForCompiler() OnUpdate() Implement OnUpdate() to perform the major work of this system. Declaration protected override void OnUpdate() Overrides Unity.Entities.SystemBase.OnUpdate() Remarks By default, the system invokes `OnUpdate()` once every frame on the main thread. To skip OnUpdate if all of the system's [EntityQueries] are empty, use the [RequireMatchingQueriesForUpdateAttribute]. To limit when OnUpdate is invoked, you can specify components that must exist, or queries that match specific Entities. To do this, call Unity.Entities.ComponentSystemBase.RequireForUpdate<T>() or Unity.Entities.ComponentSystemBase.RequireForUpdate(Unity.Entities.EntityQuery) in the system's OnCreate method. For more information, see [ShouldRunSystem]. The [Entities.ForEach] and [Job.WithCode] constructions provide convenient mechanisms for defining jobs. You can also instantiate and schedule an Unity.Entities.IJobChunk instance; you can use the [C# Job System] or you can perform work on the main thread. If you call Unity.Entities.EntityManager methods that perform structural changes on the main thread, be sure to arrange the system order to minimize the performance impact of the resulting [sync points]. Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Systems.CalcHexWaterChunkMeshSourcesSystem.html": {
    "href": "api/Fwt.HexTerrains.Systems.CalcHexWaterChunkMeshSourcesSystem.html",
    "title": "Class CalcHexWaterChunkMeshSourcesSystem | Hex Terrains",
    "summary": "Class CalcHexWaterChunkMeshSourcesSystem Inheritance object ComponentSystemBase SystemBase CalcHexChunkMeshSourcesSystem<HexWaterData, HexWaterRenderData> CalcHexWaterChunkMeshSourcesSystem Inherited Members CalcHexChunkMeshSourcesSystem<HexWaterData, HexWaterRenderData>.CalcMeshSources(HexWaterData, HexWaterRenderData, ChunksGridData) CalcHexChunkMeshSourcesSystem<HexWaterData, HexWaterRenderData>.ScheduleGenerateMeshJob(HexWaterData, HexWaterRenderData, ChunkMetricsDataLayer, ChunkMeshSourcesDataLayer, CellMetricsDataLayer, int, JobHandle) SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Systems Assembly: fwt.hexterrains.dll Syntax public class CalcHexWaterChunkMeshSourcesSystem : CalcHexChunkMeshSourcesSystem<HexWaterData, HexWaterRenderData> Methods OnCreateForCompiler() Declaration protected override void OnCreateForCompiler() Overrides Unity.Entities.ComponentSystemBase.OnCreateForCompiler() OnUpdate() Implement OnUpdate() to perform the major work of this system. Declaration protected override void OnUpdate() Overrides Unity.Entities.SystemBase.OnUpdate() Remarks By default, the system invokes `OnUpdate()` once every frame on the main thread. To skip OnUpdate if all of the system's [EntityQueries] are empty, use the [RequireMatchingQueriesForUpdateAttribute]. To limit when OnUpdate is invoked, you can specify components that must exist, or queries that match specific Entities. To do this, call Unity.Entities.ComponentSystemBase.RequireForUpdate<T>() or Unity.Entities.ComponentSystemBase.RequireForUpdate(Unity.Entities.EntityQuery) in the system's OnCreate method. For more information, see [ShouldRunSystem]. The [Entities.ForEach] and [Job.WithCode] constructions provide convenient mechanisms for defining jobs. You can also instantiate and schedule an Unity.Entities.IJobChunk instance; you can use the [C# Job System] or you can perform work on the main thread. If you call Unity.Entities.EntityManager methods that perform structural changes on the main thread, be sure to arrange the system order to minimize the performance impact of the resulting [sync points]. Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Systems.CalcHexWaterMeshesSystem.html": {
    "href": "api/Fwt.HexTerrains.Systems.CalcHexWaterMeshesSystem.html",
    "title": "Class CalcHexWaterMeshesSystem | Hex Terrains",
    "summary": "Class CalcHexWaterMeshesSystem Inheritance object ComponentSystemBase SystemBase CalcHexSurfaceMeshesSystem<HexWaterData, HexWaterRenderData> CalcHexWaterMeshesSystem Inherited Members CalcHexSurfaceMeshesSystem<HexWaterData, HexWaterRenderData>.CalcMeshes(HexWaterData, HexWaterRenderData) SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Systems Assembly: fwt.hexterrains.dll Syntax [UpdateInGroup(typeof(HexTerrainsFinishPreRenderGroup))] public class CalcHexWaterMeshesSystem : CalcHexSurfaceMeshesSystem<HexWaterData, HexWaterRenderData> Methods OnCreateForCompiler() Declaration protected override void OnCreateForCompiler() Overrides Unity.Entities.ComponentSystemBase.OnCreateForCompiler() OnUpdate() Implement OnUpdate() to perform the major work of this system. Declaration protected override void OnUpdate() Overrides Unity.Entities.SystemBase.OnUpdate() Remarks By default, the system invokes `OnUpdate()` once every frame on the main thread. To skip OnUpdate if all of the system's [EntityQueries] are empty, use the [RequireMatchingQueriesForUpdateAttribute]. To limit when OnUpdate is invoked, you can specify components that must exist, or queries that match specific Entities. To do this, call Unity.Entities.ComponentSystemBase.RequireForUpdate<T>() or Unity.Entities.ComponentSystemBase.RequireForUpdate(Unity.Entities.EntityQuery) in the system's OnCreate method. For more information, see [ShouldRunSystem]. The [Entities.ForEach] and [Job.WithCode] constructions provide convenient mechanisms for defining jobs. You can also instantiate and schedule an Unity.Entities.IJobChunk instance; you can use the [C# Job System] or you can perform work on the main thread. If you call Unity.Entities.EntityManager methods that perform structural changes on the main thread, be sure to arrange the system order to minimize the performance impact of the resulting [sync points]. Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Systems.CalcWaterBiomeColorsSystem.html": {
    "href": "api/Fwt.HexTerrains.Systems.CalcWaterBiomeColorsSystem.html",
    "title": "Class CalcWaterBiomeColorsSystem | Hex Terrains",
    "summary": "Class CalcWaterBiomeColorsSystem Inheritance object ComponentSystemBase SystemBase CalcCellBiomeColorsSystem<HexWaterData> CalcWaterBiomeColorsSystem Inherited Members CalcCellBiomeColorsSystem<HexWaterData>.UpdateData(HexWaterData) CalcCellBiomeColorsSystem<HexWaterData>.UpdateData(HexWaterData, HexSurfaceData) SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Systems Assembly: fwt.hexterrains.dll Syntax public class CalcWaterBiomeColorsSystem : CalcCellBiomeColorsSystem<HexWaterData> Methods OnCreateForCompiler() Declaration protected override void OnCreateForCompiler() Overrides Unity.Entities.ComponentSystemBase.OnCreateForCompiler() OnUpdate() Implement OnUpdate() to perform the major work of this system. Declaration protected override void OnUpdate() Overrides Unity.Entities.SystemBase.OnUpdate() Remarks By default, the system invokes `OnUpdate()` once every frame on the main thread. To skip OnUpdate if all of the system's [EntityQueries] are empty, use the [RequireMatchingQueriesForUpdateAttribute]. To limit when OnUpdate is invoked, you can specify components that must exist, or queries that match specific Entities. To do this, call Unity.Entities.ComponentSystemBase.RequireForUpdate<T>() or Unity.Entities.ComponentSystemBase.RequireForUpdate(Unity.Entities.EntityQuery) in the system's OnCreate method. For more information, see [ShouldRunSystem]. The [Entities.ForEach] and [Job.WithCode] constructions provide convenient mechanisms for defining jobs. You can also instantiate and schedule an Unity.Entities.IJobChunk instance; you can use the [C# Job System] or you can perform work on the main thread. If you call Unity.Entities.EntityManager methods that perform structural changes on the main thread, be sure to arrange the system order to minimize the performance impact of the resulting [sync points]. Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Systems.CleanupChunksGridDataSystem.html": {
    "href": "api/Fwt.HexTerrains.Systems.CleanupChunksGridDataSystem.html",
    "title": "Class CleanupChunksGridDataSystem | Hex Terrains",
    "summary": "Class CleanupChunksGridDataSystem Inheritance object ComponentSystemBase SystemBase CleanupChunksGridDataSystem Inherited Members SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Systems Assembly: fwt.hexterrains.dll Syntax [UpdateInGroup(typeof(HexTerrainsCleanupGroup))] public class CleanupChunksGridDataSystem : SystemBase Methods OnCreateForCompiler() Declaration protected override void OnCreateForCompiler() Overrides Unity.Entities.ComponentSystemBase.OnCreateForCompiler() OnUpdate() Implement OnUpdate() to perform the major work of this system. Declaration protected override void OnUpdate() Overrides Unity.Entities.SystemBase.OnUpdate() Remarks By default, the system invokes `OnUpdate()` once every frame on the main thread. To skip OnUpdate if all of the system's [EntityQueries] are empty, use the [RequireMatchingQueriesForUpdateAttribute]. To limit when OnUpdate is invoked, you can specify components that must exist, or queries that match specific Entities. To do this, call Unity.Entities.ComponentSystemBase.RequireForUpdate<T>() or Unity.Entities.ComponentSystemBase.RequireForUpdate(Unity.Entities.EntityQuery) in the system's OnCreate method. For more information, see [ShouldRunSystem]. The [Entities.ForEach] and [Job.WithCode] constructions provide convenient mechanisms for defining jobs. You can also instantiate and schedule an Unity.Entities.IJobChunk instance; you can use the [C# Job System] or you can perform work on the main thread. If you call Unity.Entities.EntityManager methods that perform structural changes on the main thread, be sure to arrange the system order to minimize the performance impact of the resulting [sync points]. Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Systems.CleanupHexGroundDataSystem.html": {
    "href": "api/Fwt.HexTerrains.Systems.CleanupHexGroundDataSystem.html",
    "title": "Class CleanupHexGroundDataSystem | Hex Terrains",
    "summary": "Class CleanupHexGroundDataSystem Inheritance object ComponentSystemBase SystemBase CleanupHexSurfaceDataSystem<HexGroundData> CleanupHexGroundDataSystem Inherited Members CleanupHexSurfaceDataSystem<HexGroundData>.CleanupSurfaceData(HexGroundData) SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Systems Assembly: fwt.hexterrains.dll Syntax [UpdateInGroup(typeof(HexTerrainsCleanupGroup))] public class CleanupHexGroundDataSystem : CleanupHexSurfaceDataSystem<HexGroundData> Methods OnCreateForCompiler() Declaration protected override void OnCreateForCompiler() Overrides Unity.Entities.ComponentSystemBase.OnCreateForCompiler() OnUpdate() Implement OnUpdate() to perform the major work of this system. Declaration protected override void OnUpdate() Overrides Unity.Entities.SystemBase.OnUpdate() Remarks By default, the system invokes `OnUpdate()` once every frame on the main thread. To skip OnUpdate if all of the system's [EntityQueries] are empty, use the [RequireMatchingQueriesForUpdateAttribute]. To limit when OnUpdate is invoked, you can specify components that must exist, or queries that match specific Entities. To do this, call Unity.Entities.ComponentSystemBase.RequireForUpdate<T>() or Unity.Entities.ComponentSystemBase.RequireForUpdate(Unity.Entities.EntityQuery) in the system's OnCreate method. For more information, see [ShouldRunSystem]. The [Entities.ForEach] and [Job.WithCode] constructions provide convenient mechanisms for defining jobs. You can also instantiate and schedule an Unity.Entities.IJobChunk instance; you can use the [C# Job System] or you can perform work on the main thread. If you call Unity.Entities.EntityManager methods that perform structural changes on the main thread, be sure to arrange the system order to minimize the performance impact of the resulting [sync points]. Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Systems.CleanupHexSurfaceDataSystem-1.html": {
    "href": "api/Fwt.HexTerrains.Systems.CleanupHexSurfaceDataSystem-1.html",
    "title": "Class CleanupHexSurfaceDataSystem<TSurface> | Hex Terrains",
    "summary": "Class CleanupHexSurfaceDataSystem<TSurface> Inheritance object ComponentSystemBase SystemBase CleanupHexSurfaceDataSystem<TSurface> CleanupHexGroundDataSystem CleanupHexWaterDataSystem Inherited Members SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.OnUpdate() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Systems Assembly: fwt.hexterrains.dll Syntax [UpdateInGroup(typeof(HexTerrainsCleanupGroup))] public abstract class CleanupHexSurfaceDataSystem<TSurface> : SystemBase where TSurface : HexSurfaceData Type Parameters Name Description TSurface Methods CleanupSurfaceData(TSurface) Declaration public virtual void CleanupSurfaceData(TSurface surface) Parameters Type Name Description TSurface surface Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Systems.CleanupHexSurfaceRenderDataSystem-2.html": {
    "href": "api/Fwt.HexTerrains.Systems.CleanupHexSurfaceRenderDataSystem-2.html",
    "title": "Class CleanupHexSurfaceRenderDataSystem<TSurface, TRenderData> | Hex Terrains",
    "summary": "Class CleanupHexSurfaceRenderDataSystem<TSurface, TRenderData> Inheritance object ComponentSystemBase SystemBase CleanupHexSurfaceRenderDataSystem<TSurface, TRenderData> CleanupHexTerrainRenderDataSystem CleanupHexWaterRenderDataSystem Inherited Members SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.OnUpdate() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Systems Assembly: fwt.hexterrains.dll Syntax [UpdateInGroup(typeof(HexTerrainsCleanupGroup))] public abstract class CleanupHexSurfaceRenderDataSystem<TSurface, TRenderData> : SystemBase where TSurface : HexSurfaceData where TRenderData : HexSurfaceRenderData<TSurface> Type Parameters Name Description TSurface TRenderData Methods CleanupRenderData(TRenderData) Declaration public virtual void CleanupRenderData(TRenderData renderData) Parameters Type Name Description TRenderData renderData Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Systems.CleanupHexTerrainRenderDataSystem.html": {
    "href": "api/Fwt.HexTerrains.Systems.CleanupHexTerrainRenderDataSystem.html",
    "title": "Class CleanupHexTerrainRenderDataSystem | Hex Terrains",
    "summary": "Class CleanupHexTerrainRenderDataSystem Inheritance object ComponentSystemBase SystemBase CleanupHexSurfaceRenderDataSystem<HexGroundData, HexGroundRenderData> CleanupHexTerrainRenderDataSystem Inherited Members CleanupHexSurfaceRenderDataSystem<HexGroundData, HexGroundRenderData>.CleanupRenderData(HexGroundRenderData) SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Systems Assembly: fwt.hexterrains.dll Syntax [UpdateInGroup(typeof(HexTerrainsCleanupGroup))] public class CleanupHexTerrainRenderDataSystem : CleanupHexSurfaceRenderDataSystem<HexGroundData, HexGroundRenderData> Methods OnCreateForCompiler() Declaration protected override void OnCreateForCompiler() Overrides Unity.Entities.ComponentSystemBase.OnCreateForCompiler() OnUpdate() Implement OnUpdate() to perform the major work of this system. Declaration protected override void OnUpdate() Overrides Unity.Entities.SystemBase.OnUpdate() Remarks By default, the system invokes `OnUpdate()` once every frame on the main thread. To skip OnUpdate if all of the system's [EntityQueries] are empty, use the [RequireMatchingQueriesForUpdateAttribute]. To limit when OnUpdate is invoked, you can specify components that must exist, or queries that match specific Entities. To do this, call Unity.Entities.ComponentSystemBase.RequireForUpdate<T>() or Unity.Entities.ComponentSystemBase.RequireForUpdate(Unity.Entities.EntityQuery) in the system's OnCreate method. For more information, see [ShouldRunSystem]. The [Entities.ForEach] and [Job.WithCode] constructions provide convenient mechanisms for defining jobs. You can also instantiate and schedule an Unity.Entities.IJobChunk instance; you can use the [C# Job System] or you can perform work on the main thread. If you call Unity.Entities.EntityManager methods that perform structural changes on the main thread, be sure to arrange the system order to minimize the performance impact of the resulting [sync points]. Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Systems.CleanupHexWaterDataSystem.html": {
    "href": "api/Fwt.HexTerrains.Systems.CleanupHexWaterDataSystem.html",
    "title": "Class CleanupHexWaterDataSystem | Hex Terrains",
    "summary": "Class CleanupHexWaterDataSystem Inheritance object ComponentSystemBase SystemBase CleanupHexSurfaceDataSystem<HexWaterData> CleanupHexWaterDataSystem Inherited Members CleanupHexSurfaceDataSystem<HexWaterData>.CleanupSurfaceData(HexWaterData) SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Systems Assembly: fwt.hexterrains.dll Syntax [UpdateInGroup(typeof(HexTerrainsCleanupGroup))] public class CleanupHexWaterDataSystem : CleanupHexSurfaceDataSystem<HexWaterData> Methods OnCreateForCompiler() Declaration protected override void OnCreateForCompiler() Overrides Unity.Entities.ComponentSystemBase.OnCreateForCompiler() OnUpdate() Implement OnUpdate() to perform the major work of this system. Declaration protected override void OnUpdate() Overrides Unity.Entities.SystemBase.OnUpdate() Remarks By default, the system invokes `OnUpdate()` once every frame on the main thread. To skip OnUpdate if all of the system's [EntityQueries] are empty, use the [RequireMatchingQueriesForUpdateAttribute]. To limit when OnUpdate is invoked, you can specify components that must exist, or queries that match specific Entities. To do this, call Unity.Entities.ComponentSystemBase.RequireForUpdate<T>() or Unity.Entities.ComponentSystemBase.RequireForUpdate(Unity.Entities.EntityQuery) in the system's OnCreate method. For more information, see [ShouldRunSystem]. The [Entities.ForEach] and [Job.WithCode] constructions provide convenient mechanisms for defining jobs. You can also instantiate and schedule an Unity.Entities.IJobChunk instance; you can use the [C# Job System] or you can perform work on the main thread. If you call Unity.Entities.EntityManager methods that perform structural changes on the main thread, be sure to arrange the system order to minimize the performance impact of the resulting [sync points]. Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Systems.CleanupHexWaterRenderDataSystem.html": {
    "href": "api/Fwt.HexTerrains.Systems.CleanupHexWaterRenderDataSystem.html",
    "title": "Class CleanupHexWaterRenderDataSystem | Hex Terrains",
    "summary": "Class CleanupHexWaterRenderDataSystem Inheritance object ComponentSystemBase SystemBase CleanupHexSurfaceRenderDataSystem<HexWaterData, HexWaterRenderData> CleanupHexWaterRenderDataSystem Inherited Members CleanupHexSurfaceRenderDataSystem<HexWaterData, HexWaterRenderData>.CleanupRenderData(HexWaterRenderData) SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Systems Assembly: fwt.hexterrains.dll Syntax [UpdateInGroup(typeof(HexTerrainsCleanupGroup))] public class CleanupHexWaterRenderDataSystem : CleanupHexSurfaceRenderDataSystem<HexWaterData, HexWaterRenderData> Methods OnCreateForCompiler() Declaration protected override void OnCreateForCompiler() Overrides Unity.Entities.ComponentSystemBase.OnCreateForCompiler() OnUpdate() Implement OnUpdate() to perform the major work of this system. Declaration protected override void OnUpdate() Overrides Unity.Entities.SystemBase.OnUpdate() Remarks By default, the system invokes `OnUpdate()` once every frame on the main thread. To skip OnUpdate if all of the system's [EntityQueries] are empty, use the [RequireMatchingQueriesForUpdateAttribute]. To limit when OnUpdate is invoked, you can specify components that must exist, or queries that match specific Entities. To do this, call Unity.Entities.ComponentSystemBase.RequireForUpdate<T>() or Unity.Entities.ComponentSystemBase.RequireForUpdate(Unity.Entities.EntityQuery) in the system's OnCreate method. For more information, see [ShouldRunSystem]. The [Entities.ForEach] and [Job.WithCode] constructions provide convenient mechanisms for defining jobs. You can also instantiate and schedule an Unity.Entities.IJobChunk instance; you can use the [C# Job System] or you can perform work on the main thread. If you call Unity.Entities.EntityManager methods that perform structural changes on the main thread, be sure to arrange the system order to minimize the performance impact of the resulting [sync points]. Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Systems.CreateChunksGridDataSystem.html": {
    "href": "api/Fwt.HexTerrains.Systems.CreateChunksGridDataSystem.html",
    "title": "Class CreateChunksGridDataSystem | Hex Terrains",
    "summary": "Class CreateChunksGridDataSystem Inheritance object ComponentSystemBase SystemBase CreateChunksGridDataSystem Inherited Members SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Systems Assembly: fwt.hexterrains.dll Syntax [UpdateInGroup(typeof(CreateHexTerrainsGroup))] [UpdateAfter(typeof(CreateHexTerrainRenderDataSystem))] public class CreateChunksGridDataSystem : SystemBase Methods OnCreateForCompiler() Declaration protected override void OnCreateForCompiler() Overrides Unity.Entities.ComponentSystemBase.OnCreateForCompiler() OnUpdate() Implement OnUpdate() to perform the major work of this system. Declaration protected override void OnUpdate() Overrides Unity.Entities.SystemBase.OnUpdate() Remarks By default, the system invokes `OnUpdate()` once every frame on the main thread. To skip OnUpdate if all of the system's [EntityQueries] are empty, use the [RequireMatchingQueriesForUpdateAttribute]. To limit when OnUpdate is invoked, you can specify components that must exist, or queries that match specific Entities. To do this, call Unity.Entities.ComponentSystemBase.RequireForUpdate<T>() or Unity.Entities.ComponentSystemBase.RequireForUpdate(Unity.Entities.EntityQuery) in the system's OnCreate method. For more information, see [ShouldRunSystem]. The [Entities.ForEach] and [Job.WithCode] constructions provide convenient mechanisms for defining jobs. You can also instantiate and schedule an Unity.Entities.IJobChunk instance; you can use the [C# Job System] or you can perform work on the main thread. If you call Unity.Entities.EntityManager methods that perform structural changes on the main thread, be sure to arrange the system order to minimize the performance impact of the resulting [sync points]. Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Systems.CreateColorMapTexturesSystem.html": {
    "href": "api/Fwt.HexTerrains.Systems.CreateColorMapTexturesSystem.html",
    "title": "Class CreateColorMapTexturesSystem | Hex Terrains",
    "summary": "Class CreateColorMapTexturesSystem Inheritance object ComponentSystemBase SystemBase CreateColorMapTexturesSystem Inherited Members SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Systems Assembly: fwt.hexterrains.dll Syntax [UpdateInGroup(typeof(CreateHexTerrainsGroup))] public class CreateColorMapTexturesSystem : SystemBase Methods OnCreateForCompiler() Declaration protected override void OnCreateForCompiler() Overrides Unity.Entities.ComponentSystemBase.OnCreateForCompiler() OnUpdate() Implement OnUpdate() to perform the major work of this system. Declaration protected override void OnUpdate() Overrides Unity.Entities.SystemBase.OnUpdate() Remarks By default, the system invokes `OnUpdate()` once every frame on the main thread. To skip OnUpdate if all of the system's [EntityQueries] are empty, use the [RequireMatchingQueriesForUpdateAttribute]. To limit when OnUpdate is invoked, you can specify components that must exist, or queries that match specific Entities. To do this, call Unity.Entities.ComponentSystemBase.RequireForUpdate<T>() or Unity.Entities.ComponentSystemBase.RequireForUpdate(Unity.Entities.EntityQuery) in the system's OnCreate method. For more information, see [ShouldRunSystem]. The [Entities.ForEach] and [Job.WithCode] constructions provide convenient mechanisms for defining jobs. You can also instantiate and schedule an Unity.Entities.IJobChunk instance; you can use the [C# Job System] or you can perform work on the main thread. If you call Unity.Entities.EntityManager methods that perform structural changes on the main thread, be sure to arrange the system order to minimize the performance impact of the resulting [sync points]. Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Systems.CreateHexGroundDataSystem.html": {
    "href": "api/Fwt.HexTerrains.Systems.CreateHexGroundDataSystem.html",
    "title": "Class CreateHexGroundDataSystem | Hex Terrains",
    "summary": "Class CreateHexGroundDataSystem Inheritance object ComponentSystemBase SystemBase CreateHexSurfaceDataSystem<CreateHexGroundDataRequest, HexGroundData, HexGroundRenderData> CreateHexGroundDataSystem Inherited Members CreateHexSurfaceDataSystem<CreateHexGroundDataRequest, HexGroundData, HexGroundRenderData>.CreateSurfaceData(Entity, in HexTerrain, in NativeArray<Color32>, in CreateHexGroundDataRequest, in EntityCommandBuffer) CreateHexSurfaceDataSystem<CreateHexGroundDataRequest, HexGroundData, HexGroundRenderData>.FillSurfaceData(HexGroundData, CreateHexGroundDataRequest, HexTerrainSettings) CreateHexSurfaceDataSystem<CreateHexGroundDataRequest, HexGroundData, HexGroundRenderData>.FillHeightmap(HexGroundData, CreateHexGroundDataRequest) CreateHexSurfaceDataSystem<CreateHexGroundDataRequest, HexGroundData, HexGroundRenderData>.FillColormap(HexGroundData, CreateHexGroundDataRequest) CreateHexSurfaceDataSystem<CreateHexGroundDataRequest, HexGroundData, HexGroundRenderData>.ApplyHeightmap(HexGroundData, CreateHexGroundDataRequest) CreateHexSurfaceDataSystem<CreateHexGroundDataRequest, HexGroundData, HexGroundRenderData>.GenerateRandomColormap(HexGroundData, CreateHexGroundDataRequest) CreateHexSurfaceDataSystem<CreateHexGroundDataRequest, HexGroundData, HexGroundRenderData>.GenerateAutoColormap(HexGroundData, CreateHexGroundDataRequest, HexTerrainSettings) CreateHexSurfaceDataSystem<CreateHexGroundDataRequest, HexGroundData, HexGroundRenderData>.GetAutoBiomeHeightLevel(byte, FixedArray8<int>) CreateHexSurfaceDataSystem<CreateHexGroundDataRequest, HexGroundData, HexGroundRenderData>.GetAutoColorForLevel(int, FixedArray8<int>) CreateHexSurfaceDataSystem<CreateHexGroundDataRequest, HexGroundData, HexGroundRenderData>.GenerateRandomData(HexGroundData, CreateHexGroundDataRequest) SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Systems Assembly: fwt.hexterrains.dll Syntax [UpdateInGroup(typeof(CreateHexTerrainsGroup))] public class CreateHexGroundDataSystem : CreateHexSurfaceDataSystem<CreateHexGroundDataRequest, HexGroundData, HexGroundRenderData> Methods OnCreateForCompiler() Declaration protected override void OnCreateForCompiler() Overrides Unity.Entities.ComponentSystemBase.OnCreateForCompiler() OnUpdate() Implement OnUpdate() to perform the major work of this system. Declaration protected override void OnUpdate() Overrides Unity.Entities.SystemBase.OnUpdate() Remarks By default, the system invokes `OnUpdate()` once every frame on the main thread. To skip OnUpdate if all of the system's [EntityQueries] are empty, use the [RequireMatchingQueriesForUpdateAttribute]. To limit when OnUpdate is invoked, you can specify components that must exist, or queries that match specific Entities. To do this, call Unity.Entities.ComponentSystemBase.RequireForUpdate<T>() or Unity.Entities.ComponentSystemBase.RequireForUpdate(Unity.Entities.EntityQuery) in the system's OnCreate method. For more information, see [ShouldRunSystem]. The [Entities.ForEach] and [Job.WithCode] constructions provide convenient mechanisms for defining jobs. You can also instantiate and schedule an Unity.Entities.IJobChunk instance; you can use the [C# Job System] or you can perform work on the main thread. If you call Unity.Entities.EntityManager methods that perform structural changes on the main thread, be sure to arrange the system order to minimize the performance impact of the resulting [sync points]. Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Systems.CreateHexSurfaceDataSystem-3.html": {
    "href": "api/Fwt.HexTerrains.Systems.CreateHexSurfaceDataSystem-3.html",
    "title": "Class CreateHexSurfaceDataSystem<TRequest, TSurfaceData, TRenderData> | Hex Terrains",
    "summary": "Class CreateHexSurfaceDataSystem<TRequest, TSurfaceData, TRenderData> Base class for systems that create hex surface data. Inheritance object ComponentSystemBase SystemBase CreateHexSurfaceDataSystem<TRequest, TSurfaceData, TRenderData> CreateHexGroundDataSystem CreateHexWaterDataSystem Inherited Members SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.OnUpdate() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Systems Assembly: fwt.hexterrains.dll Syntax [UpdateInGroup(typeof(CreateHexTerrainsGroup))] public abstract class CreateHexSurfaceDataSystem<TRequest, TSurfaceData, TRenderData> : SystemBase where TRequest : unmanaged, IComponentData, ICreateHexSurfaceDataRequest where TSurfaceData : HexSurfaceData, IComponentData, new() where TRenderData : HexSurfaceRenderData<TSurfaceData>, IComponentData, new() Type Parameters Name Description TRequest type of request IComponentData with configuration of surface data TSurfaceData type of surface data to create TRenderData type of render data for this surface data Methods ApplyHeightmap(TSurfaceData, TRequest) Declaration protected virtual void ApplyHeightmap(TSurfaceData terrainData, TRequest initRequest) Parameters Type Name Description TSurfaceData terrainData TRequest initRequest CreateSurfaceData(Entity, in HexTerrain, in NativeArray<Color32>, in TRequest, in EntityCommandBuffer) Declaration public virtual TSurfaceData CreateSurfaceData(Entity entity, in HexTerrain hexTerrain, in NativeArray<Color32> colorPalette, in TRequest request, in EntityCommandBuffer ecb) Parameters Type Name Description Entity entity HexTerrain hexTerrain NativeArray<Color32> colorPalette TRequest request EntityCommandBuffer ecb Returns Type Description TSurfaceData FillColormap(TSurfaceData, TRequest) Declaration protected virtual void FillColormap(TSurfaceData surfaceData, TRequest request) Parameters Type Name Description TSurfaceData surfaceData TRequest request FillHeightmap(TSurfaceData, TRequest) Declaration protected virtual void FillHeightmap(TSurfaceData surfaceData, TRequest request) Parameters Type Name Description TSurfaceData surfaceData TRequest request FillSurfaceData(TSurfaceData, TRequest, HexTerrainSettings) Declaration protected virtual void FillSurfaceData(TSurfaceData surfaceData, TRequest request, HexTerrainSettings settings) Parameters Type Name Description TSurfaceData surfaceData TRequest request HexTerrainSettings settings GenerateAutoColormap(TSurfaceData, TRequest, HexTerrainSettings) Declaration protected virtual void GenerateAutoColormap(TSurfaceData terrainData, TRequest initRequest, HexTerrainSettings settings) Parameters Type Name Description TSurfaceData terrainData TRequest initRequest HexTerrainSettings settings GenerateRandomColormap(TSurfaceData, TRequest) Declaration protected virtual void GenerateRandomColormap(TSurfaceData terrainData, TRequest initRequest) Parameters Type Name Description TSurfaceData terrainData TRequest initRequest GenerateRandomData(TSurfaceData, TRequest) Declaration protected virtual void GenerateRandomData(TSurfaceData surfaceData, TRequest request) Parameters Type Name Description TSurfaceData surfaceData TRequest request GetAutoBiomeHeightLevel(byte, FixedArray8<int>) Declaration public virtual int GetAutoBiomeHeightLevel(byte height, FixedArray8<int> levelBiomes) Parameters Type Name Description byte height FixedArray8<int> levelBiomes Returns Type Description int GetAutoColorForLevel(int, FixedArray8<int>) Declaration public virtual byte GetAutoColorForLevel(int level, FixedArray8<int> levelColors) Parameters Type Name Description int level FixedArray8<int> levelColors Returns Type Description byte Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Systems.CreateHexSurfaceRenderDataSystem-4.html": {
    "href": "api/Fwt.HexTerrains.Systems.CreateHexSurfaceRenderDataSystem-4.html",
    "title": "Class CreateHexSurfaceRenderDataSystem<TRequest, TSurfaceData, TRenderData, TRenderConfig> | Hex Terrains",
    "summary": "Class CreateHexSurfaceRenderDataSystem<TRequest, TSurfaceData, TRenderData, TRenderConfig> Inheritance object ComponentSystemBase SystemBase CreateHexSurfaceRenderDataSystem<TRequest, TSurfaceData, TRenderData, TRenderConfig> CreateHexTerrainRenderDataSystem CreateHexWaterRenderDataSystem Inherited Members SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.OnUpdate() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Systems Assembly: fwt.hexterrains.dll Syntax public abstract class CreateHexSurfaceRenderDataSystem<TRequest, TSurfaceData, TRenderData, TRenderConfig> : SystemBase where TRequest : unmanaged, IComponentData, ICreateHexSurfaceRenderDataRequest where TSurfaceData : HexSurfaceData, IComponentData, new() where TRenderData : HexSurfaceRenderData<TSurfaceData>, IComponentData, new() where TRenderConfig : unmanaged, IBufferElementData, IHexSurfaceRenderConfig Type Parameters Name Description TRequest TSurfaceData TRenderData TRenderConfig Methods CreateRenderData(Entity, in HexTerrain, in TSurfaceData, in TRequest, in DynamicBuffer<TRenderConfig>, in Camera, in EntityCommandBuffer) Declaration public virtual void CreateRenderData(Entity entity, in HexTerrain hexTerrain, in TSurfaceData surfaceData, in TRequest request, in DynamicBuffer<TRenderConfig> renderConfigs, in Camera camera, in EntityCommandBuffer ecb) Parameters Type Name Description Entity entity HexTerrain hexTerrain TSurfaceData surfaceData TRequest request DynamicBuffer<TRenderConfig> renderConfigs Camera camera EntityCommandBuffer ecb Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Systems.CreateHexTerrainRenderDataSystem.html": {
    "href": "api/Fwt.HexTerrains.Systems.CreateHexTerrainRenderDataSystem.html",
    "title": "Class CreateHexTerrainRenderDataSystem | Hex Terrains",
    "summary": "Class CreateHexTerrainRenderDataSystem Inheritance object ComponentSystemBase SystemBase CreateHexSurfaceRenderDataSystem<CreateHexGroundRenderDataRequest, HexGroundData, HexGroundRenderData, HexGroundRenderConfig> CreateHexTerrainRenderDataSystem Inherited Members CreateHexSurfaceRenderDataSystem<CreateHexGroundRenderDataRequest, HexGroundData, HexGroundRenderData, HexGroundRenderConfig>.CreateRenderData(Entity, in HexTerrain, in HexGroundData, in CreateHexGroundRenderDataRequest, in DynamicBuffer<HexGroundRenderConfig>, in Camera, in EntityCommandBuffer) SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Systems Assembly: fwt.hexterrains.dll Syntax [UpdateInGroup(typeof(CreateHexTerrainsGroup))] [UpdateAfter(typeof(CreateHexGroundDataSystem))] public class CreateHexTerrainRenderDataSystem : CreateHexSurfaceRenderDataSystem<CreateHexGroundRenderDataRequest, HexGroundData, HexGroundRenderData, HexGroundRenderConfig> Methods OnCreateForCompiler() Declaration protected override void OnCreateForCompiler() Overrides Unity.Entities.ComponentSystemBase.OnCreateForCompiler() OnUpdate() Implement OnUpdate() to perform the major work of this system. Declaration protected override void OnUpdate() Overrides Unity.Entities.SystemBase.OnUpdate() Remarks By default, the system invokes `OnUpdate()` once every frame on the main thread. To skip OnUpdate if all of the system's [EntityQueries] are empty, use the [RequireMatchingQueriesForUpdateAttribute]. To limit when OnUpdate is invoked, you can specify components that must exist, or queries that match specific Entities. To do this, call Unity.Entities.ComponentSystemBase.RequireForUpdate<T>() or Unity.Entities.ComponentSystemBase.RequireForUpdate(Unity.Entities.EntityQuery) in the system's OnCreate method. For more information, see [ShouldRunSystem]. The [Entities.ForEach] and [Job.WithCode] constructions provide convenient mechanisms for defining jobs. You can also instantiate and schedule an Unity.Entities.IJobChunk instance; you can use the [C# Job System] or you can perform work on the main thread. If you call Unity.Entities.EntityManager methods that perform structural changes on the main thread, be sure to arrange the system order to minimize the performance impact of the resulting [sync points]. Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Systems.CreateHexWaterDataSystem.html": {
    "href": "api/Fwt.HexTerrains.Systems.CreateHexWaterDataSystem.html",
    "title": "Class CreateHexWaterDataSystem | Hex Terrains",
    "summary": "Class CreateHexWaterDataSystem Inheritance object ComponentSystemBase SystemBase CreateHexSurfaceDataSystem<CreateHexWaterDataRequest, HexWaterData, HexWaterRenderData> CreateHexWaterDataSystem Inherited Members CreateHexSurfaceDataSystem<CreateHexWaterDataRequest, HexWaterData, HexWaterRenderData>.CreateSurfaceData(Entity, in HexTerrain, in NativeArray<Color32>, in CreateHexWaterDataRequest, in EntityCommandBuffer) CreateHexSurfaceDataSystem<CreateHexWaterDataRequest, HexWaterData, HexWaterRenderData>.FillSurfaceData(HexWaterData, CreateHexWaterDataRequest, HexTerrainSettings) CreateHexSurfaceDataSystem<CreateHexWaterDataRequest, HexWaterData, HexWaterRenderData>.FillHeightmap(HexWaterData, CreateHexWaterDataRequest) CreateHexSurfaceDataSystem<CreateHexWaterDataRequest, HexWaterData, HexWaterRenderData>.FillColormap(HexWaterData, CreateHexWaterDataRequest) CreateHexSurfaceDataSystem<CreateHexWaterDataRequest, HexWaterData, HexWaterRenderData>.ApplyHeightmap(HexWaterData, CreateHexWaterDataRequest) CreateHexSurfaceDataSystem<CreateHexWaterDataRequest, HexWaterData, HexWaterRenderData>.GenerateRandomColormap(HexWaterData, CreateHexWaterDataRequest) CreateHexSurfaceDataSystem<CreateHexWaterDataRequest, HexWaterData, HexWaterRenderData>.GenerateAutoColormap(HexWaterData, CreateHexWaterDataRequest, HexTerrainSettings) CreateHexSurfaceDataSystem<CreateHexWaterDataRequest, HexWaterData, HexWaterRenderData>.GetAutoBiomeHeightLevel(byte, FixedArray8<int>) CreateHexSurfaceDataSystem<CreateHexWaterDataRequest, HexWaterData, HexWaterRenderData>.GetAutoColorForLevel(int, FixedArray8<int>) CreateHexSurfaceDataSystem<CreateHexWaterDataRequest, HexWaterData, HexWaterRenderData>.GenerateRandomData(HexWaterData, CreateHexWaterDataRequest) SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Systems Assembly: fwt.hexterrains.dll Syntax [UpdateInGroup(typeof(CreateHexTerrainsGroup))] public class CreateHexWaterDataSystem : CreateHexSurfaceDataSystem<CreateHexWaterDataRequest, HexWaterData, HexWaterRenderData> Methods OnCreateForCompiler() Declaration protected override void OnCreateForCompiler() Overrides Unity.Entities.ComponentSystemBase.OnCreateForCompiler() OnUpdate() Implement OnUpdate() to perform the major work of this system. Declaration protected override void OnUpdate() Overrides Unity.Entities.SystemBase.OnUpdate() Remarks By default, the system invokes `OnUpdate()` once every frame on the main thread. To skip OnUpdate if all of the system's [EntityQueries] are empty, use the [RequireMatchingQueriesForUpdateAttribute]. To limit when OnUpdate is invoked, you can specify components that must exist, or queries that match specific Entities. To do this, call Unity.Entities.ComponentSystemBase.RequireForUpdate<T>() or Unity.Entities.ComponentSystemBase.RequireForUpdate(Unity.Entities.EntityQuery) in the system's OnCreate method. For more information, see [ShouldRunSystem]. The [Entities.ForEach] and [Job.WithCode] constructions provide convenient mechanisms for defining jobs. You can also instantiate and schedule an Unity.Entities.IJobChunk instance; you can use the [C# Job System] or you can perform work on the main thread. If you call Unity.Entities.EntityManager methods that perform structural changes on the main thread, be sure to arrange the system order to minimize the performance impact of the resulting [sync points]. Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Systems.CreateHexWaterRenderDataSystem.html": {
    "href": "api/Fwt.HexTerrains.Systems.CreateHexWaterRenderDataSystem.html",
    "title": "Class CreateHexWaterRenderDataSystem | Hex Terrains",
    "summary": "Class CreateHexWaterRenderDataSystem Inheritance object ComponentSystemBase SystemBase CreateHexSurfaceRenderDataSystem<CreateHexWaterRenderDataRequest, HexWaterData, HexWaterRenderData, HexWaterRenderConfig> CreateHexWaterRenderDataSystem Inherited Members CreateHexSurfaceRenderDataSystem<CreateHexWaterRenderDataRequest, HexWaterData, HexWaterRenderData, HexWaterRenderConfig>.CreateRenderData(Entity, in HexTerrain, in HexWaterData, in CreateHexWaterRenderDataRequest, in DynamicBuffer<HexWaterRenderConfig>, in Camera, in EntityCommandBuffer) SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Systems Assembly: fwt.hexterrains.dll Syntax [UpdateInGroup(typeof(CreateHexTerrainsGroup))] [UpdateAfter(typeof(CreateHexWaterDataSystem))] public class CreateHexWaterRenderDataSystem : CreateHexSurfaceRenderDataSystem<CreateHexWaterRenderDataRequest, HexWaterData, HexWaterRenderData, HexWaterRenderConfig> Methods OnCreateForCompiler() Declaration protected override void OnCreateForCompiler() Overrides Unity.Entities.ComponentSystemBase.OnCreateForCompiler() OnUpdate() Implement OnUpdate() to perform the major work of this system. Declaration protected override void OnUpdate() Overrides Unity.Entities.SystemBase.OnUpdate() Remarks By default, the system invokes `OnUpdate()` once every frame on the main thread. To skip OnUpdate if all of the system's [EntityQueries] are empty, use the [RequireMatchingQueriesForUpdateAttribute]. To limit when OnUpdate is invoked, you can specify components that must exist, or queries that match specific Entities. To do this, call Unity.Entities.ComponentSystemBase.RequireForUpdate<T>() or Unity.Entities.ComponentSystemBase.RequireForUpdate(Unity.Entities.EntityQuery) in the system's OnCreate method. For more information, see [ShouldRunSystem]. The [Entities.ForEach] and [Job.WithCode] constructions provide convenient mechanisms for defining jobs. You can also instantiate and schedule an Unity.Entities.IJobChunk instance; you can use the [C# Job System] or you can perform work on the main thread. If you call Unity.Entities.EntityManager methods that perform structural changes on the main thread, be sure to arrange the system order to minimize the performance impact of the resulting [sync points]. Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Systems.RaycastHexTerrainsSystem.html": {
    "href": "api/Fwt.HexTerrains.Systems.RaycastHexTerrainsSystem.html",
    "title": "Class RaycastHexTerrainsSystem | Hex Terrains",
    "summary": "Class RaycastHexTerrainsSystem Inheritance object ComponentSystemBase SystemBase RaycastHexTerrainsSystem Inherited Members SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Systems Assembly: fwt.hexterrains.dll Syntax [UpdateInGroup(typeof(HexTerrainsInitializationGroup), OrderFirst = true)] [UpdateBefore(typeof(HexTerrainsInitializationBuffer))] public class RaycastHexTerrainsSystem : SystemBase Methods OnCreateForCompiler() Declaration protected override void OnCreateForCompiler() Overrides Unity.Entities.ComponentSystemBase.OnCreateForCompiler() OnDestroy() Called when this system is destroyed. Declaration protected override void OnDestroy() Overrides Unity.Entities.ComponentSystemBase.OnDestroy() Remarks Systems are destroyed when the application shuts down, the World is destroyed, or you call Unity.Entities.World.DestroySystem(Unity.Entities.SystemHandle). In the Unity Editor, system destruction occurs when you exit Play Mode and when scripts are reloaded. OnUpdate() Implement OnUpdate() to perform the major work of this system. Declaration protected override void OnUpdate() Overrides Unity.Entities.SystemBase.OnUpdate() Remarks By default, the system invokes `OnUpdate()` once every frame on the main thread. To skip OnUpdate if all of the system's [EntityQueries] are empty, use the [RequireMatchingQueriesForUpdateAttribute]. To limit when OnUpdate is invoked, you can specify components that must exist, or queries that match specific Entities. To do this, call Unity.Entities.ComponentSystemBase.RequireForUpdate<T>() or Unity.Entities.ComponentSystemBase.RequireForUpdate(Unity.Entities.EntityQuery) in the system's OnCreate method. For more information, see [ShouldRunSystem]. The [Entities.ForEach] and [Job.WithCode] constructions provide convenient mechanisms for defining jobs. You can also instantiate and schedule an Unity.Entities.IJobChunk instance; you can use the [C# Job System] or you can perform work on the main thread. If you call Unity.Entities.EntityManager methods that perform structural changes on the main thread, be sure to arrange the system order to minimize the performance impact of the resulting [sync points]. OnUpdate1() Declaration protected void OnUpdate1() Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Systems.RenderHexGroundSystem.html": {
    "href": "api/Fwt.HexTerrains.Systems.RenderHexGroundSystem.html",
    "title": "Class RenderHexGroundSystem | Hex Terrains",
    "summary": "Class RenderHexGroundSystem Inheritance object ComponentSystemBase SystemBase RenderHexSurfaceSystem<HexGroundData, HexGroundRenderData> RenderHexGroundSystem Inherited Members RenderHexSurfaceSystem<HexGroundData, HexGroundRenderData>.RenderSurface(in LocalToWorld, in HexGroundRenderData, in HexTerrainViewMode, in ChunksGridData, in Camera) SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Systems Assembly: fwt.hexterrains.dll Syntax [UpdateInGroup(typeof(HexTerrainsRenderGroup), OrderLast = true)] public class RenderHexGroundSystem : RenderHexSurfaceSystem<HexGroundData, HexGroundRenderData> Methods OnCreateForCompiler() Declaration protected override void OnCreateForCompiler() Overrides Unity.Entities.ComponentSystemBase.OnCreateForCompiler() OnUpdate() Implement OnUpdate() to perform the major work of this system. Declaration protected override void OnUpdate() Overrides Unity.Entities.SystemBase.OnUpdate() Remarks By default, the system invokes `OnUpdate()` once every frame on the main thread. To skip OnUpdate if all of the system's [EntityQueries] are empty, use the [RequireMatchingQueriesForUpdateAttribute]. To limit when OnUpdate is invoked, you can specify components that must exist, or queries that match specific Entities. To do this, call Unity.Entities.ComponentSystemBase.RequireForUpdate<T>() or Unity.Entities.ComponentSystemBase.RequireForUpdate(Unity.Entities.EntityQuery) in the system's OnCreate method. For more information, see [ShouldRunSystem]. The [Entities.ForEach] and [Job.WithCode] constructions provide convenient mechanisms for defining jobs. You can also instantiate and schedule an Unity.Entities.IJobChunk instance; you can use the [C# Job System] or you can perform work on the main thread. If you call Unity.Entities.EntityManager methods that perform structural changes on the main thread, be sure to arrange the system order to minimize the performance impact of the resulting [sync points]. Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Systems.RenderHexSurfaceSystem-2.html": {
    "href": "api/Fwt.HexTerrains.Systems.RenderHexSurfaceSystem-2.html",
    "title": "Class RenderHexSurfaceSystem<TSurfaceData, TRenderData> | Hex Terrains",
    "summary": "Class RenderHexSurfaceSystem<TSurfaceData, TRenderData> Inheritance object ComponentSystemBase SystemBase RenderHexSurfaceSystem<TSurfaceData, TRenderData> RenderHexGroundSystem RenderHexWaterSystem Inherited Members SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.OnUpdate() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Systems Assembly: fwt.hexterrains.dll Syntax public abstract class RenderHexSurfaceSystem<TSurfaceData, TRenderData> : SystemBase where TSurfaceData : HexSurfaceData where TRenderData : HexSurfaceRenderData<TSurfaceData> Type Parameters Name Description TSurfaceData TRenderData Methods RenderSurface(in LocalToWorld, in TRenderData, in HexTerrainViewMode, in ChunksGridData, in Camera) Declaration public virtual void RenderSurface(in LocalToWorld terrainTransform, in TRenderData renderData, in HexTerrainViewMode viewMode, in ChunksGridData chunksGridData, in Camera camera) Parameters Type Name Description LocalToWorld terrainTransform TRenderData renderData HexTerrainViewMode viewMode ChunksGridData chunksGridData Camera camera Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Systems.RenderHexWaterSystem.html": {
    "href": "api/Fwt.HexTerrains.Systems.RenderHexWaterSystem.html",
    "title": "Class RenderHexWaterSystem | Hex Terrains",
    "summary": "Class RenderHexWaterSystem Inheritance object ComponentSystemBase SystemBase RenderHexSurfaceSystem<HexWaterData, HexWaterRenderData> RenderHexWaterSystem Inherited Members RenderHexSurfaceSystem<HexWaterData, HexWaterRenderData>.RenderSurface(in LocalToWorld, in HexWaterRenderData, in HexTerrainViewMode, in ChunksGridData, in Camera) SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Systems Assembly: fwt.hexterrains.dll Syntax [UpdateInGroup(typeof(HexTerrainsRenderGroup), OrderLast = true)] public class RenderHexWaterSystem : RenderHexSurfaceSystem<HexWaterData, HexWaterRenderData> Methods OnCreateForCompiler() Declaration protected override void OnCreateForCompiler() Overrides Unity.Entities.ComponentSystemBase.OnCreateForCompiler() OnUpdate() Implement OnUpdate() to perform the major work of this system. Declaration protected override void OnUpdate() Overrides Unity.Entities.SystemBase.OnUpdate() Remarks By default, the system invokes `OnUpdate()` once every frame on the main thread. To skip OnUpdate if all of the system's [EntityQueries] are empty, use the [RequireMatchingQueriesForUpdateAttribute]. To limit when OnUpdate is invoked, you can specify components that must exist, or queries that match specific Entities. To do this, call Unity.Entities.ComponentSystemBase.RequireForUpdate<T>() or Unity.Entities.ComponentSystemBase.RequireForUpdate(Unity.Entities.EntityQuery) in the system's OnCreate method. For more information, see [ShouldRunSystem]. The [Entities.ForEach] and [Job.WithCode] constructions provide convenient mechanisms for defining jobs. You can also instantiate and schedule an Unity.Entities.IJobChunk instance; you can use the [C# Job System] or you can perform work on the main thread. If you call Unity.Entities.EntityManager methods that perform structural changes on the main thread, be sure to arrange the system order to minimize the performance impact of the resulting [sync points]. Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Systems.UpdateColorMapTextureSystem.html": {
    "href": "api/Fwt.HexTerrains.Systems.UpdateColorMapTextureSystem.html",
    "title": "Class UpdateColorMapTextureSystem | Hex Terrains",
    "summary": "Class UpdateColorMapTextureSystem Inheritance object ComponentSystemBase SystemBase UpdateColorMapTextureSystem UpdateSamplesColorMapTexturesSystem Inherited Members SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Systems Assembly: fwt.hexterrains.dll Syntax [UpdateInGroup(typeof(HexTerrainsStartPreRenderGroup))] public abstract class UpdateColorMapTextureSystem : SystemBase Methods OnCreateForCompiler() Declaration protected override void OnCreateForCompiler() Overrides Unity.Entities.ComponentSystemBase.OnCreateForCompiler() OnUpdate() Implement OnUpdate() to perform the major work of this system. Declaration protected override void OnUpdate() Overrides Unity.Entities.SystemBase.OnUpdate() Remarks By default, the system invokes `OnUpdate()` once every frame on the main thread. To skip OnUpdate if all of the system's [EntityQueries] are empty, use the [RequireMatchingQueriesForUpdateAttribute]. To limit when OnUpdate is invoked, you can specify components that must exist, or queries that match specific Entities. To do this, call Unity.Entities.ComponentSystemBase.RequireForUpdate<T>() or Unity.Entities.ComponentSystemBase.RequireForUpdate(Unity.Entities.EntityQuery) in the system's OnCreate method. For more information, see [ShouldRunSystem]. The [Entities.ForEach] and [Job.WithCode] constructions provide convenient mechanisms for defining jobs. You can also instantiate and schedule an Unity.Entities.IJobChunk instance; you can use the [C# Job System] or you can perform work on the main thread. If you call Unity.Entities.EntityManager methods that perform structural changes on the main thread, be sure to arrange the system order to minimize the performance impact of the resulting [sync points]. UpdateColorMapTextures(Entity, ref ColorMapTexturesCache, in DynamicBuffer<ColorMapTexture>, HexTerrain, in HexTerrainViewMode) Declaration protected virtual void UpdateColorMapTextures(Entity entity, ref ColorMapTexturesCache colorMaps, in DynamicBuffer<ColorMapTexture> texturesBuf, HexTerrain terrain, in HexTerrainViewMode viewMode) Parameters Type Name Description Entity entity ColorMapTexturesCache colorMaps DynamicBuffer<ColorMapTexture> texturesBuf HexTerrain terrain HexTerrainViewMode viewMode UpdateColorMap_0(Entity, ref ColorMapTexturesCache, in DynamicBuffer<ColorMapTexture>, HexTerrain, in HexTerrainViewMode) Declaration protected bool UpdateColorMap_0(Entity entity, ref ColorMapTexturesCache colorMaps, in DynamicBuffer<ColorMapTexture> texturesBuf, HexTerrain terrain, in HexTerrainViewMode viewMode) Parameters Type Name Description Entity entity ColorMapTexturesCache colorMaps DynamicBuffer<ColorMapTexture> texturesBuf HexTerrain terrain HexTerrainViewMode viewMode Returns Type Description bool UpdateColorMap_1(Entity, ref ColorMapTexturesCache, in DynamicBuffer<ColorMapTexture>, HexTerrain, in HexTerrainViewMode) Declaration protected bool UpdateColorMap_1(Entity entity, ref ColorMapTexturesCache colorMaps, in DynamicBuffer<ColorMapTexture> texturesBuf, HexTerrain terrain, in HexTerrainViewMode viewMode) Parameters Type Name Description Entity entity ColorMapTexturesCache colorMaps DynamicBuffer<ColorMapTexture> texturesBuf HexTerrain terrain HexTerrainViewMode viewMode Returns Type Description bool UpdateColorMap_2(Entity, ref ColorMapTexturesCache, in DynamicBuffer<ColorMapTexture>, HexTerrain, in HexTerrainViewMode) Declaration protected bool UpdateColorMap_2(Entity entity, ref ColorMapTexturesCache colorMaps, in DynamicBuffer<ColorMapTexture> texturesBuf, HexTerrain terrain, in HexTerrainViewMode viewMode) Parameters Type Name Description Entity entity ColorMapTexturesCache colorMaps DynamicBuffer<ColorMapTexture> texturesBuf HexTerrain terrain HexTerrainViewMode viewMode Returns Type Description bool UpdateColorMap_3(Entity, ref ColorMapTexturesCache, in DynamicBuffer<ColorMapTexture>, HexTerrain, in HexTerrainViewMode) Declaration protected bool UpdateColorMap_3(Entity entity, ref ColorMapTexturesCache colorMaps, in DynamicBuffer<ColorMapTexture> texturesBuf, HexTerrain terrain, in HexTerrainViewMode viewMode) Parameters Type Name Description Entity entity ColorMapTexturesCache colorMaps DynamicBuffer<ColorMapTexture> texturesBuf HexTerrain terrain HexTerrainViewMode viewMode Returns Type Description bool Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Systems.UpdateMiniMapScreenSystemBase.html": {
    "href": "api/Fwt.HexTerrains.Systems.UpdateMiniMapScreenSystemBase.html",
    "title": "Class UpdateMiniMapScreenSystemBase | Hex Terrains",
    "summary": "Class UpdateMiniMapScreenSystemBase Inheritance object ComponentSystemBase SystemBase UpdateMiniMapScreenSystemBase UpdateSamplesMinimapScreen Inherited Members SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.OnUpdate() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.Systems Assembly: fwt.hexterrains.dll Syntax [UpdateInGroup(typeof(HexTerrainsStartPreRenderGroup))] public abstract class UpdateMiniMapScreenSystemBase : SystemBase Methods GetMinimapScreen(Entity) Declaration public abstract IMinimapScreen GetMinimapScreen(Entity terrainEntity) Parameters Type Name Description Entity terrainEntity Returns Type Description IMinimapScreen UpdateMiniMapScreen(Entity, in ColorMapTexturesCache, in DynamicBuffer<ColorMapTexture>, in HexTerrainViewMode) Declaration public virtual void UpdateMiniMapScreen(Entity terrainEntity, in ColorMapTexturesCache texturesCache, in DynamicBuffer<ColorMapTexture> textures, in HexTerrainViewMode viewMode) Parameters Type Name Description Entity terrainEntity ColorMapTexturesCache texturesCache DynamicBuffer<ColorMapTexture> textures HexTerrainViewMode viewMode Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.Systems.html": {
    "href": "api/Fwt.HexTerrains.Systems.html",
    "title": "Namespace Fwt.HexTerrains.Systems | Hex Terrains",
    "summary": "Namespace Fwt.HexTerrains.Systems Classes CalcCellBiomeColorsSystem<TSurfaceData> CalcChunkVisibilitySystem CalcDirtyHexChunksSystem<TSurface, TRenderData> CalcDirtyHexGroundChunksSystem CalcDirtyHexWaterChunksSystem CalcGroundBiomeColorsSystem CalcHexCellMetricsSystem<TSurface> Base class for systems that calculate cell metrics for provided surface (TSurface) CalcHexChunkMeshSourcesSystem<TSurface, TRenderData> Base system that calculates mesh sources for the chunks that are visible and dirty. When creating your own surface, override this system to work with your own surface data. CalcHexGroundCellMetricsSystem CalcHexSurfaceMeshesSystem<TSurfaceData, TRenderData> CalcHexTerrainChunkMeshSourcesSystem CalcHexTerrainMeshesSystem CalcHexWaterCellMetricsSystem CalcHexWaterChunkMeshSourcesSystem CalcHexWaterMeshesSystem CalcWaterBiomeColorsSystem CleanupChunksGridDataSystem CleanupHexGroundDataSystem CleanupHexSurfaceDataSystem<TSurface> CleanupHexSurfaceRenderDataSystem<TSurface, TRenderData> CleanupHexTerrainRenderDataSystem CleanupHexWaterDataSystem CleanupHexWaterRenderDataSystem CreateChunksGridDataSystem CreateColorMapTexturesSystem CreateHexGroundDataSystem CreateHexSurfaceDataSystem<TRequest, TSurfaceData, TRenderData> Base class for systems that create hex surface data. CreateHexSurfaceRenderDataSystem<TRequest, TSurfaceData, TRenderData, TRenderConfig> CreateHexTerrainRenderDataSystem CreateHexWaterDataSystem CreateHexWaterRenderDataSystem RaycastHexTerrainsSystem RenderHexGroundSystem RenderHexSurfaceSystem<TSurfaceData, TRenderData> RenderHexWaterSystem UpdateColorMapTextureSystem UpdateMiniMapScreenSystemBase"
  },
  "api/Fwt.HexTerrains.TerrainEditors.Data.HexTerrainEditor.html": {
    "href": "api/Fwt.HexTerrains.TerrainEditors.Data.HexTerrainEditor.html",
    "title": "Struct HexTerrainEditor | Hex Terrains",
    "summary": "Struct HexTerrainEditor Implements IComponentData IQueryTypeParameter Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.TerrainEditors.Data Assembly: fwt.hexterrains.dll Syntax public struct HexTerrainEditor : IComponentData, IQueryTypeParameter Fields TerrainEntity Declaration public Entity TerrainEntity Field Value Type Description Entity Implements Unity.Entities.IComponentData Unity.Entities.IQueryTypeParameter Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.TerrainEditors.Data.html": {
    "href": "api/Fwt.HexTerrains.TerrainEditors.Data.html",
    "title": "Namespace Fwt.HexTerrains.TerrainEditors.Data | Hex Terrains",
    "summary": "Namespace Fwt.HexTerrains.TerrainEditors.Data Structs HexTerrainEditor"
  },
  "api/Fwt.HexTerrains.TerrainEditors.HexTerrainEditorAuthoring.html": {
    "href": "api/Fwt.HexTerrains.TerrainEditors.HexTerrainEditorAuthoring.html",
    "title": "Class HexTerrainEditorAuthoring | Hex Terrains",
    "summary": "Class HexTerrainEditorAuthoring Inheritance object Object Component Behaviour MonoBehaviour HexTerrainEditorAuthoring Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.TerrainEditors Assembly: fwt.hexterrains.dll Syntax public class HexTerrainEditorAuthoring : MonoBehaviour Fields Terrain Declaration public HexTerrainAuthoring Terrain Field Value Type Description HexTerrainAuthoring Extension Methods Extensions_UnityObject.SmartDestroy<TObject>(TObject) Extensions_UnityObject.SmartDisableGameObject<TObject>(TObject) Extensions_UnityObject.SmartEnableGameObject<TObject>(TObject) HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.TerrainEditors.HexTerrainEditorBaker.html": {
    "href": "api/Fwt.HexTerrains.TerrainEditors.HexTerrainEditorBaker.html",
    "title": "Class HexTerrainEditorBaker | Hex Terrains",
    "summary": "Class HexTerrainEditorBaker Inheritance object IBaker Baker<HexTerrainEditorAuthoring> HexTerrainEditorBaker Inherited Members IBaker.GetSceneGUID() IBaker.GetComponent<T>() IBaker.GetComponent<T>(Component) IBaker.GetComponent<T>(GameObject) IBaker.GetComponents<T>(List<T>) IBaker.GetComponents<T>(Component, List<T>) IBaker.GetComponents<T>(GameObject, List<T>) IBaker.GetComponents<T>() IBaker.GetComponents<T>(Component) IBaker.GetComponents<T>(GameObject) IBaker.GetComponentInParent<T>() IBaker.GetComponentInParent<T>(Component) IBaker.GetComponentInParent<T>(GameObject) IBaker.GetComponentsInParent<T>(List<T>) IBaker.GetComponentsInParent<T>(Component, List<T>) IBaker.GetComponentsInParent<T>(GameObject, List<T>) IBaker.GetComponentsInParent<T>() IBaker.GetComponentsInParent<T>(Component) IBaker.GetComponentsInParent<T>(GameObject) IBaker.GetComponentInChildren<T>() IBaker.GetComponentInChildren<T>(Component) IBaker.GetComponentInChildren<T>(GameObject) IBaker.GetComponentsInChildren<T>(List<T>) IBaker.GetComponentsInChildren<T>(Component, List<T>) IBaker.GetComponentsInChildren<T>(GameObject, List<T>) IBaker.GetComponentsInChildren<T>() IBaker.GetComponentsInChildren<T>(Component) IBaker.GetComponentsInChildren<T>(GameObject) IBaker.GetParent() IBaker.GetParent(Component) IBaker.GetParent(GameObject) IBaker.GetParents() IBaker.GetParents(Component) IBaker.GetParents(GameObject) IBaker.GetParents(List<GameObject>) IBaker.GetParents(Component, List<GameObject>) IBaker.GetParents(GameObject, List<GameObject>) IBaker.GetChild(int) IBaker.GetChild(Component, int) IBaker.GetChild(GameObject, int) IBaker.GetChildren(bool) IBaker.GetChildren(Component, bool) IBaker.GetChildren(GameObject, bool) IBaker.GetChildren(List<GameObject>, bool) IBaker.GetChildren(Component, List<GameObject>, bool) IBaker.GetChildren(GameObject, List<GameObject>, bool) IBaker.GetChildCount() IBaker.GetChildCount(Component) IBaker.GetChildCount(GameObject) IBaker.GetName() IBaker.GetName(Component) IBaker.GetName(GameObject) IBaker.GetLayer() IBaker.GetLayer(Component) IBaker.GetLayer(GameObject) IBaker.GetTag() IBaker.GetTag(Component) IBaker.GetTag(GameObject) IBaker.GetEntity() IBaker.GetEntity(GameObject) IBaker.GetEntity(Component) IBaker.GetEntity(TransformUsageFlags) IBaker.GetEntity(GameObject, TransformUsageFlags) IBaker.GetEntity(Component, TransformUsageFlags) IBaker.GetEntityWithoutDependency() IBaker.IsActive() IBaker.IsActive(Component) IBaker.IsActive(GameObject) IBaker.IsActiveAndEnabled() IBaker.IsActiveAndEnabled(Component) IBaker.IsStatic() IBaker.IsStatic(Component) IBaker.IsStatic(GameObject) IBaker.IsClient() IBaker.IsServer() IBaker.DependsOn<T>(T) IBaker.DependsOnComponentInParent<T>() IBaker.DependsOnComponentInParent<T>(Component) IBaker.DependsOnComponentInParent<T>(GameObject) IBaker.DependsOnComponentsInParent<T>() IBaker.DependsOnComponentsInParent<T>(Component) IBaker.DependsOnComponentsInParent<T>(GameObject) IBaker.DependsOnComponentInChildren<T>() IBaker.DependsOnComponentInChildren<T>(Component) IBaker.DependsOnComponentInChildren<T>(GameObject) IBaker.DependsOnComponentsInChildren<T>() IBaker.DependsOnComponentsInChildren<T>(GameObject) IBaker.DependsOnComponentsInChildren<T>(Component) IBaker.DependsOnLightBaking() IBaker.AddBlobAsset<T>(ref BlobAssetReference<T>, out Hash128) IBaker.AddBlobAssetWithCustomHash<T>(ref BlobAssetReference<T>, Hash128) IBaker.TryGetBlobAssetReference<T>(Hash128, out BlobAssetReference<T>) IBaker.AddComponent<T>() IBaker.AddComponent<T>(in T) IBaker.AddComponent<T>(Entity) IBaker.AddComponent<T>(Entity, in T) IBaker.AddComponent(ComponentType) IBaker.AddComponent(Entity, ComponentType) IBaker.AddComponent(in ComponentTypeSet) IBaker.AddComponent(Entity, in ComponentTypeSet) IBaker.AddComponentObject<T>(T) IBaker.AddComponentObject<T>(Entity, T) IBaker.AddSharedComponentManaged<T>(T) IBaker.AddSharedComponentManaged<T>(Entity, T) IBaker.AddSharedComponent<T>(T) IBaker.AddSharedComponent<T>(Entity, T) IBaker.AddBuffer<T>() IBaker.AddBuffer<T>(Entity) IBaker.SetComponent<T>(Entity, in T) IBaker.SetComponentEnabled<T>(Entity, bool) IBaker.SetComponentEnabled<T>(bool) IBaker.SetSharedComponentManaged<T>(Entity, in T) IBaker.SetSharedComponent<T>(Entity, in T) IBaker.SetBuffer<T>() IBaker.SetBuffer<T>(Entity) IBaker.AppendToBuffer<T>(T) IBaker.AppendToBuffer<T>(Entity, T) IBaker.CreateAdditionalEntity() IBaker.CreateAdditionalEntity(TransformUsageFlags, bool, string) IBaker.CreateAdditionalEntities(NativeArray<Entity>, TransformUsageFlags, bool) IBaker.RegisterPrefabForBaking(GameObject) IBaker.AddTransformUsageFlags(TransformUsageFlags) IBaker.AddTransformUsageFlags(Entity, TransformUsageFlags) IBaker.IsBakingForEditor() IBaker.GetDotsSettings() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.TerrainEditors Assembly: fwt.hexterrains.dll Syntax public class HexTerrainEditorBaker : Baker<HexTerrainEditorAuthoring> Methods Bake(HexTerrainEditorAuthoring) Called in the baking process to bake the authoring component Declaration public override void Bake(HexTerrainEditorAuthoring authoring) Parameters Type Name Description HexTerrainEditorAuthoring authoring The authoring component to bake Overrides Baker<HexTerrainEditorAuthoring>.Bake(HexTerrainEditorAuthoring) Remarks This method will be called for every instance of TAuthoringType in order to bake that instance. Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.TerrainEditors.StateMachines.BrushUserToolState-1.html": {
    "href": "api/Fwt.HexTerrains.TerrainEditors.StateMachines.BrushUserToolState-1.html",
    "title": "Class BrushUserToolState<TBrushTarget> | Hex Terrains",
    "summary": "Class BrushUserToolState<TBrushTarget> Inheritance object SmState UserToolState BrushUserToolState<TBrushTarget> BrushUserToolState<TBrushTarget, TSettings> DeformHeightUserToolState<TBrushTarget> Implements ISmState Inherited Members UserToolState.Settings UserToolState.IsSubstatesVisible UserToolState.SubStateMachine UserToolState.UserToolType UserToolState.UserToolAPI UserToolState.HasSubtools UserToolState.IsChangeViewMode UserToolState.RequiredViewMode UserToolState.OriginalViewMode UserToolState.ShowSettingsScreen<TViewData, TScreen>(TViewData) UserToolState.GetUIScreen<TScreen>() UserToolState.HideSettingsScreen<TScreen>() UserToolState.SetupPlanetCursor(bool, int) UserToolState.SetupPlanetCursor(bool, int, Color32) UserToolState.SetupPlanetCursor(bool, int, Color32, bool) UserToolState.SetupPlanetCursor(bool) UserToolState.TrySetViewMode() UserToolState.TryRestoreViewMode() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.TerrainEditors.StateMachines Assembly: fwt.hexterrains.dll Syntax public abstract class BrushUserToolState<TBrushTarget> : UserToolState, ISmState where TBrushTarget : class Type Parameters Name Description TBrushTarget Constructors BrushUserToolState(IUserToolAPI) Declaration public BrushUserToolState(IUserToolAPI userToolAPI) Parameters Type Name Description IUserToolAPI userToolAPI Fields AllowRightMouseButton Declaration [Tooltip(\"If true, applies brush by right mouse click\")] public bool AllowRightMouseButton Field Value Type Description bool CanChangeBrushSize Declaration [Tooltip(\"If true, the brush size can be increased/decreased\")] public bool CanChangeBrushSize Field Value Type Description bool ChangeOpacityMultiplier Declaration public float ChangeOpacityMultiplier Field Value Type Description float PrevChangeTimeStamp Used to prevent applying brush too fast (next change will be applied at least after this amount of seconds after previous change) Declaration [NonSerialized] public float PrevChangeTimeStamp Field Value Type Description float TimeTreshold Declaration [Tooltip(\"Next change to terrain will be applied not sooner then this time after previous change\")] public float TimeTreshold Field Value Type Description float Properties BrushOpacity Declaration public float BrushOpacity { get; } Property Value Type Description float BrushSize Declaration public int BrushSize { get; } Property Value Type Description int ChangeBrushSizeKey Declaration public virtual KeyCode ChangeBrushSizeKey { get; set; } Property Value Type Description KeyCode ChangeModeKey Declaration [Tooltip(\"When this key is pressed, the brush mode will be 1 instead of default 0\")] public virtual KeyCode ChangeModeKey { get; set; } Property Value Type Description KeyCode ChangeOpacityKey Declaration [Tooltip(\"While this key pressed switches from changing size to changing opacity\")] public virtual KeyCode ChangeOpacityKey { get; set; } Property Value Type Description KeyCode CursorColor Declaration public virtual Color32 CursorColor { get; set; } Property Value Type Description Color32 DecreaseBrushSizeKey Declaration [Tooltip(\"This key decreases brush size/opacity\")] public virtual KeyCode DecreaseBrushSizeKey { get; set; } Property Value Type Description KeyCode DecreaseBrushSizeKey2 Declaration [Tooltip(\"This key decreases brush size/opacity\")] public virtual KeyCode DecreaseBrushSizeKey2 { get; set; } Property Value Type Description KeyCode IncreaseBrushSizeKey Declaration [Tooltip(\"This key increases brush size/opacity\")] public virtual KeyCode IncreaseBrushSizeKey { get; set; } Property Value Type Description KeyCode IncreaseBrushSizeKey2 Declaration [Tooltip(\"This key increases brush size/opacity\")] public virtual KeyCode IncreaseBrushSizeKey2 { get; set; } Property Value Type Description KeyCode IsTimeTresholdPassed True if Time Treshold is already passed after previous change has been applied. True means we can apply next brush change Declaration public bool IsTimeTresholdPassed { get; } Property Value Type Description bool Methods ApplyBrush(int, int2, int, TBrushTarget, int) Applies brush to the brushView. Returns true if changes were applied Declaration public abstract bool ApplyBrush(int brushMode, int2 cellCoord, int cellIndex, TBrushTarget brushTarget, int mouseButton) Parameters Type Name Description int brushMode int2 cellCoord int cellIndex TBrushTarget brushTarget int mouseButton Returns Type Description bool ApplyBrushToAllBrushPoints(int, int2, int, HexTerrainSettings, TBrushTarget, int) Declaration protected virtual bool ApplyBrushToAllBrushPoints(int brushMode, int2 centerCellCoord, int centerCellIndex, HexTerrainSettings terrainSettings, TBrushTarget brushTarget, int mouseButton) Parameters Type Name Description int brushMode int2 centerCellCoord int centerCellIndex HexTerrainSettings terrainSettings TBrushTarget brushTarget int mouseButton Returns Type Description bool ApplyBrushToAllCells(int, HexTerrainSettings, TBrushTarget, int) Declaration protected virtual bool ApplyBrushToAllCells(int brushMode, HexTerrainSettings settings, TBrushTarget brushTarget, int mouseButton) Parameters Type Name Description int brushMode HexTerrainSettings settings TBrushTarget brushTarget int mouseButton Returns Type Description bool ApplyToSingleCell(int, int2, int, TBrushTarget, int) Declaration protected virtual bool ApplyToSingleCell(int brushMode, int2 cellCoord, int cellIndex, TBrushTarget brushTarget, int mouseButton) Parameters Type Name Description int brushMode int2 cellCoord int cellIndex TBrushTarget brushTarget int mouseButton Returns Type Description bool CanBeAppliedToManyPoints(int) Declaration public virtual bool CanBeAppliedToManyPoints(int brushMode) Parameters Type Name Description int brushMode Returns Type Description bool GetBrushTarget() Declaration public virtual TBrushTarget GetBrushTarget() Returns Type Description TBrushTarget IsAppliedToEveryCellOnMap(int) Declaration public virtual bool IsAppliedToEveryCellOnMap(int brushMode) Parameters Type Name Description int brushMode Returns Type Description bool PrepareToRun() Declaration public override void PrepareToRun() Overrides UserToolState.PrepareToRun() PrepareToStop() Declaration public override void PrepareToStop() Overrides UserToolState.PrepareToStop() SetNewTimestamp() Saves current unscaled time as a new PrevChangeTimeStamp, which allows to prevent applying brush too often (see TimeTreshold) Declaration public void SetNewTimestamp() Tick() Declaration public override void Tick() Overrides UserToolState.Tick() TryApplyBrush() Declaration protected virtual void TryApplyBrush() UpdateBrush() Declaration protected virtual void UpdateBrush() Implements ISmState Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.TerrainEditors.StateMachines.BrushUserToolState-2.html": {
    "href": "api/Fwt.HexTerrains.TerrainEditors.StateMachines.BrushUserToolState-2.html",
    "title": "Class BrushUserToolState<TBrushTarget, TSettings> | Hex Terrains",
    "summary": "Class BrushUserToolState<TBrushTarget, TSettings> Inheritance object SmState UserToolState BrushUserToolState<TBrushTarget> BrushUserToolState<TBrushTarget, TSettings> BrushUserToolState<TBrushTarget, TSettings, TSettingsScreen> Implements ISmState Inherited Members BrushUserToolState<TBrushTarget>.PrevChangeTimeStamp BrushUserToolState<TBrushTarget>.TimeTreshold BrushUserToolState<TBrushTarget>.CanChangeBrushSize BrushUserToolState<TBrushTarget>.AllowRightMouseButton BrushUserToolState<TBrushTarget>.CursorColor BrushUserToolState<TBrushTarget>.ChangeModeKey BrushUserToolState<TBrushTarget>.ChangeBrushSizeKey BrushUserToolState<TBrushTarget>.IncreaseBrushSizeKey BrushUserToolState<TBrushTarget>.IncreaseBrushSizeKey2 BrushUserToolState<TBrushTarget>.DecreaseBrushSizeKey BrushUserToolState<TBrushTarget>.DecreaseBrushSizeKey2 BrushUserToolState<TBrushTarget>.ChangeOpacityKey BrushUserToolState<TBrushTarget>.IsTimeTresholdPassed BrushUserToolState<TBrushTarget>.BrushSize BrushUserToolState<TBrushTarget>.BrushOpacity BrushUserToolState<TBrushTarget>.ChangeOpacityMultiplier BrushUserToolState<TBrushTarget>.SetNewTimestamp() BrushUserToolState<TBrushTarget>.Tick() BrushUserToolState<TBrushTarget>.UpdateBrush() BrushUserToolState<TBrushTarget>.TryApplyBrush() BrushUserToolState<TBrushTarget>.ApplyToSingleCell(int, int2, int, TBrushTarget, int) BrushUserToolState<TBrushTarget>.ApplyBrushToAllCells(int, HexTerrainSettings, TBrushTarget, int) BrushUserToolState<TBrushTarget>.ApplyBrushToAllBrushPoints(int, int2, int, HexTerrainSettings, TBrushTarget, int) BrushUserToolState<TBrushTarget>.ApplyBrush(int, int2, int, TBrushTarget, int) BrushUserToolState<TBrushTarget>.CanBeAppliedToManyPoints(int) BrushUserToolState<TBrushTarget>.IsAppliedToEveryCellOnMap(int) BrushUserToolState<TBrushTarget>.GetBrushTarget() UserToolState.Settings UserToolState.IsSubstatesVisible UserToolState.SubStateMachine UserToolState.UserToolType UserToolState.UserToolAPI UserToolState.HasSubtools UserToolState.IsChangeViewMode UserToolState.RequiredViewMode UserToolState.OriginalViewMode UserToolState.ShowSettingsScreen<TViewData, TScreen>(TViewData) UserToolState.GetUIScreen<TScreen>() UserToolState.HideSettingsScreen<TScreen>() UserToolState.SetupPlanetCursor(bool, int) UserToolState.SetupPlanetCursor(bool, int, Color32) UserToolState.SetupPlanetCursor(bool, int, Color32, bool) UserToolState.SetupPlanetCursor(bool) UserToolState.TrySetViewMode() UserToolState.TryRestoreViewMode() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.TerrainEditors.StateMachines Assembly: fwt.hexterrains.dll Syntax public abstract class BrushUserToolState<TBrushTarget, TSettings> : BrushUserToolState<TBrushTarget>, ISmState where TBrushTarget : class Type Parameters Name Description TBrushTarget TSettings Constructors BrushUserToolState(IUserToolAPI) Declaration protected BrushUserToolState(IUserToolAPI userToolAPI) Parameters Type Name Description IUserToolAPI userToolAPI Fields DataSource Declaration [SerializeField] public TSettings DataSource Field Value Type Description TSettings Properties SettingsPlayerPrefsKeyName Declaration protected string SettingsPlayerPrefsKeyName { get; } Property Value Type Description string Methods InitDefaultSettings() Declaration protected virtual void InitDefaultSettings() InitSettings() Declaration protected virtual void InitSettings() LoadSettings() Declaration protected virtual void LoadSettings() LoadSettingsValueOrDefault<TValue>(string, TValue) Declaration protected virtual TValue LoadSettingsValueOrDefault<TValue>(string valueName, TValue defaultValue = default) Parameters Type Name Description string valueName TValue defaultValue Returns Type Description TValue Type Parameters Name Description TValue LoadSettingsValue<TValue>(string, TValue) Declaration protected virtual TValue LoadSettingsValue<TValue>(string valueName, TValue value) Parameters Type Name Description string valueName TValue value Returns Type Description TValue Type Parameters Name Description TValue PrepareToRun() Declaration public override void PrepareToRun() Overrides BrushUserToolState<TBrushTarget>.PrepareToRun() PrepareToStop() Declaration public override void PrepareToStop() Overrides BrushUserToolState<TBrushTarget>.PrepareToStop() SaveSettings() Declaration protected virtual void SaveSettings() SaveSettingsValue<TValue>(string, TValue) Declaration protected virtual void SaveSettingsValue<TValue>(string valueName, TValue value) Parameters Type Name Description string valueName TValue value Type Parameters Name Description TValue TryLoadSettingsValue<TValue>(string, out TValue) Declaration protected virtual bool TryLoadSettingsValue<TValue>(string valueName, out TValue value) Parameters Type Name Description string valueName TValue value Returns Type Description bool Type Parameters Name Description TValue Implements ISmState Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.TerrainEditors.StateMachines.BrushUserToolState-3.html": {
    "href": "api/Fwt.HexTerrains.TerrainEditors.StateMachines.BrushUserToolState-3.html",
    "title": "Class BrushUserToolState<TBrushTarget, TSettings, TSettingsScreen> | Hex Terrains",
    "summary": "Class BrushUserToolState<TBrushTarget, TSettings, TSettingsScreen> Inheritance object SmState UserToolState BrushUserToolState<TBrushTarget> BrushUserToolState<TBrushTarget, TSettings> BrushUserToolState<TBrushTarget, TSettings, TSettingsScreen> AddNoiseUserToolState<TBrushTarget> ApplyHeightmapUserToolState<TBrushTarget> AutoPaintUserToolState<TBrushTarget> LevelTerrainUserToolState<TBrushTarget> PaintAreasUserToolState<TBrushTarget> PaintCellEntitiesUserToolState<TBrushTarget, THexSurface> PaintCellItemsUserToolState<TBrushTarget, THexSurface> PaintTerrainUserToolState<TBrushTarget> SmoothTerrainUserToolState<TBrushTarget> StampUserToolStateBase<TBrushTarget, TCellData> Implements ISmState Inherited Members BrushUserToolState<TBrushTarget, TSettings>.DataSource BrushUserToolState<TBrushTarget, TSettings>.SettingsPlayerPrefsKeyName BrushUserToolState<TBrushTarget, TSettings>.PrepareToRun() BrushUserToolState<TBrushTarget, TSettings>.InitSettings() BrushUserToolState<TBrushTarget, TSettings>.InitDefaultSettings() BrushUserToolState<TBrushTarget, TSettings>.PrepareToStop() BrushUserToolState<TBrushTarget, TSettings>.LoadSettings() BrushUserToolState<TBrushTarget, TSettings>.SaveSettings() BrushUserToolState<TBrushTarget, TSettings>.SaveSettingsValue<TValue>(string, TValue) BrushUserToolState<TBrushTarget, TSettings>.LoadSettingsValue<TValue>(string, TValue) BrushUserToolState<TBrushTarget, TSettings>.TryLoadSettingsValue<TValue>(string, out TValue) BrushUserToolState<TBrushTarget, TSettings>.LoadSettingsValueOrDefault<TValue>(string, TValue) BrushUserToolState<TBrushTarget>.PrevChangeTimeStamp BrushUserToolState<TBrushTarget>.TimeTreshold BrushUserToolState<TBrushTarget>.CanChangeBrushSize BrushUserToolState<TBrushTarget>.AllowRightMouseButton BrushUserToolState<TBrushTarget>.CursorColor BrushUserToolState<TBrushTarget>.ChangeModeKey BrushUserToolState<TBrushTarget>.ChangeBrushSizeKey BrushUserToolState<TBrushTarget>.IncreaseBrushSizeKey BrushUserToolState<TBrushTarget>.IncreaseBrushSizeKey2 BrushUserToolState<TBrushTarget>.DecreaseBrushSizeKey BrushUserToolState<TBrushTarget>.DecreaseBrushSizeKey2 BrushUserToolState<TBrushTarget>.ChangeOpacityKey BrushUserToolState<TBrushTarget>.IsTimeTresholdPassed BrushUserToolState<TBrushTarget>.BrushSize BrushUserToolState<TBrushTarget>.BrushOpacity BrushUserToolState<TBrushTarget>.ChangeOpacityMultiplier BrushUserToolState<TBrushTarget>.SetNewTimestamp() BrushUserToolState<TBrushTarget>.Tick() BrushUserToolState<TBrushTarget>.UpdateBrush() BrushUserToolState<TBrushTarget>.TryApplyBrush() BrushUserToolState<TBrushTarget>.ApplyToSingleCell(int, int2, int, TBrushTarget, int) BrushUserToolState<TBrushTarget>.ApplyBrushToAllCells(int, HexTerrainSettings, TBrushTarget, int) BrushUserToolState<TBrushTarget>.ApplyBrushToAllBrushPoints(int, int2, int, HexTerrainSettings, TBrushTarget, int) BrushUserToolState<TBrushTarget>.ApplyBrush(int, int2, int, TBrushTarget, int) BrushUserToolState<TBrushTarget>.CanBeAppliedToManyPoints(int) BrushUserToolState<TBrushTarget>.IsAppliedToEveryCellOnMap(int) BrushUserToolState<TBrushTarget>.GetBrushTarget() UserToolState.Settings UserToolState.IsSubstatesVisible UserToolState.SubStateMachine UserToolState.UserToolType UserToolState.UserToolAPI UserToolState.HasSubtools UserToolState.IsChangeViewMode UserToolState.RequiredViewMode UserToolState.OriginalViewMode UserToolState.ShowSettingsScreen<TViewData, TScreen>(TViewData) UserToolState.GetUIScreen<TScreen>() UserToolState.HideSettingsScreen<TScreen>() UserToolState.SetupPlanetCursor(bool, int) UserToolState.SetupPlanetCursor(bool, int, Color32) UserToolState.SetupPlanetCursor(bool, int, Color32, bool) UserToolState.SetupPlanetCursor(bool) UserToolState.TrySetViewMode() UserToolState.TryRestoreViewMode() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.TerrainEditors.StateMachines Assembly: fwt.hexterrains.dll Syntax public abstract class BrushUserToolState<TBrushTarget, TSettings, TSettingsScreen> : BrushUserToolState<TBrushTarget, TSettings>, ISmState where TBrushTarget : class where TSettingsScreen : ToolSettingsScreen<TSettings> Type Parameters Name Description TBrushTarget TSettings TSettingsScreen Constructors BrushUserToolState(IUserToolAPI) Declaration protected BrushUserToolState(IUserToolAPI userToolAPI) Parameters Type Name Description IUserToolAPI userToolAPI Fields SettingsScreen Declaration protected TSettingsScreen SettingsScreen Field Value Type Description TSettingsScreen Methods GetSettingsScreen() Declaration public virtual TSettingsScreen GetSettingsScreen() Returns Type Description TSettingsScreen PrepareToRun() Declaration public override void PrepareToRun() Overrides BrushUserToolState<TBrushTarget, TSettings>.PrepareToRun() PrepareToStop() Declaration public override void PrepareToStop() Overrides BrushUserToolState<TBrushTarget, TSettings>.PrepareToStop() UpdateSettingsScreen() Declaration public virtual void UpdateSettingsScreen() Implements ISmState Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.TerrainEditors.StateMachines.IUISystemAPI.html": {
    "href": "api/Fwt.HexTerrains.TerrainEditors.StateMachines.IUISystemAPI.html",
    "title": "Interface IUISystemAPI | Hex Terrains",
    "summary": "Interface IUISystemAPI Interface for the UI system API. Provides methods to create, get, and destroy screens. Namespace: Fwt.HexTerrains.TerrainEditors.StateMachines Assembly: fwt.hexterrains.dll Syntax public interface IUISystemAPI Methods CreateScreen<TScreen>() Creates a new screen of the specified type. Declaration TScreen CreateScreen<TScreen>() where TScreen : UIScreen Returns Type Description TScreen screen instance Type Parameters Name Description TScreen type of the screen to create DestroyScreen(UIScreen) Destroys the specified screen instance. Declaration bool DestroyScreen(UIScreen screen) Parameters Type Name Description UIScreen screen screen instance to destroy Returns Type Description bool true if the screen was destroyed successfully; otherwise, false DestroyScreen<TScreen>() Destroys the specified screen. Declaration bool DestroyScreen<TScreen>() where TScreen : UIScreen Returns Type Description bool true if the screen was destroyed successfully; otherwise, false Type Parameters Name Description TScreen type of a screen to destroy GetOrCreateScreen<TScreen>() Gets an existing screen of the specified type, or creates a new one if it doesn't exist. Declaration TScreen GetOrCreateScreen<TScreen>() where TScreen : UIScreen Returns Type Description TScreen screen instance Type Parameters Name Description TScreen type of the screen to get or create GetScreen<TScreen>() Gets an existing screen of the specified type if found. Declaration TScreen GetScreen<TScreen>() where TScreen : UIScreen Returns Type Description TScreen Type Parameters Name Description TScreen type of the screen to get Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.TerrainEditors.StateMachines.IUserToolAPI.html": {
    "href": "api/Fwt.HexTerrains.TerrainEditors.StateMachines.IUserToolAPI.html",
    "title": "Interface IUserToolAPI | Hex Terrains",
    "summary": "Interface IUserToolAPI Example implementation of the IUserToolAPI interface. Used to be injected into places without access to the EntityManager. Abstracts user code from the TerrainData storage (usually the Entity World). Provides an API for working with a terrain. Usually uses in a UserTools (brushes, etc.). Namespace: Fwt.HexTerrains.TerrainEditors.StateMachines Assembly: fwt.hexterrains.dll Syntax public interface IUserToolAPI Methods CreateNewTerrain(Entity) Destroys a current terrain terrainEntity. Creates a new terrain terrainEntity. Replaces a cached TerrainEntity with the created one. Declaration Entity CreateNewTerrain(Entity terrainPrefab) Parameters Type Name Description Entity terrainPrefab prefab of the terrainEntity to create Returns Type Description Entity instance of the created terrainEntity CreateUIScreen<TScreen>() Creates a new screen of the specified type. Declaration TScreen CreateUIScreen<TScreen>() where TScreen : UIScreen Returns Type Description TScreen screen instance Type Parameters Name Description TScreen type of the screen to create DestroyTerrain(Entity) Destroys a terrain entity provided. Declaration bool DestroyTerrain(Entity terrainEntity) Parameters Type Name Description Entity terrainEntity terrain entity to destroy Returns Type Description bool true if was destroyed, otherwise - false DestroyUIScreen(UIScreen) Destroys the specified screen instance. Declaration bool DestroyUIScreen(UIScreen screen) Parameters Type Name Description UIScreen screen screen instance to destroy Returns Type Description bool true if the screen was destroyed successfully; otherwise, false DestroyUIScreen<TScreen>() Destroys the specified screen. Declaration bool DestroyUIScreen<TScreen>() where TScreen : UIScreen Returns Type Description bool true if the screen was destroyed successfully; otherwise, false Type Parameters Name Description TScreen type of a screen to destroy GetBrushColor() Returns the brush color from the TerrainEntity HexTerrainBrush. Declaration Color32? GetBrushColor() Returns Type Description Color32? brush color if found, otherwise - false GetBrushOpacity() Returns the brush opacity from the TerrainEntity HexTerrainBrush. Declaration float? GetBrushOpacity() Returns Type Description float? brush opacity if brush is found, otherwise - null GetBrushSize() Returns the brush size from the TerrainEntity HexTerrainBrush. Declaration int? GetBrushSize() Returns Type Description int? brush size if found, otherwise - null GetBrushView() Returns the brush view from the TerrainEntity HexTerrainBrushView. Declaration HexTerrainBrushView GetBrushView() Returns Type Description HexTerrainBrushView brush view from the TerrainEntity if found, otherwise - null GetCellArea<TAreasData>(int) Returns the CellArea from terrain cell at the specified index. Declaration byte? GetCellArea<TAreasData>(int cellIndex) where TAreasData : HexTerrainAreasData Parameters Type Name Description int cellIndex cell index to get value from Returns Type Description byte? CellArea if found or null if not found Type Parameters Name Description TAreasData type of areas data layer to get value from GetCellBiome<TSurfaceData>(int) Returns the biomes map value (byte) of the cell at the specified index. Declaration byte? GetCellBiome<TSurfaceData>(int cellIndex) where TSurfaceData : HexSurfaceData Parameters Type Name Description int cellIndex cell index to get a biome from Returns Type Description byte? biome value if found or null if not found Type Parameters Name Description TSurfaceData type of surface data to get biome from GetCellCoordUnderCursor() Returns the cell coordinate under the cursor. Declaration int2? GetCellCoordUnderCursor() Returns Type Description int2? cell coordinate if found and raycast hit the terrain, otherwise - false GetCellEntity<TCellEntityData>(int) Returns the CellEntity from terrain cell at the specified index. Declaration CellEntity? GetCellEntity<TCellEntityData>(int cellIndex) where TCellEntityData : CellEntitiesData Parameters Type Name Description int cellIndex cell index to get a CellEntity from Returns Type Description CellEntity? CellEntity value if found, otherwise null Type Parameters Name Description TCellEntityData GetCellHeight<TSurfaceData>(int) Returns the height map value (byte) of the cell at the specified index. Declaration byte? GetCellHeight<TSurfaceData>(int cellIndex) where TSurfaceData : HexSurfaceData Parameters Type Name Description int cellIndex cell index to get a height from Returns Type Description byte? heightmap value if found or null if not found Type Parameters Name Description TSurfaceData type of surface data to get height from GetCellIndexUnderCursor() Returns the cell index under the cursor. Declaration int? GetCellIndexUnderCursor() Returns Type Description int? cell index if found and raycast hit the terrain, otherwise - false GetCellItem<TItemsData>(int) Returns the CellItem from terrain cell at the specified index. Declaration CellItem? GetCellItem<TItemsData>(int cellIndex) where TItemsData : CellItemsData Parameters Type Name Description int cellIndex cell index to get a CellItem from Returns Type Description CellItem? CellItem value if found, otherwise null Type Parameters Name Description TItemsData type of cell items layer to get data from GetDataLayer<TDataLayer>() returns a data layer from the TerrainEntity GetTerrainEntity() Declaration TDataLayer GetDataLayer<TDataLayer>() where TDataLayer : class Returns Type Description TDataLayer data layer if found, otherwise - null Type Parameters Name Description TDataLayer GetIsResizableBrush() Returns true if the brush on TerrainEntity is resizable. Declaration bool GetIsResizableBrush() Returns Type Description bool is brush found and resizable GetIsVisibleBrush() Returns true if the brush on TerrainEntity is visible. Declaration bool GetIsVisibleBrush() Returns Type Description bool true if brush is found and is visible, otherwise - false GetOrCreateUIScreen<TScreen>() Gets an existing screen of the specified type, or creates a new one if it doesn't exist. Declaration TScreen GetOrCreateUIScreen<TScreen>() where TScreen : UIScreen Returns Type Description TScreen screen instance Type Parameters Name Description TScreen type of the screen to get or create GetRaycastData() Returns the Raycast data from the TerrainEntity HexTerrainRaycastData. this data contains information about the raycast from mouse to terrain result. Declaration HexTerrainRaycastData? GetRaycastData() Returns Type Description HexTerrainRaycastData? raycast data from the TerrainEntity GetTerrainEntity() Get the TerainEntity this API is working with. Declaration Entity GetTerrainEntity() Returns Type Description Entity terrain terrainEntity this API works with GetTerrainSettings() Returns a Terrain Settings if found. Declaration HexTerrainSettings? GetTerrainSettings() Returns Type Description HexTerrainSettings? terrain settings if found or null if not found GetUIScreen<TScreen>() Gets an existing screen of the specified type if found. Declaration TScreen GetUIScreen<TScreen>() where TScreen : UIScreen Returns Type Description TScreen Type Parameters Name Description TScreen type of the screen to get GetViewMode() Returns the view mode of the TerrainEntity HexTerrainViewMode. Declaration byte GetViewMode() Returns Type Description byte view mode if found, otherwise - false IsLayerSupported<TDataLayer>() Checks if the data layer is supported by the terrain. Usually means if terrain has this data layer. Declaration bool IsLayerSupported<TDataLayer>() where TDataLayer : class Returns Type Description bool true if supports, otherwise - false Type Parameters Name Description TDataLayer type of the TerrainLayer to check LoadTerrain(string) Loads the TerrainEntity from a file. Declaration bool LoadTerrain(string filePath) Parameters Type Name Description string filePath file path to load a terrain from Returns Type Description bool true if loaded, otherwise - false ResizeTerrain(int2) Resizes the TerrainEntity TerrainSize. Declaration bool ResizeTerrain(int2 terrainSize) Parameters Type Name Description int2 terrainSize new terrain size Returns Type Description bool true if was resized, otherwise - false SaveTerrain(string) Saves the TerrainEntity to a file. Declaration bool SaveTerrain(string filePath) Parameters Type Name Description string filePath file path to save a terrain into Returns Type Description bool true if terrain has been saved, otherwise - false SetBrushColor(Color32) Sets the brush color on the TerrainEntity HexTerrainBrush. Declaration bool SetBrushColor(Color32 color) Parameters Type Name Description Color32 color new brush color Returns Type Description bool true if value has been set, otherwise - false SetBrushOpacity(float) Sets the brush opacity on the TerrainEntity HexTerrainBrush. Declaration bool SetBrushOpacity(float opacity) Parameters Type Name Description float opacity new opacity value (0..1) Returns Type Description bool true if value has been set, otherwise - false SetBrushSize(int) Sets the brush size on the TerrainEntity HexTerrainBrush. Declaration bool SetBrushSize(int brushSize) Parameters Type Name Description int brushSize new brush size Returns Type Description bool true if value has been set, otherwise - false SetCellArea<TAreasData>(int, byte) Sets the CellArea from terrain cell at the specified index. Declaration bool SetCellArea<TAreasData>(int cellIndex, byte area) where TAreasData : HexTerrainAreasData Parameters Type Name Description int cellIndex cell index to set value on byte area area value to set Returns Type Description bool true if value has been set, otherwise - false Type Parameters Name Description TAreasData type of areas data layer to set value on SetCellBiome<TSurfaceData>(int, byte) Sets the biomes map value (byte) of the cell at the specified index. Declaration bool SetCellBiome<TSurfaceData>(int cellIndex, byte biome) where TSurfaceData : HexSurfaceData Parameters Type Name Description int cellIndex cell index to set a biome for byte biome biome value to set Returns Type Description bool true if value has been set, otherwise - false Type Parameters Name Description TSurfaceData type of surface data to set biome for SetCellEntity<TCellEntityData>(int, CellEntity) Sets the CellEntity from terrain cell at the specified index. Declaration bool SetCellEntity<TCellEntityData>(int cellIndex, CellEntity entity) where TCellEntityData : CellEntitiesData Parameters Type Name Description int cellIndex cell index to set CellEntity on CellEntity entity Returns Type Description bool true if value has been set, otherwise - false Type Parameters Name Description TCellEntityData SetCellHeight<TSurfaceData>(int, byte) Sets the height map value (byte) of the cell at the specified index. Declaration bool SetCellHeight<TSurfaceData>(int cellIndex, byte height) where TSurfaceData : HexSurfaceData Parameters Type Name Description int cellIndex cell index to set a height for byte height Returns Type Description bool true if value has been set, otherwise - false Type Parameters Name Description TSurfaceData type of surface data to set height for SetCellItem<TItemsData>(int, CellItem) Sets the CellItem from terrain cell at the specified index. Declaration bool SetCellItem<TItemsData>(int cellIndex, CellItem item) where TItemsData : CellItemsData Parameters Type Name Description int cellIndex cell index to set CellItem on CellItem item CellItem value to set on provided cellIndex on provided ItemsData layer Returns Type Description bool true if value has been set, otherwise - false Type Parameters Name Description TItemsData type of cell items layer to set value on SetIsResizableBrush(bool) Sets the IsResizable value of the brush on TerrainEntity HexTerrainBrush. Declaration bool SetIsResizableBrush(bool isResizableBrush) Parameters Type Name Description bool isResizableBrush new value for IsResizable Returns Type Description bool true if value has been set, otherwise - false SetIsVisibleBrush(bool) Sets the IsVisible value of the brush on TerrainEntity HexTerrainBrush. Declaration bool SetIsVisibleBrush(bool isVisibleBrush) Parameters Type Name Description bool isVisibleBrush new IsVisible value Returns Type Description bool true if value has been set, otherwise - false SetViewMode(byte) Sets the view mode on the TerrainEntity HexTerrainViewMode. Declaration bool SetViewMode(byte viewMode) Parameters Type Name Description byte viewMode new view mode Returns Type Description bool true if value has been set, otherwise - false Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.TerrainEditors.StateMachines.UserToolAPI.html": {
    "href": "api/Fwt.HexTerrains.TerrainEditors.StateMachines.UserToolAPI.html",
    "title": "Class UserToolAPI | Hex Terrains",
    "summary": "Class UserToolAPI Example implementation of the IUserToolAPI interface. Used to be injected into places without access to the EntityManager. Abstracts user code from the TerrainData storage (usually the Entity World). Provides an API for working with a terrain. Usually uses in a UserTools (brushes, etc.). Inheritance object UserToolAPI Implements IUserToolAPI Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.TerrainEditors.StateMachines Assembly: fwt.hexterrains.dll Syntax public class UserToolAPI : IUserToolAPI Properties EntityManager Cached EntityManager. Used to access the Entity World. Performs operations on the TerrainEntity TerrainEntity Declaration public EntityManager EntityManager { get; set; } Property Value Type Description EntityManager TerrainEntity Cached terrain terrainEntity. Feel free to replace it's value, as everything is extracted from Entity World using this terrainEntity for every API function call. So if this terrainEntity is changed, the API will work with a new terrainEntity. If this terrainEntity does not exist, the API calls will not work, but will not throw an exception. Declaration public Entity TerrainEntity { get; set; } Property Value Type Description Entity UISystemAPI Cached UISystemAPI. Used to access the UI system. Declaration public IUISystemAPI UISystemAPI { get; set; } Property Value Type Description IUISystemAPI Methods CreateNewTerrain(Entity) Destroys a current terrain terrainEntity. Creates a new terrain terrainEntity. Replaces a cached TerrainEntity with the created one. Declaration public virtual Entity CreateNewTerrain(Entity terrainPrefab) Parameters Type Name Description Entity terrainPrefab prefab of the terrainEntity to create Returns Type Description Entity instance of the created terrainEntity CreateUIScreen<TScreen>() Creates a new screen of the specified type. Declaration public virtual TScreen CreateUIScreen<TScreen>() where TScreen : UIScreen Returns Type Description TScreen screen instance Type Parameters Name Description TScreen type of the screen to create DestroyTerrain(Entity) Destroys a terrain entity provided. Declaration public virtual bool DestroyTerrain(Entity terrainEntity) Parameters Type Name Description Entity terrainEntity terrain entity to destroy Returns Type Description bool true if was destroyed, otherwise - false DestroyUIScreen(UIScreen) Destroys the specified screen instance. Declaration public virtual bool DestroyUIScreen(UIScreen screen) Parameters Type Name Description UIScreen screen screen instance to destroy Returns Type Description bool true if the screen was destroyed successfully; otherwise, false DestroyUIScreen<TScreen>() Destroys the specified screen. Declaration public virtual bool DestroyUIScreen<TScreen>() where TScreen : UIScreen Returns Type Description bool true if the screen was destroyed successfully; otherwise, false Type Parameters Name Description TScreen type of a screen to destroy GetBrushColor() Returns the brush color from the TerrainEntity HexTerrainBrush. Declaration public virtual Color32? GetBrushColor() Returns Type Description Color32? brush color if found, otherwise - false GetBrushOpacity() Returns the brush opacity from the TerrainEntity HexTerrainBrush. Declaration public virtual float? GetBrushOpacity() Returns Type Description float? brush opacity if brush is found, otherwise - null GetBrushSize() Returns the brush size from the TerrainEntity HexTerrainBrush. Declaration public virtual int? GetBrushSize() Returns Type Description int? brush size if found, otherwise - null GetBrushView() Returns the brush view from the TerrainEntity HexTerrainBrushView. Declaration public virtual HexTerrainBrushView GetBrushView() Returns Type Description HexTerrainBrushView brush view from the TerrainEntity if found, otherwise - null GetCellArea<TAreasData>(int) Returns the CellArea from terrain cell at the specified index. Declaration public virtual byte? GetCellArea<TAreasData>(int cellIndex) where TAreasData : HexTerrainAreasData Parameters Type Name Description int cellIndex cell index to get value from Returns Type Description byte? CellArea if found or null if not found Type Parameters Name Description TAreasData type of areas data layer to get value from GetCellBiome<TSurfaceData>(int) Returns the biomes map value (byte) of the cell at the specified index. Declaration public virtual byte? GetCellBiome<TSurfaceData>(int cellIndex) where TSurfaceData : HexSurfaceData Parameters Type Name Description int cellIndex cell index to get a biome from Returns Type Description byte? biome value if found or null if not found Type Parameters Name Description TSurfaceData type of surface data to get biome from GetCellCoordUnderCursor() Returns the cell coordinate under the cursor. Declaration public virtual int2? GetCellCoordUnderCursor() Returns Type Description int2? cell coordinate if found and raycast hit the terrain, otherwise - false GetCellEntity<TEntitiesData>(int) Returns the CellEntity from terrain cell at the specified index. Declaration public virtual CellEntity? GetCellEntity<TEntitiesData>(int cellIndex) where TEntitiesData : CellEntitiesData Parameters Type Name Description int cellIndex cell index to get a CellEntity from Returns Type Description CellEntity? CellEntity value if found, otherwise null Type Parameters Name Description TEntitiesData type of cell terrainEntity layer to get data from GetCellHeight<TSurfaceData>(int) Returns the height map value (byte) of the cell at the specified index. Declaration public virtual byte? GetCellHeight<TSurfaceData>(int cellIndex) where TSurfaceData : HexSurfaceData Parameters Type Name Description int cellIndex cell index to get a height from Returns Type Description byte? heightmap value if found or null if not found Type Parameters Name Description TSurfaceData type of surface data to get height from GetCellIndexUnderCursor() Returns the cell index under the cursor. Declaration public virtual int? GetCellIndexUnderCursor() Returns Type Description int? cell index if found and raycast hit the terrain, otherwise - false GetCellItem<TItemsData>(int) Returns the CellItem from terrain cell at the specified index. Declaration public virtual CellItem? GetCellItem<TItemsData>(int cellIndex) where TItemsData : CellItemsData Parameters Type Name Description int cellIndex cell index to get a CellItem from Returns Type Description CellItem? CellItem value if found, otherwise null Type Parameters Name Description TItemsData type of cell items layer to get data from GetDataLayer<TDataLayer>() returns a data layer from the TerrainEntity TerrainEntity Declaration public virtual TDataLayer GetDataLayer<TDataLayer>() where TDataLayer : class Returns Type Description TDataLayer Type Parameters Name Description TDataLayer GetIsResizableBrush() Returns true if the brush on TerrainEntity is resizable. Declaration public virtual bool GetIsResizableBrush() Returns Type Description bool is brush found and resizable GetIsVisibleBrush() Returns true if the brush on TerrainEntity is visible. Declaration public virtual bool GetIsVisibleBrush() Returns Type Description bool true if brush is found and is visible, otherwise - false GetOrCreateUIScreen<TScreen>() Gets an existing screen of the specified type, or creates a new one if it doesn't exist. Declaration public virtual TScreen GetOrCreateUIScreen<TScreen>() where TScreen : UIScreen Returns Type Description TScreen screen instance Type Parameters Name Description TScreen type of the screen to get or create GetRaycastData() Returns the Raycast data from the TerrainEntity HexTerrainRaycastData. this data contains information about the raycast from mouse to terrain result. Declaration public virtual HexTerrainRaycastData? GetRaycastData() Returns Type Description HexTerrainRaycastData? raycast data from the TerrainEntity GetTerrainEntity() Returns the TerrainEntity this API is working with. Declaration public Entity GetTerrainEntity() Returns Type Description Entity terrain terrainEntity this API works with GetTerrainSettings() Returns a Terrain Settings if found. Declaration public virtual HexTerrainSettings? GetTerrainSettings() Returns Type Description HexTerrainSettings? terrain settings if found or null if not found GetUIScreen<TScreen>() Gets an existing screen of the specified type if found. Declaration public virtual TScreen GetUIScreen<TScreen>() where TScreen : UIScreen Returns Type Description TScreen Type Parameters Name Description TScreen type of the screen to get GetViewMode() Returns the view mode of the TerrainEntity HexTerrainViewMode. Declaration public virtual byte GetViewMode() Returns Type Description byte view mode if found, otherwise - false Init(Entity, EntityManager, IUISystemAPI) Initializes the UserToolAPI with the terrain terrainEntity, terrainEntity manager and UI system API. Declaration public virtual void Init(Entity terrainEntity, EntityManager entityManager, IUISystemAPI uiSystemAPI) Parameters Type Name Description Entity terrainEntity EntityManager entityManager IUISystemAPI uiSystemAPI IsLayerSupported<TDataLayer>() Checks if the data layer is supported by the terrain. Meaning if terrain has this data layer. Declaration public virtual bool IsLayerSupported<TDataLayer>() where TDataLayer : class Returns Type Description bool true if supports, otherwise - false Type Parameters Name Description TDataLayer type of the TerrainLayer to check LoadTerrain(string) Loads the TerrainEntity from a file. Declaration public virtual bool LoadTerrain(string filePath) Parameters Type Name Description string filePath file path to load a terrain from Returns Type Description bool true if loaded, otherwise - false ResizeTerrain(int2) Resizes the TerrainEntity TerrainSize. Declaration public virtual bool ResizeTerrain(int2 terrainSize) Parameters Type Name Description int2 terrainSize new terrain size Returns Type Description bool true if was resized, otherwise - false SaveTerrain(string) Saves the TerrainEntity to a file. Declaration public virtual bool SaveTerrain(string filePath) Parameters Type Name Description string filePath file path to save a terrain into Returns Type Description bool true if terrain has been saved, otherwise - false SetBrushColor(Color32) Sets the brush color on the TerrainEntity HexTerrainBrush. Declaration public virtual bool SetBrushColor(Color32 color) Parameters Type Name Description Color32 color new brush color Returns Type Description bool true if value has been set, otherwise - false SetBrushOpacity(float) Sets the brush opacity on the TerrainEntity HexTerrainBrush. Declaration public virtual bool SetBrushOpacity(float opacity) Parameters Type Name Description float opacity new opacity value (0..1) Returns Type Description bool true if value has been set, otherwise - false SetBrushSize(int) Sets the brush size on the TerrainEntity HexTerrainBrush. Declaration public virtual bool SetBrushSize(int brushSize) Parameters Type Name Description int brushSize new brush size Returns Type Description bool true if value has been set, otherwise - false SetCellArea<TAreasData>(int, byte) Sets the CellArea from terrain cell at the specified index. Declaration public virtual bool SetCellArea<TAreasData>(int cellIndex, byte area) where TAreasData : HexTerrainAreasData Parameters Type Name Description int cellIndex cell index to set value on byte area area value to set Returns Type Description bool true if value has been set, otherwise - false Type Parameters Name Description TAreasData type of areas data layer to set value on SetCellBiome<TSurfaceData>(int, byte) Sets the biomes map value (byte) of the cell at the specified index. Declaration public virtual bool SetCellBiome<TSurfaceData>(int cellIndex, byte biome) where TSurfaceData : HexSurfaceData Parameters Type Name Description int cellIndex cell index to set a biome for byte biome biome value to set Returns Type Description bool true if value has been set, otherwise - false Type Parameters Name Description TSurfaceData type of surface data to set biome for SetCellEntity<TEntitiesData>(int, CellEntity) Sets the CellEntity from terrain cell at the specified index. Declaration public virtual bool SetCellEntity<TEntitiesData>(int cellIndex, CellEntity entity) where TEntitiesData : CellEntitiesData Parameters Type Name Description int cellIndex cell index to set CellEntity on CellEntity entity Returns Type Description bool true if value has been set, otherwise - false Type Parameters Name Description TEntitiesData type of cell terrainEntity layer to set value on SetCellHeight<TSurfaceData>(int, byte) Sets the height map value (byte) of the cell at the specified index. Declaration public virtual bool SetCellHeight<TSurfaceData>(int cellIndex, byte height) where TSurfaceData : HexSurfaceData Parameters Type Name Description int cellIndex cell index to set a height for byte height Returns Type Description bool true if value has been set, otherwise - false Type Parameters Name Description TSurfaceData type of surface data to set height for SetCellItem<TItemsData>(int, CellItem) Sets the CellItem from terrain cell at the specified index. Declaration public virtual bool SetCellItem<TItemsData>(int cellIndex, CellItem item) where TItemsData : CellItemsData Parameters Type Name Description int cellIndex cell index to set CellItem on CellItem item CellItem value to set on provided cellIndex on provided ItemsData layer Returns Type Description bool true if value has been set, otherwise - false Type Parameters Name Description TItemsData type of cell items layer to set value on SetIsResizableBrush(bool) Sets the IsResizable value of the brush on TerrainEntity HexTerrainBrush. Declaration public virtual bool SetIsResizableBrush(bool isResizableBrush) Parameters Type Name Description bool isResizableBrush new value for IsResizable Returns Type Description bool true if value has been set, otherwise - false SetIsVisibleBrush(bool) Sets the IsVisible value of the brush on TerrainEntity HexTerrainBrush. Declaration public virtual bool SetIsVisibleBrush(bool isVisibleBrush) Parameters Type Name Description bool isVisibleBrush new IsVisible value Returns Type Description bool true if value has been set, otherwise - false SetViewMode(byte) Sets the view mode on the TerrainEntity HexTerrainViewMode. Declaration public virtual bool SetViewMode(byte viewMode) Parameters Type Name Description byte viewMode new view mode Returns Type Description bool true if value has been set, otherwise - false Implements IUserToolAPI Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.TerrainEditors.StateMachines.UserToolState.html": {
    "href": "api/Fwt.HexTerrains.TerrainEditors.StateMachines.UserToolState.html",
    "title": "Class UserToolState | Hex Terrains",
    "summary": "Class UserToolState Inheritance object SmState UserToolState BrushUserToolState<TBrushTarget> CreateNewTerrainUserToolStateBase<TScreen, TCallback> LoadTerrainUserToolStateBase<TScreen, TCallback> PointerUserToolState ResizeTerrainUserToolStateBase<TScreen, TCallback> SaveTerrainUserToolStateBase<TScreen, TCallback> Implements ISmState Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.TerrainEditors.StateMachines Assembly: fwt.hexterrains.dll Syntax public abstract class UserToolState : SmState, ISmState Constructors UserToolState(IUserToolAPI) Declaration protected UserToolState(IUserToolAPI userToolAPI) Parameters Type Name Description IUserToolAPI userToolAPI Fields IsSubstatesVisible Declaration public bool IsSubstatesVisible Field Value Type Description bool Settings Declaration public UserToolSettings Settings Field Value Type Description UserToolSettings SubStateMachine Declaration public UserToolStateMachine SubStateMachine Field Value Type Description UserToolStateMachine Properties HasSubtools Declaration protected bool HasSubtools { get; } Property Value Type Description bool IsChangeViewMode If true, when this user tool state becomes active it asks a terrain to switch to the RequiredViewMode view mode Declaration protected virtual bool IsChangeViewMode { get; } Property Value Type Description bool OriginalViewMode Declaration protected virtual byte OriginalViewMode { get; set; } Property Value Type Description byte RequiredViewMode If IsChangeViewMode is true, this is the view mode that will be set when this user tool state becomes active. Declaration protected virtual byte RequiredViewMode { get; } Property Value Type Description byte UserToolAPI Declaration public IUserToolAPI UserToolAPI { get; set; } Property Value Type Description IUserToolAPI UserToolType Declaration public abstract int UserToolType { get; } Property Value Type Description int Methods GetUIScreen<TScreen>() Declaration protected virtual TScreen GetUIScreen<TScreen>() where TScreen : UIScreen Returns Type Description TScreen Type Parameters Name Description TScreen HideSettingsScreen<TScreen>() Declaration protected virtual void HideSettingsScreen<TScreen>() where TScreen : UIScreen Type Parameters Name Description TScreen PrepareToRun() Declaration public override void PrepareToRun() Overrides SmState.PrepareToRun() PrepareToStop() Declaration public override void PrepareToStop() Overrides SmState.PrepareToStop() SetupPlanetCursor(bool) Declaration protected virtual void SetupPlanetCursor(bool isCursorVisible) Parameters Type Name Description bool isCursorVisible SetupPlanetCursor(bool, int) Declaration protected virtual void SetupPlanetCursor(bool isCursorVisible, int size) Parameters Type Name Description bool isCursorVisible int size SetupPlanetCursor(bool, int, Color32) Declaration protected virtual void SetupPlanetCursor(bool isCursorVisible, int size, Color32 color) Parameters Type Name Description bool isCursorVisible int size Color32 color SetupPlanetCursor(bool, int, Color32, bool) Declaration protected virtual void SetupPlanetCursor(bool isCursorVisible, int size, Color32 color, bool isResizable) Parameters Type Name Description bool isCursorVisible int size Color32 color bool isResizable ShowSettingsScreen<TViewData, TScreen>(TViewData) Declaration protected virtual TScreen ShowSettingsScreen<TViewData, TScreen>(TViewData viewData) where TScreen : UIScreen, IViewDataReceiver<TViewData> Parameters Type Name Description TViewData viewData Returns Type Description TScreen Type Parameters Name Description TViewData TScreen Tick() Declaration public override void Tick() Overrides SmState.Tick() TryRestoreViewMode() Declaration protected virtual void TryRestoreViewMode() TrySetViewMode() Declaration protected virtual void TrySetViewMode() Implements ISmState Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.TerrainEditors.StateMachines.UserToolStateMachine.html": {
    "href": "api/Fwt.HexTerrains.TerrainEditors.StateMachines.UserToolStateMachine.html",
    "title": "Class UserToolStateMachine | Hex Terrains",
    "summary": "Class UserToolStateMachine Inheritance object SmState SmStateMachine UserToolStateMachine SamplesUserToolStateMachine Implements ISmState IStateMachine IDisposable Inherited Members SmStateMachine.States SmStateMachine.SortedStates SmStateMachine.CurrentState SmStateMachine.AddState<TState>(TState) SmStateMachine.SwitchState<TState>() SmStateMachine.SwitchState<TState, TContext>(TContext) SmStateMachine.SwitchState(int) SmStateMachine.SwitchState<TState, TContext>(TState, TContext) SmStateMachine.SwitchState(ISmState) SmStateMachine.GetState<TState>(Type) SmStateMachine.GetState(int) SmStateMachine.GetState(Type) SmStateMachine.Tick() SmStateMachine.PrepareToRun() SmStateMachine.PrepareToStop() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.TerrainEditors.StateMachines Assembly: fwt.hexterrains.dll Syntax public abstract class UserToolStateMachine : SmStateMachine, ISmState, IStateMachine, IDisposable Constructors UserToolStateMachine(IUserToolAPI) Declaration public UserToolStateMachine(IUserToolAPI userToolAPI) Parameters Type Name Description IUserToolAPI userToolAPI Fields StatesByType Declaration protected Dictionary<int, UserToolState> StatesByType Field Value Type Description Dictionary<int, UserToolState> Properties UserToolAPI Declaration public IUserToolAPI UserToolAPI { get; set; } Property Value Type Description IUserToolAPI Methods AddState(ISmState) Declaration public override void AddState(ISmState state) Parameters Type Name Description ISmState state Overrides SmStateMachine.AddState(ISmState) Dispose() Declaration public void Dispose() GetStateByUserToolType(int) Declaration public UserToolState GetStateByUserToolType(int userToolType) Parameters Type Name Description int userToolType Returns Type Description UserToolState GetState<TState>(int) Declaration public TState GetState<TState>(int userToolType) where TState : UserToolState Parameters Type Name Description int userToolType Returns Type Description TState Type Parameters Name Description TState SwitchStateByUserToolType(int) Declaration public UserToolState SwitchStateByUserToolType(int userToolType) Parameters Type Name Description int userToolType Returns Type Description UserToolState SwitchState<TState>(int) Declaration public TState SwitchState<TState>(int userToolType) where TState : UserToolState Parameters Type Name Description int userToolType Returns Type Description TState Type Parameters Name Description TState Implements ISmState IStateMachine IDisposable Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.TerrainEditors.StateMachines.html": {
    "href": "api/Fwt.HexTerrains.TerrainEditors.StateMachines.html",
    "title": "Namespace Fwt.HexTerrains.TerrainEditors.StateMachines | Hex Terrains",
    "summary": "Namespace Fwt.HexTerrains.TerrainEditors.StateMachines Classes BrushUserToolState<TBrushTarget> BrushUserToolState<TBrushTarget, TSettings> BrushUserToolState<TBrushTarget, TSettings, TSettingsScreen> UserToolAPI Example implementation of the IUserToolAPI interface. Used to be injected into places without access to the EntityManager. Abstracts user code from the TerrainData storage (usually the Entity World). Provides an API for working with a terrain. Usually uses in a UserTools (brushes, etc.). UserToolState UserToolStateMachine Interfaces IUISystemAPI Interface for the UI system API. Provides methods to create, get, and destroy screens. IUserToolAPI Example implementation of the IUserToolAPI interface. Used to be injected into places without access to the EntityManager. Abstracts user code from the TerrainData storage (usually the Entity World). Provides an API for working with a terrain. Usually uses in a UserTools (brushes, etc.)."
  },
  "api/Fwt.HexTerrains.TerrainEditors.UserTools.CreateNewTerrainCallbackDataSource.html": {
    "href": "api/Fwt.HexTerrains.TerrainEditors.UserTools.CreateNewTerrainCallbackDataSource.html",
    "title": "Class CreateNewTerrainCallbackDataSource | Hex Terrains",
    "summary": "Class CreateNewTerrainCallbackDataSource Inheritance object UIDataSource CreateNewTerrainCallbackDataSource Implements IDataSourceViewHashProvider ICommitChanges Inherited Members UIDataSource.Version UIDataSource.MarkDirty() UIDataSource.GetViewHashCode() UIDataSource.CommitChanges() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.TerrainEditors.UserTools Assembly: fwt.hexterrains.dll Syntax public class CreateNewTerrainCallbackDataSource : UIDataSource, IDataSourceViewHashProvider, ICommitChanges Fields CancelCallback Declaration public Action CancelCallback Field Value Type Description Action CreateTerrainCallback Declaration public Action<Entity> CreateTerrainCallback Field Value Type Description Action<Entity> TerrainPrefab Declaration public Entity TerrainPrefab Field Value Type Description Entity Implements UnityEngine.UIElements.IDataSourceViewHashProvider ICommitChanges Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.TerrainEditors.UserTools.LoadTerrainCallbackDataSource.html": {
    "href": "api/Fwt.HexTerrains.TerrainEditors.UserTools.LoadTerrainCallbackDataSource.html",
    "title": "Class LoadTerrainCallbackDataSource | Hex Terrains",
    "summary": "Class LoadTerrainCallbackDataSource Inheritance object UIDataSource LoadTerrainCallbackDataSource Implements IDataSourceViewHashProvider ICommitChanges Inherited Members UIDataSource.Version UIDataSource.MarkDirty() UIDataSource.GetViewHashCode() UIDataSource.CommitChanges() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.TerrainEditors.UserTools Assembly: fwt.hexterrains.dll Syntax public class LoadTerrainCallbackDataSource : UIDataSource, IDataSourceViewHashProvider, ICommitChanges Fields CancelCallback Declaration public Action CancelCallback Field Value Type Description Action LoadCallback Declaration public Action<string> LoadCallback Field Value Type Description Action<string> Implements UnityEngine.UIElements.IDataSourceViewHashProvider ICommitChanges Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.TerrainEditors.UserTools.ResizeTerrainCallbackDataSource.html": {
    "href": "api/Fwt.HexTerrains.TerrainEditors.UserTools.ResizeTerrainCallbackDataSource.html",
    "title": "Class ResizeTerrainCallbackDataSource | Hex Terrains",
    "summary": "Class ResizeTerrainCallbackDataSource Inheritance object UIDataSource ResizeTerrainCallbackDataSource Implements IDataSourceViewHashProvider ICommitChanges Inherited Members UIDataSource.Version UIDataSource.MarkDirty() UIDataSource.GetViewHashCode() UIDataSource.CommitChanges() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.TerrainEditors.UserTools Assembly: fwt.hexterrains.dll Syntax public class ResizeTerrainCallbackDataSource : UIDataSource, IDataSourceViewHashProvider, ICommitChanges Fields CancelCallback Declaration public Action CancelCallback Field Value Type Description Action ResizeCallback Declaration public Action<int2> ResizeCallback Field Value Type Description Action<int2> Implements UnityEngine.UIElements.IDataSourceViewHashProvider ICommitChanges Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.TerrainEditors.UserTools.SaveTerrainCallbackDataSource.html": {
    "href": "api/Fwt.HexTerrains.TerrainEditors.UserTools.SaveTerrainCallbackDataSource.html",
    "title": "Class SaveTerrainCallbackDataSource | Hex Terrains",
    "summary": "Class SaveTerrainCallbackDataSource Inheritance object UIDataSource SaveTerrainCallbackDataSource Implements IDataSourceViewHashProvider ICommitChanges Inherited Members UIDataSource.Version UIDataSource.MarkDirty() UIDataSource.GetViewHashCode() UIDataSource.CommitChanges() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.TerrainEditors.UserTools Assembly: fwt.hexterrains.dll Syntax public class SaveTerrainCallbackDataSource : UIDataSource, IDataSourceViewHashProvider, ICommitChanges Fields CancelCallback Declaration public Action CancelCallback Field Value Type Description Action SaveCallback Declaration public Action<string> SaveCallback Field Value Type Description Action<string> Implements UnityEngine.UIElements.IDataSourceViewHashProvider ICommitChanges Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.AddGroundNoiseUserToolState.html": {
    "href": "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.AddGroundNoiseUserToolState.html",
    "title": "Class AddGroundNoiseUserToolState | Hex Terrains",
    "summary": "Class AddGroundNoiseUserToolState Inheritance object SmState UserToolState BrushUserToolState<HexGroundData> BrushUserToolState<HexGroundData, UserToolSettingsDataSource> BrushUserToolState<HexGroundData, UserToolSettingsDataSource, UniversalToolSettingsScreen> AddNoiseUserToolState<HexGroundData> AddGroundNoiseUserToolState Implements ISmState Inherited Members AddNoiseUserToolState<HexGroundData>.NoiseScale AddNoiseUserToolState<HexGroundData>.NoiseRep AddNoiseUserToolState<HexGroundData>.SaveSettings() AddNoiseUserToolState<HexGroundData>.LoadSettings() AddNoiseUserToolState<HexGroundData>.ApplyBrush(int, int2, int, HexGroundData, int) BrushUserToolState<HexGroundData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.SettingsScreen BrushUserToolState<HexGroundData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.PrepareToRun() BrushUserToolState<HexGroundData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.PrepareToStop() BrushUserToolState<HexGroundData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.GetSettingsScreen() BrushUserToolState<HexGroundData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.UpdateSettingsScreen() BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.DataSource BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.SettingsPlayerPrefsKeyName BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.PrepareToRun() BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.InitSettings() BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.InitDefaultSettings() BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.PrepareToStop() BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.LoadSettings() BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.SaveSettings() BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.SaveSettingsValue<TValue>(string, TValue) BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.LoadSettingsValue<TValue>(string, TValue) BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.TryLoadSettingsValue<TValue>(string, out TValue) BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.LoadSettingsValueOrDefault<TValue>(string, TValue) BrushUserToolState<HexGroundData>.PrevChangeTimeStamp BrushUserToolState<HexGroundData>.TimeTreshold BrushUserToolState<HexGroundData>.CanChangeBrushSize BrushUserToolState<HexGroundData>.AllowRightMouseButton BrushUserToolState<HexGroundData>.CursorColor BrushUserToolState<HexGroundData>.ChangeModeKey BrushUserToolState<HexGroundData>.ChangeBrushSizeKey BrushUserToolState<HexGroundData>.IncreaseBrushSizeKey BrushUserToolState<HexGroundData>.IncreaseBrushSizeKey2 BrushUserToolState<HexGroundData>.DecreaseBrushSizeKey BrushUserToolState<HexGroundData>.DecreaseBrushSizeKey2 BrushUserToolState<HexGroundData>.ChangeOpacityKey BrushUserToolState<HexGroundData>.IsTimeTresholdPassed BrushUserToolState<HexGroundData>.BrushSize BrushUserToolState<HexGroundData>.BrushOpacity BrushUserToolState<HexGroundData>.ChangeOpacityMultiplier BrushUserToolState<HexGroundData>.SetNewTimestamp() BrushUserToolState<HexGroundData>.PrepareToRun() BrushUserToolState<HexGroundData>.PrepareToStop() BrushUserToolState<HexGroundData>.Tick() BrushUserToolState<HexGroundData>.UpdateBrush() BrushUserToolState<HexGroundData>.TryApplyBrush() BrushUserToolState<HexGroundData>.ApplyToSingleCell(int, int2, int, HexGroundData, int) BrushUserToolState<HexGroundData>.ApplyBrushToAllCells(int, HexTerrainSettings, HexGroundData, int) BrushUserToolState<HexGroundData>.ApplyBrushToAllBrushPoints(int, int2, int, HexTerrainSettings, HexGroundData, int) BrushUserToolState<HexGroundData>.CanBeAppliedToManyPoints(int) BrushUserToolState<HexGroundData>.IsAppliedToEveryCellOnMap(int) BrushUserToolState<HexGroundData>.GetBrushTarget() UserToolState.Settings UserToolState.IsSubstatesVisible UserToolState.SubStateMachine UserToolState.UserToolAPI UserToolState.HasSubtools UserToolState.IsChangeViewMode UserToolState.RequiredViewMode UserToolState.OriginalViewMode UserToolState.ShowSettingsScreen<TViewData, TScreen>(TViewData) UserToolState.GetUIScreen<TScreen>() UserToolState.HideSettingsScreen<TScreen>() UserToolState.SetupPlanetCursor(bool, int) UserToolState.SetupPlanetCursor(bool, int, Color32) UserToolState.SetupPlanetCursor(bool, int, Color32, bool) UserToolState.SetupPlanetCursor(bool) UserToolState.TrySetViewMode() UserToolState.TryRestoreViewMode() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States Assembly: fwt.hexterrains.dll Syntax public class AddGroundNoiseUserToolState : AddNoiseUserToolState<HexGroundData>, ISmState Constructors AddGroundNoiseUserToolState(IUserToolAPI) Declaration public AddGroundNoiseUserToolState(IUserToolAPI userToolAPI) Parameters Type Name Description IUserToolAPI userToolAPI Properties UserToolType Declaration public override int UserToolType { get; } Property Value Type Description int Overrides UserToolState.UserToolType Methods InitDefaultSettings() Declaration protected override void InitDefaultSettings() Overrides AddNoiseUserToolState<HexGroundData>.InitDefaultSettings() Implements ISmState Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.AddNoiseUserToolState-1.html": {
    "href": "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.AddNoiseUserToolState-1.html",
    "title": "Class AddNoiseUserToolState<TBrushTarget> | Hex Terrains",
    "summary": "Class AddNoiseUserToolState<TBrushTarget> Inheritance object SmState UserToolState BrushUserToolState<TBrushTarget> BrushUserToolState<TBrushTarget, UserToolSettingsDataSource> BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen> AddNoiseUserToolState<TBrushTarget> AddGroundNoiseUserToolState AddWaterNoiseUserToolState Implements ISmState Inherited Members BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen>.SettingsScreen BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen>.PrepareToRun() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen>.PrepareToStop() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen>.GetSettingsScreen() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen>.UpdateSettingsScreen() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.DataSource BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.SettingsPlayerPrefsKeyName BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.PrepareToRun() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.InitSettings() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.InitDefaultSettings() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.PrepareToStop() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.LoadSettings() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.SaveSettings() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.SaveSettingsValue<TValue>(string, TValue) BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.LoadSettingsValue<TValue>(string, TValue) BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.TryLoadSettingsValue<TValue>(string, out TValue) BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.LoadSettingsValueOrDefault<TValue>(string, TValue) BrushUserToolState<TBrushTarget>.PrevChangeTimeStamp BrushUserToolState<TBrushTarget>.TimeTreshold BrushUserToolState<TBrushTarget>.CanChangeBrushSize BrushUserToolState<TBrushTarget>.AllowRightMouseButton BrushUserToolState<TBrushTarget>.CursorColor BrushUserToolState<TBrushTarget>.ChangeModeKey BrushUserToolState<TBrushTarget>.ChangeBrushSizeKey BrushUserToolState<TBrushTarget>.IncreaseBrushSizeKey BrushUserToolState<TBrushTarget>.IncreaseBrushSizeKey2 BrushUserToolState<TBrushTarget>.DecreaseBrushSizeKey BrushUserToolState<TBrushTarget>.DecreaseBrushSizeKey2 BrushUserToolState<TBrushTarget>.ChangeOpacityKey BrushUserToolState<TBrushTarget>.IsTimeTresholdPassed BrushUserToolState<TBrushTarget>.BrushSize BrushUserToolState<TBrushTarget>.BrushOpacity BrushUserToolState<TBrushTarget>.ChangeOpacityMultiplier BrushUserToolState<TBrushTarget>.SetNewTimestamp() BrushUserToolState<TBrushTarget>.PrepareToRun() BrushUserToolState<TBrushTarget>.PrepareToStop() BrushUserToolState<TBrushTarget>.Tick() BrushUserToolState<TBrushTarget>.UpdateBrush() BrushUserToolState<TBrushTarget>.TryApplyBrush() BrushUserToolState<TBrushTarget>.ApplyToSingleCell(int, int2, int, TBrushTarget, int) BrushUserToolState<TBrushTarget>.ApplyBrushToAllCells(int, HexTerrainSettings, TBrushTarget, int) BrushUserToolState<TBrushTarget>.ApplyBrushToAllBrushPoints(int, int2, int, HexTerrainSettings, TBrushTarget, int) BrushUserToolState<TBrushTarget>.CanBeAppliedToManyPoints(int) BrushUserToolState<TBrushTarget>.IsAppliedToEveryCellOnMap(int) BrushUserToolState<TBrushTarget>.GetBrushTarget() UserToolState.Settings UserToolState.IsSubstatesVisible UserToolState.SubStateMachine UserToolState.UserToolType UserToolState.UserToolAPI UserToolState.HasSubtools UserToolState.IsChangeViewMode UserToolState.RequiredViewMode UserToolState.OriginalViewMode UserToolState.ShowSettingsScreen<TViewData, TScreen>(TViewData) UserToolState.GetUIScreen<TScreen>() UserToolState.HideSettingsScreen<TScreen>() UserToolState.SetupPlanetCursor(bool, int) UserToolState.SetupPlanetCursor(bool, int, Color32) UserToolState.SetupPlanetCursor(bool, int, Color32, bool) UserToolState.SetupPlanetCursor(bool) UserToolState.TrySetViewMode() UserToolState.TryRestoreViewMode() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States Assembly: fwt.hexterrains.dll Syntax public abstract class AddNoiseUserToolState<TBrushTarget> : BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen>, ISmState where TBrushTarget : HexSurfaceData Type Parameters Name Description TBrushTarget Constructors AddNoiseUserToolState(IUserToolAPI) Declaration public AddNoiseUserToolState(IUserToolAPI userToolAPI) Parameters Type Name Description IUserToolAPI userToolAPI Properties NoiseRep Declaration public float2 NoiseRep { get; } Property Value Type Description float2 NoiseScale Declaration public float2 NoiseScale { get; } Property Value Type Description float2 Methods ApplyBrush(int, int2, int, TBrushTarget, int) Applies brush to the brushView. Returns true if changes were applied Declaration public override bool ApplyBrush(int brushMode, int2 cellCoord, int cellIndex, TBrushTarget brushTarget, int mouseButton) Parameters Type Name Description int brushMode int2 cellCoord int cellIndex TBrushTarget brushTarget int mouseButton Returns Type Description bool Overrides BrushUserToolState<TBrushTarget>.ApplyBrush(int, int2, int, TBrushTarget, int) InitDefaultSettings() Declaration protected override void InitDefaultSettings() Overrides BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.InitDefaultSettings() LoadSettings() Declaration protected override void LoadSettings() Overrides BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.LoadSettings() SaveSettings() Declaration protected override void SaveSettings() Overrides BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.SaveSettings() Implements ISmState Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.AddWaterNoiseUserToolState.html": {
    "href": "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.AddWaterNoiseUserToolState.html",
    "title": "Class AddWaterNoiseUserToolState | Hex Terrains",
    "summary": "Class AddWaterNoiseUserToolState Inheritance object SmState UserToolState BrushUserToolState<HexWaterData> BrushUserToolState<HexWaterData, UserToolSettingsDataSource> BrushUserToolState<HexWaterData, UserToolSettingsDataSource, UniversalToolSettingsScreen> AddNoiseUserToolState<HexWaterData> AddWaterNoiseUserToolState Implements ISmState Inherited Members AddNoiseUserToolState<HexWaterData>.NoiseScale AddNoiseUserToolState<HexWaterData>.NoiseRep AddNoiseUserToolState<HexWaterData>.SaveSettings() AddNoiseUserToolState<HexWaterData>.LoadSettings() AddNoiseUserToolState<HexWaterData>.ApplyBrush(int, int2, int, HexWaterData, int) BrushUserToolState<HexWaterData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.SettingsScreen BrushUserToolState<HexWaterData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.PrepareToRun() BrushUserToolState<HexWaterData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.PrepareToStop() BrushUserToolState<HexWaterData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.GetSettingsScreen() BrushUserToolState<HexWaterData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.UpdateSettingsScreen() BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.DataSource BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.SettingsPlayerPrefsKeyName BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.PrepareToRun() BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.InitSettings() BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.InitDefaultSettings() BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.PrepareToStop() BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.LoadSettings() BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.SaveSettings() BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.SaveSettingsValue<TValue>(string, TValue) BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.LoadSettingsValue<TValue>(string, TValue) BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.TryLoadSettingsValue<TValue>(string, out TValue) BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.LoadSettingsValueOrDefault<TValue>(string, TValue) BrushUserToolState<HexWaterData>.PrevChangeTimeStamp BrushUserToolState<HexWaterData>.TimeTreshold BrushUserToolState<HexWaterData>.CanChangeBrushSize BrushUserToolState<HexWaterData>.AllowRightMouseButton BrushUserToolState<HexWaterData>.CursorColor BrushUserToolState<HexWaterData>.ChangeModeKey BrushUserToolState<HexWaterData>.ChangeBrushSizeKey BrushUserToolState<HexWaterData>.IncreaseBrushSizeKey BrushUserToolState<HexWaterData>.IncreaseBrushSizeKey2 BrushUserToolState<HexWaterData>.DecreaseBrushSizeKey BrushUserToolState<HexWaterData>.DecreaseBrushSizeKey2 BrushUserToolState<HexWaterData>.ChangeOpacityKey BrushUserToolState<HexWaterData>.IsTimeTresholdPassed BrushUserToolState<HexWaterData>.BrushSize BrushUserToolState<HexWaterData>.BrushOpacity BrushUserToolState<HexWaterData>.ChangeOpacityMultiplier BrushUserToolState<HexWaterData>.SetNewTimestamp() BrushUserToolState<HexWaterData>.PrepareToRun() BrushUserToolState<HexWaterData>.PrepareToStop() BrushUserToolState<HexWaterData>.Tick() BrushUserToolState<HexWaterData>.UpdateBrush() BrushUserToolState<HexWaterData>.TryApplyBrush() BrushUserToolState<HexWaterData>.ApplyToSingleCell(int, int2, int, HexWaterData, int) BrushUserToolState<HexWaterData>.ApplyBrushToAllCells(int, HexTerrainSettings, HexWaterData, int) BrushUserToolState<HexWaterData>.ApplyBrushToAllBrushPoints(int, int2, int, HexTerrainSettings, HexWaterData, int) BrushUserToolState<HexWaterData>.CanBeAppliedToManyPoints(int) BrushUserToolState<HexWaterData>.IsAppliedToEveryCellOnMap(int) BrushUserToolState<HexWaterData>.GetBrushTarget() UserToolState.Settings UserToolState.IsSubstatesVisible UserToolState.SubStateMachine UserToolState.UserToolAPI UserToolState.HasSubtools UserToolState.IsChangeViewMode UserToolState.RequiredViewMode UserToolState.OriginalViewMode UserToolState.ShowSettingsScreen<TViewData, TScreen>(TViewData) UserToolState.GetUIScreen<TScreen>() UserToolState.HideSettingsScreen<TScreen>() UserToolState.SetupPlanetCursor(bool, int) UserToolState.SetupPlanetCursor(bool, int, Color32) UserToolState.SetupPlanetCursor(bool, int, Color32, bool) UserToolState.SetupPlanetCursor(bool) UserToolState.TrySetViewMode() UserToolState.TryRestoreViewMode() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States Assembly: fwt.hexterrains.dll Syntax public class AddWaterNoiseUserToolState : AddNoiseUserToolState<HexWaterData>, ISmState Constructors AddWaterNoiseUserToolState(IUserToolAPI) Declaration public AddWaterNoiseUserToolState(IUserToolAPI userToolAPI) Parameters Type Name Description IUserToolAPI userToolAPI Properties UserToolType Declaration public override int UserToolType { get; } Property Value Type Description int Overrides UserToolState.UserToolType Methods InitDefaultSettings() Declaration protected override void InitDefaultSettings() Overrides AddNoiseUserToolState<HexWaterData>.InitDefaultSettings() Implements ISmState Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.ApplyGroundHeightmapUserToolState.html": {
    "href": "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.ApplyGroundHeightmapUserToolState.html",
    "title": "Class ApplyGroundHeightmapUserToolState | Hex Terrains",
    "summary": "Class ApplyGroundHeightmapUserToolState Inheritance object SmState UserToolState BrushUserToolState<HexGroundData> BrushUserToolState<HexGroundData, UserToolSettingsDataSource> BrushUserToolState<HexGroundData, UserToolSettingsDataSource, UniversalToolSettingsScreen> ApplyHeightmapUserToolState<HexGroundData> ApplyGroundHeightmapUserToolState Implements ISmState Inherited Members ApplyHeightmapUserToolState<HexGroundData>.SourceTexture ApplyHeightmapUserToolState<HexGroundData>.Offset ApplyHeightmapUserToolState<HexGroundData>.Scale ApplyHeightmapUserToolState<HexGroundData>.SaveSettings() ApplyHeightmapUserToolState<HexGroundData>.LoadSettings() ApplyHeightmapUserToolState<HexGroundData>.ApplyBrush(int, int2, int, HexGroundData, int) BrushUserToolState<HexGroundData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.SettingsScreen BrushUserToolState<HexGroundData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.PrepareToRun() BrushUserToolState<HexGroundData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.PrepareToStop() BrushUserToolState<HexGroundData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.GetSettingsScreen() BrushUserToolState<HexGroundData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.UpdateSettingsScreen() BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.DataSource BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.SettingsPlayerPrefsKeyName BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.PrepareToRun() BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.InitSettings() BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.InitDefaultSettings() BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.PrepareToStop() BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.LoadSettings() BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.SaveSettings() BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.SaveSettingsValue<TValue>(string, TValue) BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.LoadSettingsValue<TValue>(string, TValue) BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.TryLoadSettingsValue<TValue>(string, out TValue) BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.LoadSettingsValueOrDefault<TValue>(string, TValue) BrushUserToolState<HexGroundData>.PrevChangeTimeStamp BrushUserToolState<HexGroundData>.TimeTreshold BrushUserToolState<HexGroundData>.CanChangeBrushSize BrushUserToolState<HexGroundData>.AllowRightMouseButton BrushUserToolState<HexGroundData>.CursorColor BrushUserToolState<HexGroundData>.ChangeModeKey BrushUserToolState<HexGroundData>.ChangeBrushSizeKey BrushUserToolState<HexGroundData>.IncreaseBrushSizeKey BrushUserToolState<HexGroundData>.IncreaseBrushSizeKey2 BrushUserToolState<HexGroundData>.DecreaseBrushSizeKey BrushUserToolState<HexGroundData>.DecreaseBrushSizeKey2 BrushUserToolState<HexGroundData>.ChangeOpacityKey BrushUserToolState<HexGroundData>.IsTimeTresholdPassed BrushUserToolState<HexGroundData>.BrushSize BrushUserToolState<HexGroundData>.BrushOpacity BrushUserToolState<HexGroundData>.ChangeOpacityMultiplier BrushUserToolState<HexGroundData>.SetNewTimestamp() BrushUserToolState<HexGroundData>.PrepareToRun() BrushUserToolState<HexGroundData>.PrepareToStop() BrushUserToolState<HexGroundData>.Tick() BrushUserToolState<HexGroundData>.UpdateBrush() BrushUserToolState<HexGroundData>.TryApplyBrush() BrushUserToolState<HexGroundData>.ApplyToSingleCell(int, int2, int, HexGroundData, int) BrushUserToolState<HexGroundData>.ApplyBrushToAllCells(int, HexTerrainSettings, HexGroundData, int) BrushUserToolState<HexGroundData>.ApplyBrushToAllBrushPoints(int, int2, int, HexTerrainSettings, HexGroundData, int) BrushUserToolState<HexGroundData>.CanBeAppliedToManyPoints(int) BrushUserToolState<HexGroundData>.IsAppliedToEveryCellOnMap(int) BrushUserToolState<HexGroundData>.GetBrushTarget() UserToolState.Settings UserToolState.IsSubstatesVisible UserToolState.SubStateMachine UserToolState.UserToolAPI UserToolState.HasSubtools UserToolState.IsChangeViewMode UserToolState.RequiredViewMode UserToolState.OriginalViewMode UserToolState.ShowSettingsScreen<TViewData, TScreen>(TViewData) UserToolState.GetUIScreen<TScreen>() UserToolState.HideSettingsScreen<TScreen>() UserToolState.SetupPlanetCursor(bool, int) UserToolState.SetupPlanetCursor(bool, int, Color32) UserToolState.SetupPlanetCursor(bool, int, Color32, bool) UserToolState.SetupPlanetCursor(bool) UserToolState.TrySetViewMode() UserToolState.TryRestoreViewMode() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States Assembly: fwt.hexterrains.dll Syntax public class ApplyGroundHeightmapUserToolState : ApplyHeightmapUserToolState<HexGroundData>, ISmState Constructors ApplyGroundHeightmapUserToolState(IUserToolAPI) Declaration public ApplyGroundHeightmapUserToolState(IUserToolAPI userToolAPI) Parameters Type Name Description IUserToolAPI userToolAPI Properties UserToolType Declaration public override int UserToolType { get; } Property Value Type Description int Overrides UserToolState.UserToolType Methods InitDefaultSettings() Declaration protected override void InitDefaultSettings() Overrides ApplyHeightmapUserToolState<HexGroundData>.InitDefaultSettings() Implements ISmState Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.ApplyHeightmapUserToolState-1.html": {
    "href": "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.ApplyHeightmapUserToolState-1.html",
    "title": "Class ApplyHeightmapUserToolState<TBrushTarget> | Hex Terrains",
    "summary": "Class ApplyHeightmapUserToolState<TBrushTarget> Inheritance object SmState UserToolState BrushUserToolState<TBrushTarget> BrushUserToolState<TBrushTarget, UserToolSettingsDataSource> BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen> ApplyHeightmapUserToolState<TBrushTarget> ApplyGroundHeightmapUserToolState ApplyWaterHeightmapUserToolState Implements ISmState Inherited Members BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen>.SettingsScreen BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen>.PrepareToRun() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen>.PrepareToStop() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen>.GetSettingsScreen() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen>.UpdateSettingsScreen() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.DataSource BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.SettingsPlayerPrefsKeyName BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.PrepareToRun() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.InitSettings() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.InitDefaultSettings() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.PrepareToStop() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.LoadSettings() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.SaveSettings() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.SaveSettingsValue<TValue>(string, TValue) BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.LoadSettingsValue<TValue>(string, TValue) BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.TryLoadSettingsValue<TValue>(string, out TValue) BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.LoadSettingsValueOrDefault<TValue>(string, TValue) BrushUserToolState<TBrushTarget>.PrevChangeTimeStamp BrushUserToolState<TBrushTarget>.TimeTreshold BrushUserToolState<TBrushTarget>.CanChangeBrushSize BrushUserToolState<TBrushTarget>.AllowRightMouseButton BrushUserToolState<TBrushTarget>.CursorColor BrushUserToolState<TBrushTarget>.ChangeModeKey BrushUserToolState<TBrushTarget>.ChangeBrushSizeKey BrushUserToolState<TBrushTarget>.IncreaseBrushSizeKey BrushUserToolState<TBrushTarget>.IncreaseBrushSizeKey2 BrushUserToolState<TBrushTarget>.DecreaseBrushSizeKey BrushUserToolState<TBrushTarget>.DecreaseBrushSizeKey2 BrushUserToolState<TBrushTarget>.ChangeOpacityKey BrushUserToolState<TBrushTarget>.IsTimeTresholdPassed BrushUserToolState<TBrushTarget>.BrushSize BrushUserToolState<TBrushTarget>.BrushOpacity BrushUserToolState<TBrushTarget>.ChangeOpacityMultiplier BrushUserToolState<TBrushTarget>.SetNewTimestamp() BrushUserToolState<TBrushTarget>.PrepareToRun() BrushUserToolState<TBrushTarget>.PrepareToStop() BrushUserToolState<TBrushTarget>.Tick() BrushUserToolState<TBrushTarget>.UpdateBrush() BrushUserToolState<TBrushTarget>.TryApplyBrush() BrushUserToolState<TBrushTarget>.ApplyToSingleCell(int, int2, int, TBrushTarget, int) BrushUserToolState<TBrushTarget>.ApplyBrushToAllCells(int, HexTerrainSettings, TBrushTarget, int) BrushUserToolState<TBrushTarget>.ApplyBrushToAllBrushPoints(int, int2, int, HexTerrainSettings, TBrushTarget, int) BrushUserToolState<TBrushTarget>.CanBeAppliedToManyPoints(int) BrushUserToolState<TBrushTarget>.IsAppliedToEveryCellOnMap(int) BrushUserToolState<TBrushTarget>.GetBrushTarget() UserToolState.Settings UserToolState.IsSubstatesVisible UserToolState.SubStateMachine UserToolState.UserToolType UserToolState.UserToolAPI UserToolState.HasSubtools UserToolState.IsChangeViewMode UserToolState.RequiredViewMode UserToolState.OriginalViewMode UserToolState.ShowSettingsScreen<TViewData, TScreen>(TViewData) UserToolState.GetUIScreen<TScreen>() UserToolState.HideSettingsScreen<TScreen>() UserToolState.SetupPlanetCursor(bool, int) UserToolState.SetupPlanetCursor(bool, int, Color32) UserToolState.SetupPlanetCursor(bool, int, Color32, bool) UserToolState.SetupPlanetCursor(bool) UserToolState.TrySetViewMode() UserToolState.TryRestoreViewMode() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States Assembly: fwt.hexterrains.dll Syntax public abstract class ApplyHeightmapUserToolState<TBrushTarget> : BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen>, ISmState where TBrushTarget : HexSurfaceData Type Parameters Name Description TBrushTarget Constructors ApplyHeightmapUserToolState(IUserToolAPI) Declaration public ApplyHeightmapUserToolState(IUserToolAPI userToolAPI) Parameters Type Name Description IUserToolAPI userToolAPI ApplyHeightmapUserToolState(IUserToolAPI, Texture2D) Declaration protected ApplyHeightmapUserToolState(IUserToolAPI userToolAPI, Texture2D sourceTexture) Parameters Type Name Description IUserToolAPI userToolAPI Texture2D sourceTexture Fields SourceTexture Declaration public Texture2D SourceTexture Field Value Type Description Texture2D Properties Offset Declaration public int Offset { get; } Property Value Type Description int Scale Declaration public float Scale { get; } Property Value Type Description float Methods ApplyBrush(int, int2, int, TBrushTarget, int) Applies brush to the brushView. Returns true if changes were applied Declaration public override bool ApplyBrush(int brushMode, int2 cellCoord, int cellIndex, TBrushTarget brushTarget, int mouseButton) Parameters Type Name Description int brushMode int2 cellCoord int cellIndex TBrushTarget brushTarget int mouseButton Returns Type Description bool Overrides BrushUserToolState<TBrushTarget>.ApplyBrush(int, int2, int, TBrushTarget, int) InitDefaultSettings() Declaration protected override void InitDefaultSettings() Overrides BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.InitDefaultSettings() LoadSettings() Declaration protected override void LoadSettings() Overrides BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.LoadSettings() SaveSettings() Declaration protected override void SaveSettings() Overrides BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.SaveSettings() Implements ISmState Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.ApplyWaterHeightmapUserToolState.html": {
    "href": "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.ApplyWaterHeightmapUserToolState.html",
    "title": "Class ApplyWaterHeightmapUserToolState | Hex Terrains",
    "summary": "Class ApplyWaterHeightmapUserToolState Inheritance object SmState UserToolState BrushUserToolState<HexWaterData> BrushUserToolState<HexWaterData, UserToolSettingsDataSource> BrushUserToolState<HexWaterData, UserToolSettingsDataSource, UniversalToolSettingsScreen> ApplyHeightmapUserToolState<HexWaterData> ApplyWaterHeightmapUserToolState Implements ISmState Inherited Members ApplyHeightmapUserToolState<HexWaterData>.SourceTexture ApplyHeightmapUserToolState<HexWaterData>.Offset ApplyHeightmapUserToolState<HexWaterData>.Scale ApplyHeightmapUserToolState<HexWaterData>.SaveSettings() ApplyHeightmapUserToolState<HexWaterData>.LoadSettings() ApplyHeightmapUserToolState<HexWaterData>.ApplyBrush(int, int2, int, HexWaterData, int) BrushUserToolState<HexWaterData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.SettingsScreen BrushUserToolState<HexWaterData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.PrepareToRun() BrushUserToolState<HexWaterData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.PrepareToStop() BrushUserToolState<HexWaterData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.GetSettingsScreen() BrushUserToolState<HexWaterData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.UpdateSettingsScreen() BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.DataSource BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.SettingsPlayerPrefsKeyName BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.PrepareToRun() BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.InitSettings() BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.InitDefaultSettings() BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.PrepareToStop() BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.LoadSettings() BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.SaveSettings() BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.SaveSettingsValue<TValue>(string, TValue) BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.LoadSettingsValue<TValue>(string, TValue) BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.TryLoadSettingsValue<TValue>(string, out TValue) BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.LoadSettingsValueOrDefault<TValue>(string, TValue) BrushUserToolState<HexWaterData>.PrevChangeTimeStamp BrushUserToolState<HexWaterData>.TimeTreshold BrushUserToolState<HexWaterData>.CanChangeBrushSize BrushUserToolState<HexWaterData>.AllowRightMouseButton BrushUserToolState<HexWaterData>.CursorColor BrushUserToolState<HexWaterData>.ChangeModeKey BrushUserToolState<HexWaterData>.ChangeBrushSizeKey BrushUserToolState<HexWaterData>.IncreaseBrushSizeKey BrushUserToolState<HexWaterData>.IncreaseBrushSizeKey2 BrushUserToolState<HexWaterData>.DecreaseBrushSizeKey BrushUserToolState<HexWaterData>.DecreaseBrushSizeKey2 BrushUserToolState<HexWaterData>.ChangeOpacityKey BrushUserToolState<HexWaterData>.IsTimeTresholdPassed BrushUserToolState<HexWaterData>.BrushSize BrushUserToolState<HexWaterData>.BrushOpacity BrushUserToolState<HexWaterData>.ChangeOpacityMultiplier BrushUserToolState<HexWaterData>.SetNewTimestamp() BrushUserToolState<HexWaterData>.PrepareToRun() BrushUserToolState<HexWaterData>.PrepareToStop() BrushUserToolState<HexWaterData>.Tick() BrushUserToolState<HexWaterData>.UpdateBrush() BrushUserToolState<HexWaterData>.TryApplyBrush() BrushUserToolState<HexWaterData>.ApplyToSingleCell(int, int2, int, HexWaterData, int) BrushUserToolState<HexWaterData>.ApplyBrushToAllCells(int, HexTerrainSettings, HexWaterData, int) BrushUserToolState<HexWaterData>.ApplyBrushToAllBrushPoints(int, int2, int, HexTerrainSettings, HexWaterData, int) BrushUserToolState<HexWaterData>.CanBeAppliedToManyPoints(int) BrushUserToolState<HexWaterData>.IsAppliedToEveryCellOnMap(int) BrushUserToolState<HexWaterData>.GetBrushTarget() UserToolState.Settings UserToolState.IsSubstatesVisible UserToolState.SubStateMachine UserToolState.UserToolAPI UserToolState.HasSubtools UserToolState.IsChangeViewMode UserToolState.RequiredViewMode UserToolState.OriginalViewMode UserToolState.ShowSettingsScreen<TViewData, TScreen>(TViewData) UserToolState.GetUIScreen<TScreen>() UserToolState.HideSettingsScreen<TScreen>() UserToolState.SetupPlanetCursor(bool, int) UserToolState.SetupPlanetCursor(bool, int, Color32) UserToolState.SetupPlanetCursor(bool, int, Color32, bool) UserToolState.SetupPlanetCursor(bool) UserToolState.TrySetViewMode() UserToolState.TryRestoreViewMode() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States Assembly: fwt.hexterrains.dll Syntax public class ApplyWaterHeightmapUserToolState : ApplyHeightmapUserToolState<HexWaterData>, ISmState Constructors ApplyWaterHeightmapUserToolState(IUserToolAPI) Declaration public ApplyWaterHeightmapUserToolState(IUserToolAPI userToolAPI) Parameters Type Name Description IUserToolAPI userToolAPI Properties UserToolType Declaration public override int UserToolType { get; } Property Value Type Description int Overrides UserToolState.UserToolType Methods InitDefaultSettings() Declaration protected override void InitDefaultSettings() Overrides ApplyHeightmapUserToolState<HexWaterData>.InitDefaultSettings() Implements ISmState Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.AutoPaintGroundUserToolState.html": {
    "href": "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.AutoPaintGroundUserToolState.html",
    "title": "Class AutoPaintGroundUserToolState | Hex Terrains",
    "summary": "Class AutoPaintGroundUserToolState Inheritance object SmState UserToolState BrushUserToolState<HexGroundData> BrushUserToolState<HexGroundData, UserToolSettingsDataSource> BrushUserToolState<HexGroundData, UserToolSettingsDataSource, UniversalToolSettingsScreen> AutoPaintUserToolState<HexGroundData> AutoPaintGroundUserToolState Implements ISmState Inherited Members AutoPaintUserToolState<HexGroundData>.ValueNames AutoPaintUserToolState<HexGroundData>.BiomeHeights AutoPaintUserToolState<HexGroundData>.SaveSettings() AutoPaintUserToolState<HexGroundData>.LoadSettings() AutoPaintUserToolState<HexGroundData>.ApplyBrush(int, int2, int, HexGroundData, int) AutoPaintUserToolState<HexGroundData>.GetHeightBiome(byte) BrushUserToolState<HexGroundData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.SettingsScreen BrushUserToolState<HexGroundData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.PrepareToRun() BrushUserToolState<HexGroundData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.PrepareToStop() BrushUserToolState<HexGroundData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.GetSettingsScreen() BrushUserToolState<HexGroundData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.UpdateSettingsScreen() BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.DataSource BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.SettingsPlayerPrefsKeyName BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.PrepareToRun() BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.InitSettings() BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.InitDefaultSettings() BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.PrepareToStop() BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.LoadSettings() BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.SaveSettings() BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.SaveSettingsValue<TValue>(string, TValue) BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.LoadSettingsValue<TValue>(string, TValue) BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.TryLoadSettingsValue<TValue>(string, out TValue) BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.LoadSettingsValueOrDefault<TValue>(string, TValue) BrushUserToolState<HexGroundData>.PrevChangeTimeStamp BrushUserToolState<HexGroundData>.TimeTreshold BrushUserToolState<HexGroundData>.CanChangeBrushSize BrushUserToolState<HexGroundData>.AllowRightMouseButton BrushUserToolState<HexGroundData>.CursorColor BrushUserToolState<HexGroundData>.ChangeModeKey BrushUserToolState<HexGroundData>.ChangeBrushSizeKey BrushUserToolState<HexGroundData>.IncreaseBrushSizeKey BrushUserToolState<HexGroundData>.IncreaseBrushSizeKey2 BrushUserToolState<HexGroundData>.DecreaseBrushSizeKey BrushUserToolState<HexGroundData>.DecreaseBrushSizeKey2 BrushUserToolState<HexGroundData>.ChangeOpacityKey BrushUserToolState<HexGroundData>.IsTimeTresholdPassed BrushUserToolState<HexGroundData>.BrushSize BrushUserToolState<HexGroundData>.BrushOpacity BrushUserToolState<HexGroundData>.ChangeOpacityMultiplier BrushUserToolState<HexGroundData>.SetNewTimestamp() BrushUserToolState<HexGroundData>.PrepareToRun() BrushUserToolState<HexGroundData>.PrepareToStop() BrushUserToolState<HexGroundData>.Tick() BrushUserToolState<HexGroundData>.UpdateBrush() BrushUserToolState<HexGroundData>.TryApplyBrush() BrushUserToolState<HexGroundData>.ApplyToSingleCell(int, int2, int, HexGroundData, int) BrushUserToolState<HexGroundData>.ApplyBrushToAllCells(int, HexTerrainSettings, HexGroundData, int) BrushUserToolState<HexGroundData>.ApplyBrushToAllBrushPoints(int, int2, int, HexTerrainSettings, HexGroundData, int) BrushUserToolState<HexGroundData>.CanBeAppliedToManyPoints(int) BrushUserToolState<HexGroundData>.IsAppliedToEveryCellOnMap(int) BrushUserToolState<HexGroundData>.GetBrushTarget() UserToolState.Settings UserToolState.IsSubstatesVisible UserToolState.SubStateMachine UserToolState.UserToolAPI UserToolState.HasSubtools UserToolState.IsChangeViewMode UserToolState.RequiredViewMode UserToolState.OriginalViewMode UserToolState.ShowSettingsScreen<TViewData, TScreen>(TViewData) UserToolState.GetUIScreen<TScreen>() UserToolState.HideSettingsScreen<TScreen>() UserToolState.SetupPlanetCursor(bool, int) UserToolState.SetupPlanetCursor(bool, int, Color32) UserToolState.SetupPlanetCursor(bool, int, Color32, bool) UserToolState.SetupPlanetCursor(bool) UserToolState.TrySetViewMode() UserToolState.TryRestoreViewMode() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States Assembly: fwt.hexterrains.dll Syntax public class AutoPaintGroundUserToolState : AutoPaintUserToolState<HexGroundData>, ISmState Constructors AutoPaintGroundUserToolState(IUserToolAPI) Declaration public AutoPaintGroundUserToolState(IUserToolAPI userToolAPI) Parameters Type Name Description IUserToolAPI userToolAPI Properties UserToolType Declaration public override int UserToolType { get; } Property Value Type Description int Overrides UserToolState.UserToolType Methods InitDefaultSettings() Declaration protected override void InitDefaultSettings() Overrides AutoPaintUserToolState<HexGroundData>.InitDefaultSettings() LoadSettingsValueOrDefault<TValue>(string, TValue) Declaration protected override TValue LoadSettingsValueOrDefault<TValue>(string valueName, TValue defaultValue = default) Parameters Type Name Description string valueName TValue defaultValue Returns Type Description TValue Type Parameters Name Description TValue Overrides BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.LoadSettingsValueOrDefault<TValue>(string, TValue) Implements ISmState Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.AutoPaintUserToolState-1.html": {
    "href": "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.AutoPaintUserToolState-1.html",
    "title": "Class AutoPaintUserToolState<TBrushTarget> | Hex Terrains",
    "summary": "Class AutoPaintUserToolState<TBrushTarget> Inheritance object SmState UserToolState BrushUserToolState<TBrushTarget> BrushUserToolState<TBrushTarget, UserToolSettingsDataSource> BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen> AutoPaintUserToolState<TBrushTarget> AutoPaintGroundUserToolState AutoPaintWaterUserToolState Implements ISmState Inherited Members BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen>.SettingsScreen BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen>.PrepareToRun() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen>.PrepareToStop() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen>.GetSettingsScreen() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen>.UpdateSettingsScreen() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.DataSource BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.SettingsPlayerPrefsKeyName BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.PrepareToRun() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.InitSettings() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.InitDefaultSettings() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.PrepareToStop() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.LoadSettings() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.SaveSettings() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.SaveSettingsValue<TValue>(string, TValue) BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.LoadSettingsValue<TValue>(string, TValue) BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.TryLoadSettingsValue<TValue>(string, out TValue) BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.LoadSettingsValueOrDefault<TValue>(string, TValue) BrushUserToolState<TBrushTarget>.PrevChangeTimeStamp BrushUserToolState<TBrushTarget>.TimeTreshold BrushUserToolState<TBrushTarget>.CanChangeBrushSize BrushUserToolState<TBrushTarget>.AllowRightMouseButton BrushUserToolState<TBrushTarget>.CursorColor BrushUserToolState<TBrushTarget>.ChangeModeKey BrushUserToolState<TBrushTarget>.ChangeBrushSizeKey BrushUserToolState<TBrushTarget>.IncreaseBrushSizeKey BrushUserToolState<TBrushTarget>.IncreaseBrushSizeKey2 BrushUserToolState<TBrushTarget>.DecreaseBrushSizeKey BrushUserToolState<TBrushTarget>.DecreaseBrushSizeKey2 BrushUserToolState<TBrushTarget>.ChangeOpacityKey BrushUserToolState<TBrushTarget>.IsTimeTresholdPassed BrushUserToolState<TBrushTarget>.BrushSize BrushUserToolState<TBrushTarget>.BrushOpacity BrushUserToolState<TBrushTarget>.ChangeOpacityMultiplier BrushUserToolState<TBrushTarget>.SetNewTimestamp() BrushUserToolState<TBrushTarget>.PrepareToRun() BrushUserToolState<TBrushTarget>.PrepareToStop() BrushUserToolState<TBrushTarget>.Tick() BrushUserToolState<TBrushTarget>.UpdateBrush() BrushUserToolState<TBrushTarget>.TryApplyBrush() BrushUserToolState<TBrushTarget>.ApplyToSingleCell(int, int2, int, TBrushTarget, int) BrushUserToolState<TBrushTarget>.ApplyBrushToAllCells(int, HexTerrainSettings, TBrushTarget, int) BrushUserToolState<TBrushTarget>.ApplyBrushToAllBrushPoints(int, int2, int, HexTerrainSettings, TBrushTarget, int) BrushUserToolState<TBrushTarget>.CanBeAppliedToManyPoints(int) BrushUserToolState<TBrushTarget>.IsAppliedToEveryCellOnMap(int) BrushUserToolState<TBrushTarget>.GetBrushTarget() UserToolState.Settings UserToolState.IsSubstatesVisible UserToolState.SubStateMachine UserToolState.UserToolType UserToolState.UserToolAPI UserToolState.HasSubtools UserToolState.IsChangeViewMode UserToolState.RequiredViewMode UserToolState.OriginalViewMode UserToolState.ShowSettingsScreen<TViewData, TScreen>(TViewData) UserToolState.GetUIScreen<TScreen>() UserToolState.HideSettingsScreen<TScreen>() UserToolState.SetupPlanetCursor(bool, int) UserToolState.SetupPlanetCursor(bool, int, Color32) UserToolState.SetupPlanetCursor(bool, int, Color32, bool) UserToolState.SetupPlanetCursor(bool) UserToolState.TrySetViewMode() UserToolState.TryRestoreViewMode() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States Assembly: fwt.hexterrains.dll Syntax public abstract class AutoPaintUserToolState<TBrushTarget> : BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen>, ISmState where TBrushTarget : HexSurfaceData Type Parameters Name Description TBrushTarget Constructors AutoPaintUserToolState(IUserToolAPI) Declaration public AutoPaintUserToolState(IUserToolAPI userToolAPI) Parameters Type Name Description IUserToolAPI userToolAPI Fields BiomeHeights Declaration public List<byte> BiomeHeights Field Value Type Description List<byte> ValueNames Declaration public List<string> ValueNames Field Value Type Description List<string> Methods ApplyBrush(int, int2, int, TBrushTarget, int) Applies brush to the brushView. Returns true if changes were applied Declaration public override bool ApplyBrush(int brushMode, int2 cellCoord, int cellIndex, TBrushTarget brushTarget, int mouseButton) Parameters Type Name Description int brushMode int2 cellCoord int cellIndex TBrushTarget brushTarget int mouseButton Returns Type Description bool Overrides BrushUserToolState<TBrushTarget>.ApplyBrush(int, int2, int, TBrushTarget, int) GetHeightBiome(byte) Declaration public int GetHeightBiome(byte height) Parameters Type Name Description byte height Returns Type Description int InitDefaultSettings() Declaration protected override void InitDefaultSettings() Overrides BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.InitDefaultSettings() LoadSettings() Declaration protected override void LoadSettings() Overrides BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.LoadSettings() SaveSettings() Declaration protected override void SaveSettings() Overrides BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.SaveSettings() Implements ISmState Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.AutoPaintWaterUserToolState.html": {
    "href": "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.AutoPaintWaterUserToolState.html",
    "title": "Class AutoPaintWaterUserToolState | Hex Terrains",
    "summary": "Class AutoPaintWaterUserToolState Inheritance object SmState UserToolState BrushUserToolState<HexWaterData> BrushUserToolState<HexWaterData, UserToolSettingsDataSource> BrushUserToolState<HexWaterData, UserToolSettingsDataSource, UniversalToolSettingsScreen> AutoPaintUserToolState<HexWaterData> AutoPaintWaterUserToolState Implements ISmState Inherited Members AutoPaintUserToolState<HexWaterData>.ValueNames AutoPaintUserToolState<HexWaterData>.BiomeHeights AutoPaintUserToolState<HexWaterData>.SaveSettings() AutoPaintUserToolState<HexWaterData>.LoadSettings() AutoPaintUserToolState<HexWaterData>.ApplyBrush(int, int2, int, HexWaterData, int) AutoPaintUserToolState<HexWaterData>.GetHeightBiome(byte) BrushUserToolState<HexWaterData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.SettingsScreen BrushUserToolState<HexWaterData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.PrepareToRun() BrushUserToolState<HexWaterData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.PrepareToStop() BrushUserToolState<HexWaterData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.GetSettingsScreen() BrushUserToolState<HexWaterData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.UpdateSettingsScreen() BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.DataSource BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.SettingsPlayerPrefsKeyName BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.PrepareToRun() BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.InitSettings() BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.InitDefaultSettings() BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.PrepareToStop() BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.LoadSettings() BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.SaveSettings() BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.SaveSettingsValue<TValue>(string, TValue) BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.LoadSettingsValue<TValue>(string, TValue) BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.TryLoadSettingsValue<TValue>(string, out TValue) BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.LoadSettingsValueOrDefault<TValue>(string, TValue) BrushUserToolState<HexWaterData>.PrevChangeTimeStamp BrushUserToolState<HexWaterData>.TimeTreshold BrushUserToolState<HexWaterData>.CanChangeBrushSize BrushUserToolState<HexWaterData>.AllowRightMouseButton BrushUserToolState<HexWaterData>.CursorColor BrushUserToolState<HexWaterData>.ChangeModeKey BrushUserToolState<HexWaterData>.ChangeBrushSizeKey BrushUserToolState<HexWaterData>.IncreaseBrushSizeKey BrushUserToolState<HexWaterData>.IncreaseBrushSizeKey2 BrushUserToolState<HexWaterData>.DecreaseBrushSizeKey BrushUserToolState<HexWaterData>.DecreaseBrushSizeKey2 BrushUserToolState<HexWaterData>.ChangeOpacityKey BrushUserToolState<HexWaterData>.IsTimeTresholdPassed BrushUserToolState<HexWaterData>.BrushSize BrushUserToolState<HexWaterData>.BrushOpacity BrushUserToolState<HexWaterData>.ChangeOpacityMultiplier BrushUserToolState<HexWaterData>.SetNewTimestamp() BrushUserToolState<HexWaterData>.PrepareToRun() BrushUserToolState<HexWaterData>.PrepareToStop() BrushUserToolState<HexWaterData>.Tick() BrushUserToolState<HexWaterData>.UpdateBrush() BrushUserToolState<HexWaterData>.TryApplyBrush() BrushUserToolState<HexWaterData>.ApplyToSingleCell(int, int2, int, HexWaterData, int) BrushUserToolState<HexWaterData>.ApplyBrushToAllCells(int, HexTerrainSettings, HexWaterData, int) BrushUserToolState<HexWaterData>.ApplyBrushToAllBrushPoints(int, int2, int, HexTerrainSettings, HexWaterData, int) BrushUserToolState<HexWaterData>.CanBeAppliedToManyPoints(int) BrushUserToolState<HexWaterData>.IsAppliedToEveryCellOnMap(int) BrushUserToolState<HexWaterData>.GetBrushTarget() UserToolState.Settings UserToolState.IsSubstatesVisible UserToolState.SubStateMachine UserToolState.UserToolAPI UserToolState.HasSubtools UserToolState.IsChangeViewMode UserToolState.RequiredViewMode UserToolState.OriginalViewMode UserToolState.ShowSettingsScreen<TViewData, TScreen>(TViewData) UserToolState.GetUIScreen<TScreen>() UserToolState.HideSettingsScreen<TScreen>() UserToolState.SetupPlanetCursor(bool, int) UserToolState.SetupPlanetCursor(bool, int, Color32) UserToolState.SetupPlanetCursor(bool, int, Color32, bool) UserToolState.SetupPlanetCursor(bool) UserToolState.TrySetViewMode() UserToolState.TryRestoreViewMode() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States Assembly: fwt.hexterrains.dll Syntax public class AutoPaintWaterUserToolState : AutoPaintUserToolState<HexWaterData>, ISmState Constructors AutoPaintWaterUserToolState(IUserToolAPI) Declaration public AutoPaintWaterUserToolState(IUserToolAPI userToolAPI) Parameters Type Name Description IUserToolAPI userToolAPI Properties UserToolType Declaration public override int UserToolType { get; } Property Value Type Description int Overrides UserToolState.UserToolType Methods InitDefaultSettings() Declaration protected override void InitDefaultSettings() Overrides AutoPaintUserToolState<HexWaterData>.InitDefaultSettings() Implements ISmState Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.CreateNewTerrainUserToolStateBase-2.html": {
    "href": "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.CreateNewTerrainUserToolStateBase-2.html",
    "title": "Class CreateNewTerrainUserToolStateBase<TScreen, TCallback> | Hex Terrains",
    "summary": "Class CreateNewTerrainUserToolStateBase<TScreen, TCallback> Inheritance object SmState UserToolState CreateNewTerrainUserToolStateBase<TScreen, TCallback> CreateNewSampleTerrainUserToolState Implements ISmState Inherited Members UserToolState.Settings UserToolState.IsSubstatesVisible UserToolState.SubStateMachine UserToolState.UserToolAPI UserToolState.HasSubtools UserToolState.IsChangeViewMode UserToolState.RequiredViewMode UserToolState.OriginalViewMode UserToolState.Tick() UserToolState.ShowSettingsScreen<TViewData, TScreen>(TViewData) UserToolState.GetUIScreen<TScreen>() UserToolState.HideSettingsScreen<TScreen>() UserToolState.SetupPlanetCursor(bool, int) UserToolState.SetupPlanetCursor(bool, int, Color32) UserToolState.SetupPlanetCursor(bool, int, Color32, bool) UserToolState.SetupPlanetCursor(bool) UserToolState.TrySetViewMode() UserToolState.TryRestoreViewMode() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States Assembly: fwt.hexterrains.dll Syntax public abstract class CreateNewTerrainUserToolStateBase<TScreen, TCallback> : UserToolState, ISmState where TScreen : UIScreen, IViewDataReceiver<TCallback> where TCallback : CreateNewTerrainCallbackDataSource, new() Type Parameters Name Description TScreen TCallback Constructors CreateNewTerrainUserToolStateBase(IUserToolAPI, UserToolStateMachine, Entity) Declaration protected CreateNewTerrainUserToolStateBase(IUserToolAPI userToolAPI, UserToolStateMachine parentStateMachine, Entity terrainPrefab) Parameters Type Name Description IUserToolAPI userToolAPI UserToolStateMachine parentStateMachine Entity terrainPrefab Fields Screen Declaration protected TScreen Screen Field Value Type Description TScreen TerrainPrefab Declaration protected Entity TerrainPrefab Field Value Type Description Entity Properties CallbackDataSource Declaration protected virtual TCallback CallbackDataSource { get; set; } Property Value Type Description TCallback ParentStateMachine Declaration protected UserToolStateMachine ParentStateMachine { get; set; } Property Value Type Description UserToolStateMachine UserToolType Declaration public override int UserToolType { get; } Property Value Type Description int Overrides UserToolState.UserToolType Methods CancelResizing() Declaration public virtual void CancelResizing() CreateScreenCallback() Declaration protected virtual TCallback CreateScreenCallback() Returns Type Description TCallback CreateTerrain(Entity) Declaration public virtual void CreateTerrain(Entity terrainPrefab) Parameters Type Name Description Entity terrainPrefab GetCallbackDataSource(TScreen) Declaration protected virtual TCallback GetCallbackDataSource(TScreen screen) Parameters Type Name Description TScreen screen Returns Type Description TCallback GetUIScreen() Declaration protected virtual TScreen GetUIScreen() Returns Type Description TScreen HideUIScreen() Declaration protected virtual void HideUIScreen() PrepareToRun() Declaration public override void PrepareToRun() Overrides UserToolState.PrepareToRun() PrepareToStop() Declaration public override void PrepareToStop() Overrides UserToolState.PrepareToStop() ShowUIScreen() Declaration protected virtual void ShowUIScreen() Implements ISmState Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.DeformGroundUserToolState.html": {
    "href": "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.DeformGroundUserToolState.html",
    "title": "Class DeformGroundUserToolState | Hex Terrains",
    "summary": "Class DeformGroundUserToolState Inheritance object SmState UserToolState BrushUserToolState<HexGroundData> DeformHeightUserToolState<HexGroundData> DeformGroundUserToolState Implements ISmState Inherited Members DeformHeightUserToolState<HexGroundData>.TurboKey DeformHeightUserToolState<HexGroundData>.InvertKey DeformHeightUserToolState<HexGroundData>.BaseDelta DeformHeightUserToolState<HexGroundData>.TurboKoeffitient DeformHeightUserToolState<HexGroundData>.ApplyBrush(int, int2, int, HexGroundData, int) BrushUserToolState<HexGroundData>.PrevChangeTimeStamp BrushUserToolState<HexGroundData>.TimeTreshold BrushUserToolState<HexGroundData>.CanChangeBrushSize BrushUserToolState<HexGroundData>.AllowRightMouseButton BrushUserToolState<HexGroundData>.CursorColor BrushUserToolState<HexGroundData>.ChangeModeKey BrushUserToolState<HexGroundData>.ChangeBrushSizeKey BrushUserToolState<HexGroundData>.IncreaseBrushSizeKey BrushUserToolState<HexGroundData>.IncreaseBrushSizeKey2 BrushUserToolState<HexGroundData>.DecreaseBrushSizeKey BrushUserToolState<HexGroundData>.DecreaseBrushSizeKey2 BrushUserToolState<HexGroundData>.ChangeOpacityKey BrushUserToolState<HexGroundData>.IsTimeTresholdPassed BrushUserToolState<HexGroundData>.BrushSize BrushUserToolState<HexGroundData>.BrushOpacity BrushUserToolState<HexGroundData>.ChangeOpacityMultiplier BrushUserToolState<HexGroundData>.SetNewTimestamp() BrushUserToolState<HexGroundData>.PrepareToRun() BrushUserToolState<HexGroundData>.PrepareToStop() BrushUserToolState<HexGroundData>.Tick() BrushUserToolState<HexGroundData>.UpdateBrush() BrushUserToolState<HexGroundData>.TryApplyBrush() BrushUserToolState<HexGroundData>.ApplyToSingleCell(int, int2, int, HexGroundData, int) BrushUserToolState<HexGroundData>.ApplyBrushToAllCells(int, HexTerrainSettings, HexGroundData, int) BrushUserToolState<HexGroundData>.ApplyBrushToAllBrushPoints(int, int2, int, HexTerrainSettings, HexGroundData, int) BrushUserToolState<HexGroundData>.CanBeAppliedToManyPoints(int) BrushUserToolState<HexGroundData>.IsAppliedToEveryCellOnMap(int) BrushUserToolState<HexGroundData>.GetBrushTarget() UserToolState.Settings UserToolState.IsSubstatesVisible UserToolState.SubStateMachine UserToolState.UserToolAPI UserToolState.HasSubtools UserToolState.IsChangeViewMode UserToolState.RequiredViewMode UserToolState.OriginalViewMode UserToolState.ShowSettingsScreen<TViewData, TScreen>(TViewData) UserToolState.GetUIScreen<TScreen>() UserToolState.HideSettingsScreen<TScreen>() UserToolState.SetupPlanetCursor(bool, int) UserToolState.SetupPlanetCursor(bool, int, Color32) UserToolState.SetupPlanetCursor(bool, int, Color32, bool) UserToolState.SetupPlanetCursor(bool) UserToolState.TrySetViewMode() UserToolState.TryRestoreViewMode() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States Assembly: fwt.hexterrains.dll Syntax public class DeformGroundUserToolState : DeformHeightUserToolState<HexGroundData>, ISmState Constructors DeformGroundUserToolState(IUserToolAPI) Declaration public DeformGroundUserToolState(IUserToolAPI userToolAPI) Parameters Type Name Description IUserToolAPI userToolAPI Properties UserToolType Declaration public override int UserToolType { get; } Property Value Type Description int Overrides UserToolState.UserToolType Implements ISmState Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.DeformHeightUserToolState-1.html": {
    "href": "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.DeformHeightUserToolState-1.html",
    "title": "Class DeformHeightUserToolState<TBrushTarget> | Hex Terrains",
    "summary": "Class DeformHeightUserToolState<TBrushTarget> Inheritance object SmState UserToolState BrushUserToolState<TBrushTarget> DeformHeightUserToolState<TBrushTarget> DeformGroundUserToolState DeformWaterUserToolState Implements ISmState Inherited Members BrushUserToolState<TBrushTarget>.PrevChangeTimeStamp BrushUserToolState<TBrushTarget>.TimeTreshold BrushUserToolState<TBrushTarget>.CanChangeBrushSize BrushUserToolState<TBrushTarget>.AllowRightMouseButton BrushUserToolState<TBrushTarget>.CursorColor BrushUserToolState<TBrushTarget>.ChangeModeKey BrushUserToolState<TBrushTarget>.ChangeBrushSizeKey BrushUserToolState<TBrushTarget>.IncreaseBrushSizeKey BrushUserToolState<TBrushTarget>.IncreaseBrushSizeKey2 BrushUserToolState<TBrushTarget>.DecreaseBrushSizeKey BrushUserToolState<TBrushTarget>.DecreaseBrushSizeKey2 BrushUserToolState<TBrushTarget>.ChangeOpacityKey BrushUserToolState<TBrushTarget>.IsTimeTresholdPassed BrushUserToolState<TBrushTarget>.BrushSize BrushUserToolState<TBrushTarget>.BrushOpacity BrushUserToolState<TBrushTarget>.ChangeOpacityMultiplier BrushUserToolState<TBrushTarget>.SetNewTimestamp() BrushUserToolState<TBrushTarget>.PrepareToRun() BrushUserToolState<TBrushTarget>.PrepareToStop() BrushUserToolState<TBrushTarget>.Tick() BrushUserToolState<TBrushTarget>.UpdateBrush() BrushUserToolState<TBrushTarget>.TryApplyBrush() BrushUserToolState<TBrushTarget>.ApplyToSingleCell(int, int2, int, TBrushTarget, int) BrushUserToolState<TBrushTarget>.ApplyBrushToAllCells(int, HexTerrainSettings, TBrushTarget, int) BrushUserToolState<TBrushTarget>.ApplyBrushToAllBrushPoints(int, int2, int, HexTerrainSettings, TBrushTarget, int) BrushUserToolState<TBrushTarget>.CanBeAppliedToManyPoints(int) BrushUserToolState<TBrushTarget>.IsAppliedToEveryCellOnMap(int) BrushUserToolState<TBrushTarget>.GetBrushTarget() UserToolState.Settings UserToolState.IsSubstatesVisible UserToolState.SubStateMachine UserToolState.UserToolType UserToolState.UserToolAPI UserToolState.HasSubtools UserToolState.IsChangeViewMode UserToolState.RequiredViewMode UserToolState.OriginalViewMode UserToolState.ShowSettingsScreen<TViewData, TScreen>(TViewData) UserToolState.GetUIScreen<TScreen>() UserToolState.HideSettingsScreen<TScreen>() UserToolState.SetupPlanetCursor(bool, int) UserToolState.SetupPlanetCursor(bool, int, Color32) UserToolState.SetupPlanetCursor(bool, int, Color32, bool) UserToolState.SetupPlanetCursor(bool) UserToolState.TrySetViewMode() UserToolState.TryRestoreViewMode() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States Assembly: fwt.hexterrains.dll Syntax public abstract class DeformHeightUserToolState<TBrushTarget> : BrushUserToolState<TBrushTarget>, ISmState where TBrushTarget : HexSurfaceData Type Parameters Name Description TBrushTarget Constructors DeformHeightUserToolState(IUserToolAPI) Declaration public DeformHeightUserToolState(IUserToolAPI userToolAPI) Parameters Type Name Description IUserToolAPI userToolAPI Fields BaseDelta Declaration [Tooltip(\"Basic amount of height change\")] public int BaseDelta Field Value Type Description int InvertKey Declaration [Tooltip(\"If this key is pressed, the value applied to brush target is inverted\")] public KeyCode InvertKey Field Value Type Description KeyCode TurboKey Declaration [Tooltip(\"If this key is pressed, the delta height value will be multiplied by Turbo Koeffitient\")] public KeyCode TurboKey Field Value Type Description KeyCode TurboKoeffitient Declaration [Tooltip(\"Delta height multiplier that is applied if TurboKey is pressed\")] public int TurboKoeffitient Field Value Type Description int Methods ApplyBrush(int, int2, int, TBrushTarget, int) Applies brush to the brushView. Returns true if changes were applied Declaration public override bool ApplyBrush(int brushMode, int2 cellCoord, int cellIndex, TBrushTarget brushTarget, int mouseButton) Parameters Type Name Description int brushMode int2 cellCoord int cellIndex TBrushTarget brushTarget int mouseButton Returns Type Description bool Overrides BrushUserToolState<TBrushTarget>.ApplyBrush(int, int2, int, TBrushTarget, int) Implements ISmState Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.DeformWaterUserToolState.html": {
    "href": "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.DeformWaterUserToolState.html",
    "title": "Class DeformWaterUserToolState | Hex Terrains",
    "summary": "Class DeformWaterUserToolState Inheritance object SmState UserToolState BrushUserToolState<HexWaterData> DeformHeightUserToolState<HexWaterData> DeformWaterUserToolState Implements ISmState Inherited Members DeformHeightUserToolState<HexWaterData>.TurboKey DeformHeightUserToolState<HexWaterData>.InvertKey DeformHeightUserToolState<HexWaterData>.BaseDelta DeformHeightUserToolState<HexWaterData>.TurboKoeffitient DeformHeightUserToolState<HexWaterData>.ApplyBrush(int, int2, int, HexWaterData, int) BrushUserToolState<HexWaterData>.PrevChangeTimeStamp BrushUserToolState<HexWaterData>.TimeTreshold BrushUserToolState<HexWaterData>.CanChangeBrushSize BrushUserToolState<HexWaterData>.AllowRightMouseButton BrushUserToolState<HexWaterData>.CursorColor BrushUserToolState<HexWaterData>.ChangeModeKey BrushUserToolState<HexWaterData>.ChangeBrushSizeKey BrushUserToolState<HexWaterData>.IncreaseBrushSizeKey BrushUserToolState<HexWaterData>.IncreaseBrushSizeKey2 BrushUserToolState<HexWaterData>.DecreaseBrushSizeKey BrushUserToolState<HexWaterData>.DecreaseBrushSizeKey2 BrushUserToolState<HexWaterData>.ChangeOpacityKey BrushUserToolState<HexWaterData>.IsTimeTresholdPassed BrushUserToolState<HexWaterData>.BrushSize BrushUserToolState<HexWaterData>.BrushOpacity BrushUserToolState<HexWaterData>.ChangeOpacityMultiplier BrushUserToolState<HexWaterData>.SetNewTimestamp() BrushUserToolState<HexWaterData>.PrepareToRun() BrushUserToolState<HexWaterData>.PrepareToStop() BrushUserToolState<HexWaterData>.Tick() BrushUserToolState<HexWaterData>.UpdateBrush() BrushUserToolState<HexWaterData>.TryApplyBrush() BrushUserToolState<HexWaterData>.ApplyToSingleCell(int, int2, int, HexWaterData, int) BrushUserToolState<HexWaterData>.ApplyBrushToAllCells(int, HexTerrainSettings, HexWaterData, int) BrushUserToolState<HexWaterData>.ApplyBrushToAllBrushPoints(int, int2, int, HexTerrainSettings, HexWaterData, int) BrushUserToolState<HexWaterData>.CanBeAppliedToManyPoints(int) BrushUserToolState<HexWaterData>.IsAppliedToEveryCellOnMap(int) BrushUserToolState<HexWaterData>.GetBrushTarget() UserToolState.Settings UserToolState.IsSubstatesVisible UserToolState.SubStateMachine UserToolState.UserToolAPI UserToolState.HasSubtools UserToolState.IsChangeViewMode UserToolState.RequiredViewMode UserToolState.OriginalViewMode UserToolState.ShowSettingsScreen<TViewData, TScreen>(TViewData) UserToolState.GetUIScreen<TScreen>() UserToolState.HideSettingsScreen<TScreen>() UserToolState.SetupPlanetCursor(bool, int) UserToolState.SetupPlanetCursor(bool, int, Color32) UserToolState.SetupPlanetCursor(bool, int, Color32, bool) UserToolState.SetupPlanetCursor(bool) UserToolState.TrySetViewMode() UserToolState.TryRestoreViewMode() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States Assembly: fwt.hexterrains.dll Syntax public class DeformWaterUserToolState : DeformHeightUserToolState<HexWaterData>, ISmState Constructors DeformWaterUserToolState(IUserToolAPI) Declaration public DeformWaterUserToolState(IUserToolAPI userToolAPI) Parameters Type Name Description IUserToolAPI userToolAPI Properties UserToolType Declaration public override int UserToolType { get; } Property Value Type Description int Overrides UserToolState.UserToolType Implements ISmState Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.LevelGroundUserToolState.html": {
    "href": "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.LevelGroundUserToolState.html",
    "title": "Class LevelGroundUserToolState | Hex Terrains",
    "summary": "Class LevelGroundUserToolState Inheritance object SmState UserToolState BrushUserToolState<HexGroundData> BrushUserToolState<HexGroundData, UserToolSettingsDataSource> BrushUserToolState<HexGroundData, UserToolSettingsDataSource, UniversalToolSettingsScreen> LevelTerrainUserToolState<HexGroundData> LevelGroundUserToolState Implements ISmState Inherited Members LevelTerrainUserToolState<HexGroundData>.Elevation LevelTerrainUserToolState<HexGroundData>.ReadHeightKey LevelTerrainUserToolState<HexGroundData>.SaveSettings() LevelTerrainUserToolState<HexGroundData>.LoadSettings() LevelTerrainUserToolState<HexGroundData>.ApplyBrush(int, int2, int, HexGroundData, int) LevelTerrainUserToolState<HexGroundData>.IsAppliedToEveryCellOnMap(int) BrushUserToolState<HexGroundData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.SettingsScreen BrushUserToolState<HexGroundData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.PrepareToRun() BrushUserToolState<HexGroundData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.PrepareToStop() BrushUserToolState<HexGroundData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.GetSettingsScreen() BrushUserToolState<HexGroundData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.UpdateSettingsScreen() BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.DataSource BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.SettingsPlayerPrefsKeyName BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.PrepareToRun() BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.InitSettings() BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.InitDefaultSettings() BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.PrepareToStop() BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.LoadSettings() BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.SaveSettings() BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.SaveSettingsValue<TValue>(string, TValue) BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.LoadSettingsValue<TValue>(string, TValue) BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.TryLoadSettingsValue<TValue>(string, out TValue) BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.LoadSettingsValueOrDefault<TValue>(string, TValue) BrushUserToolState<HexGroundData>.PrevChangeTimeStamp BrushUserToolState<HexGroundData>.TimeTreshold BrushUserToolState<HexGroundData>.CanChangeBrushSize BrushUserToolState<HexGroundData>.AllowRightMouseButton BrushUserToolState<HexGroundData>.CursorColor BrushUserToolState<HexGroundData>.ChangeModeKey BrushUserToolState<HexGroundData>.ChangeBrushSizeKey BrushUserToolState<HexGroundData>.IncreaseBrushSizeKey BrushUserToolState<HexGroundData>.IncreaseBrushSizeKey2 BrushUserToolState<HexGroundData>.DecreaseBrushSizeKey BrushUserToolState<HexGroundData>.DecreaseBrushSizeKey2 BrushUserToolState<HexGroundData>.ChangeOpacityKey BrushUserToolState<HexGroundData>.IsTimeTresholdPassed BrushUserToolState<HexGroundData>.BrushSize BrushUserToolState<HexGroundData>.BrushOpacity BrushUserToolState<HexGroundData>.ChangeOpacityMultiplier BrushUserToolState<HexGroundData>.SetNewTimestamp() BrushUserToolState<HexGroundData>.PrepareToRun() BrushUserToolState<HexGroundData>.PrepareToStop() BrushUserToolState<HexGroundData>.Tick() BrushUserToolState<HexGroundData>.UpdateBrush() BrushUserToolState<HexGroundData>.TryApplyBrush() BrushUserToolState<HexGroundData>.ApplyToSingleCell(int, int2, int, HexGroundData, int) BrushUserToolState<HexGroundData>.ApplyBrushToAllCells(int, HexTerrainSettings, HexGroundData, int) BrushUserToolState<HexGroundData>.ApplyBrushToAllBrushPoints(int, int2, int, HexTerrainSettings, HexGroundData, int) BrushUserToolState<HexGroundData>.CanBeAppliedToManyPoints(int) BrushUserToolState<HexGroundData>.GetBrushTarget() UserToolState.Settings UserToolState.IsSubstatesVisible UserToolState.SubStateMachine UserToolState.UserToolAPI UserToolState.HasSubtools UserToolState.IsChangeViewMode UserToolState.RequiredViewMode UserToolState.OriginalViewMode UserToolState.ShowSettingsScreen<TViewData, TScreen>(TViewData) UserToolState.GetUIScreen<TScreen>() UserToolState.HideSettingsScreen<TScreen>() UserToolState.SetupPlanetCursor(bool, int) UserToolState.SetupPlanetCursor(bool, int, Color32) UserToolState.SetupPlanetCursor(bool, int, Color32, bool) UserToolState.SetupPlanetCursor(bool) UserToolState.TrySetViewMode() UserToolState.TryRestoreViewMode() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States Assembly: fwt.hexterrains.dll Syntax public class LevelGroundUserToolState : LevelTerrainUserToolState<HexGroundData>, ISmState Constructors LevelGroundUserToolState(IUserToolAPI) Declaration public LevelGroundUserToolState(IUserToolAPI userToolAPI) Parameters Type Name Description IUserToolAPI userToolAPI Properties UserToolType Declaration public override int UserToolType { get; } Property Value Type Description int Overrides UserToolState.UserToolType Methods InitDefaultSettings() Declaration protected override void InitDefaultSettings() Overrides LevelTerrainUserToolState<HexGroundData>.InitDefaultSettings() Implements ISmState Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.LevelTerrainUserToolState-1.html": {
    "href": "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.LevelTerrainUserToolState-1.html",
    "title": "Class LevelTerrainUserToolState<TBrushTarget> | Hex Terrains",
    "summary": "Class LevelTerrainUserToolState<TBrushTarget> Inheritance object SmState UserToolState BrushUserToolState<TBrushTarget> BrushUserToolState<TBrushTarget, UserToolSettingsDataSource> BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen> LevelTerrainUserToolState<TBrushTarget> LevelGroundUserToolState LevelWaterUserToolState Implements ISmState Inherited Members BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen>.SettingsScreen BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen>.PrepareToRun() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen>.PrepareToStop() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen>.GetSettingsScreen() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen>.UpdateSettingsScreen() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.DataSource BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.SettingsPlayerPrefsKeyName BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.PrepareToRun() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.InitSettings() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.InitDefaultSettings() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.PrepareToStop() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.LoadSettings() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.SaveSettings() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.SaveSettingsValue<TValue>(string, TValue) BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.LoadSettingsValue<TValue>(string, TValue) BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.TryLoadSettingsValue<TValue>(string, out TValue) BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.LoadSettingsValueOrDefault<TValue>(string, TValue) BrushUserToolState<TBrushTarget>.PrevChangeTimeStamp BrushUserToolState<TBrushTarget>.TimeTreshold BrushUserToolState<TBrushTarget>.CanChangeBrushSize BrushUserToolState<TBrushTarget>.AllowRightMouseButton BrushUserToolState<TBrushTarget>.CursorColor BrushUserToolState<TBrushTarget>.ChangeModeKey BrushUserToolState<TBrushTarget>.ChangeBrushSizeKey BrushUserToolState<TBrushTarget>.IncreaseBrushSizeKey BrushUserToolState<TBrushTarget>.IncreaseBrushSizeKey2 BrushUserToolState<TBrushTarget>.DecreaseBrushSizeKey BrushUserToolState<TBrushTarget>.DecreaseBrushSizeKey2 BrushUserToolState<TBrushTarget>.ChangeOpacityKey BrushUserToolState<TBrushTarget>.IsTimeTresholdPassed BrushUserToolState<TBrushTarget>.BrushSize BrushUserToolState<TBrushTarget>.BrushOpacity BrushUserToolState<TBrushTarget>.ChangeOpacityMultiplier BrushUserToolState<TBrushTarget>.SetNewTimestamp() BrushUserToolState<TBrushTarget>.PrepareToRun() BrushUserToolState<TBrushTarget>.PrepareToStop() BrushUserToolState<TBrushTarget>.Tick() BrushUserToolState<TBrushTarget>.UpdateBrush() BrushUserToolState<TBrushTarget>.TryApplyBrush() BrushUserToolState<TBrushTarget>.ApplyToSingleCell(int, int2, int, TBrushTarget, int) BrushUserToolState<TBrushTarget>.ApplyBrushToAllCells(int, HexTerrainSettings, TBrushTarget, int) BrushUserToolState<TBrushTarget>.ApplyBrushToAllBrushPoints(int, int2, int, HexTerrainSettings, TBrushTarget, int) BrushUserToolState<TBrushTarget>.CanBeAppliedToManyPoints(int) BrushUserToolState<TBrushTarget>.GetBrushTarget() UserToolState.Settings UserToolState.IsSubstatesVisible UserToolState.SubStateMachine UserToolState.UserToolType UserToolState.UserToolAPI UserToolState.HasSubtools UserToolState.IsChangeViewMode UserToolState.RequiredViewMode UserToolState.OriginalViewMode UserToolState.ShowSettingsScreen<TViewData, TScreen>(TViewData) UserToolState.GetUIScreen<TScreen>() UserToolState.HideSettingsScreen<TScreen>() UserToolState.SetupPlanetCursor(bool, int) UserToolState.SetupPlanetCursor(bool, int, Color32) UserToolState.SetupPlanetCursor(bool, int, Color32, bool) UserToolState.SetupPlanetCursor(bool) UserToolState.TrySetViewMode() UserToolState.TryRestoreViewMode() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States Assembly: fwt.hexterrains.dll Syntax public abstract class LevelTerrainUserToolState<TBrushTarget> : BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen>, ISmState where TBrushTarget : HexSurfaceData Type Parameters Name Description TBrushTarget Constructors LevelTerrainUserToolState(IUserToolAPI) Declaration public LevelTerrainUserToolState(IUserToolAPI userToolAPI) Parameters Type Name Description IUserToolAPI userToolAPI Fields ReadHeightKey Declaration [Tooltip(\"When this key is pressed, click will read elevation under cursor instead of applying it\")] public KeyCode ReadHeightKey Field Value Type Description KeyCode Properties Elevation Declaration public int Elevation { get; set; } Property Value Type Description int Methods ApplyBrush(int, int2, int, TBrushTarget, int) Applies brush to the brushView. Returns true if changes were applied Declaration public override bool ApplyBrush(int brushMode, int2 cellCoord, int cellIndex, TBrushTarget brushTarget, int mouseButton) Parameters Type Name Description int brushMode int2 cellCoord int cellIndex TBrushTarget brushTarget int mouseButton Returns Type Description bool Overrides BrushUserToolState<TBrushTarget>.ApplyBrush(int, int2, int, TBrushTarget, int) InitDefaultSettings() Declaration protected override void InitDefaultSettings() Overrides BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.InitDefaultSettings() IsAppliedToEveryCellOnMap(int) Declaration public override bool IsAppliedToEveryCellOnMap(int brushMode) Parameters Type Name Description int brushMode Returns Type Description bool Overrides BrushUserToolState<TBrushTarget>.IsAppliedToEveryCellOnMap(int) LoadSettings() Declaration protected override void LoadSettings() Overrides BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.LoadSettings() SaveSettings() Declaration protected override void SaveSettings() Overrides BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.SaveSettings() Implements ISmState Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.LevelWaterUserToolState.html": {
    "href": "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.LevelWaterUserToolState.html",
    "title": "Class LevelWaterUserToolState | Hex Terrains",
    "summary": "Class LevelWaterUserToolState Inheritance object SmState UserToolState BrushUserToolState<HexWaterData> BrushUserToolState<HexWaterData, UserToolSettingsDataSource> BrushUserToolState<HexWaterData, UserToolSettingsDataSource, UniversalToolSettingsScreen> LevelTerrainUserToolState<HexWaterData> LevelWaterUserToolState Implements ISmState Inherited Members LevelTerrainUserToolState<HexWaterData>.Elevation LevelTerrainUserToolState<HexWaterData>.ReadHeightKey LevelTerrainUserToolState<HexWaterData>.SaveSettings() LevelTerrainUserToolState<HexWaterData>.LoadSettings() LevelTerrainUserToolState<HexWaterData>.ApplyBrush(int, int2, int, HexWaterData, int) LevelTerrainUserToolState<HexWaterData>.IsAppliedToEveryCellOnMap(int) BrushUserToolState<HexWaterData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.SettingsScreen BrushUserToolState<HexWaterData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.PrepareToRun() BrushUserToolState<HexWaterData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.PrepareToStop() BrushUserToolState<HexWaterData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.GetSettingsScreen() BrushUserToolState<HexWaterData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.UpdateSettingsScreen() BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.DataSource BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.SettingsPlayerPrefsKeyName BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.PrepareToRun() BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.InitSettings() BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.InitDefaultSettings() BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.PrepareToStop() BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.LoadSettings() BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.SaveSettings() BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.SaveSettingsValue<TValue>(string, TValue) BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.LoadSettingsValue<TValue>(string, TValue) BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.TryLoadSettingsValue<TValue>(string, out TValue) BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.LoadSettingsValueOrDefault<TValue>(string, TValue) BrushUserToolState<HexWaterData>.PrevChangeTimeStamp BrushUserToolState<HexWaterData>.TimeTreshold BrushUserToolState<HexWaterData>.CanChangeBrushSize BrushUserToolState<HexWaterData>.AllowRightMouseButton BrushUserToolState<HexWaterData>.CursorColor BrushUserToolState<HexWaterData>.ChangeModeKey BrushUserToolState<HexWaterData>.ChangeBrushSizeKey BrushUserToolState<HexWaterData>.IncreaseBrushSizeKey BrushUserToolState<HexWaterData>.IncreaseBrushSizeKey2 BrushUserToolState<HexWaterData>.DecreaseBrushSizeKey BrushUserToolState<HexWaterData>.DecreaseBrushSizeKey2 BrushUserToolState<HexWaterData>.ChangeOpacityKey BrushUserToolState<HexWaterData>.IsTimeTresholdPassed BrushUserToolState<HexWaterData>.BrushSize BrushUserToolState<HexWaterData>.BrushOpacity BrushUserToolState<HexWaterData>.ChangeOpacityMultiplier BrushUserToolState<HexWaterData>.SetNewTimestamp() BrushUserToolState<HexWaterData>.PrepareToRun() BrushUserToolState<HexWaterData>.PrepareToStop() BrushUserToolState<HexWaterData>.Tick() BrushUserToolState<HexWaterData>.UpdateBrush() BrushUserToolState<HexWaterData>.TryApplyBrush() BrushUserToolState<HexWaterData>.ApplyToSingleCell(int, int2, int, HexWaterData, int) BrushUserToolState<HexWaterData>.ApplyBrushToAllCells(int, HexTerrainSettings, HexWaterData, int) BrushUserToolState<HexWaterData>.ApplyBrushToAllBrushPoints(int, int2, int, HexTerrainSettings, HexWaterData, int) BrushUserToolState<HexWaterData>.CanBeAppliedToManyPoints(int) BrushUserToolState<HexWaterData>.GetBrushTarget() UserToolState.Settings UserToolState.IsSubstatesVisible UserToolState.SubStateMachine UserToolState.UserToolAPI UserToolState.HasSubtools UserToolState.IsChangeViewMode UserToolState.RequiredViewMode UserToolState.OriginalViewMode UserToolState.ShowSettingsScreen<TViewData, TScreen>(TViewData) UserToolState.GetUIScreen<TScreen>() UserToolState.HideSettingsScreen<TScreen>() UserToolState.SetupPlanetCursor(bool, int) UserToolState.SetupPlanetCursor(bool, int, Color32) UserToolState.SetupPlanetCursor(bool, int, Color32, bool) UserToolState.SetupPlanetCursor(bool) UserToolState.TrySetViewMode() UserToolState.TryRestoreViewMode() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States Assembly: fwt.hexterrains.dll Syntax public class LevelWaterUserToolState : LevelTerrainUserToolState<HexWaterData>, ISmState Constructors LevelWaterUserToolState(IUserToolAPI) Declaration public LevelWaterUserToolState(IUserToolAPI userToolAPI) Parameters Type Name Description IUserToolAPI userToolAPI Properties UserToolType Declaration public override int UserToolType { get; } Property Value Type Description int Overrides UserToolState.UserToolType Methods InitDefaultSettings() Declaration protected override void InitDefaultSettings() Overrides LevelTerrainUserToolState<HexWaterData>.InitDefaultSettings() Implements ISmState Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.LoadTerrainUserToolStateBase-2.html": {
    "href": "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.LoadTerrainUserToolStateBase-2.html",
    "title": "Class LoadTerrainUserToolStateBase<TScreen, TCallback> | Hex Terrains",
    "summary": "Class LoadTerrainUserToolStateBase<TScreen, TCallback> Inheritance object SmState UserToolState LoadTerrainUserToolStateBase<TScreen, TCallback> LoadTerrainUserToolState Implements ISmState Inherited Members UserToolState.Settings UserToolState.IsSubstatesVisible UserToolState.SubStateMachine UserToolState.UserToolAPI UserToolState.HasSubtools UserToolState.IsChangeViewMode UserToolState.RequiredViewMode UserToolState.OriginalViewMode UserToolState.Tick() UserToolState.ShowSettingsScreen<TViewData, TScreen>(TViewData) UserToolState.GetUIScreen<TScreen>() UserToolState.HideSettingsScreen<TScreen>() UserToolState.SetupPlanetCursor(bool, int) UserToolState.SetupPlanetCursor(bool, int, Color32) UserToolState.SetupPlanetCursor(bool, int, Color32, bool) UserToolState.SetupPlanetCursor(bool) UserToolState.TrySetViewMode() UserToolState.TryRestoreViewMode() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States Assembly: fwt.hexterrains.dll Syntax public abstract class LoadTerrainUserToolStateBase<TScreen, TCallback> : UserToolState, ISmState where TScreen : UIScreen, IViewDataReceiver<TCallback> where TCallback : LoadTerrainCallbackDataSource, new() Type Parameters Name Description TScreen TCallback Constructors LoadTerrainUserToolStateBase(IUserToolAPI, UserToolStateMachine) Declaration protected LoadTerrainUserToolStateBase(IUserToolAPI userToolAPI, UserToolStateMachine parentStateMachine) Parameters Type Name Description IUserToolAPI userToolAPI UserToolStateMachine parentStateMachine Fields Screen Declaration protected TScreen Screen Field Value Type Description TScreen Properties CallbackDataSource Declaration protected virtual TCallback CallbackDataSource { get; set; } Property Value Type Description TCallback ParentStateMachine Declaration protected UserToolStateMachine ParentStateMachine { get; set; } Property Value Type Description UserToolStateMachine UserToolType Declaration public override int UserToolType { get; } Property Value Type Description int Overrides UserToolState.UserToolType Methods CancelLoading() Declaration protected virtual void CancelLoading() CreateScreenCallback() Declaration protected virtual TCallback CreateScreenCallback() Returns Type Description TCallback GetCallbackDataSource() Declaration protected virtual TCallback GetCallbackDataSource() Returns Type Description TCallback GetUIScreen() Declaration protected virtual TScreen GetUIScreen() Returns Type Description TScreen HideUIScreen() Declaration protected virtual void HideUIScreen() LoadTerrain(string) Declaration protected virtual void LoadTerrain(string filePath) Parameters Type Name Description string filePath PrepareToRun() Declaration public override void PrepareToRun() Overrides UserToolState.PrepareToRun() PrepareToStop() Declaration public override void PrepareToStop() Overrides UserToolState.PrepareToStop() ShowUIScreen() Declaration protected virtual void ShowUIScreen() Implements ISmState Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.PaintAreasUserToolState-1.html": {
    "href": "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.PaintAreasUserToolState-1.html",
    "title": "Class PaintAreasUserToolState<TBrushTarget> | Hex Terrains",
    "summary": "Class PaintAreasUserToolState<TBrushTarget> Inheritance object SmState UserToolState BrushUserToolState<TBrushTarget> BrushUserToolState<TBrushTarget, UserToolSettingsDataSource> BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen> PaintAreasUserToolState<TBrushTarget> PaintCountriesUserToolState PaintProvincesUserToolState Implements ISmState Inherited Members BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen>.SettingsScreen BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen>.PrepareToRun() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen>.PrepareToStop() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen>.GetSettingsScreen() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen>.UpdateSettingsScreen() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.DataSource BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.SettingsPlayerPrefsKeyName BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.PrepareToRun() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.InitSettings() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.InitDefaultSettings() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.PrepareToStop() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.LoadSettings() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.SaveSettings() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.SaveSettingsValue<TValue>(string, TValue) BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.LoadSettingsValue<TValue>(string, TValue) BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.TryLoadSettingsValue<TValue>(string, out TValue) BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.LoadSettingsValueOrDefault<TValue>(string, TValue) BrushUserToolState<TBrushTarget>.PrevChangeTimeStamp BrushUserToolState<TBrushTarget>.TimeTreshold BrushUserToolState<TBrushTarget>.CanChangeBrushSize BrushUserToolState<TBrushTarget>.AllowRightMouseButton BrushUserToolState<TBrushTarget>.CursorColor BrushUserToolState<TBrushTarget>.ChangeModeKey BrushUserToolState<TBrushTarget>.ChangeBrushSizeKey BrushUserToolState<TBrushTarget>.IncreaseBrushSizeKey BrushUserToolState<TBrushTarget>.IncreaseBrushSizeKey2 BrushUserToolState<TBrushTarget>.DecreaseBrushSizeKey BrushUserToolState<TBrushTarget>.DecreaseBrushSizeKey2 BrushUserToolState<TBrushTarget>.ChangeOpacityKey BrushUserToolState<TBrushTarget>.IsTimeTresholdPassed BrushUserToolState<TBrushTarget>.BrushSize BrushUserToolState<TBrushTarget>.BrushOpacity BrushUserToolState<TBrushTarget>.ChangeOpacityMultiplier BrushUserToolState<TBrushTarget>.SetNewTimestamp() BrushUserToolState<TBrushTarget>.PrepareToStop() BrushUserToolState<TBrushTarget>.Tick() BrushUserToolState<TBrushTarget>.UpdateBrush() BrushUserToolState<TBrushTarget>.TryApplyBrush() BrushUserToolState<TBrushTarget>.ApplyToSingleCell(int, int2, int, TBrushTarget, int) BrushUserToolState<TBrushTarget>.ApplyBrushToAllCells(int, HexTerrainSettings, TBrushTarget, int) BrushUserToolState<TBrushTarget>.ApplyBrushToAllBrushPoints(int, int2, int, HexTerrainSettings, TBrushTarget, int) BrushUserToolState<TBrushTarget>.CanBeAppliedToManyPoints(int) BrushUserToolState<TBrushTarget>.GetBrushTarget() UserToolState.Settings UserToolState.IsSubstatesVisible UserToolState.SubStateMachine UserToolState.UserToolType UserToolState.UserToolAPI UserToolState.HasSubtools UserToolState.IsChangeViewMode UserToolState.RequiredViewMode UserToolState.OriginalViewMode UserToolState.ShowSettingsScreen<TViewData, TScreen>(TViewData) UserToolState.GetUIScreen<TScreen>() UserToolState.HideSettingsScreen<TScreen>() UserToolState.SetupPlanetCursor(bool, int) UserToolState.SetupPlanetCursor(bool, int, Color32) UserToolState.SetupPlanetCursor(bool, int, Color32, bool) UserToolState.SetupPlanetCursor(bool) UserToolState.TrySetViewMode() UserToolState.TryRestoreViewMode() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States Assembly: fwt.hexterrains.dll Syntax public abstract class PaintAreasUserToolState<TBrushTarget> : BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen>, ISmState where TBrushTarget : HexTerrainAreasData Type Parameters Name Description TBrushTarget Constructors PaintAreasUserToolState(IUserToolAPI) Declaration protected PaintAreasUserToolState(IUserToolAPI userToolAPI) Parameters Type Name Description IUserToolAPI userToolAPI Fields ReadPropKey When this key is pressed, click will read terrain item under cursor instead of applying it Declaration public KeyCode ReadPropKey Field Value Type Description KeyCode Properties CellArea Declaration public int CellArea { get; set; } Property Value Type Description int Methods ApplyBrush(int, int2, int, TBrushTarget, int) Applies brush to the brushView. Returns true if changes were applied Declaration public override bool ApplyBrush(int brushMode, int2 cellCoord, int cellIndex, TBrushTarget brushTarget, int mouseButton) Parameters Type Name Description int brushMode int2 cellCoord int cellIndex TBrushTarget brushTarget int mouseButton Returns Type Description bool Overrides BrushUserToolState<TBrushTarget>.ApplyBrush(int, int2, int, TBrushTarget, int) InitDefaultSettings() Declaration protected override void InitDefaultSettings() Overrides BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.InitDefaultSettings() IsAppliedToEveryCellOnMap(int) Declaration public override bool IsAppliedToEveryCellOnMap(int brushMode) Parameters Type Name Description int brushMode Returns Type Description bool Overrides BrushUserToolState<TBrushTarget>.IsAppliedToEveryCellOnMap(int) LoadSettings() Declaration protected override void LoadSettings() Overrides BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.LoadSettings() PrepareToRun() Declaration public override void PrepareToRun() Overrides BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen>.PrepareToRun() ReadCellData(TBrushTarget, int2) Declaration protected virtual byte ReadCellData(TBrushTarget brushTarget, int2 cellCoord) Parameters Type Name Description TBrushTarget brushTarget int2 cellCoord Returns Type Description byte SaveSettings() Declaration protected override void SaveSettings() Overrides BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.SaveSettings() Implements ISmState Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.PaintCellEntitiesUserToolState-2.html": {
    "href": "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.PaintCellEntitiesUserToolState-2.html",
    "title": "Class PaintCellEntitiesUserToolState<TBrushTarget, THexSurface> | Hex Terrains",
    "summary": "Class PaintCellEntitiesUserToolState<TBrushTarget, THexSurface> Inheritance object SmState UserToolState BrushUserToolState<TBrushTarget> BrushUserToolState<TBrushTarget, UserToolSettingsDataSource> BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen> PaintCellEntitiesUserToolState<TBrushTarget, THexSurface> PaintCellEntityPropsToolState Implements ISmState Inherited Members BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen>.SettingsScreen BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen>.PrepareToRun() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen>.PrepareToStop() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen>.GetSettingsScreen() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen>.UpdateSettingsScreen() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.DataSource BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.SettingsPlayerPrefsKeyName BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.PrepareToRun() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.InitSettings() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.InitDefaultSettings() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.PrepareToStop() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.LoadSettings() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.SaveSettings() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.SaveSettingsValue<TValue>(string, TValue) BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.LoadSettingsValue<TValue>(string, TValue) BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.TryLoadSettingsValue<TValue>(string, out TValue) BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.LoadSettingsValueOrDefault<TValue>(string, TValue) BrushUserToolState<TBrushTarget>.PrevChangeTimeStamp BrushUserToolState<TBrushTarget>.TimeTreshold BrushUserToolState<TBrushTarget>.CanChangeBrushSize BrushUserToolState<TBrushTarget>.AllowRightMouseButton BrushUserToolState<TBrushTarget>.CursorColor BrushUserToolState<TBrushTarget>.ChangeModeKey BrushUserToolState<TBrushTarget>.ChangeBrushSizeKey BrushUserToolState<TBrushTarget>.IncreaseBrushSizeKey BrushUserToolState<TBrushTarget>.IncreaseBrushSizeKey2 BrushUserToolState<TBrushTarget>.DecreaseBrushSizeKey BrushUserToolState<TBrushTarget>.DecreaseBrushSizeKey2 BrushUserToolState<TBrushTarget>.ChangeOpacityKey BrushUserToolState<TBrushTarget>.IsTimeTresholdPassed BrushUserToolState<TBrushTarget>.BrushSize BrushUserToolState<TBrushTarget>.BrushOpacity BrushUserToolState<TBrushTarget>.ChangeOpacityMultiplier BrushUserToolState<TBrushTarget>.SetNewTimestamp() BrushUserToolState<TBrushTarget>.PrepareToRun() BrushUserToolState<TBrushTarget>.PrepareToStop() BrushUserToolState<TBrushTarget>.Tick() BrushUserToolState<TBrushTarget>.UpdateBrush() BrushUserToolState<TBrushTarget>.TryApplyBrush() BrushUserToolState<TBrushTarget>.ApplyToSingleCell(int, int2, int, TBrushTarget, int) BrushUserToolState<TBrushTarget>.ApplyBrushToAllCells(int, HexTerrainSettings, TBrushTarget, int) BrushUserToolState<TBrushTarget>.ApplyBrushToAllBrushPoints(int, int2, int, HexTerrainSettings, TBrushTarget, int) BrushUserToolState<TBrushTarget>.CanBeAppliedToManyPoints(int) BrushUserToolState<TBrushTarget>.GetBrushTarget() UserToolState.Settings UserToolState.IsSubstatesVisible UserToolState.SubStateMachine UserToolState.UserToolType UserToolState.UserToolAPI UserToolState.HasSubtools UserToolState.IsChangeViewMode UserToolState.RequiredViewMode UserToolState.OriginalViewMode UserToolState.ShowSettingsScreen<TViewData, TScreen>(TViewData) UserToolState.GetUIScreen<TScreen>() UserToolState.HideSettingsScreen<TScreen>() UserToolState.SetupPlanetCursor(bool, int) UserToolState.SetupPlanetCursor(bool, int, Color32) UserToolState.SetupPlanetCursor(bool, int, Color32, bool) UserToolState.SetupPlanetCursor(bool) UserToolState.TrySetViewMode() UserToolState.TryRestoreViewMode() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States Assembly: fwt.hexterrains.dll Syntax public abstract class PaintCellEntitiesUserToolState<TBrushTarget, THexSurface> : BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen>, ISmState where TBrushTarget : CellEntitiesData where THexSurface : HexSurfaceData Type Parameters Name Description TBrushTarget THexSurface Constructors PaintCellEntitiesUserToolState(IUserToolAPI) Declaration protected PaintCellEntitiesUserToolState(IUserToolAPI userToolAPI) Parameters Type Name Description IUserToolAPI userToolAPI Fields ReadCellKey Declaration public KeyCode ReadCellKey Field Value Type Description KeyCode Properties CellEntity Declaration public CellEntity CellEntity { get; set; } Property Value Type Description CellEntity CellEntityId Declaration public int CellEntityId { get; set; } Property Value Type Description int CellEntityState Declaration public int CellEntityState { get; set; } Property Value Type Description int MaxCellHeight Declaration public int MaxCellHeight { get; set; } Property Value Type Description int MinCellHeight Declaration public int MinCellHeight { get; set; } Property Value Type Description int Methods ApplyBrush(int, int2, int, TBrushTarget, int) Applies brush to the brushView. Returns true if changes were applied Declaration public override bool ApplyBrush(int brushMode, int2 cellCoord, int cellIndex, TBrushTarget brushTarget, int mouseButton) Parameters Type Name Description int brushMode int2 cellCoord int cellIndex TBrushTarget brushTarget int mouseButton Returns Type Description bool Overrides BrushUserToolState<TBrushTarget>.ApplyBrush(int, int2, int, TBrushTarget, int) InitDefaultSettings() Declaration protected override void InitDefaultSettings() Overrides BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.InitDefaultSettings() IsAppliedToEveryCellOnMap(int) Declaration public override bool IsAppliedToEveryCellOnMap(int brushMode) Parameters Type Name Description int brushMode Returns Type Description bool Overrides BrushUserToolState<TBrushTarget>.IsAppliedToEveryCellOnMap(int) LoadSettings() Declaration protected override void LoadSettings() Overrides BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.LoadSettings() ReadCellItem(TBrushTarget, int2) Declaration protected virtual CellEntity ReadCellItem(TBrushTarget brushTarget, int2 cellCoord) Parameters Type Name Description TBrushTarget brushTarget int2 cellCoord Returns Type Description CellEntity SaveSettings() Declaration protected override void SaveSettings() Overrides BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.SaveSettings() Implements ISmState Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.PaintCellEntityPropsToolState.html": {
    "href": "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.PaintCellEntityPropsToolState.html",
    "title": "Class PaintCellEntityPropsToolState | Hex Terrains",
    "summary": "Class PaintCellEntityPropsToolState Inheritance object SmState UserToolState BrushUserToolState<CellEntityPropsData> BrushUserToolState<CellEntityPropsData, UserToolSettingsDataSource> BrushUserToolState<CellEntityPropsData, UserToolSettingsDataSource, UniversalToolSettingsScreen> PaintCellEntitiesUserToolState<CellEntityPropsData, HexGroundData> PaintCellEntityPropsToolState Implements ISmState Inherited Members PaintCellEntitiesUserToolState<CellEntityPropsData, HexGroundData>.CellEntityId PaintCellEntitiesUserToolState<CellEntityPropsData, HexGroundData>.CellEntityState PaintCellEntitiesUserToolState<CellEntityPropsData, HexGroundData>.MinCellHeight PaintCellEntitiesUserToolState<CellEntityPropsData, HexGroundData>.MaxCellHeight PaintCellEntitiesUserToolState<CellEntityPropsData, HexGroundData>.ReadCellKey PaintCellEntitiesUserToolState<CellEntityPropsData, HexGroundData>.CellEntity PaintCellEntitiesUserToolState<CellEntityPropsData, HexGroundData>.InitDefaultSettings() PaintCellEntitiesUserToolState<CellEntityPropsData, HexGroundData>.SaveSettings() PaintCellEntitiesUserToolState<CellEntityPropsData, HexGroundData>.LoadSettings() PaintCellEntitiesUserToolState<CellEntityPropsData, HexGroundData>.ApplyBrush(int, int2, int, CellEntityPropsData, int) PaintCellEntitiesUserToolState<CellEntityPropsData, HexGroundData>.IsAppliedToEveryCellOnMap(int) PaintCellEntitiesUserToolState<CellEntityPropsData, HexGroundData>.ReadCellItem(CellEntityPropsData, int2) BrushUserToolState<CellEntityPropsData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.SettingsScreen BrushUserToolState<CellEntityPropsData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.PrepareToRun() BrushUserToolState<CellEntityPropsData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.PrepareToStop() BrushUserToolState<CellEntityPropsData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.GetSettingsScreen() BrushUserToolState<CellEntityPropsData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.UpdateSettingsScreen() BrushUserToolState<CellEntityPropsData, UserToolSettingsDataSource>.DataSource BrushUserToolState<CellEntityPropsData, UserToolSettingsDataSource>.SettingsPlayerPrefsKeyName BrushUserToolState<CellEntityPropsData, UserToolSettingsDataSource>.PrepareToRun() BrushUserToolState<CellEntityPropsData, UserToolSettingsDataSource>.InitSettings() BrushUserToolState<CellEntityPropsData, UserToolSettingsDataSource>.InitDefaultSettings() BrushUserToolState<CellEntityPropsData, UserToolSettingsDataSource>.PrepareToStop() BrushUserToolState<CellEntityPropsData, UserToolSettingsDataSource>.LoadSettings() BrushUserToolState<CellEntityPropsData, UserToolSettingsDataSource>.SaveSettings() BrushUserToolState<CellEntityPropsData, UserToolSettingsDataSource>.SaveSettingsValue<TValue>(string, TValue) BrushUserToolState<CellEntityPropsData, UserToolSettingsDataSource>.LoadSettingsValue<TValue>(string, TValue) BrushUserToolState<CellEntityPropsData, UserToolSettingsDataSource>.TryLoadSettingsValue<TValue>(string, out TValue) BrushUserToolState<CellEntityPropsData, UserToolSettingsDataSource>.LoadSettingsValueOrDefault<TValue>(string, TValue) BrushUserToolState<CellEntityPropsData>.PrevChangeTimeStamp BrushUserToolState<CellEntityPropsData>.TimeTreshold BrushUserToolState<CellEntityPropsData>.CanChangeBrushSize BrushUserToolState<CellEntityPropsData>.AllowRightMouseButton BrushUserToolState<CellEntityPropsData>.CursorColor BrushUserToolState<CellEntityPropsData>.ChangeModeKey BrushUserToolState<CellEntityPropsData>.ChangeBrushSizeKey BrushUserToolState<CellEntityPropsData>.IncreaseBrushSizeKey BrushUserToolState<CellEntityPropsData>.IncreaseBrushSizeKey2 BrushUserToolState<CellEntityPropsData>.DecreaseBrushSizeKey BrushUserToolState<CellEntityPropsData>.DecreaseBrushSizeKey2 BrushUserToolState<CellEntityPropsData>.ChangeOpacityKey BrushUserToolState<CellEntityPropsData>.IsTimeTresholdPassed BrushUserToolState<CellEntityPropsData>.BrushSize BrushUserToolState<CellEntityPropsData>.BrushOpacity BrushUserToolState<CellEntityPropsData>.ChangeOpacityMultiplier BrushUserToolState<CellEntityPropsData>.SetNewTimestamp() BrushUserToolState<CellEntityPropsData>.PrepareToRun() BrushUserToolState<CellEntityPropsData>.PrepareToStop() BrushUserToolState<CellEntityPropsData>.Tick() BrushUserToolState<CellEntityPropsData>.UpdateBrush() BrushUserToolState<CellEntityPropsData>.TryApplyBrush() BrushUserToolState<CellEntityPropsData>.ApplyToSingleCell(int, int2, int, CellEntityPropsData, int) BrushUserToolState<CellEntityPropsData>.ApplyBrushToAllCells(int, HexTerrainSettings, CellEntityPropsData, int) BrushUserToolState<CellEntityPropsData>.ApplyBrushToAllBrushPoints(int, int2, int, HexTerrainSettings, CellEntityPropsData, int) BrushUserToolState<CellEntityPropsData>.ApplyBrush(int, int2, int, CellEntityPropsData, int) BrushUserToolState<CellEntityPropsData>.CanBeAppliedToManyPoints(int) BrushUserToolState<CellEntityPropsData>.IsAppliedToEveryCellOnMap(int) BrushUserToolState<CellEntityPropsData>.GetBrushTarget() UserToolState.Settings UserToolState.IsSubstatesVisible UserToolState.SubStateMachine UserToolState.UserToolAPI UserToolState.HasSubtools UserToolState.IsChangeViewMode UserToolState.RequiredViewMode UserToolState.OriginalViewMode UserToolState.ShowSettingsScreen<TViewData, TScreen>(TViewData) UserToolState.GetUIScreen<TScreen>() UserToolState.HideSettingsScreen<TScreen>() UserToolState.SetupPlanetCursor(bool, int) UserToolState.SetupPlanetCursor(bool, int, Color32) UserToolState.SetupPlanetCursor(bool, int, Color32, bool) UserToolState.SetupPlanetCursor(bool) UserToolState.TrySetViewMode() UserToolState.TryRestoreViewMode() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States Assembly: fwt.hexterrains.dll Syntax public class PaintCellEntityPropsToolState : PaintCellEntitiesUserToolState<CellEntityPropsData, HexGroundData>, ISmState Constructors PaintCellEntityPropsToolState(IUserToolAPI) Declaration public PaintCellEntityPropsToolState(IUserToolAPI userToolAPI) Parameters Type Name Description IUserToolAPI userToolAPI Properties UserToolType Declaration public override int UserToolType { get; } Property Value Type Description int Overrides UserToolState.UserToolType Methods InitDefaultSettings() Declaration protected override void InitDefaultSettings() Overrides PaintCellEntitiesUserToolState<CellEntityPropsData, HexGroundData>.InitDefaultSettings() Implements ISmState Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.PaintCellItemPropsUserToolState.html": {
    "href": "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.PaintCellItemPropsUserToolState.html",
    "title": "Class PaintCellItemPropsUserToolState | Hex Terrains",
    "summary": "Class PaintCellItemPropsUserToolState Inheritance object SmState UserToolState BrushUserToolState<CellItemPropsData> BrushUserToolState<CellItemPropsData, UserToolSettingsDataSource> BrushUserToolState<CellItemPropsData, UserToolSettingsDataSource, UniversalToolSettingsScreen> PaintCellItemsUserToolState<CellItemPropsData, HexGroundData> PaintCellItemPropsUserToolState Implements ISmState Inherited Members PaintCellItemsUserToolState<CellItemPropsData, HexGroundData>.CellItemIndex PaintCellItemsUserToolState<CellItemPropsData, HexGroundData>.CellItemState PaintCellItemsUserToolState<CellItemPropsData, HexGroundData>.MinCellHeight PaintCellItemsUserToolState<CellItemPropsData, HexGroundData>.MaxCellHeight PaintCellItemsUserToolState<CellItemPropsData, HexGroundData>.ReadCellKey PaintCellItemsUserToolState<CellItemPropsData, HexGroundData>.CellItem PaintCellItemsUserToolState<CellItemPropsData, HexGroundData>.InitDefaultSettings() PaintCellItemsUserToolState<CellItemPropsData, HexGroundData>.SaveSettings() PaintCellItemsUserToolState<CellItemPropsData, HexGroundData>.LoadSettings() PaintCellItemsUserToolState<CellItemPropsData, HexGroundData>.ApplyBrush(int, int2, int, CellItemPropsData, int) PaintCellItemsUserToolState<CellItemPropsData, HexGroundData>.IsAppliedToEveryCellOnMap(int) PaintCellItemsUserToolState<CellItemPropsData, HexGroundData>.ReadCellItem(CellItemPropsData, int2) BrushUserToolState<CellItemPropsData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.SettingsScreen BrushUserToolState<CellItemPropsData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.PrepareToRun() BrushUserToolState<CellItemPropsData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.PrepareToStop() BrushUserToolState<CellItemPropsData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.GetSettingsScreen() BrushUserToolState<CellItemPropsData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.UpdateSettingsScreen() BrushUserToolState<CellItemPropsData, UserToolSettingsDataSource>.DataSource BrushUserToolState<CellItemPropsData, UserToolSettingsDataSource>.SettingsPlayerPrefsKeyName BrushUserToolState<CellItemPropsData, UserToolSettingsDataSource>.PrepareToRun() BrushUserToolState<CellItemPropsData, UserToolSettingsDataSource>.InitSettings() BrushUserToolState<CellItemPropsData, UserToolSettingsDataSource>.InitDefaultSettings() BrushUserToolState<CellItemPropsData, UserToolSettingsDataSource>.PrepareToStop() BrushUserToolState<CellItemPropsData, UserToolSettingsDataSource>.LoadSettings() BrushUserToolState<CellItemPropsData, UserToolSettingsDataSource>.SaveSettings() BrushUserToolState<CellItemPropsData, UserToolSettingsDataSource>.SaveSettingsValue<TValue>(string, TValue) BrushUserToolState<CellItemPropsData, UserToolSettingsDataSource>.LoadSettingsValue<TValue>(string, TValue) BrushUserToolState<CellItemPropsData, UserToolSettingsDataSource>.TryLoadSettingsValue<TValue>(string, out TValue) BrushUserToolState<CellItemPropsData, UserToolSettingsDataSource>.LoadSettingsValueOrDefault<TValue>(string, TValue) BrushUserToolState<CellItemPropsData>.PrevChangeTimeStamp BrushUserToolState<CellItemPropsData>.TimeTreshold BrushUserToolState<CellItemPropsData>.CanChangeBrushSize BrushUserToolState<CellItemPropsData>.AllowRightMouseButton BrushUserToolState<CellItemPropsData>.CursorColor BrushUserToolState<CellItemPropsData>.ChangeModeKey BrushUserToolState<CellItemPropsData>.ChangeBrushSizeKey BrushUserToolState<CellItemPropsData>.IncreaseBrushSizeKey BrushUserToolState<CellItemPropsData>.IncreaseBrushSizeKey2 BrushUserToolState<CellItemPropsData>.DecreaseBrushSizeKey BrushUserToolState<CellItemPropsData>.DecreaseBrushSizeKey2 BrushUserToolState<CellItemPropsData>.ChangeOpacityKey BrushUserToolState<CellItemPropsData>.IsTimeTresholdPassed BrushUserToolState<CellItemPropsData>.BrushSize BrushUserToolState<CellItemPropsData>.BrushOpacity BrushUserToolState<CellItemPropsData>.ChangeOpacityMultiplier BrushUserToolState<CellItemPropsData>.SetNewTimestamp() BrushUserToolState<CellItemPropsData>.PrepareToRun() BrushUserToolState<CellItemPropsData>.PrepareToStop() BrushUserToolState<CellItemPropsData>.Tick() BrushUserToolState<CellItemPropsData>.UpdateBrush() BrushUserToolState<CellItemPropsData>.TryApplyBrush() BrushUserToolState<CellItemPropsData>.ApplyToSingleCell(int, int2, int, CellItemPropsData, int) BrushUserToolState<CellItemPropsData>.ApplyBrushToAllCells(int, HexTerrainSettings, CellItemPropsData, int) BrushUserToolState<CellItemPropsData>.ApplyBrushToAllBrushPoints(int, int2, int, HexTerrainSettings, CellItemPropsData, int) BrushUserToolState<CellItemPropsData>.ApplyBrush(int, int2, int, CellItemPropsData, int) BrushUserToolState<CellItemPropsData>.CanBeAppliedToManyPoints(int) BrushUserToolState<CellItemPropsData>.IsAppliedToEveryCellOnMap(int) BrushUserToolState<CellItemPropsData>.GetBrushTarget() UserToolState.Settings UserToolState.IsSubstatesVisible UserToolState.SubStateMachine UserToolState.UserToolAPI UserToolState.HasSubtools UserToolState.IsChangeViewMode UserToolState.RequiredViewMode UserToolState.OriginalViewMode UserToolState.ShowSettingsScreen<TViewData, TScreen>(TViewData) UserToolState.GetUIScreen<TScreen>() UserToolState.HideSettingsScreen<TScreen>() UserToolState.SetupPlanetCursor(bool, int) UserToolState.SetupPlanetCursor(bool, int, Color32) UserToolState.SetupPlanetCursor(bool, int, Color32, bool) UserToolState.SetupPlanetCursor(bool) UserToolState.TrySetViewMode() UserToolState.TryRestoreViewMode() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States Assembly: fwt.hexterrains.dll Syntax public class PaintCellItemPropsUserToolState : PaintCellItemsUserToolState<CellItemPropsData, HexGroundData>, ISmState Constructors PaintCellItemPropsUserToolState(IUserToolAPI) Declaration public PaintCellItemPropsUserToolState(IUserToolAPI userToolAPI) Parameters Type Name Description IUserToolAPI userToolAPI Properties UserToolType Declaration public override int UserToolType { get; } Property Value Type Description int Overrides UserToolState.UserToolType Methods InitDefaultSettings() Declaration protected override void InitDefaultSettings() Overrides PaintCellItemsUserToolState<CellItemPropsData, HexGroundData>.InitDefaultSettings() Implements ISmState Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.PaintCellItemsUserToolState-2.html": {
    "href": "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.PaintCellItemsUserToolState-2.html",
    "title": "Class PaintCellItemsUserToolState<TBrushTarget, THexSurface> | Hex Terrains",
    "summary": "Class PaintCellItemsUserToolState<TBrushTarget, THexSurface> Inheritance object SmState UserToolState BrushUserToolState<TBrushTarget> BrushUserToolState<TBrushTarget, UserToolSettingsDataSource> BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen> PaintCellItemsUserToolState<TBrushTarget, THexSurface> PaintCellItemPropsUserToolState Implements ISmState Inherited Members BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen>.SettingsScreen BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen>.PrepareToRun() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen>.PrepareToStop() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen>.GetSettingsScreen() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen>.UpdateSettingsScreen() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.DataSource BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.SettingsPlayerPrefsKeyName BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.PrepareToRun() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.InitSettings() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.InitDefaultSettings() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.PrepareToStop() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.LoadSettings() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.SaveSettings() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.SaveSettingsValue<TValue>(string, TValue) BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.LoadSettingsValue<TValue>(string, TValue) BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.TryLoadSettingsValue<TValue>(string, out TValue) BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.LoadSettingsValueOrDefault<TValue>(string, TValue) BrushUserToolState<TBrushTarget>.PrevChangeTimeStamp BrushUserToolState<TBrushTarget>.TimeTreshold BrushUserToolState<TBrushTarget>.CanChangeBrushSize BrushUserToolState<TBrushTarget>.AllowRightMouseButton BrushUserToolState<TBrushTarget>.CursorColor BrushUserToolState<TBrushTarget>.ChangeModeKey BrushUserToolState<TBrushTarget>.ChangeBrushSizeKey BrushUserToolState<TBrushTarget>.IncreaseBrushSizeKey BrushUserToolState<TBrushTarget>.IncreaseBrushSizeKey2 BrushUserToolState<TBrushTarget>.DecreaseBrushSizeKey BrushUserToolState<TBrushTarget>.DecreaseBrushSizeKey2 BrushUserToolState<TBrushTarget>.ChangeOpacityKey BrushUserToolState<TBrushTarget>.IsTimeTresholdPassed BrushUserToolState<TBrushTarget>.BrushSize BrushUserToolState<TBrushTarget>.BrushOpacity BrushUserToolState<TBrushTarget>.ChangeOpacityMultiplier BrushUserToolState<TBrushTarget>.SetNewTimestamp() BrushUserToolState<TBrushTarget>.PrepareToRun() BrushUserToolState<TBrushTarget>.PrepareToStop() BrushUserToolState<TBrushTarget>.Tick() BrushUserToolState<TBrushTarget>.UpdateBrush() BrushUserToolState<TBrushTarget>.TryApplyBrush() BrushUserToolState<TBrushTarget>.ApplyToSingleCell(int, int2, int, TBrushTarget, int) BrushUserToolState<TBrushTarget>.ApplyBrushToAllCells(int, HexTerrainSettings, TBrushTarget, int) BrushUserToolState<TBrushTarget>.ApplyBrushToAllBrushPoints(int, int2, int, HexTerrainSettings, TBrushTarget, int) BrushUserToolState<TBrushTarget>.CanBeAppliedToManyPoints(int) BrushUserToolState<TBrushTarget>.GetBrushTarget() UserToolState.Settings UserToolState.IsSubstatesVisible UserToolState.SubStateMachine UserToolState.UserToolType UserToolState.UserToolAPI UserToolState.HasSubtools UserToolState.IsChangeViewMode UserToolState.RequiredViewMode UserToolState.OriginalViewMode UserToolState.ShowSettingsScreen<TViewData, TScreen>(TViewData) UserToolState.GetUIScreen<TScreen>() UserToolState.HideSettingsScreen<TScreen>() UserToolState.SetupPlanetCursor(bool, int) UserToolState.SetupPlanetCursor(bool, int, Color32) UserToolState.SetupPlanetCursor(bool, int, Color32, bool) UserToolState.SetupPlanetCursor(bool) UserToolState.TrySetViewMode() UserToolState.TryRestoreViewMode() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States Assembly: fwt.hexterrains.dll Syntax public abstract class PaintCellItemsUserToolState<TBrushTarget, THexSurface> : BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen>, ISmState where TBrushTarget : CellItemsData where THexSurface : HexSurfaceData Type Parameters Name Description TBrushTarget THexSurface Constructors PaintCellItemsUserToolState(IUserToolAPI) Declaration protected PaintCellItemsUserToolState(IUserToolAPI userToolAPI) Parameters Type Name Description IUserToolAPI userToolAPI Fields ReadCellKey Declaration public KeyCode ReadCellKey Field Value Type Description KeyCode Properties CellItem Declaration public CellItem CellItem { get; set; } Property Value Type Description CellItem CellItemIndex Declaration public int CellItemIndex { get; set; } Property Value Type Description int CellItemState Declaration public int CellItemState { get; set; } Property Value Type Description int MaxCellHeight Declaration public int MaxCellHeight { get; set; } Property Value Type Description int MinCellHeight Declaration public int MinCellHeight { get; set; } Property Value Type Description int Methods ApplyBrush(int, int2, int, TBrushTarget, int) Applies brush to the brushView. Returns true if changes were applied Declaration public override bool ApplyBrush(int brushMode, int2 cellCoord, int cellIndex, TBrushTarget brushTarget, int mouseButton) Parameters Type Name Description int brushMode int2 cellCoord int cellIndex TBrushTarget brushTarget int mouseButton Returns Type Description bool Overrides BrushUserToolState<TBrushTarget>.ApplyBrush(int, int2, int, TBrushTarget, int) InitDefaultSettings() Declaration protected override void InitDefaultSettings() Overrides BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.InitDefaultSettings() IsAppliedToEveryCellOnMap(int) Declaration public override bool IsAppliedToEveryCellOnMap(int brushMode) Parameters Type Name Description int brushMode Returns Type Description bool Overrides BrushUserToolState<TBrushTarget>.IsAppliedToEveryCellOnMap(int) LoadSettings() Declaration protected override void LoadSettings() Overrides BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.LoadSettings() ReadCellItem(TBrushTarget, int2) Declaration protected virtual CellItem ReadCellItem(TBrushTarget brushTarget, int2 cellCoord) Parameters Type Name Description TBrushTarget brushTarget int2 cellCoord Returns Type Description CellItem SaveSettings() Declaration protected override void SaveSettings() Overrides BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.SaveSettings() Implements ISmState Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.PaintCountriesUserToolState.html": {
    "href": "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.PaintCountriesUserToolState.html",
    "title": "Class PaintCountriesUserToolState | Hex Terrains",
    "summary": "Class PaintCountriesUserToolState Inheritance object SmState UserToolState BrushUserToolState<HexCountriesData> BrushUserToolState<HexCountriesData, UserToolSettingsDataSource> BrushUserToolState<HexCountriesData, UserToolSettingsDataSource, UniversalToolSettingsScreen> PaintAreasUserToolState<HexCountriesData> PaintCountriesUserToolState Implements ISmState Inherited Members PaintAreasUserToolState<HexCountriesData>.CellArea PaintAreasUserToolState<HexCountriesData>.ReadPropKey PaintAreasUserToolState<HexCountriesData>.PrepareToRun() PaintAreasUserToolState<HexCountriesData>.SaveSettings() PaintAreasUserToolState<HexCountriesData>.LoadSettings() PaintAreasUserToolState<HexCountriesData>.ApplyBrush(int, int2, int, HexCountriesData, int) PaintAreasUserToolState<HexCountriesData>.ReadCellData(HexCountriesData, int2) PaintAreasUserToolState<HexCountriesData>.IsAppliedToEveryCellOnMap(int) BrushUserToolState<HexCountriesData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.SettingsScreen BrushUserToolState<HexCountriesData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.PrepareToRun() BrushUserToolState<HexCountriesData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.PrepareToStop() BrushUserToolState<HexCountriesData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.GetSettingsScreen() BrushUserToolState<HexCountriesData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.UpdateSettingsScreen() BrushUserToolState<HexCountriesData, UserToolSettingsDataSource>.DataSource BrushUserToolState<HexCountriesData, UserToolSettingsDataSource>.SettingsPlayerPrefsKeyName BrushUserToolState<HexCountriesData, UserToolSettingsDataSource>.PrepareToRun() BrushUserToolState<HexCountriesData, UserToolSettingsDataSource>.InitSettings() BrushUserToolState<HexCountriesData, UserToolSettingsDataSource>.InitDefaultSettings() BrushUserToolState<HexCountriesData, UserToolSettingsDataSource>.PrepareToStop() BrushUserToolState<HexCountriesData, UserToolSettingsDataSource>.LoadSettings() BrushUserToolState<HexCountriesData, UserToolSettingsDataSource>.SaveSettings() BrushUserToolState<HexCountriesData, UserToolSettingsDataSource>.SaveSettingsValue<TValue>(string, TValue) BrushUserToolState<HexCountriesData, UserToolSettingsDataSource>.LoadSettingsValue<TValue>(string, TValue) BrushUserToolState<HexCountriesData, UserToolSettingsDataSource>.TryLoadSettingsValue<TValue>(string, out TValue) BrushUserToolState<HexCountriesData, UserToolSettingsDataSource>.LoadSettingsValueOrDefault<TValue>(string, TValue) BrushUserToolState<HexCountriesData>.PrevChangeTimeStamp BrushUserToolState<HexCountriesData>.TimeTreshold BrushUserToolState<HexCountriesData>.CanChangeBrushSize BrushUserToolState<HexCountriesData>.AllowRightMouseButton BrushUserToolState<HexCountriesData>.CursorColor BrushUserToolState<HexCountriesData>.ChangeModeKey BrushUserToolState<HexCountriesData>.ChangeBrushSizeKey BrushUserToolState<HexCountriesData>.IncreaseBrushSizeKey BrushUserToolState<HexCountriesData>.IncreaseBrushSizeKey2 BrushUserToolState<HexCountriesData>.DecreaseBrushSizeKey BrushUserToolState<HexCountriesData>.DecreaseBrushSizeKey2 BrushUserToolState<HexCountriesData>.ChangeOpacityKey BrushUserToolState<HexCountriesData>.IsTimeTresholdPassed BrushUserToolState<HexCountriesData>.BrushSize BrushUserToolState<HexCountriesData>.BrushOpacity BrushUserToolState<HexCountriesData>.ChangeOpacityMultiplier BrushUserToolState<HexCountriesData>.SetNewTimestamp() BrushUserToolState<HexCountriesData>.PrepareToStop() BrushUserToolState<HexCountriesData>.Tick() BrushUserToolState<HexCountriesData>.UpdateBrush() BrushUserToolState<HexCountriesData>.TryApplyBrush() BrushUserToolState<HexCountriesData>.ApplyToSingleCell(int, int2, int, HexCountriesData, int) BrushUserToolState<HexCountriesData>.ApplyBrushToAllCells(int, HexTerrainSettings, HexCountriesData, int) BrushUserToolState<HexCountriesData>.ApplyBrushToAllBrushPoints(int, int2, int, HexTerrainSettings, HexCountriesData, int) BrushUserToolState<HexCountriesData>.CanBeAppliedToManyPoints(int) BrushUserToolState<HexCountriesData>.GetBrushTarget() UserToolState.Settings UserToolState.IsSubstatesVisible UserToolState.SubStateMachine UserToolState.UserToolAPI UserToolState.HasSubtools UserToolState.OriginalViewMode UserToolState.ShowSettingsScreen<TViewData, TScreen>(TViewData) UserToolState.GetUIScreen<TScreen>() UserToolState.HideSettingsScreen<TScreen>() UserToolState.SetupPlanetCursor(bool, int) UserToolState.SetupPlanetCursor(bool, int, Color32) UserToolState.SetupPlanetCursor(bool, int, Color32, bool) UserToolState.SetupPlanetCursor(bool) UserToolState.TrySetViewMode() UserToolState.TryRestoreViewMode() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States Assembly: fwt.hexterrains.dll Syntax public class PaintCountriesUserToolState : PaintAreasUserToolState<HexCountriesData>, ISmState Constructors PaintCountriesUserToolState(IUserToolAPI) Declaration public PaintCountriesUserToolState(IUserToolAPI userToolAPI) Parameters Type Name Description IUserToolAPI userToolAPI Properties IsChangeViewMode If true, when this user tool state becomes active it asks a terrain to switch to the RequiredViewMode view mode Declaration protected override bool IsChangeViewMode { get; } Property Value Type Description bool Overrides UserToolState.IsChangeViewMode RequiredViewMode If IsChangeViewMode is true, this is the view mode that will be set when this user tool state becomes active. Declaration protected override byte RequiredViewMode { get; } Property Value Type Description byte Overrides UserToolState.RequiredViewMode UserToolType Declaration public override int UserToolType { get; } Property Value Type Description int Overrides UserToolState.UserToolType Methods InitDefaultSettings() Declaration protected override void InitDefaultSettings() Overrides PaintAreasUserToolState<HexCountriesData>.InitDefaultSettings() Implements ISmState Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.PaintGroundBiomesUserToolState.html": {
    "href": "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.PaintGroundBiomesUserToolState.html",
    "title": "Class PaintGroundBiomesUserToolState | Hex Terrains",
    "summary": "Class PaintGroundBiomesUserToolState Inheritance object SmState UserToolState BrushUserToolState<HexGroundData> BrushUserToolState<HexGroundData, UserToolSettingsDataSource> BrushUserToolState<HexGroundData, UserToolSettingsDataSource, UniversalToolSettingsScreen> PaintTerrainUserToolState<HexGroundData> PaintGroundBiomesUserToolState Implements ISmState Inherited Members PaintTerrainUserToolState<HexGroundData>.CellColor PaintTerrainUserToolState<HexGroundData>.ReadPropKey PaintTerrainUserToolState<HexGroundData>.SaveSettings() PaintTerrainUserToolState<HexGroundData>.LoadSettings() PaintTerrainUserToolState<HexGroundData>.ApplyBrush(int, int2, int, HexGroundData, int) PaintTerrainUserToolState<HexGroundData>.ReadCellData(int, HexGroundData) PaintTerrainUserToolState<HexGroundData>.IsAppliedToEveryCellOnMap(int) BrushUserToolState<HexGroundData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.SettingsScreen BrushUserToolState<HexGroundData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.PrepareToRun() BrushUserToolState<HexGroundData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.PrepareToStop() BrushUserToolState<HexGroundData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.GetSettingsScreen() BrushUserToolState<HexGroundData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.UpdateSettingsScreen() BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.DataSource BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.SettingsPlayerPrefsKeyName BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.PrepareToRun() BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.InitSettings() BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.InitDefaultSettings() BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.PrepareToStop() BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.LoadSettings() BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.SaveSettings() BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.SaveSettingsValue<TValue>(string, TValue) BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.LoadSettingsValue<TValue>(string, TValue) BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.TryLoadSettingsValue<TValue>(string, out TValue) BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.LoadSettingsValueOrDefault<TValue>(string, TValue) BrushUserToolState<HexGroundData>.PrevChangeTimeStamp BrushUserToolState<HexGroundData>.TimeTreshold BrushUserToolState<HexGroundData>.CanChangeBrushSize BrushUserToolState<HexGroundData>.AllowRightMouseButton BrushUserToolState<HexGroundData>.CursorColor BrushUserToolState<HexGroundData>.ChangeModeKey BrushUserToolState<HexGroundData>.ChangeBrushSizeKey BrushUserToolState<HexGroundData>.IncreaseBrushSizeKey BrushUserToolState<HexGroundData>.IncreaseBrushSizeKey2 BrushUserToolState<HexGroundData>.DecreaseBrushSizeKey BrushUserToolState<HexGroundData>.DecreaseBrushSizeKey2 BrushUserToolState<HexGroundData>.ChangeOpacityKey BrushUserToolState<HexGroundData>.IsTimeTresholdPassed BrushUserToolState<HexGroundData>.BrushSize BrushUserToolState<HexGroundData>.BrushOpacity BrushUserToolState<HexGroundData>.ChangeOpacityMultiplier BrushUserToolState<HexGroundData>.SetNewTimestamp() BrushUserToolState<HexGroundData>.PrepareToRun() BrushUserToolState<HexGroundData>.PrepareToStop() BrushUserToolState<HexGroundData>.Tick() BrushUserToolState<HexGroundData>.UpdateBrush() BrushUserToolState<HexGroundData>.TryApplyBrush() BrushUserToolState<HexGroundData>.ApplyToSingleCell(int, int2, int, HexGroundData, int) BrushUserToolState<HexGroundData>.ApplyBrushToAllCells(int, HexTerrainSettings, HexGroundData, int) BrushUserToolState<HexGroundData>.ApplyBrushToAllBrushPoints(int, int2, int, HexTerrainSettings, HexGroundData, int) BrushUserToolState<HexGroundData>.CanBeAppliedToManyPoints(int) BrushUserToolState<HexGroundData>.GetBrushTarget() UserToolState.Settings UserToolState.IsSubstatesVisible UserToolState.SubStateMachine UserToolState.UserToolAPI UserToolState.HasSubtools UserToolState.IsChangeViewMode UserToolState.RequiredViewMode UserToolState.OriginalViewMode UserToolState.ShowSettingsScreen<TViewData, TScreen>(TViewData) UserToolState.GetUIScreen<TScreen>() UserToolState.HideSettingsScreen<TScreen>() UserToolState.SetupPlanetCursor(bool, int) UserToolState.SetupPlanetCursor(bool, int, Color32) UserToolState.SetupPlanetCursor(bool, int, Color32, bool) UserToolState.SetupPlanetCursor(bool) UserToolState.TrySetViewMode() UserToolState.TryRestoreViewMode() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States Assembly: fwt.hexterrains.dll Syntax public class PaintGroundBiomesUserToolState : PaintTerrainUserToolState<HexGroundData>, ISmState Constructors PaintGroundBiomesUserToolState(IUserToolAPI) Declaration public PaintGroundBiomesUserToolState(IUserToolAPI userToolAPI) Parameters Type Name Description IUserToolAPI userToolAPI Properties UserToolType Declaration public override int UserToolType { get; } Property Value Type Description int Overrides UserToolState.UserToolType Methods InitDefaultSettings() Declaration protected override void InitDefaultSettings() Overrides PaintTerrainUserToolState<HexGroundData>.InitDefaultSettings() Implements ISmState Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.PaintProvincesUserToolState.html": {
    "href": "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.PaintProvincesUserToolState.html",
    "title": "Class PaintProvincesUserToolState | Hex Terrains",
    "summary": "Class PaintProvincesUserToolState Inheritance object SmState UserToolState BrushUserToolState<HexProvincesData> BrushUserToolState<HexProvincesData, UserToolSettingsDataSource> BrushUserToolState<HexProvincesData, UserToolSettingsDataSource, UniversalToolSettingsScreen> PaintAreasUserToolState<HexProvincesData> PaintProvincesUserToolState Implements ISmState Inherited Members PaintAreasUserToolState<HexProvincesData>.CellArea PaintAreasUserToolState<HexProvincesData>.ReadPropKey PaintAreasUserToolState<HexProvincesData>.PrepareToRun() PaintAreasUserToolState<HexProvincesData>.SaveSettings() PaintAreasUserToolState<HexProvincesData>.LoadSettings() PaintAreasUserToolState<HexProvincesData>.ApplyBrush(int, int2, int, HexProvincesData, int) PaintAreasUserToolState<HexProvincesData>.ReadCellData(HexProvincesData, int2) PaintAreasUserToolState<HexProvincesData>.IsAppliedToEveryCellOnMap(int) BrushUserToolState<HexProvincesData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.SettingsScreen BrushUserToolState<HexProvincesData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.PrepareToRun() BrushUserToolState<HexProvincesData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.PrepareToStop() BrushUserToolState<HexProvincesData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.GetSettingsScreen() BrushUserToolState<HexProvincesData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.UpdateSettingsScreen() BrushUserToolState<HexProvincesData, UserToolSettingsDataSource>.DataSource BrushUserToolState<HexProvincesData, UserToolSettingsDataSource>.SettingsPlayerPrefsKeyName BrushUserToolState<HexProvincesData, UserToolSettingsDataSource>.PrepareToRun() BrushUserToolState<HexProvincesData, UserToolSettingsDataSource>.InitSettings() BrushUserToolState<HexProvincesData, UserToolSettingsDataSource>.InitDefaultSettings() BrushUserToolState<HexProvincesData, UserToolSettingsDataSource>.PrepareToStop() BrushUserToolState<HexProvincesData, UserToolSettingsDataSource>.LoadSettings() BrushUserToolState<HexProvincesData, UserToolSettingsDataSource>.SaveSettings() BrushUserToolState<HexProvincesData, UserToolSettingsDataSource>.SaveSettingsValue<TValue>(string, TValue) BrushUserToolState<HexProvincesData, UserToolSettingsDataSource>.LoadSettingsValue<TValue>(string, TValue) BrushUserToolState<HexProvincesData, UserToolSettingsDataSource>.TryLoadSettingsValue<TValue>(string, out TValue) BrushUserToolState<HexProvincesData, UserToolSettingsDataSource>.LoadSettingsValueOrDefault<TValue>(string, TValue) BrushUserToolState<HexProvincesData>.PrevChangeTimeStamp BrushUserToolState<HexProvincesData>.TimeTreshold BrushUserToolState<HexProvincesData>.CanChangeBrushSize BrushUserToolState<HexProvincesData>.AllowRightMouseButton BrushUserToolState<HexProvincesData>.CursorColor BrushUserToolState<HexProvincesData>.ChangeModeKey BrushUserToolState<HexProvincesData>.ChangeBrushSizeKey BrushUserToolState<HexProvincesData>.IncreaseBrushSizeKey BrushUserToolState<HexProvincesData>.IncreaseBrushSizeKey2 BrushUserToolState<HexProvincesData>.DecreaseBrushSizeKey BrushUserToolState<HexProvincesData>.DecreaseBrushSizeKey2 BrushUserToolState<HexProvincesData>.ChangeOpacityKey BrushUserToolState<HexProvincesData>.IsTimeTresholdPassed BrushUserToolState<HexProvincesData>.BrushSize BrushUserToolState<HexProvincesData>.BrushOpacity BrushUserToolState<HexProvincesData>.ChangeOpacityMultiplier BrushUserToolState<HexProvincesData>.SetNewTimestamp() BrushUserToolState<HexProvincesData>.PrepareToStop() BrushUserToolState<HexProvincesData>.Tick() BrushUserToolState<HexProvincesData>.UpdateBrush() BrushUserToolState<HexProvincesData>.TryApplyBrush() BrushUserToolState<HexProvincesData>.ApplyToSingleCell(int, int2, int, HexProvincesData, int) BrushUserToolState<HexProvincesData>.ApplyBrushToAllCells(int, HexTerrainSettings, HexProvincesData, int) BrushUserToolState<HexProvincesData>.ApplyBrushToAllBrushPoints(int, int2, int, HexTerrainSettings, HexProvincesData, int) BrushUserToolState<HexProvincesData>.CanBeAppliedToManyPoints(int) BrushUserToolState<HexProvincesData>.GetBrushTarget() UserToolState.Settings UserToolState.IsSubstatesVisible UserToolState.SubStateMachine UserToolState.UserToolAPI UserToolState.HasSubtools UserToolState.OriginalViewMode UserToolState.ShowSettingsScreen<TViewData, TScreen>(TViewData) UserToolState.GetUIScreen<TScreen>() UserToolState.HideSettingsScreen<TScreen>() UserToolState.SetupPlanetCursor(bool, int) UserToolState.SetupPlanetCursor(bool, int, Color32) UserToolState.SetupPlanetCursor(bool, int, Color32, bool) UserToolState.SetupPlanetCursor(bool) UserToolState.TrySetViewMode() UserToolState.TryRestoreViewMode() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States Assembly: fwt.hexterrains.dll Syntax public class PaintProvincesUserToolState : PaintAreasUserToolState<HexProvincesData>, ISmState Constructors PaintProvincesUserToolState(IUserToolAPI) Declaration public PaintProvincesUserToolState(IUserToolAPI userToolAPI) Parameters Type Name Description IUserToolAPI userToolAPI Properties IsChangeViewMode If true, when this user tool state becomes active it asks a terrain to switch to the RequiredViewMode view mode Declaration protected override bool IsChangeViewMode { get; } Property Value Type Description bool Overrides UserToolState.IsChangeViewMode RequiredViewMode If IsChangeViewMode is true, this is the view mode that will be set when this user tool state becomes active. Declaration protected override byte RequiredViewMode { get; } Property Value Type Description byte Overrides UserToolState.RequiredViewMode UserToolType Declaration public override int UserToolType { get; } Property Value Type Description int Overrides UserToolState.UserToolType Methods InitDefaultSettings() Declaration protected override void InitDefaultSettings() Overrides PaintAreasUserToolState<HexProvincesData>.InitDefaultSettings() Implements ISmState Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.PaintTerrainUserToolState-1.html": {
    "href": "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.PaintTerrainUserToolState-1.html",
    "title": "Class PaintTerrainUserToolState<TBrushTarget> | Hex Terrains",
    "summary": "Class PaintTerrainUserToolState<TBrushTarget> Inheritance object SmState UserToolState BrushUserToolState<TBrushTarget> BrushUserToolState<TBrushTarget, UserToolSettingsDataSource> BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen> PaintTerrainUserToolState<TBrushTarget> PaintGroundBiomesUserToolState PaintWaterBiomesUserToolState Implements ISmState Inherited Members BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen>.SettingsScreen BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen>.PrepareToRun() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen>.PrepareToStop() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen>.GetSettingsScreen() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen>.UpdateSettingsScreen() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.DataSource BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.SettingsPlayerPrefsKeyName BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.PrepareToRun() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.InitSettings() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.InitDefaultSettings() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.PrepareToStop() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.LoadSettings() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.SaveSettings() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.SaveSettingsValue<TValue>(string, TValue) BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.LoadSettingsValue<TValue>(string, TValue) BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.TryLoadSettingsValue<TValue>(string, out TValue) BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.LoadSettingsValueOrDefault<TValue>(string, TValue) BrushUserToolState<TBrushTarget>.PrevChangeTimeStamp BrushUserToolState<TBrushTarget>.TimeTreshold BrushUserToolState<TBrushTarget>.CanChangeBrushSize BrushUserToolState<TBrushTarget>.AllowRightMouseButton BrushUserToolState<TBrushTarget>.CursorColor BrushUserToolState<TBrushTarget>.ChangeModeKey BrushUserToolState<TBrushTarget>.ChangeBrushSizeKey BrushUserToolState<TBrushTarget>.IncreaseBrushSizeKey BrushUserToolState<TBrushTarget>.IncreaseBrushSizeKey2 BrushUserToolState<TBrushTarget>.DecreaseBrushSizeKey BrushUserToolState<TBrushTarget>.DecreaseBrushSizeKey2 BrushUserToolState<TBrushTarget>.ChangeOpacityKey BrushUserToolState<TBrushTarget>.IsTimeTresholdPassed BrushUserToolState<TBrushTarget>.BrushSize BrushUserToolState<TBrushTarget>.BrushOpacity BrushUserToolState<TBrushTarget>.ChangeOpacityMultiplier BrushUserToolState<TBrushTarget>.SetNewTimestamp() BrushUserToolState<TBrushTarget>.PrepareToRun() BrushUserToolState<TBrushTarget>.PrepareToStop() BrushUserToolState<TBrushTarget>.Tick() BrushUserToolState<TBrushTarget>.UpdateBrush() BrushUserToolState<TBrushTarget>.TryApplyBrush() BrushUserToolState<TBrushTarget>.ApplyToSingleCell(int, int2, int, TBrushTarget, int) BrushUserToolState<TBrushTarget>.ApplyBrushToAllCells(int, HexTerrainSettings, TBrushTarget, int) BrushUserToolState<TBrushTarget>.ApplyBrushToAllBrushPoints(int, int2, int, HexTerrainSettings, TBrushTarget, int) BrushUserToolState<TBrushTarget>.CanBeAppliedToManyPoints(int) BrushUserToolState<TBrushTarget>.GetBrushTarget() UserToolState.Settings UserToolState.IsSubstatesVisible UserToolState.SubStateMachine UserToolState.UserToolType UserToolState.UserToolAPI UserToolState.HasSubtools UserToolState.IsChangeViewMode UserToolState.RequiredViewMode UserToolState.OriginalViewMode UserToolState.ShowSettingsScreen<TViewData, TScreen>(TViewData) UserToolState.GetUIScreen<TScreen>() UserToolState.HideSettingsScreen<TScreen>() UserToolState.SetupPlanetCursor(bool, int) UserToolState.SetupPlanetCursor(bool, int, Color32) UserToolState.SetupPlanetCursor(bool, int, Color32, bool) UserToolState.SetupPlanetCursor(bool) UserToolState.TrySetViewMode() UserToolState.TryRestoreViewMode() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States Assembly: fwt.hexterrains.dll Syntax public abstract class PaintTerrainUserToolState<TBrushTarget> : BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen>, ISmState where TBrushTarget : HexSurfaceData Type Parameters Name Description TBrushTarget Constructors PaintTerrainUserToolState(IUserToolAPI) Declaration protected PaintTerrainUserToolState(IUserToolAPI userToolAPI) Parameters Type Name Description IUserToolAPI userToolAPI Fields ReadPropKey Declaration [Tooltip(\"When this key is pressed, click will read terrain item under cursor instead of applying it\")] public KeyCode ReadPropKey Field Value Type Description KeyCode Properties CellColor Declaration public int CellColor { get; set; } Property Value Type Description int Methods ApplyBrush(int, int2, int, TBrushTarget, int) Applies brush to the brushView. Returns true if changes were applied Declaration public override bool ApplyBrush(int brushMode, int2 cellCoord, int cellIndex, TBrushTarget brushTarget, int mouseButton) Parameters Type Name Description int brushMode int2 cellCoord int cellIndex TBrushTarget brushTarget int mouseButton Returns Type Description bool Overrides BrushUserToolState<TBrushTarget>.ApplyBrush(int, int2, int, TBrushTarget, int) InitDefaultSettings() Declaration protected override void InitDefaultSettings() Overrides BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.InitDefaultSettings() IsAppliedToEveryCellOnMap(int) Declaration public override bool IsAppliedToEveryCellOnMap(int brushMode) Parameters Type Name Description int brushMode Returns Type Description bool Overrides BrushUserToolState<TBrushTarget>.IsAppliedToEveryCellOnMap(int) LoadSettings() Declaration protected override void LoadSettings() Overrides BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.LoadSettings() ReadCellData(int, TBrushTarget) Declaration protected virtual bool ReadCellData(int cellIndex, TBrushTarget brushTarget) Parameters Type Name Description int cellIndex TBrushTarget brushTarget Returns Type Description bool SaveSettings() Declaration protected override void SaveSettings() Overrides BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.SaveSettings() Implements ISmState Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.PaintWaterBiomesUserToolState.html": {
    "href": "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.PaintWaterBiomesUserToolState.html",
    "title": "Class PaintWaterBiomesUserToolState | Hex Terrains",
    "summary": "Class PaintWaterBiomesUserToolState Inheritance object SmState UserToolState BrushUserToolState<HexWaterData> BrushUserToolState<HexWaterData, UserToolSettingsDataSource> BrushUserToolState<HexWaterData, UserToolSettingsDataSource, UniversalToolSettingsScreen> PaintTerrainUserToolState<HexWaterData> PaintWaterBiomesUserToolState Implements ISmState Inherited Members PaintTerrainUserToolState<HexWaterData>.CellColor PaintTerrainUserToolState<HexWaterData>.ReadPropKey PaintTerrainUserToolState<HexWaterData>.SaveSettings() PaintTerrainUserToolState<HexWaterData>.LoadSettings() PaintTerrainUserToolState<HexWaterData>.ApplyBrush(int, int2, int, HexWaterData, int) PaintTerrainUserToolState<HexWaterData>.ReadCellData(int, HexWaterData) PaintTerrainUserToolState<HexWaterData>.IsAppliedToEveryCellOnMap(int) BrushUserToolState<HexWaterData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.SettingsScreen BrushUserToolState<HexWaterData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.PrepareToRun() BrushUserToolState<HexWaterData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.PrepareToStop() BrushUserToolState<HexWaterData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.GetSettingsScreen() BrushUserToolState<HexWaterData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.UpdateSettingsScreen() BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.DataSource BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.SettingsPlayerPrefsKeyName BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.PrepareToRun() BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.InitSettings() BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.InitDefaultSettings() BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.PrepareToStop() BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.LoadSettings() BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.SaveSettings() BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.SaveSettingsValue<TValue>(string, TValue) BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.LoadSettingsValue<TValue>(string, TValue) BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.TryLoadSettingsValue<TValue>(string, out TValue) BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.LoadSettingsValueOrDefault<TValue>(string, TValue) BrushUserToolState<HexWaterData>.PrevChangeTimeStamp BrushUserToolState<HexWaterData>.TimeTreshold BrushUserToolState<HexWaterData>.CanChangeBrushSize BrushUserToolState<HexWaterData>.AllowRightMouseButton BrushUserToolState<HexWaterData>.CursorColor BrushUserToolState<HexWaterData>.ChangeModeKey BrushUserToolState<HexWaterData>.ChangeBrushSizeKey BrushUserToolState<HexWaterData>.IncreaseBrushSizeKey BrushUserToolState<HexWaterData>.IncreaseBrushSizeKey2 BrushUserToolState<HexWaterData>.DecreaseBrushSizeKey BrushUserToolState<HexWaterData>.DecreaseBrushSizeKey2 BrushUserToolState<HexWaterData>.ChangeOpacityKey BrushUserToolState<HexWaterData>.IsTimeTresholdPassed BrushUserToolState<HexWaterData>.BrushSize BrushUserToolState<HexWaterData>.BrushOpacity BrushUserToolState<HexWaterData>.ChangeOpacityMultiplier BrushUserToolState<HexWaterData>.SetNewTimestamp() BrushUserToolState<HexWaterData>.PrepareToRun() BrushUserToolState<HexWaterData>.PrepareToStop() BrushUserToolState<HexWaterData>.Tick() BrushUserToolState<HexWaterData>.UpdateBrush() BrushUserToolState<HexWaterData>.TryApplyBrush() BrushUserToolState<HexWaterData>.ApplyToSingleCell(int, int2, int, HexWaterData, int) BrushUserToolState<HexWaterData>.ApplyBrushToAllCells(int, HexTerrainSettings, HexWaterData, int) BrushUserToolState<HexWaterData>.ApplyBrushToAllBrushPoints(int, int2, int, HexTerrainSettings, HexWaterData, int) BrushUserToolState<HexWaterData>.CanBeAppliedToManyPoints(int) BrushUserToolState<HexWaterData>.GetBrushTarget() UserToolState.Settings UserToolState.IsSubstatesVisible UserToolState.SubStateMachine UserToolState.UserToolAPI UserToolState.HasSubtools UserToolState.IsChangeViewMode UserToolState.RequiredViewMode UserToolState.OriginalViewMode UserToolState.ShowSettingsScreen<TViewData, TScreen>(TViewData) UserToolState.GetUIScreen<TScreen>() UserToolState.HideSettingsScreen<TScreen>() UserToolState.SetupPlanetCursor(bool, int) UserToolState.SetupPlanetCursor(bool, int, Color32) UserToolState.SetupPlanetCursor(bool, int, Color32, bool) UserToolState.SetupPlanetCursor(bool) UserToolState.TrySetViewMode() UserToolState.TryRestoreViewMode() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States Assembly: fwt.hexterrains.dll Syntax public class PaintWaterBiomesUserToolState : PaintTerrainUserToolState<HexWaterData>, ISmState Constructors PaintWaterBiomesUserToolState(IUserToolAPI) Declaration public PaintWaterBiomesUserToolState(IUserToolAPI userToolAPI) Parameters Type Name Description IUserToolAPI userToolAPI Properties UserToolType Declaration public override int UserToolType { get; } Property Value Type Description int Overrides UserToolState.UserToolType Methods InitDefaultSettings() Declaration protected override void InitDefaultSettings() Overrides PaintTerrainUserToolState<HexWaterData>.InitDefaultSettings() Implements ISmState Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.PointerUserToolState.html": {
    "href": "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.PointerUserToolState.html",
    "title": "Class PointerUserToolState | Hex Terrains",
    "summary": "Class PointerUserToolState Inheritance object SmState UserToolState PointerUserToolState Implements ISmState Inherited Members UserToolState.Settings UserToolState.IsSubstatesVisible UserToolState.SubStateMachine UserToolState.UserToolAPI UserToolState.HasSubtools UserToolState.IsChangeViewMode UserToolState.RequiredViewMode UserToolState.OriginalViewMode UserToolState.PrepareToStop() UserToolState.Tick() UserToolState.ShowSettingsScreen<TViewData, TScreen>(TViewData) UserToolState.GetUIScreen<TScreen>() UserToolState.HideSettingsScreen<TScreen>() UserToolState.SetupPlanetCursor(bool, int) UserToolState.SetupPlanetCursor(bool, int, Color32) UserToolState.SetupPlanetCursor(bool, int, Color32, bool) UserToolState.SetupPlanetCursor(bool) UserToolState.TrySetViewMode() UserToolState.TryRestoreViewMode() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States Assembly: fwt.hexterrains.dll Syntax public class PointerUserToolState : UserToolState, ISmState Constructors PointerUserToolState(IUserToolAPI) Declaration public PointerUserToolState(IUserToolAPI userToolAPI) Parameters Type Name Description IUserToolAPI userToolAPI Properties UserToolType Declaration public override int UserToolType { get; } Property Value Type Description int Overrides UserToolState.UserToolType Methods PrepareToRun() Declaration public override void PrepareToRun() Overrides UserToolState.PrepareToRun() Implements ISmState Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.ResizeTerrainUserToolStateBase-2.html": {
    "href": "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.ResizeTerrainUserToolStateBase-2.html",
    "title": "Class ResizeTerrainUserToolStateBase<TScreen, TCallback> | Hex Terrains",
    "summary": "Class ResizeTerrainUserToolStateBase<TScreen, TCallback> Inheritance object SmState UserToolState ResizeTerrainUserToolStateBase<TScreen, TCallback> ResizeTerrainUserToolState Implements ISmState Inherited Members UserToolState.Settings UserToolState.IsSubstatesVisible UserToolState.SubStateMachine UserToolState.UserToolAPI UserToolState.HasSubtools UserToolState.IsChangeViewMode UserToolState.RequiredViewMode UserToolState.OriginalViewMode UserToolState.Tick() UserToolState.ShowSettingsScreen<TViewData, TScreen>(TViewData) UserToolState.GetUIScreen<TScreen>() UserToolState.HideSettingsScreen<TScreen>() UserToolState.SetupPlanetCursor(bool, int) UserToolState.SetupPlanetCursor(bool, int, Color32) UserToolState.SetupPlanetCursor(bool, int, Color32, bool) UserToolState.SetupPlanetCursor(bool) UserToolState.TrySetViewMode() UserToolState.TryRestoreViewMode() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States Assembly: fwt.hexterrains.dll Syntax public abstract class ResizeTerrainUserToolStateBase<TScreen, TCallback> : UserToolState, ISmState where TScreen : UIScreen, IViewDataReceiver<TCallback> where TCallback : ResizeTerrainCallbackDataSource, new() Type Parameters Name Description TScreen TCallback Constructors ResizeTerrainUserToolStateBase(IUserToolAPI, UserToolStateMachine) Declaration protected ResizeTerrainUserToolStateBase(IUserToolAPI userToolAPI, UserToolStateMachine parentStateMachine) Parameters Type Name Description IUserToolAPI userToolAPI UserToolStateMachine parentStateMachine Fields Screen Declaration protected TScreen Screen Field Value Type Description TScreen Properties CallbackDataSource Declaration protected virtual TCallback CallbackDataSource { get; set; } Property Value Type Description TCallback ParentStateMachine Declaration protected UserToolStateMachine ParentStateMachine { get; set; } Property Value Type Description UserToolStateMachine UserToolType Declaration public override int UserToolType { get; } Property Value Type Description int Overrides UserToolState.UserToolType Methods CancelResizing() Declaration public virtual void CancelResizing() CreateScreenCallback() Declaration protected virtual TCallback CreateScreenCallback() Returns Type Description TCallback GetCallbackDataSource() Declaration protected virtual TCallback GetCallbackDataSource() Returns Type Description TCallback GetUIScreen() Declaration protected virtual TScreen GetUIScreen() Returns Type Description TScreen HideUIScreen() Declaration protected virtual void HideUIScreen() PrepareToRun() Declaration public override void PrepareToRun() Overrides UserToolState.PrepareToRun() PrepareToStop() Declaration public override void PrepareToStop() Overrides UserToolState.PrepareToStop() ResizeTerrain(int2) Declaration public virtual void ResizeTerrain(int2 terrainSize) Parameters Type Name Description int2 terrainSize ShowUIScreen() Declaration protected virtual void ShowUIScreen() Implements ISmState Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.SaveTerrainUserToolStateBase-2.html": {
    "href": "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.SaveTerrainUserToolStateBase-2.html",
    "title": "Class SaveTerrainUserToolStateBase<TScreen, TCallback> | Hex Terrains",
    "summary": "Class SaveTerrainUserToolStateBase<TScreen, TCallback> Inheritance object SmState UserToolState SaveTerrainUserToolStateBase<TScreen, TCallback> SaveTerrainUserToolState Implements ISmState Inherited Members UserToolState.Settings UserToolState.IsSubstatesVisible UserToolState.SubStateMachine UserToolState.UserToolAPI UserToolState.HasSubtools UserToolState.IsChangeViewMode UserToolState.RequiredViewMode UserToolState.OriginalViewMode UserToolState.Tick() UserToolState.ShowSettingsScreen<TViewData, TScreen>(TViewData) UserToolState.GetUIScreen<TScreen>() UserToolState.HideSettingsScreen<TScreen>() UserToolState.SetupPlanetCursor(bool, int) UserToolState.SetupPlanetCursor(bool, int, Color32) UserToolState.SetupPlanetCursor(bool, int, Color32, bool) UserToolState.SetupPlanetCursor(bool) UserToolState.TrySetViewMode() UserToolState.TryRestoreViewMode() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States Assembly: fwt.hexterrains.dll Syntax public abstract class SaveTerrainUserToolStateBase<TScreen, TCallback> : UserToolState, ISmState where TScreen : UIScreen, IViewDataReceiver<TCallback> where TCallback : SaveTerrainCallbackDataSource, new() Type Parameters Name Description TScreen TCallback Constructors SaveTerrainUserToolStateBase(IUserToolAPI, UserToolStateMachine) Declaration protected SaveTerrainUserToolStateBase(IUserToolAPI userToolAPI, UserToolStateMachine parentStateMachine) Parameters Type Name Description IUserToolAPI userToolAPI UserToolStateMachine parentStateMachine Fields Screen Declaration protected TScreen Screen Field Value Type Description TScreen Properties CallbackDataSource Declaration protected virtual TCallback CallbackDataSource { get; set; } Property Value Type Description TCallback ParentStateMachine Declaration protected UserToolStateMachine ParentStateMachine { get; set; } Property Value Type Description UserToolStateMachine UserToolType Declaration public override int UserToolType { get; } Property Value Type Description int Overrides UserToolState.UserToolType Methods CancelLoading() Declaration protected virtual void CancelLoading() CreateScreenCallback() Declaration protected virtual TCallback CreateScreenCallback() Returns Type Description TCallback GetCallbackDataSource() Declaration protected virtual TCallback GetCallbackDataSource() Returns Type Description TCallback GetUIScreen() Declaration protected virtual TScreen GetUIScreen() Returns Type Description TScreen HideUIScreen() Declaration protected virtual void HideUIScreen() PrepareToRun() Declaration public override void PrepareToRun() Overrides UserToolState.PrepareToRun() PrepareToStop() Declaration public override void PrepareToStop() Overrides UserToolState.PrepareToStop() SaveTerrain(string) Declaration public virtual void SaveTerrain(string filePath) Parameters Type Name Description string filePath ShowUIScreen() Declaration protected virtual void ShowUIScreen() Implements ISmState Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.SmoothGroundUserToolState.html": {
    "href": "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.SmoothGroundUserToolState.html",
    "title": "Class SmoothGroundUserToolState | Hex Terrains",
    "summary": "Class SmoothGroundUserToolState Inheritance object SmState UserToolState BrushUserToolState<HexGroundData> BrushUserToolState<HexGroundData, UserToolSettingsDataSource> BrushUserToolState<HexGroundData, UserToolSettingsDataSource, UniversalToolSettingsScreen> SmoothTerrainUserToolState<HexGroundData> SmoothGroundUserToolState Implements ISmState Inherited Members SmoothTerrainUserToolState<HexGroundData>.Strenght SmoothTerrainUserToolState<HexGroundData>.SaveSettings() SmoothTerrainUserToolState<HexGroundData>.LoadSettings() SmoothTerrainUserToolState<HexGroundData>.ApplyBrush(int, int2, int, HexGroundData, int) BrushUserToolState<HexGroundData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.SettingsScreen BrushUserToolState<HexGroundData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.PrepareToRun() BrushUserToolState<HexGroundData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.PrepareToStop() BrushUserToolState<HexGroundData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.GetSettingsScreen() BrushUserToolState<HexGroundData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.UpdateSettingsScreen() BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.DataSource BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.SettingsPlayerPrefsKeyName BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.PrepareToRun() BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.InitSettings() BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.InitDefaultSettings() BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.PrepareToStop() BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.LoadSettings() BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.SaveSettings() BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.SaveSettingsValue<TValue>(string, TValue) BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.LoadSettingsValue<TValue>(string, TValue) BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.TryLoadSettingsValue<TValue>(string, out TValue) BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.LoadSettingsValueOrDefault<TValue>(string, TValue) BrushUserToolState<HexGroundData>.PrevChangeTimeStamp BrushUserToolState<HexGroundData>.TimeTreshold BrushUserToolState<HexGroundData>.CanChangeBrushSize BrushUserToolState<HexGroundData>.AllowRightMouseButton BrushUserToolState<HexGroundData>.CursorColor BrushUserToolState<HexGroundData>.ChangeModeKey BrushUserToolState<HexGroundData>.ChangeBrushSizeKey BrushUserToolState<HexGroundData>.IncreaseBrushSizeKey BrushUserToolState<HexGroundData>.IncreaseBrushSizeKey2 BrushUserToolState<HexGroundData>.DecreaseBrushSizeKey BrushUserToolState<HexGroundData>.DecreaseBrushSizeKey2 BrushUserToolState<HexGroundData>.ChangeOpacityKey BrushUserToolState<HexGroundData>.IsTimeTresholdPassed BrushUserToolState<HexGroundData>.BrushSize BrushUserToolState<HexGroundData>.BrushOpacity BrushUserToolState<HexGroundData>.ChangeOpacityMultiplier BrushUserToolState<HexGroundData>.SetNewTimestamp() BrushUserToolState<HexGroundData>.PrepareToRun() BrushUserToolState<HexGroundData>.PrepareToStop() BrushUserToolState<HexGroundData>.Tick() BrushUserToolState<HexGroundData>.UpdateBrush() BrushUserToolState<HexGroundData>.TryApplyBrush() BrushUserToolState<HexGroundData>.ApplyToSingleCell(int, int2, int, HexGroundData, int) BrushUserToolState<HexGroundData>.ApplyBrushToAllCells(int, HexTerrainSettings, HexGroundData, int) BrushUserToolState<HexGroundData>.ApplyBrushToAllBrushPoints(int, int2, int, HexTerrainSettings, HexGroundData, int) BrushUserToolState<HexGroundData>.CanBeAppliedToManyPoints(int) BrushUserToolState<HexGroundData>.IsAppliedToEveryCellOnMap(int) BrushUserToolState<HexGroundData>.GetBrushTarget() UserToolState.Settings UserToolState.IsSubstatesVisible UserToolState.SubStateMachine UserToolState.UserToolAPI UserToolState.HasSubtools UserToolState.IsChangeViewMode UserToolState.RequiredViewMode UserToolState.OriginalViewMode UserToolState.ShowSettingsScreen<TViewData, TScreen>(TViewData) UserToolState.GetUIScreen<TScreen>() UserToolState.HideSettingsScreen<TScreen>() UserToolState.SetupPlanetCursor(bool, int) UserToolState.SetupPlanetCursor(bool, int, Color32) UserToolState.SetupPlanetCursor(bool, int, Color32, bool) UserToolState.SetupPlanetCursor(bool) UserToolState.TrySetViewMode() UserToolState.TryRestoreViewMode() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States Assembly: fwt.hexterrains.dll Syntax public class SmoothGroundUserToolState : SmoothTerrainUserToolState<HexGroundData>, ISmState Constructors SmoothGroundUserToolState(IUserToolAPI) Declaration public SmoothGroundUserToolState(IUserToolAPI userToolAPI) Parameters Type Name Description IUserToolAPI userToolAPI Properties UserToolType Declaration public override int UserToolType { get; } Property Value Type Description int Overrides UserToolState.UserToolType Methods InitDefaultSettings() Declaration protected override void InitDefaultSettings() Overrides SmoothTerrainUserToolState<HexGroundData>.InitDefaultSettings() Implements ISmState Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.SmoothTerrainUserToolState-1.html": {
    "href": "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.SmoothTerrainUserToolState-1.html",
    "title": "Class SmoothTerrainUserToolState<TBrushTarget> | Hex Terrains",
    "summary": "Class SmoothTerrainUserToolState<TBrushTarget> Inheritance object SmState UserToolState BrushUserToolState<TBrushTarget> BrushUserToolState<TBrushTarget, UserToolSettingsDataSource> BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen> SmoothTerrainUserToolState<TBrushTarget> SmoothGroundUserToolState SmoothWaterUserToolState Implements ISmState Inherited Members BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen>.SettingsScreen BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen>.PrepareToRun() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen>.PrepareToStop() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen>.GetSettingsScreen() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen>.UpdateSettingsScreen() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.DataSource BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.SettingsPlayerPrefsKeyName BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.PrepareToRun() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.InitSettings() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.InitDefaultSettings() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.PrepareToStop() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.LoadSettings() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.SaveSettings() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.SaveSettingsValue<TValue>(string, TValue) BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.LoadSettingsValue<TValue>(string, TValue) BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.TryLoadSettingsValue<TValue>(string, out TValue) BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.LoadSettingsValueOrDefault<TValue>(string, TValue) BrushUserToolState<TBrushTarget>.PrevChangeTimeStamp BrushUserToolState<TBrushTarget>.TimeTreshold BrushUserToolState<TBrushTarget>.CanChangeBrushSize BrushUserToolState<TBrushTarget>.AllowRightMouseButton BrushUserToolState<TBrushTarget>.CursorColor BrushUserToolState<TBrushTarget>.ChangeModeKey BrushUserToolState<TBrushTarget>.ChangeBrushSizeKey BrushUserToolState<TBrushTarget>.IncreaseBrushSizeKey BrushUserToolState<TBrushTarget>.IncreaseBrushSizeKey2 BrushUserToolState<TBrushTarget>.DecreaseBrushSizeKey BrushUserToolState<TBrushTarget>.DecreaseBrushSizeKey2 BrushUserToolState<TBrushTarget>.ChangeOpacityKey BrushUserToolState<TBrushTarget>.IsTimeTresholdPassed BrushUserToolState<TBrushTarget>.BrushSize BrushUserToolState<TBrushTarget>.BrushOpacity BrushUserToolState<TBrushTarget>.ChangeOpacityMultiplier BrushUserToolState<TBrushTarget>.SetNewTimestamp() BrushUserToolState<TBrushTarget>.PrepareToRun() BrushUserToolState<TBrushTarget>.PrepareToStop() BrushUserToolState<TBrushTarget>.Tick() BrushUserToolState<TBrushTarget>.UpdateBrush() BrushUserToolState<TBrushTarget>.TryApplyBrush() BrushUserToolState<TBrushTarget>.ApplyToSingleCell(int, int2, int, TBrushTarget, int) BrushUserToolState<TBrushTarget>.ApplyBrushToAllCells(int, HexTerrainSettings, TBrushTarget, int) BrushUserToolState<TBrushTarget>.ApplyBrushToAllBrushPoints(int, int2, int, HexTerrainSettings, TBrushTarget, int) BrushUserToolState<TBrushTarget>.CanBeAppliedToManyPoints(int) BrushUserToolState<TBrushTarget>.IsAppliedToEveryCellOnMap(int) BrushUserToolState<TBrushTarget>.GetBrushTarget() UserToolState.Settings UserToolState.IsSubstatesVisible UserToolState.SubStateMachine UserToolState.UserToolType UserToolState.UserToolAPI UserToolState.HasSubtools UserToolState.IsChangeViewMode UserToolState.RequiredViewMode UserToolState.OriginalViewMode UserToolState.ShowSettingsScreen<TViewData, TScreen>(TViewData) UserToolState.GetUIScreen<TScreen>() UserToolState.HideSettingsScreen<TScreen>() UserToolState.SetupPlanetCursor(bool, int) UserToolState.SetupPlanetCursor(bool, int, Color32) UserToolState.SetupPlanetCursor(bool, int, Color32, bool) UserToolState.SetupPlanetCursor(bool) UserToolState.TrySetViewMode() UserToolState.TryRestoreViewMode() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States Assembly: fwt.hexterrains.dll Syntax public abstract class SmoothTerrainUserToolState<TBrushTarget> : BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen>, ISmState where TBrushTarget : HexSurfaceData Type Parameters Name Description TBrushTarget Constructors SmoothTerrainUserToolState(IUserToolAPI) Declaration protected SmoothTerrainUserToolState(IUserToolAPI userToolAPI) Parameters Type Name Description IUserToolAPI userToolAPI Properties Strenght Declaration public float Strenght { get; set; } Property Value Type Description float Methods ApplyBrush(int, int2, int, TBrushTarget, int) Applies brush to the brushView. Returns true if changes were applied Declaration public override bool ApplyBrush(int brushMode, int2 cellCoord, int cellIndex, TBrushTarget brushTarget, int mouseButton) Parameters Type Name Description int brushMode int2 cellCoord int cellIndex TBrushTarget brushTarget int mouseButton Returns Type Description bool Overrides BrushUserToolState<TBrushTarget>.ApplyBrush(int, int2, int, TBrushTarget, int) InitDefaultSettings() Declaration protected override void InitDefaultSettings() Overrides BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.InitDefaultSettings() LoadSettings() Declaration protected override void LoadSettings() Overrides BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.LoadSettings() SaveSettings() Declaration protected override void SaveSettings() Overrides BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.SaveSettings() Implements ISmState Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.SmoothWaterUserToolState.html": {
    "href": "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.SmoothWaterUserToolState.html",
    "title": "Class SmoothWaterUserToolState | Hex Terrains",
    "summary": "Class SmoothWaterUserToolState Inheritance object SmState UserToolState BrushUserToolState<HexWaterData> BrushUserToolState<HexWaterData, UserToolSettingsDataSource> BrushUserToolState<HexWaterData, UserToolSettingsDataSource, UniversalToolSettingsScreen> SmoothTerrainUserToolState<HexWaterData> SmoothWaterUserToolState Implements ISmState Inherited Members SmoothTerrainUserToolState<HexWaterData>.Strenght SmoothTerrainUserToolState<HexWaterData>.SaveSettings() SmoothTerrainUserToolState<HexWaterData>.LoadSettings() SmoothTerrainUserToolState<HexWaterData>.ApplyBrush(int, int2, int, HexWaterData, int) BrushUserToolState<HexWaterData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.SettingsScreen BrushUserToolState<HexWaterData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.PrepareToRun() BrushUserToolState<HexWaterData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.PrepareToStop() BrushUserToolState<HexWaterData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.GetSettingsScreen() BrushUserToolState<HexWaterData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.UpdateSettingsScreen() BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.DataSource BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.SettingsPlayerPrefsKeyName BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.PrepareToRun() BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.InitSettings() BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.InitDefaultSettings() BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.PrepareToStop() BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.LoadSettings() BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.SaveSettings() BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.SaveSettingsValue<TValue>(string, TValue) BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.LoadSettingsValue<TValue>(string, TValue) BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.TryLoadSettingsValue<TValue>(string, out TValue) BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.LoadSettingsValueOrDefault<TValue>(string, TValue) BrushUserToolState<HexWaterData>.PrevChangeTimeStamp BrushUserToolState<HexWaterData>.TimeTreshold BrushUserToolState<HexWaterData>.CanChangeBrushSize BrushUserToolState<HexWaterData>.AllowRightMouseButton BrushUserToolState<HexWaterData>.CursorColor BrushUserToolState<HexWaterData>.ChangeModeKey BrushUserToolState<HexWaterData>.ChangeBrushSizeKey BrushUserToolState<HexWaterData>.IncreaseBrushSizeKey BrushUserToolState<HexWaterData>.IncreaseBrushSizeKey2 BrushUserToolState<HexWaterData>.DecreaseBrushSizeKey BrushUserToolState<HexWaterData>.DecreaseBrushSizeKey2 BrushUserToolState<HexWaterData>.ChangeOpacityKey BrushUserToolState<HexWaterData>.IsTimeTresholdPassed BrushUserToolState<HexWaterData>.BrushSize BrushUserToolState<HexWaterData>.BrushOpacity BrushUserToolState<HexWaterData>.ChangeOpacityMultiplier BrushUserToolState<HexWaterData>.SetNewTimestamp() BrushUserToolState<HexWaterData>.PrepareToRun() BrushUserToolState<HexWaterData>.PrepareToStop() BrushUserToolState<HexWaterData>.Tick() BrushUserToolState<HexWaterData>.UpdateBrush() BrushUserToolState<HexWaterData>.TryApplyBrush() BrushUserToolState<HexWaterData>.ApplyToSingleCell(int, int2, int, HexWaterData, int) BrushUserToolState<HexWaterData>.ApplyBrushToAllCells(int, HexTerrainSettings, HexWaterData, int) BrushUserToolState<HexWaterData>.ApplyBrushToAllBrushPoints(int, int2, int, HexTerrainSettings, HexWaterData, int) BrushUserToolState<HexWaterData>.CanBeAppliedToManyPoints(int) BrushUserToolState<HexWaterData>.IsAppliedToEveryCellOnMap(int) BrushUserToolState<HexWaterData>.GetBrushTarget() UserToolState.Settings UserToolState.IsSubstatesVisible UserToolState.SubStateMachine UserToolState.UserToolAPI UserToolState.HasSubtools UserToolState.IsChangeViewMode UserToolState.RequiredViewMode UserToolState.OriginalViewMode UserToolState.ShowSettingsScreen<TViewData, TScreen>(TViewData) UserToolState.GetUIScreen<TScreen>() UserToolState.HideSettingsScreen<TScreen>() UserToolState.SetupPlanetCursor(bool, int) UserToolState.SetupPlanetCursor(bool, int, Color32) UserToolState.SetupPlanetCursor(bool, int, Color32, bool) UserToolState.SetupPlanetCursor(bool) UserToolState.TrySetViewMode() UserToolState.TryRestoreViewMode() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States Assembly: fwt.hexterrains.dll Syntax public class SmoothWaterUserToolState : SmoothTerrainUserToolState<HexWaterData>, ISmState Constructors SmoothWaterUserToolState(IUserToolAPI) Declaration public SmoothWaterUserToolState(IUserToolAPI userToolAPI) Parameters Type Name Description IUserToolAPI userToolAPI Properties UserToolType Declaration public override int UserToolType { get; } Property Value Type Description int Overrides UserToolState.UserToolType Methods InitDefaultSettings() Declaration protected override void InitDefaultSettings() Overrides SmoothTerrainUserToolState<HexWaterData>.InitDefaultSettings() Implements ISmState Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.StampAreaUserToolStateBase-1.html": {
    "href": "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.StampAreaUserToolStateBase-1.html",
    "title": "Class StampAreaUserToolStateBase<TBrushTarget> | Hex Terrains",
    "summary": "Class StampAreaUserToolStateBase<TBrushTarget> Inheritance object SmState UserToolState BrushUserToolState<TBrushTarget> BrushUserToolState<TBrushTarget, UserToolSettingsDataSource> BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen> StampUserToolStateBase<TBrushTarget, byte> StampAreaUserToolStateBase<TBrushTarget> StampCountriesUserToolState StampProvincesUserToolState Implements ISmState Inherited Members StampUserToolStateBase<TBrushTarget, byte>.OriginXCoord StampUserToolStateBase<TBrushTarget, byte>.OriginYCoord StampUserToolStateBase<TBrushTarget, byte>.OriginCoordinate StampUserToolStateBase<TBrushTarget, byte>.OriginCellIndex StampUserToolStateBase<TBrushTarget, byte>.ReadCellKey StampUserToolStateBase<TBrushTarget, byte>.StartPaintCellCoord StampUserToolStateBase<TBrushTarget, byte>.PrepareToRun() StampUserToolStateBase<TBrushTarget, byte>.InitDefaultSettings() StampUserToolStateBase<TBrushTarget, byte>.UpdateBrush() StampUserToolStateBase<TBrushTarget, byte>.ApplyBrush(int, int2, int, TBrushTarget, int) StampUserToolStateBase<TBrushTarget, byte>.ReadOriginCellData(int, out byte) StampUserToolStateBase<TBrushTarget, byte>.SetCellDataToTarget(int, byte) BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen>.SettingsScreen BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen>.PrepareToRun() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen>.PrepareToStop() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen>.GetSettingsScreen() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen>.UpdateSettingsScreen() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.DataSource BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.SettingsPlayerPrefsKeyName BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.PrepareToRun() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.InitSettings() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.InitDefaultSettings() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.PrepareToStop() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.LoadSettings() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.SaveSettings() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.SaveSettingsValue<TValue>(string, TValue) BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.LoadSettingsValue<TValue>(string, TValue) BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.TryLoadSettingsValue<TValue>(string, out TValue) BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.LoadSettingsValueOrDefault<TValue>(string, TValue) BrushUserToolState<TBrushTarget>.PrevChangeTimeStamp BrushUserToolState<TBrushTarget>.TimeTreshold BrushUserToolState<TBrushTarget>.CanChangeBrushSize BrushUserToolState<TBrushTarget>.AllowRightMouseButton BrushUserToolState<TBrushTarget>.CursorColor BrushUserToolState<TBrushTarget>.ChangeModeKey BrushUserToolState<TBrushTarget>.ChangeBrushSizeKey BrushUserToolState<TBrushTarget>.IncreaseBrushSizeKey BrushUserToolState<TBrushTarget>.IncreaseBrushSizeKey2 BrushUserToolState<TBrushTarget>.DecreaseBrushSizeKey BrushUserToolState<TBrushTarget>.DecreaseBrushSizeKey2 BrushUserToolState<TBrushTarget>.ChangeOpacityKey BrushUserToolState<TBrushTarget>.IsTimeTresholdPassed BrushUserToolState<TBrushTarget>.BrushSize BrushUserToolState<TBrushTarget>.BrushOpacity BrushUserToolState<TBrushTarget>.ChangeOpacityMultiplier BrushUserToolState<TBrushTarget>.SetNewTimestamp() BrushUserToolState<TBrushTarget>.PrepareToRun() BrushUserToolState<TBrushTarget>.PrepareToStop() BrushUserToolState<TBrushTarget>.Tick() BrushUserToolState<TBrushTarget>.UpdateBrush() BrushUserToolState<TBrushTarget>.TryApplyBrush() BrushUserToolState<TBrushTarget>.ApplyToSingleCell(int, int2, int, TBrushTarget, int) BrushUserToolState<TBrushTarget>.ApplyBrushToAllCells(int, HexTerrainSettings, TBrushTarget, int) BrushUserToolState<TBrushTarget>.ApplyBrushToAllBrushPoints(int, int2, int, HexTerrainSettings, TBrushTarget, int) BrushUserToolState<TBrushTarget>.ApplyBrush(int, int2, int, TBrushTarget, int) BrushUserToolState<TBrushTarget>.CanBeAppliedToManyPoints(int) BrushUserToolState<TBrushTarget>.IsAppliedToEveryCellOnMap(int) BrushUserToolState<TBrushTarget>.GetBrushTarget() UserToolState.Settings UserToolState.IsSubstatesVisible UserToolState.SubStateMachine UserToolState.UserToolType UserToolState.UserToolAPI UserToolState.HasSubtools UserToolState.IsChangeViewMode UserToolState.RequiredViewMode UserToolState.OriginalViewMode UserToolState.ShowSettingsScreen<TViewData, TScreen>(TViewData) UserToolState.GetUIScreen<TScreen>() UserToolState.HideSettingsScreen<TScreen>() UserToolState.SetupPlanetCursor(bool, int) UserToolState.SetupPlanetCursor(bool, int, Color32) UserToolState.SetupPlanetCursor(bool, int, Color32, bool) UserToolState.SetupPlanetCursor(bool) UserToolState.TrySetViewMode() UserToolState.TryRestoreViewMode() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States Assembly: fwt.hexterrains.dll Syntax public abstract class StampAreaUserToolStateBase<TBrushTarget> : StampUserToolStateBase<TBrushTarget, byte>, ISmState where TBrushTarget : HexTerrainAreasData Type Parameters Name Description TBrushTarget Constructors StampAreaUserToolStateBase(IUserToolAPI) Declaration protected StampAreaUserToolStateBase(IUserToolAPI userToolAPI) Parameters Type Name Description IUserToolAPI userToolAPI Methods ReadOriginCellData(int, out byte) Declaration public override bool ReadOriginCellData(int cellIndex, out byte cellData) Parameters Type Name Description int cellIndex byte cellData Returns Type Description bool Overrides StampUserToolStateBase<TBrushTarget, byte>.ReadOriginCellData(int, out byte) SetCellDataToTarget(int, byte) Declaration public override bool SetCellDataToTarget(int cellIndex, byte cellData) Parameters Type Name Description int cellIndex byte cellData Returns Type Description bool Overrides StampUserToolStateBase<TBrushTarget, byte>.SetCellDataToTarget(int, byte) Implements ISmState Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.StampCellEntitiesUserToolStateBase-1.html": {
    "href": "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.StampCellEntitiesUserToolStateBase-1.html",
    "title": "Class StampCellEntitiesUserToolStateBase<TBrushTarget> | Hex Terrains",
    "summary": "Class StampCellEntitiesUserToolStateBase<TBrushTarget> Inheritance object SmState UserToolState BrushUserToolState<TBrushTarget> BrushUserToolState<TBrushTarget, UserToolSettingsDataSource> BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen> StampUserToolStateBase<TBrushTarget, CellEntity> StampCellEntitiesUserToolStateBase<TBrushTarget> StampCellEntityPropsUserToolState Implements ISmState Inherited Members StampUserToolStateBase<TBrushTarget, CellEntity>.OriginXCoord StampUserToolStateBase<TBrushTarget, CellEntity>.OriginYCoord StampUserToolStateBase<TBrushTarget, CellEntity>.OriginCoordinate StampUserToolStateBase<TBrushTarget, CellEntity>.OriginCellIndex StampUserToolStateBase<TBrushTarget, CellEntity>.ReadCellKey StampUserToolStateBase<TBrushTarget, CellEntity>.StartPaintCellCoord StampUserToolStateBase<TBrushTarget, CellEntity>.PrepareToRun() StampUserToolStateBase<TBrushTarget, CellEntity>.InitDefaultSettings() StampUserToolStateBase<TBrushTarget, CellEntity>.UpdateBrush() StampUserToolStateBase<TBrushTarget, CellEntity>.ApplyBrush(int, int2, int, TBrushTarget, int) StampUserToolStateBase<TBrushTarget, CellEntity>.ReadOriginCellData(int, out CellEntity) StampUserToolStateBase<TBrushTarget, CellEntity>.SetCellDataToTarget(int, CellEntity) BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen>.SettingsScreen BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen>.PrepareToRun() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen>.PrepareToStop() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen>.GetSettingsScreen() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen>.UpdateSettingsScreen() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.DataSource BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.SettingsPlayerPrefsKeyName BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.PrepareToRun() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.InitSettings() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.InitDefaultSettings() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.PrepareToStop() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.LoadSettings() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.SaveSettings() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.SaveSettingsValue<TValue>(string, TValue) BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.LoadSettingsValue<TValue>(string, TValue) BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.TryLoadSettingsValue<TValue>(string, out TValue) BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.LoadSettingsValueOrDefault<TValue>(string, TValue) BrushUserToolState<TBrushTarget>.PrevChangeTimeStamp BrushUserToolState<TBrushTarget>.TimeTreshold BrushUserToolState<TBrushTarget>.CanChangeBrushSize BrushUserToolState<TBrushTarget>.AllowRightMouseButton BrushUserToolState<TBrushTarget>.CursorColor BrushUserToolState<TBrushTarget>.ChangeModeKey BrushUserToolState<TBrushTarget>.ChangeBrushSizeKey BrushUserToolState<TBrushTarget>.IncreaseBrushSizeKey BrushUserToolState<TBrushTarget>.IncreaseBrushSizeKey2 BrushUserToolState<TBrushTarget>.DecreaseBrushSizeKey BrushUserToolState<TBrushTarget>.DecreaseBrushSizeKey2 BrushUserToolState<TBrushTarget>.ChangeOpacityKey BrushUserToolState<TBrushTarget>.IsTimeTresholdPassed BrushUserToolState<TBrushTarget>.BrushSize BrushUserToolState<TBrushTarget>.BrushOpacity BrushUserToolState<TBrushTarget>.ChangeOpacityMultiplier BrushUserToolState<TBrushTarget>.SetNewTimestamp() BrushUserToolState<TBrushTarget>.PrepareToRun() BrushUserToolState<TBrushTarget>.PrepareToStop() BrushUserToolState<TBrushTarget>.Tick() BrushUserToolState<TBrushTarget>.UpdateBrush() BrushUserToolState<TBrushTarget>.TryApplyBrush() BrushUserToolState<TBrushTarget>.ApplyToSingleCell(int, int2, int, TBrushTarget, int) BrushUserToolState<TBrushTarget>.ApplyBrushToAllCells(int, HexTerrainSettings, TBrushTarget, int) BrushUserToolState<TBrushTarget>.ApplyBrushToAllBrushPoints(int, int2, int, HexTerrainSettings, TBrushTarget, int) BrushUserToolState<TBrushTarget>.ApplyBrush(int, int2, int, TBrushTarget, int) BrushUserToolState<TBrushTarget>.CanBeAppliedToManyPoints(int) BrushUserToolState<TBrushTarget>.IsAppliedToEveryCellOnMap(int) BrushUserToolState<TBrushTarget>.GetBrushTarget() UserToolState.Settings UserToolState.IsSubstatesVisible UserToolState.SubStateMachine UserToolState.UserToolType UserToolState.UserToolAPI UserToolState.HasSubtools UserToolState.IsChangeViewMode UserToolState.RequiredViewMode UserToolState.OriginalViewMode UserToolState.ShowSettingsScreen<TViewData, TScreen>(TViewData) UserToolState.GetUIScreen<TScreen>() UserToolState.HideSettingsScreen<TScreen>() UserToolState.SetupPlanetCursor(bool, int) UserToolState.SetupPlanetCursor(bool, int, Color32) UserToolState.SetupPlanetCursor(bool, int, Color32, bool) UserToolState.SetupPlanetCursor(bool) UserToolState.TrySetViewMode() UserToolState.TryRestoreViewMode() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States Assembly: fwt.hexterrains.dll Syntax public abstract class StampCellEntitiesUserToolStateBase<TBrushTarget> : StampUserToolStateBase<TBrushTarget, CellEntity>, ISmState where TBrushTarget : CellEntitiesData Type Parameters Name Description TBrushTarget Constructors StampCellEntitiesUserToolStateBase(IUserToolAPI) Declaration protected StampCellEntitiesUserToolStateBase(IUserToolAPI userToolAPI) Parameters Type Name Description IUserToolAPI userToolAPI Methods ReadOriginCellData(int, out CellEntity) Declaration public override bool ReadOriginCellData(int cellIndex, out CellEntity cellData) Parameters Type Name Description int cellIndex CellEntity cellData Returns Type Description bool Overrides StampUserToolStateBase<TBrushTarget, CellEntity>.ReadOriginCellData(int, out CellEntity) SetCellDataToTarget(int, CellEntity) Declaration public override bool SetCellDataToTarget(int cellIndex, CellEntity cellData) Parameters Type Name Description int cellIndex CellEntity cellData Returns Type Description bool Overrides StampUserToolStateBase<TBrushTarget, CellEntity>.SetCellDataToTarget(int, CellEntity) Implements ISmState Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.StampCellEntityPropsUserToolState.html": {
    "href": "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.StampCellEntityPropsUserToolState.html",
    "title": "Class StampCellEntityPropsUserToolState | Hex Terrains",
    "summary": "Class StampCellEntityPropsUserToolState Inheritance object SmState UserToolState BrushUserToolState<CellEntityPropsData> BrushUserToolState<CellEntityPropsData, UserToolSettingsDataSource> BrushUserToolState<CellEntityPropsData, UserToolSettingsDataSource, UniversalToolSettingsScreen> StampUserToolStateBase<CellEntityPropsData, CellEntity> StampCellEntitiesUserToolStateBase<CellEntityPropsData> StampCellEntityPropsUserToolState Implements ISmState Inherited Members StampCellEntitiesUserToolStateBase<CellEntityPropsData>.ReadOriginCellData(int, out CellEntity) StampCellEntitiesUserToolStateBase<CellEntityPropsData>.SetCellDataToTarget(int, CellEntity) StampUserToolStateBase<CellEntityPropsData, CellEntity>.OriginXCoord StampUserToolStateBase<CellEntityPropsData, CellEntity>.OriginYCoord StampUserToolStateBase<CellEntityPropsData, CellEntity>.OriginCoordinate StampUserToolStateBase<CellEntityPropsData, CellEntity>.OriginCellIndex StampUserToolStateBase<CellEntityPropsData, CellEntity>.ReadCellKey StampUserToolStateBase<CellEntityPropsData, CellEntity>.StartPaintCellCoord StampUserToolStateBase<CellEntityPropsData, CellEntity>.PrepareToRun() StampUserToolStateBase<CellEntityPropsData, CellEntity>.InitDefaultSettings() StampUserToolStateBase<CellEntityPropsData, CellEntity>.UpdateBrush() StampUserToolStateBase<CellEntityPropsData, CellEntity>.ApplyBrush(int, int2, int, CellEntityPropsData, int) StampUserToolStateBase<CellEntityPropsData, CellEntity>.ReadOriginCellData(int, out CellEntity) StampUserToolStateBase<CellEntityPropsData, CellEntity>.SetCellDataToTarget(int, CellEntity) BrushUserToolState<CellEntityPropsData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.SettingsScreen BrushUserToolState<CellEntityPropsData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.PrepareToRun() BrushUserToolState<CellEntityPropsData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.PrepareToStop() BrushUserToolState<CellEntityPropsData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.GetSettingsScreen() BrushUserToolState<CellEntityPropsData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.UpdateSettingsScreen() BrushUserToolState<CellEntityPropsData, UserToolSettingsDataSource>.DataSource BrushUserToolState<CellEntityPropsData, UserToolSettingsDataSource>.SettingsPlayerPrefsKeyName BrushUserToolState<CellEntityPropsData, UserToolSettingsDataSource>.PrepareToRun() BrushUserToolState<CellEntityPropsData, UserToolSettingsDataSource>.InitSettings() BrushUserToolState<CellEntityPropsData, UserToolSettingsDataSource>.InitDefaultSettings() BrushUserToolState<CellEntityPropsData, UserToolSettingsDataSource>.PrepareToStop() BrushUserToolState<CellEntityPropsData, UserToolSettingsDataSource>.LoadSettings() BrushUserToolState<CellEntityPropsData, UserToolSettingsDataSource>.SaveSettings() BrushUserToolState<CellEntityPropsData, UserToolSettingsDataSource>.SaveSettingsValue<TValue>(string, TValue) BrushUserToolState<CellEntityPropsData, UserToolSettingsDataSource>.LoadSettingsValue<TValue>(string, TValue) BrushUserToolState<CellEntityPropsData, UserToolSettingsDataSource>.TryLoadSettingsValue<TValue>(string, out TValue) BrushUserToolState<CellEntityPropsData, UserToolSettingsDataSource>.LoadSettingsValueOrDefault<TValue>(string, TValue) BrushUserToolState<CellEntityPropsData>.PrevChangeTimeStamp BrushUserToolState<CellEntityPropsData>.TimeTreshold BrushUserToolState<CellEntityPropsData>.CanChangeBrushSize BrushUserToolState<CellEntityPropsData>.AllowRightMouseButton BrushUserToolState<CellEntityPropsData>.CursorColor BrushUserToolState<CellEntityPropsData>.ChangeModeKey BrushUserToolState<CellEntityPropsData>.ChangeBrushSizeKey BrushUserToolState<CellEntityPropsData>.IncreaseBrushSizeKey BrushUserToolState<CellEntityPropsData>.IncreaseBrushSizeKey2 BrushUserToolState<CellEntityPropsData>.DecreaseBrushSizeKey BrushUserToolState<CellEntityPropsData>.DecreaseBrushSizeKey2 BrushUserToolState<CellEntityPropsData>.ChangeOpacityKey BrushUserToolState<CellEntityPropsData>.IsTimeTresholdPassed BrushUserToolState<CellEntityPropsData>.BrushSize BrushUserToolState<CellEntityPropsData>.BrushOpacity BrushUserToolState<CellEntityPropsData>.ChangeOpacityMultiplier BrushUserToolState<CellEntityPropsData>.SetNewTimestamp() BrushUserToolState<CellEntityPropsData>.PrepareToRun() BrushUserToolState<CellEntityPropsData>.PrepareToStop() BrushUserToolState<CellEntityPropsData>.Tick() BrushUserToolState<CellEntityPropsData>.UpdateBrush() BrushUserToolState<CellEntityPropsData>.TryApplyBrush() BrushUserToolState<CellEntityPropsData>.ApplyToSingleCell(int, int2, int, CellEntityPropsData, int) BrushUserToolState<CellEntityPropsData>.ApplyBrushToAllCells(int, HexTerrainSettings, CellEntityPropsData, int) BrushUserToolState<CellEntityPropsData>.ApplyBrushToAllBrushPoints(int, int2, int, HexTerrainSettings, CellEntityPropsData, int) BrushUserToolState<CellEntityPropsData>.ApplyBrush(int, int2, int, CellEntityPropsData, int) BrushUserToolState<CellEntityPropsData>.CanBeAppliedToManyPoints(int) BrushUserToolState<CellEntityPropsData>.IsAppliedToEveryCellOnMap(int) BrushUserToolState<CellEntityPropsData>.GetBrushTarget() UserToolState.Settings UserToolState.IsSubstatesVisible UserToolState.SubStateMachine UserToolState.UserToolAPI UserToolState.HasSubtools UserToolState.IsChangeViewMode UserToolState.RequiredViewMode UserToolState.OriginalViewMode UserToolState.ShowSettingsScreen<TViewData, TScreen>(TViewData) UserToolState.GetUIScreen<TScreen>() UserToolState.HideSettingsScreen<TScreen>() UserToolState.SetupPlanetCursor(bool, int) UserToolState.SetupPlanetCursor(bool, int, Color32) UserToolState.SetupPlanetCursor(bool, int, Color32, bool) UserToolState.SetupPlanetCursor(bool) UserToolState.TrySetViewMode() UserToolState.TryRestoreViewMode() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States Assembly: fwt.hexterrains.dll Syntax public class StampCellEntityPropsUserToolState : StampCellEntitiesUserToolStateBase<CellEntityPropsData>, ISmState Constructors StampCellEntityPropsUserToolState(IUserToolAPI) Declaration public StampCellEntityPropsUserToolState(IUserToolAPI userToolAPI) Parameters Type Name Description IUserToolAPI userToolAPI Properties UserToolType Declaration public override int UserToolType { get; } Property Value Type Description int Overrides UserToolState.UserToolType Methods InitDefaultSettings() Declaration protected override void InitDefaultSettings() Overrides StampUserToolStateBase<CellEntityPropsData, CellEntity>.InitDefaultSettings() Implements ISmState Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.StampCellItemPropsUserToolState.html": {
    "href": "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.StampCellItemPropsUserToolState.html",
    "title": "Class StampCellItemPropsUserToolState | Hex Terrains",
    "summary": "Class StampCellItemPropsUserToolState Inheritance object SmState UserToolState BrushUserToolState<CellItemPropsData> BrushUserToolState<CellItemPropsData, UserToolSettingsDataSource> BrushUserToolState<CellItemPropsData, UserToolSettingsDataSource, UniversalToolSettingsScreen> StampUserToolStateBase<CellItemPropsData, CellItem> StampCellItemsToolStateBase<CellItemPropsData> StampCellItemPropsUserToolState Implements ISmState Inherited Members StampCellItemsToolStateBase<CellItemPropsData>.ReadOriginCellData(int, out CellItem) StampCellItemsToolStateBase<CellItemPropsData>.SetCellDataToTarget(int, CellItem) StampUserToolStateBase<CellItemPropsData, CellItem>.OriginXCoord StampUserToolStateBase<CellItemPropsData, CellItem>.OriginYCoord StampUserToolStateBase<CellItemPropsData, CellItem>.OriginCoordinate StampUserToolStateBase<CellItemPropsData, CellItem>.OriginCellIndex StampUserToolStateBase<CellItemPropsData, CellItem>.ReadCellKey StampUserToolStateBase<CellItemPropsData, CellItem>.StartPaintCellCoord StampUserToolStateBase<CellItemPropsData, CellItem>.PrepareToRun() StampUserToolStateBase<CellItemPropsData, CellItem>.InitDefaultSettings() StampUserToolStateBase<CellItemPropsData, CellItem>.UpdateBrush() StampUserToolStateBase<CellItemPropsData, CellItem>.ApplyBrush(int, int2, int, CellItemPropsData, int) StampUserToolStateBase<CellItemPropsData, CellItem>.ReadOriginCellData(int, out CellItem) StampUserToolStateBase<CellItemPropsData, CellItem>.SetCellDataToTarget(int, CellItem) BrushUserToolState<CellItemPropsData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.SettingsScreen BrushUserToolState<CellItemPropsData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.PrepareToRun() BrushUserToolState<CellItemPropsData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.PrepareToStop() BrushUserToolState<CellItemPropsData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.GetSettingsScreen() BrushUserToolState<CellItemPropsData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.UpdateSettingsScreen() BrushUserToolState<CellItemPropsData, UserToolSettingsDataSource>.DataSource BrushUserToolState<CellItemPropsData, UserToolSettingsDataSource>.SettingsPlayerPrefsKeyName BrushUserToolState<CellItemPropsData, UserToolSettingsDataSource>.PrepareToRun() BrushUserToolState<CellItemPropsData, UserToolSettingsDataSource>.InitSettings() BrushUserToolState<CellItemPropsData, UserToolSettingsDataSource>.InitDefaultSettings() BrushUserToolState<CellItemPropsData, UserToolSettingsDataSource>.PrepareToStop() BrushUserToolState<CellItemPropsData, UserToolSettingsDataSource>.LoadSettings() BrushUserToolState<CellItemPropsData, UserToolSettingsDataSource>.SaveSettings() BrushUserToolState<CellItemPropsData, UserToolSettingsDataSource>.SaveSettingsValue<TValue>(string, TValue) BrushUserToolState<CellItemPropsData, UserToolSettingsDataSource>.LoadSettingsValue<TValue>(string, TValue) BrushUserToolState<CellItemPropsData, UserToolSettingsDataSource>.TryLoadSettingsValue<TValue>(string, out TValue) BrushUserToolState<CellItemPropsData, UserToolSettingsDataSource>.LoadSettingsValueOrDefault<TValue>(string, TValue) BrushUserToolState<CellItemPropsData>.PrevChangeTimeStamp BrushUserToolState<CellItemPropsData>.TimeTreshold BrushUserToolState<CellItemPropsData>.CanChangeBrushSize BrushUserToolState<CellItemPropsData>.AllowRightMouseButton BrushUserToolState<CellItemPropsData>.CursorColor BrushUserToolState<CellItemPropsData>.ChangeModeKey BrushUserToolState<CellItemPropsData>.ChangeBrushSizeKey BrushUserToolState<CellItemPropsData>.IncreaseBrushSizeKey BrushUserToolState<CellItemPropsData>.IncreaseBrushSizeKey2 BrushUserToolState<CellItemPropsData>.DecreaseBrushSizeKey BrushUserToolState<CellItemPropsData>.DecreaseBrushSizeKey2 BrushUserToolState<CellItemPropsData>.ChangeOpacityKey BrushUserToolState<CellItemPropsData>.IsTimeTresholdPassed BrushUserToolState<CellItemPropsData>.BrushSize BrushUserToolState<CellItemPropsData>.BrushOpacity BrushUserToolState<CellItemPropsData>.ChangeOpacityMultiplier BrushUserToolState<CellItemPropsData>.SetNewTimestamp() BrushUserToolState<CellItemPropsData>.PrepareToRun() BrushUserToolState<CellItemPropsData>.PrepareToStop() BrushUserToolState<CellItemPropsData>.Tick() BrushUserToolState<CellItemPropsData>.UpdateBrush() BrushUserToolState<CellItemPropsData>.TryApplyBrush() BrushUserToolState<CellItemPropsData>.ApplyToSingleCell(int, int2, int, CellItemPropsData, int) BrushUserToolState<CellItemPropsData>.ApplyBrushToAllCells(int, HexTerrainSettings, CellItemPropsData, int) BrushUserToolState<CellItemPropsData>.ApplyBrushToAllBrushPoints(int, int2, int, HexTerrainSettings, CellItemPropsData, int) BrushUserToolState<CellItemPropsData>.ApplyBrush(int, int2, int, CellItemPropsData, int) BrushUserToolState<CellItemPropsData>.CanBeAppliedToManyPoints(int) BrushUserToolState<CellItemPropsData>.IsAppliedToEveryCellOnMap(int) BrushUserToolState<CellItemPropsData>.GetBrushTarget() UserToolState.Settings UserToolState.IsSubstatesVisible UserToolState.SubStateMachine UserToolState.UserToolAPI UserToolState.HasSubtools UserToolState.IsChangeViewMode UserToolState.RequiredViewMode UserToolState.OriginalViewMode UserToolState.ShowSettingsScreen<TViewData, TScreen>(TViewData) UserToolState.GetUIScreen<TScreen>() UserToolState.HideSettingsScreen<TScreen>() UserToolState.SetupPlanetCursor(bool, int) UserToolState.SetupPlanetCursor(bool, int, Color32) UserToolState.SetupPlanetCursor(bool, int, Color32, bool) UserToolState.SetupPlanetCursor(bool) UserToolState.TrySetViewMode() UserToolState.TryRestoreViewMode() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States Assembly: fwt.hexterrains.dll Syntax public class StampCellItemPropsUserToolState : StampCellItemsToolStateBase<CellItemPropsData>, ISmState Constructors StampCellItemPropsUserToolState(IUserToolAPI) Declaration public StampCellItemPropsUserToolState(IUserToolAPI userToolAPI) Parameters Type Name Description IUserToolAPI userToolAPI Properties UserToolType Declaration public override int UserToolType { get; } Property Value Type Description int Overrides UserToolState.UserToolType Methods InitDefaultSettings() Declaration protected override void InitDefaultSettings() Overrides StampUserToolStateBase<CellItemPropsData, CellItem>.InitDefaultSettings() Implements ISmState Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.StampCellItemsToolStateBase-1.html": {
    "href": "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.StampCellItemsToolStateBase-1.html",
    "title": "Class StampCellItemsToolStateBase<TBrushTarget> | Hex Terrains",
    "summary": "Class StampCellItemsToolStateBase<TBrushTarget> Inheritance object SmState UserToolState BrushUserToolState<TBrushTarget> BrushUserToolState<TBrushTarget, UserToolSettingsDataSource> BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen> StampUserToolStateBase<TBrushTarget, CellItem> StampCellItemsToolStateBase<TBrushTarget> StampCellItemPropsUserToolState Implements ISmState Inherited Members StampUserToolStateBase<TBrushTarget, CellItem>.OriginXCoord StampUserToolStateBase<TBrushTarget, CellItem>.OriginYCoord StampUserToolStateBase<TBrushTarget, CellItem>.OriginCoordinate StampUserToolStateBase<TBrushTarget, CellItem>.OriginCellIndex StampUserToolStateBase<TBrushTarget, CellItem>.ReadCellKey StampUserToolStateBase<TBrushTarget, CellItem>.StartPaintCellCoord StampUserToolStateBase<TBrushTarget, CellItem>.PrepareToRun() StampUserToolStateBase<TBrushTarget, CellItem>.InitDefaultSettings() StampUserToolStateBase<TBrushTarget, CellItem>.UpdateBrush() StampUserToolStateBase<TBrushTarget, CellItem>.ApplyBrush(int, int2, int, TBrushTarget, int) StampUserToolStateBase<TBrushTarget, CellItem>.ReadOriginCellData(int, out CellItem) StampUserToolStateBase<TBrushTarget, CellItem>.SetCellDataToTarget(int, CellItem) BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen>.SettingsScreen BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen>.PrepareToRun() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen>.PrepareToStop() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen>.GetSettingsScreen() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen>.UpdateSettingsScreen() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.DataSource BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.SettingsPlayerPrefsKeyName BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.PrepareToRun() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.InitSettings() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.InitDefaultSettings() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.PrepareToStop() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.LoadSettings() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.SaveSettings() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.SaveSettingsValue<TValue>(string, TValue) BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.LoadSettingsValue<TValue>(string, TValue) BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.TryLoadSettingsValue<TValue>(string, out TValue) BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.LoadSettingsValueOrDefault<TValue>(string, TValue) BrushUserToolState<TBrushTarget>.PrevChangeTimeStamp BrushUserToolState<TBrushTarget>.TimeTreshold BrushUserToolState<TBrushTarget>.CanChangeBrushSize BrushUserToolState<TBrushTarget>.AllowRightMouseButton BrushUserToolState<TBrushTarget>.CursorColor BrushUserToolState<TBrushTarget>.ChangeModeKey BrushUserToolState<TBrushTarget>.ChangeBrushSizeKey BrushUserToolState<TBrushTarget>.IncreaseBrushSizeKey BrushUserToolState<TBrushTarget>.IncreaseBrushSizeKey2 BrushUserToolState<TBrushTarget>.DecreaseBrushSizeKey BrushUserToolState<TBrushTarget>.DecreaseBrushSizeKey2 BrushUserToolState<TBrushTarget>.ChangeOpacityKey BrushUserToolState<TBrushTarget>.IsTimeTresholdPassed BrushUserToolState<TBrushTarget>.BrushSize BrushUserToolState<TBrushTarget>.BrushOpacity BrushUserToolState<TBrushTarget>.ChangeOpacityMultiplier BrushUserToolState<TBrushTarget>.SetNewTimestamp() BrushUserToolState<TBrushTarget>.PrepareToRun() BrushUserToolState<TBrushTarget>.PrepareToStop() BrushUserToolState<TBrushTarget>.Tick() BrushUserToolState<TBrushTarget>.UpdateBrush() BrushUserToolState<TBrushTarget>.TryApplyBrush() BrushUserToolState<TBrushTarget>.ApplyToSingleCell(int, int2, int, TBrushTarget, int) BrushUserToolState<TBrushTarget>.ApplyBrushToAllCells(int, HexTerrainSettings, TBrushTarget, int) BrushUserToolState<TBrushTarget>.ApplyBrushToAllBrushPoints(int, int2, int, HexTerrainSettings, TBrushTarget, int) BrushUserToolState<TBrushTarget>.ApplyBrush(int, int2, int, TBrushTarget, int) BrushUserToolState<TBrushTarget>.CanBeAppliedToManyPoints(int) BrushUserToolState<TBrushTarget>.IsAppliedToEveryCellOnMap(int) BrushUserToolState<TBrushTarget>.GetBrushTarget() UserToolState.Settings UserToolState.IsSubstatesVisible UserToolState.SubStateMachine UserToolState.UserToolType UserToolState.UserToolAPI UserToolState.HasSubtools UserToolState.IsChangeViewMode UserToolState.RequiredViewMode UserToolState.OriginalViewMode UserToolState.ShowSettingsScreen<TViewData, TScreen>(TViewData) UserToolState.GetUIScreen<TScreen>() UserToolState.HideSettingsScreen<TScreen>() UserToolState.SetupPlanetCursor(bool, int) UserToolState.SetupPlanetCursor(bool, int, Color32) UserToolState.SetupPlanetCursor(bool, int, Color32, bool) UserToolState.SetupPlanetCursor(bool) UserToolState.TrySetViewMode() UserToolState.TryRestoreViewMode() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States Assembly: fwt.hexterrains.dll Syntax public abstract class StampCellItemsToolStateBase<TBrushTarget> : StampUserToolStateBase<TBrushTarget, CellItem>, ISmState where TBrushTarget : CellItemsData Type Parameters Name Description TBrushTarget Constructors StampCellItemsToolStateBase(IUserToolAPI) Declaration protected StampCellItemsToolStateBase(IUserToolAPI userToolAPI) Parameters Type Name Description IUserToolAPI userToolAPI Methods ReadOriginCellData(int, out CellItem) Declaration public override bool ReadOriginCellData(int cellIndex, out CellItem cellData) Parameters Type Name Description int cellIndex CellItem cellData Returns Type Description bool Overrides StampUserToolStateBase<TBrushTarget, CellItem>.ReadOriginCellData(int, out CellItem) SetCellDataToTarget(int, CellItem) Declaration public override bool SetCellDataToTarget(int cellIndex, CellItem cellData) Parameters Type Name Description int cellIndex CellItem cellData Returns Type Description bool Overrides StampUserToolStateBase<TBrushTarget, CellItem>.SetCellDataToTarget(int, CellItem) Implements ISmState Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.StampCountriesUserToolState.html": {
    "href": "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.StampCountriesUserToolState.html",
    "title": "Class StampCountriesUserToolState | Hex Terrains",
    "summary": "Class StampCountriesUserToolState Inheritance object SmState UserToolState BrushUserToolState<HexCountriesData> BrushUserToolState<HexCountriesData, UserToolSettingsDataSource> BrushUserToolState<HexCountriesData, UserToolSettingsDataSource, UniversalToolSettingsScreen> StampUserToolStateBase<HexCountriesData, byte> StampAreaUserToolStateBase<HexCountriesData> StampCountriesUserToolState Implements ISmState Inherited Members StampAreaUserToolStateBase<HexCountriesData>.ReadOriginCellData(int, out byte) StampAreaUserToolStateBase<HexCountriesData>.SetCellDataToTarget(int, byte) StampUserToolStateBase<HexCountriesData, byte>.OriginXCoord StampUserToolStateBase<HexCountriesData, byte>.OriginYCoord StampUserToolStateBase<HexCountriesData, byte>.OriginCoordinate StampUserToolStateBase<HexCountriesData, byte>.OriginCellIndex StampUserToolStateBase<HexCountriesData, byte>.ReadCellKey StampUserToolStateBase<HexCountriesData, byte>.StartPaintCellCoord StampUserToolStateBase<HexCountriesData, byte>.PrepareToRun() StampUserToolStateBase<HexCountriesData, byte>.InitDefaultSettings() StampUserToolStateBase<HexCountriesData, byte>.UpdateBrush() StampUserToolStateBase<HexCountriesData, byte>.ApplyBrush(int, int2, int, HexCountriesData, int) StampUserToolStateBase<HexCountriesData, byte>.ReadOriginCellData(int, out byte) StampUserToolStateBase<HexCountriesData, byte>.SetCellDataToTarget(int, byte) BrushUserToolState<HexCountriesData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.SettingsScreen BrushUserToolState<HexCountriesData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.PrepareToRun() BrushUserToolState<HexCountriesData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.PrepareToStop() BrushUserToolState<HexCountriesData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.GetSettingsScreen() BrushUserToolState<HexCountriesData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.UpdateSettingsScreen() BrushUserToolState<HexCountriesData, UserToolSettingsDataSource>.DataSource BrushUserToolState<HexCountriesData, UserToolSettingsDataSource>.SettingsPlayerPrefsKeyName BrushUserToolState<HexCountriesData, UserToolSettingsDataSource>.PrepareToRun() BrushUserToolState<HexCountriesData, UserToolSettingsDataSource>.InitSettings() BrushUserToolState<HexCountriesData, UserToolSettingsDataSource>.InitDefaultSettings() BrushUserToolState<HexCountriesData, UserToolSettingsDataSource>.PrepareToStop() BrushUserToolState<HexCountriesData, UserToolSettingsDataSource>.LoadSettings() BrushUserToolState<HexCountriesData, UserToolSettingsDataSource>.SaveSettings() BrushUserToolState<HexCountriesData, UserToolSettingsDataSource>.SaveSettingsValue<TValue>(string, TValue) BrushUserToolState<HexCountriesData, UserToolSettingsDataSource>.LoadSettingsValue<TValue>(string, TValue) BrushUserToolState<HexCountriesData, UserToolSettingsDataSource>.TryLoadSettingsValue<TValue>(string, out TValue) BrushUserToolState<HexCountriesData, UserToolSettingsDataSource>.LoadSettingsValueOrDefault<TValue>(string, TValue) BrushUserToolState<HexCountriesData>.PrevChangeTimeStamp BrushUserToolState<HexCountriesData>.TimeTreshold BrushUserToolState<HexCountriesData>.CanChangeBrushSize BrushUserToolState<HexCountriesData>.AllowRightMouseButton BrushUserToolState<HexCountriesData>.CursorColor BrushUserToolState<HexCountriesData>.ChangeModeKey BrushUserToolState<HexCountriesData>.ChangeBrushSizeKey BrushUserToolState<HexCountriesData>.IncreaseBrushSizeKey BrushUserToolState<HexCountriesData>.IncreaseBrushSizeKey2 BrushUserToolState<HexCountriesData>.DecreaseBrushSizeKey BrushUserToolState<HexCountriesData>.DecreaseBrushSizeKey2 BrushUserToolState<HexCountriesData>.ChangeOpacityKey BrushUserToolState<HexCountriesData>.IsTimeTresholdPassed BrushUserToolState<HexCountriesData>.BrushSize BrushUserToolState<HexCountriesData>.BrushOpacity BrushUserToolState<HexCountriesData>.ChangeOpacityMultiplier BrushUserToolState<HexCountriesData>.SetNewTimestamp() BrushUserToolState<HexCountriesData>.PrepareToRun() BrushUserToolState<HexCountriesData>.PrepareToStop() BrushUserToolState<HexCountriesData>.Tick() BrushUserToolState<HexCountriesData>.UpdateBrush() BrushUserToolState<HexCountriesData>.TryApplyBrush() BrushUserToolState<HexCountriesData>.ApplyToSingleCell(int, int2, int, HexCountriesData, int) BrushUserToolState<HexCountriesData>.ApplyBrushToAllCells(int, HexTerrainSettings, HexCountriesData, int) BrushUserToolState<HexCountriesData>.ApplyBrushToAllBrushPoints(int, int2, int, HexTerrainSettings, HexCountriesData, int) BrushUserToolState<HexCountriesData>.ApplyBrush(int, int2, int, HexCountriesData, int) BrushUserToolState<HexCountriesData>.CanBeAppliedToManyPoints(int) BrushUserToolState<HexCountriesData>.IsAppliedToEveryCellOnMap(int) BrushUserToolState<HexCountriesData>.GetBrushTarget() UserToolState.Settings UserToolState.IsSubstatesVisible UserToolState.SubStateMachine UserToolState.UserToolAPI UserToolState.HasSubtools UserToolState.OriginalViewMode UserToolState.ShowSettingsScreen<TViewData, TScreen>(TViewData) UserToolState.GetUIScreen<TScreen>() UserToolState.HideSettingsScreen<TScreen>() UserToolState.SetupPlanetCursor(bool, int) UserToolState.SetupPlanetCursor(bool, int, Color32) UserToolState.SetupPlanetCursor(bool, int, Color32, bool) UserToolState.SetupPlanetCursor(bool) UserToolState.TrySetViewMode() UserToolState.TryRestoreViewMode() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States Assembly: fwt.hexterrains.dll Syntax public class StampCountriesUserToolState : StampAreaUserToolStateBase<HexCountriesData>, ISmState Constructors StampCountriesUserToolState(IUserToolAPI) Declaration public StampCountriesUserToolState(IUserToolAPI userToolAPI) Parameters Type Name Description IUserToolAPI userToolAPI Properties IsChangeViewMode If true, when this user tool state becomes active it asks a terrain to switch to the RequiredViewMode view mode Declaration protected override bool IsChangeViewMode { get; } Property Value Type Description bool Overrides UserToolState.IsChangeViewMode RequiredViewMode If IsChangeViewMode is true, this is the view mode that will be set when this user tool state becomes active. Declaration protected override byte RequiredViewMode { get; } Property Value Type Description byte Overrides UserToolState.RequiredViewMode UserToolType Declaration public override int UserToolType { get; } Property Value Type Description int Overrides UserToolState.UserToolType Methods InitDefaultSettings() Declaration protected override void InitDefaultSettings() Overrides StampUserToolStateBase<HexCountriesData, byte>.InitDefaultSettings() Implements ISmState Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.StampGroundBiomeUserToolState.html": {
    "href": "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.StampGroundBiomeUserToolState.html",
    "title": "Class StampGroundBiomeUserToolState | Hex Terrains",
    "summary": "Class StampGroundBiomeUserToolState Inheritance object SmState UserToolState BrushUserToolState<HexGroundData> BrushUserToolState<HexGroundData, UserToolSettingsDataSource> BrushUserToolState<HexGroundData, UserToolSettingsDataSource, UniversalToolSettingsScreen> StampUserToolStateBase<HexGroundData, byte> StampSurfaceBiomeUserToolStateBase<HexGroundData> StampGroundBiomeUserToolState Implements ISmState Inherited Members StampSurfaceBiomeUserToolStateBase<HexGroundData>.ReadOriginCellData(int, out byte) StampSurfaceBiomeUserToolStateBase<HexGroundData>.SetCellDataToTarget(int, byte) StampUserToolStateBase<HexGroundData, byte>.OriginXCoord StampUserToolStateBase<HexGroundData, byte>.OriginYCoord StampUserToolStateBase<HexGroundData, byte>.OriginCoordinate StampUserToolStateBase<HexGroundData, byte>.OriginCellIndex StampUserToolStateBase<HexGroundData, byte>.ReadCellKey StampUserToolStateBase<HexGroundData, byte>.StartPaintCellCoord StampUserToolStateBase<HexGroundData, byte>.PrepareToRun() StampUserToolStateBase<HexGroundData, byte>.InitDefaultSettings() StampUserToolStateBase<HexGroundData, byte>.UpdateBrush() StampUserToolStateBase<HexGroundData, byte>.ApplyBrush(int, int2, int, HexGroundData, int) StampUserToolStateBase<HexGroundData, byte>.ReadOriginCellData(int, out byte) StampUserToolStateBase<HexGroundData, byte>.SetCellDataToTarget(int, byte) BrushUserToolState<HexGroundData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.SettingsScreen BrushUserToolState<HexGroundData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.PrepareToRun() BrushUserToolState<HexGroundData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.PrepareToStop() BrushUserToolState<HexGroundData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.GetSettingsScreen() BrushUserToolState<HexGroundData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.UpdateSettingsScreen() BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.DataSource BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.SettingsPlayerPrefsKeyName BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.PrepareToRun() BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.InitSettings() BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.InitDefaultSettings() BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.PrepareToStop() BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.LoadSettings() BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.SaveSettings() BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.SaveSettingsValue<TValue>(string, TValue) BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.LoadSettingsValue<TValue>(string, TValue) BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.TryLoadSettingsValue<TValue>(string, out TValue) BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.LoadSettingsValueOrDefault<TValue>(string, TValue) BrushUserToolState<HexGroundData>.PrevChangeTimeStamp BrushUserToolState<HexGroundData>.TimeTreshold BrushUserToolState<HexGroundData>.CanChangeBrushSize BrushUserToolState<HexGroundData>.AllowRightMouseButton BrushUserToolState<HexGroundData>.CursorColor BrushUserToolState<HexGroundData>.ChangeModeKey BrushUserToolState<HexGroundData>.ChangeBrushSizeKey BrushUserToolState<HexGroundData>.IncreaseBrushSizeKey BrushUserToolState<HexGroundData>.IncreaseBrushSizeKey2 BrushUserToolState<HexGroundData>.DecreaseBrushSizeKey BrushUserToolState<HexGroundData>.DecreaseBrushSizeKey2 BrushUserToolState<HexGroundData>.ChangeOpacityKey BrushUserToolState<HexGroundData>.IsTimeTresholdPassed BrushUserToolState<HexGroundData>.BrushSize BrushUserToolState<HexGroundData>.BrushOpacity BrushUserToolState<HexGroundData>.ChangeOpacityMultiplier BrushUserToolState<HexGroundData>.SetNewTimestamp() BrushUserToolState<HexGroundData>.PrepareToRun() BrushUserToolState<HexGroundData>.PrepareToStop() BrushUserToolState<HexGroundData>.Tick() BrushUserToolState<HexGroundData>.UpdateBrush() BrushUserToolState<HexGroundData>.TryApplyBrush() BrushUserToolState<HexGroundData>.ApplyToSingleCell(int, int2, int, HexGroundData, int) BrushUserToolState<HexGroundData>.ApplyBrushToAllCells(int, HexTerrainSettings, HexGroundData, int) BrushUserToolState<HexGroundData>.ApplyBrushToAllBrushPoints(int, int2, int, HexTerrainSettings, HexGroundData, int) BrushUserToolState<HexGroundData>.ApplyBrush(int, int2, int, HexGroundData, int) BrushUserToolState<HexGroundData>.CanBeAppliedToManyPoints(int) BrushUserToolState<HexGroundData>.IsAppliedToEveryCellOnMap(int) BrushUserToolState<HexGroundData>.GetBrushTarget() UserToolState.Settings UserToolState.IsSubstatesVisible UserToolState.SubStateMachine UserToolState.UserToolAPI UserToolState.HasSubtools UserToolState.IsChangeViewMode UserToolState.RequiredViewMode UserToolState.OriginalViewMode UserToolState.ShowSettingsScreen<TViewData, TScreen>(TViewData) UserToolState.GetUIScreen<TScreen>() UserToolState.HideSettingsScreen<TScreen>() UserToolState.SetupPlanetCursor(bool, int) UserToolState.SetupPlanetCursor(bool, int, Color32) UserToolState.SetupPlanetCursor(bool, int, Color32, bool) UserToolState.SetupPlanetCursor(bool) UserToolState.TrySetViewMode() UserToolState.TryRestoreViewMode() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States Assembly: fwt.hexterrains.dll Syntax public class StampGroundBiomeUserToolState : StampSurfaceBiomeUserToolStateBase<HexGroundData>, ISmState Constructors StampGroundBiomeUserToolState(IUserToolAPI) Declaration public StampGroundBiomeUserToolState(IUserToolAPI userToolAPI) Parameters Type Name Description IUserToolAPI userToolAPI Properties UserToolType Declaration public override int UserToolType { get; } Property Value Type Description int Overrides UserToolState.UserToolType Methods InitDefaultSettings() Declaration protected override void InitDefaultSettings() Overrides StampUserToolStateBase<HexGroundData, byte>.InitDefaultSettings() Implements ISmState Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.StampGroundHeightUserToolState.html": {
    "href": "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.StampGroundHeightUserToolState.html",
    "title": "Class StampGroundHeightUserToolState | Hex Terrains",
    "summary": "Class StampGroundHeightUserToolState Inheritance object SmState UserToolState BrushUserToolState<HexGroundData> BrushUserToolState<HexGroundData, UserToolSettingsDataSource> BrushUserToolState<HexGroundData, UserToolSettingsDataSource, UniversalToolSettingsScreen> StampUserToolStateBase<HexGroundData, byte> StampSurfaceHeightUserToolStateBase<HexGroundData> StampGroundHeightUserToolState Implements ISmState Inherited Members StampSurfaceHeightUserToolStateBase<HexGroundData>.ReadOriginCellData(int, out byte) StampSurfaceHeightUserToolStateBase<HexGroundData>.SetCellDataToTarget(int, byte) StampUserToolStateBase<HexGroundData, byte>.OriginXCoord StampUserToolStateBase<HexGroundData, byte>.OriginYCoord StampUserToolStateBase<HexGroundData, byte>.OriginCoordinate StampUserToolStateBase<HexGroundData, byte>.OriginCellIndex StampUserToolStateBase<HexGroundData, byte>.ReadCellKey StampUserToolStateBase<HexGroundData, byte>.StartPaintCellCoord StampUserToolStateBase<HexGroundData, byte>.PrepareToRun() StampUserToolStateBase<HexGroundData, byte>.InitDefaultSettings() StampUserToolStateBase<HexGroundData, byte>.UpdateBrush() StampUserToolStateBase<HexGroundData, byte>.ApplyBrush(int, int2, int, HexGroundData, int) StampUserToolStateBase<HexGroundData, byte>.ReadOriginCellData(int, out byte) StampUserToolStateBase<HexGroundData, byte>.SetCellDataToTarget(int, byte) BrushUserToolState<HexGroundData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.SettingsScreen BrushUserToolState<HexGroundData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.PrepareToRun() BrushUserToolState<HexGroundData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.PrepareToStop() BrushUserToolState<HexGroundData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.GetSettingsScreen() BrushUserToolState<HexGroundData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.UpdateSettingsScreen() BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.DataSource BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.SettingsPlayerPrefsKeyName BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.PrepareToRun() BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.InitSettings() BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.InitDefaultSettings() BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.PrepareToStop() BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.LoadSettings() BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.SaveSettings() BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.SaveSettingsValue<TValue>(string, TValue) BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.LoadSettingsValue<TValue>(string, TValue) BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.TryLoadSettingsValue<TValue>(string, out TValue) BrushUserToolState<HexGroundData, UserToolSettingsDataSource>.LoadSettingsValueOrDefault<TValue>(string, TValue) BrushUserToolState<HexGroundData>.PrevChangeTimeStamp BrushUserToolState<HexGroundData>.TimeTreshold BrushUserToolState<HexGroundData>.CanChangeBrushSize BrushUserToolState<HexGroundData>.AllowRightMouseButton BrushUserToolState<HexGroundData>.CursorColor BrushUserToolState<HexGroundData>.ChangeModeKey BrushUserToolState<HexGroundData>.ChangeBrushSizeKey BrushUserToolState<HexGroundData>.IncreaseBrushSizeKey BrushUserToolState<HexGroundData>.IncreaseBrushSizeKey2 BrushUserToolState<HexGroundData>.DecreaseBrushSizeKey BrushUserToolState<HexGroundData>.DecreaseBrushSizeKey2 BrushUserToolState<HexGroundData>.ChangeOpacityKey BrushUserToolState<HexGroundData>.IsTimeTresholdPassed BrushUserToolState<HexGroundData>.BrushSize BrushUserToolState<HexGroundData>.BrushOpacity BrushUserToolState<HexGroundData>.ChangeOpacityMultiplier BrushUserToolState<HexGroundData>.SetNewTimestamp() BrushUserToolState<HexGroundData>.PrepareToRun() BrushUserToolState<HexGroundData>.PrepareToStop() BrushUserToolState<HexGroundData>.Tick() BrushUserToolState<HexGroundData>.UpdateBrush() BrushUserToolState<HexGroundData>.TryApplyBrush() BrushUserToolState<HexGroundData>.ApplyToSingleCell(int, int2, int, HexGroundData, int) BrushUserToolState<HexGroundData>.ApplyBrushToAllCells(int, HexTerrainSettings, HexGroundData, int) BrushUserToolState<HexGroundData>.ApplyBrushToAllBrushPoints(int, int2, int, HexTerrainSettings, HexGroundData, int) BrushUserToolState<HexGroundData>.ApplyBrush(int, int2, int, HexGroundData, int) BrushUserToolState<HexGroundData>.CanBeAppliedToManyPoints(int) BrushUserToolState<HexGroundData>.IsAppliedToEveryCellOnMap(int) BrushUserToolState<HexGroundData>.GetBrushTarget() UserToolState.Settings UserToolState.IsSubstatesVisible UserToolState.SubStateMachine UserToolState.UserToolAPI UserToolState.HasSubtools UserToolState.IsChangeViewMode UserToolState.RequiredViewMode UserToolState.OriginalViewMode UserToolState.ShowSettingsScreen<TViewData, TScreen>(TViewData) UserToolState.GetUIScreen<TScreen>() UserToolState.HideSettingsScreen<TScreen>() UserToolState.SetupPlanetCursor(bool, int) UserToolState.SetupPlanetCursor(bool, int, Color32) UserToolState.SetupPlanetCursor(bool, int, Color32, bool) UserToolState.SetupPlanetCursor(bool) UserToolState.TrySetViewMode() UserToolState.TryRestoreViewMode() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States Assembly: fwt.hexterrains.dll Syntax public class StampGroundHeightUserToolState : StampSurfaceHeightUserToolStateBase<HexGroundData>, ISmState Constructors StampGroundHeightUserToolState(IUserToolAPI) Declaration public StampGroundHeightUserToolState(IUserToolAPI userToolAPI) Parameters Type Name Description IUserToolAPI userToolAPI Properties UserToolType Declaration public override int UserToolType { get; } Property Value Type Description int Overrides UserToolState.UserToolType Methods InitDefaultSettings() Declaration protected override void InitDefaultSettings() Overrides StampUserToolStateBase<HexGroundData, byte>.InitDefaultSettings() Implements ISmState Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.StampProvincesUserToolState.html": {
    "href": "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.StampProvincesUserToolState.html",
    "title": "Class StampProvincesUserToolState | Hex Terrains",
    "summary": "Class StampProvincesUserToolState Inheritance object SmState UserToolState BrushUserToolState<HexProvincesData> BrushUserToolState<HexProvincesData, UserToolSettingsDataSource> BrushUserToolState<HexProvincesData, UserToolSettingsDataSource, UniversalToolSettingsScreen> StampUserToolStateBase<HexProvincesData, byte> StampAreaUserToolStateBase<HexProvincesData> StampProvincesUserToolState Implements ISmState Inherited Members StampAreaUserToolStateBase<HexProvincesData>.ReadOriginCellData(int, out byte) StampAreaUserToolStateBase<HexProvincesData>.SetCellDataToTarget(int, byte) StampUserToolStateBase<HexProvincesData, byte>.OriginXCoord StampUserToolStateBase<HexProvincesData, byte>.OriginYCoord StampUserToolStateBase<HexProvincesData, byte>.OriginCoordinate StampUserToolStateBase<HexProvincesData, byte>.OriginCellIndex StampUserToolStateBase<HexProvincesData, byte>.ReadCellKey StampUserToolStateBase<HexProvincesData, byte>.StartPaintCellCoord StampUserToolStateBase<HexProvincesData, byte>.PrepareToRun() StampUserToolStateBase<HexProvincesData, byte>.InitDefaultSettings() StampUserToolStateBase<HexProvincesData, byte>.UpdateBrush() StampUserToolStateBase<HexProvincesData, byte>.ApplyBrush(int, int2, int, HexProvincesData, int) StampUserToolStateBase<HexProvincesData, byte>.ReadOriginCellData(int, out byte) StampUserToolStateBase<HexProvincesData, byte>.SetCellDataToTarget(int, byte) BrushUserToolState<HexProvincesData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.SettingsScreen BrushUserToolState<HexProvincesData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.PrepareToRun() BrushUserToolState<HexProvincesData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.PrepareToStop() BrushUserToolState<HexProvincesData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.GetSettingsScreen() BrushUserToolState<HexProvincesData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.UpdateSettingsScreen() BrushUserToolState<HexProvincesData, UserToolSettingsDataSource>.DataSource BrushUserToolState<HexProvincesData, UserToolSettingsDataSource>.SettingsPlayerPrefsKeyName BrushUserToolState<HexProvincesData, UserToolSettingsDataSource>.PrepareToRun() BrushUserToolState<HexProvincesData, UserToolSettingsDataSource>.InitSettings() BrushUserToolState<HexProvincesData, UserToolSettingsDataSource>.InitDefaultSettings() BrushUserToolState<HexProvincesData, UserToolSettingsDataSource>.PrepareToStop() BrushUserToolState<HexProvincesData, UserToolSettingsDataSource>.LoadSettings() BrushUserToolState<HexProvincesData, UserToolSettingsDataSource>.SaveSettings() BrushUserToolState<HexProvincesData, UserToolSettingsDataSource>.SaveSettingsValue<TValue>(string, TValue) BrushUserToolState<HexProvincesData, UserToolSettingsDataSource>.LoadSettingsValue<TValue>(string, TValue) BrushUserToolState<HexProvincesData, UserToolSettingsDataSource>.TryLoadSettingsValue<TValue>(string, out TValue) BrushUserToolState<HexProvincesData, UserToolSettingsDataSource>.LoadSettingsValueOrDefault<TValue>(string, TValue) BrushUserToolState<HexProvincesData>.PrevChangeTimeStamp BrushUserToolState<HexProvincesData>.TimeTreshold BrushUserToolState<HexProvincesData>.CanChangeBrushSize BrushUserToolState<HexProvincesData>.AllowRightMouseButton BrushUserToolState<HexProvincesData>.CursorColor BrushUserToolState<HexProvincesData>.ChangeModeKey BrushUserToolState<HexProvincesData>.ChangeBrushSizeKey BrushUserToolState<HexProvincesData>.IncreaseBrushSizeKey BrushUserToolState<HexProvincesData>.IncreaseBrushSizeKey2 BrushUserToolState<HexProvincesData>.DecreaseBrushSizeKey BrushUserToolState<HexProvincesData>.DecreaseBrushSizeKey2 BrushUserToolState<HexProvincesData>.ChangeOpacityKey BrushUserToolState<HexProvincesData>.IsTimeTresholdPassed BrushUserToolState<HexProvincesData>.BrushSize BrushUserToolState<HexProvincesData>.BrushOpacity BrushUserToolState<HexProvincesData>.ChangeOpacityMultiplier BrushUserToolState<HexProvincesData>.SetNewTimestamp() BrushUserToolState<HexProvincesData>.PrepareToRun() BrushUserToolState<HexProvincesData>.PrepareToStop() BrushUserToolState<HexProvincesData>.Tick() BrushUserToolState<HexProvincesData>.UpdateBrush() BrushUserToolState<HexProvincesData>.TryApplyBrush() BrushUserToolState<HexProvincesData>.ApplyToSingleCell(int, int2, int, HexProvincesData, int) BrushUserToolState<HexProvincesData>.ApplyBrushToAllCells(int, HexTerrainSettings, HexProvincesData, int) BrushUserToolState<HexProvincesData>.ApplyBrushToAllBrushPoints(int, int2, int, HexTerrainSettings, HexProvincesData, int) BrushUserToolState<HexProvincesData>.ApplyBrush(int, int2, int, HexProvincesData, int) BrushUserToolState<HexProvincesData>.CanBeAppliedToManyPoints(int) BrushUserToolState<HexProvincesData>.IsAppliedToEveryCellOnMap(int) BrushUserToolState<HexProvincesData>.GetBrushTarget() UserToolState.Settings UserToolState.IsSubstatesVisible UserToolState.SubStateMachine UserToolState.UserToolAPI UserToolState.HasSubtools UserToolState.OriginalViewMode UserToolState.ShowSettingsScreen<TViewData, TScreen>(TViewData) UserToolState.GetUIScreen<TScreen>() UserToolState.HideSettingsScreen<TScreen>() UserToolState.SetupPlanetCursor(bool, int) UserToolState.SetupPlanetCursor(bool, int, Color32) UserToolState.SetupPlanetCursor(bool, int, Color32, bool) UserToolState.SetupPlanetCursor(bool) UserToolState.TrySetViewMode() UserToolState.TryRestoreViewMode() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States Assembly: fwt.hexterrains.dll Syntax public class StampProvincesUserToolState : StampAreaUserToolStateBase<HexProvincesData>, ISmState Constructors StampProvincesUserToolState(IUserToolAPI) Declaration public StampProvincesUserToolState(IUserToolAPI userToolAPI) Parameters Type Name Description IUserToolAPI userToolAPI Properties IsChangeViewMode If true, when this user tool state becomes active it asks a terrain to switch to the RequiredViewMode view mode Declaration protected override bool IsChangeViewMode { get; } Property Value Type Description bool Overrides UserToolState.IsChangeViewMode RequiredViewMode If IsChangeViewMode is true, this is the view mode that will be set when this user tool state becomes active. Declaration protected override byte RequiredViewMode { get; } Property Value Type Description byte Overrides UserToolState.RequiredViewMode UserToolType Declaration public override int UserToolType { get; } Property Value Type Description int Overrides UserToolState.UserToolType Methods InitDefaultSettings() Declaration protected override void InitDefaultSettings() Overrides StampUserToolStateBase<HexProvincesData, byte>.InitDefaultSettings() Implements ISmState Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.StampSurfaceBiomeUserToolStateBase-1.html": {
    "href": "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.StampSurfaceBiomeUserToolStateBase-1.html",
    "title": "Class StampSurfaceBiomeUserToolStateBase<TBrushTarget> | Hex Terrains",
    "summary": "Class StampSurfaceBiomeUserToolStateBase<TBrushTarget> Inheritance object SmState UserToolState BrushUserToolState<TBrushTarget> BrushUserToolState<TBrushTarget, UserToolSettingsDataSource> BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen> StampUserToolStateBase<TBrushTarget, byte> StampSurfaceBiomeUserToolStateBase<TBrushTarget> StampGroundBiomeUserToolState StampWaterBiomeUserToolState Implements ISmState Inherited Members StampUserToolStateBase<TBrushTarget, byte>.OriginXCoord StampUserToolStateBase<TBrushTarget, byte>.OriginYCoord StampUserToolStateBase<TBrushTarget, byte>.OriginCoordinate StampUserToolStateBase<TBrushTarget, byte>.OriginCellIndex StampUserToolStateBase<TBrushTarget, byte>.ReadCellKey StampUserToolStateBase<TBrushTarget, byte>.StartPaintCellCoord StampUserToolStateBase<TBrushTarget, byte>.PrepareToRun() StampUserToolStateBase<TBrushTarget, byte>.InitDefaultSettings() StampUserToolStateBase<TBrushTarget, byte>.UpdateBrush() StampUserToolStateBase<TBrushTarget, byte>.ApplyBrush(int, int2, int, TBrushTarget, int) StampUserToolStateBase<TBrushTarget, byte>.ReadOriginCellData(int, out byte) StampUserToolStateBase<TBrushTarget, byte>.SetCellDataToTarget(int, byte) BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen>.SettingsScreen BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen>.PrepareToRun() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen>.PrepareToStop() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen>.GetSettingsScreen() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen>.UpdateSettingsScreen() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.DataSource BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.SettingsPlayerPrefsKeyName BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.PrepareToRun() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.InitSettings() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.InitDefaultSettings() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.PrepareToStop() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.LoadSettings() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.SaveSettings() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.SaveSettingsValue<TValue>(string, TValue) BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.LoadSettingsValue<TValue>(string, TValue) BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.TryLoadSettingsValue<TValue>(string, out TValue) BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.LoadSettingsValueOrDefault<TValue>(string, TValue) BrushUserToolState<TBrushTarget>.PrevChangeTimeStamp BrushUserToolState<TBrushTarget>.TimeTreshold BrushUserToolState<TBrushTarget>.CanChangeBrushSize BrushUserToolState<TBrushTarget>.AllowRightMouseButton BrushUserToolState<TBrushTarget>.CursorColor BrushUserToolState<TBrushTarget>.ChangeModeKey BrushUserToolState<TBrushTarget>.ChangeBrushSizeKey BrushUserToolState<TBrushTarget>.IncreaseBrushSizeKey BrushUserToolState<TBrushTarget>.IncreaseBrushSizeKey2 BrushUserToolState<TBrushTarget>.DecreaseBrushSizeKey BrushUserToolState<TBrushTarget>.DecreaseBrushSizeKey2 BrushUserToolState<TBrushTarget>.ChangeOpacityKey BrushUserToolState<TBrushTarget>.IsTimeTresholdPassed BrushUserToolState<TBrushTarget>.BrushSize BrushUserToolState<TBrushTarget>.BrushOpacity BrushUserToolState<TBrushTarget>.ChangeOpacityMultiplier BrushUserToolState<TBrushTarget>.SetNewTimestamp() BrushUserToolState<TBrushTarget>.PrepareToRun() BrushUserToolState<TBrushTarget>.PrepareToStop() BrushUserToolState<TBrushTarget>.Tick() BrushUserToolState<TBrushTarget>.UpdateBrush() BrushUserToolState<TBrushTarget>.TryApplyBrush() BrushUserToolState<TBrushTarget>.ApplyToSingleCell(int, int2, int, TBrushTarget, int) BrushUserToolState<TBrushTarget>.ApplyBrushToAllCells(int, HexTerrainSettings, TBrushTarget, int) BrushUserToolState<TBrushTarget>.ApplyBrushToAllBrushPoints(int, int2, int, HexTerrainSettings, TBrushTarget, int) BrushUserToolState<TBrushTarget>.ApplyBrush(int, int2, int, TBrushTarget, int) BrushUserToolState<TBrushTarget>.CanBeAppliedToManyPoints(int) BrushUserToolState<TBrushTarget>.IsAppliedToEveryCellOnMap(int) BrushUserToolState<TBrushTarget>.GetBrushTarget() UserToolState.Settings UserToolState.IsSubstatesVisible UserToolState.SubStateMachine UserToolState.UserToolType UserToolState.UserToolAPI UserToolState.HasSubtools UserToolState.IsChangeViewMode UserToolState.RequiredViewMode UserToolState.OriginalViewMode UserToolState.ShowSettingsScreen<TViewData, TScreen>(TViewData) UserToolState.GetUIScreen<TScreen>() UserToolState.HideSettingsScreen<TScreen>() UserToolState.SetupPlanetCursor(bool, int) UserToolState.SetupPlanetCursor(bool, int, Color32) UserToolState.SetupPlanetCursor(bool, int, Color32, bool) UserToolState.SetupPlanetCursor(bool) UserToolState.TrySetViewMode() UserToolState.TryRestoreViewMode() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States Assembly: fwt.hexterrains.dll Syntax public abstract class StampSurfaceBiomeUserToolStateBase<TBrushTarget> : StampUserToolStateBase<TBrushTarget, byte>, ISmState where TBrushTarget : HexSurfaceData Type Parameters Name Description TBrushTarget Constructors StampSurfaceBiomeUserToolStateBase(IUserToolAPI) Declaration protected StampSurfaceBiomeUserToolStateBase(IUserToolAPI userToolAPI) Parameters Type Name Description IUserToolAPI userToolAPI Methods ReadOriginCellData(int, out byte) Declaration public override bool ReadOriginCellData(int cellIndex, out byte cellData) Parameters Type Name Description int cellIndex byte cellData Returns Type Description bool Overrides StampUserToolStateBase<TBrushTarget, byte>.ReadOriginCellData(int, out byte) SetCellDataToTarget(int, byte) Declaration public override bool SetCellDataToTarget(int cellIndex, byte cellData) Parameters Type Name Description int cellIndex byte cellData Returns Type Description bool Overrides StampUserToolStateBase<TBrushTarget, byte>.SetCellDataToTarget(int, byte) Implements ISmState Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.StampSurfaceHeightUserToolStateBase-1.html": {
    "href": "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.StampSurfaceHeightUserToolStateBase-1.html",
    "title": "Class StampSurfaceHeightUserToolStateBase<TBrushTarget> | Hex Terrains",
    "summary": "Class StampSurfaceHeightUserToolStateBase<TBrushTarget> Inheritance object SmState UserToolState BrushUserToolState<TBrushTarget> BrushUserToolState<TBrushTarget, UserToolSettingsDataSource> BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen> StampUserToolStateBase<TBrushTarget, byte> StampSurfaceHeightUserToolStateBase<TBrushTarget> StampGroundHeightUserToolState StampWaterHeightUserToolState Implements ISmState Inherited Members StampUserToolStateBase<TBrushTarget, byte>.OriginXCoord StampUserToolStateBase<TBrushTarget, byte>.OriginYCoord StampUserToolStateBase<TBrushTarget, byte>.OriginCoordinate StampUserToolStateBase<TBrushTarget, byte>.OriginCellIndex StampUserToolStateBase<TBrushTarget, byte>.ReadCellKey StampUserToolStateBase<TBrushTarget, byte>.StartPaintCellCoord StampUserToolStateBase<TBrushTarget, byte>.PrepareToRun() StampUserToolStateBase<TBrushTarget, byte>.InitDefaultSettings() StampUserToolStateBase<TBrushTarget, byte>.UpdateBrush() StampUserToolStateBase<TBrushTarget, byte>.ApplyBrush(int, int2, int, TBrushTarget, int) StampUserToolStateBase<TBrushTarget, byte>.ReadOriginCellData(int, out byte) StampUserToolStateBase<TBrushTarget, byte>.SetCellDataToTarget(int, byte) BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen>.SettingsScreen BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen>.PrepareToRun() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen>.PrepareToStop() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen>.GetSettingsScreen() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen>.UpdateSettingsScreen() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.DataSource BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.SettingsPlayerPrefsKeyName BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.PrepareToRun() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.InitSettings() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.InitDefaultSettings() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.PrepareToStop() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.LoadSettings() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.SaveSettings() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.SaveSettingsValue<TValue>(string, TValue) BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.LoadSettingsValue<TValue>(string, TValue) BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.TryLoadSettingsValue<TValue>(string, out TValue) BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.LoadSettingsValueOrDefault<TValue>(string, TValue) BrushUserToolState<TBrushTarget>.PrevChangeTimeStamp BrushUserToolState<TBrushTarget>.TimeTreshold BrushUserToolState<TBrushTarget>.CanChangeBrushSize BrushUserToolState<TBrushTarget>.AllowRightMouseButton BrushUserToolState<TBrushTarget>.CursorColor BrushUserToolState<TBrushTarget>.ChangeModeKey BrushUserToolState<TBrushTarget>.ChangeBrushSizeKey BrushUserToolState<TBrushTarget>.IncreaseBrushSizeKey BrushUserToolState<TBrushTarget>.IncreaseBrushSizeKey2 BrushUserToolState<TBrushTarget>.DecreaseBrushSizeKey BrushUserToolState<TBrushTarget>.DecreaseBrushSizeKey2 BrushUserToolState<TBrushTarget>.ChangeOpacityKey BrushUserToolState<TBrushTarget>.IsTimeTresholdPassed BrushUserToolState<TBrushTarget>.BrushSize BrushUserToolState<TBrushTarget>.BrushOpacity BrushUserToolState<TBrushTarget>.ChangeOpacityMultiplier BrushUserToolState<TBrushTarget>.SetNewTimestamp() BrushUserToolState<TBrushTarget>.PrepareToRun() BrushUserToolState<TBrushTarget>.PrepareToStop() BrushUserToolState<TBrushTarget>.Tick() BrushUserToolState<TBrushTarget>.UpdateBrush() BrushUserToolState<TBrushTarget>.TryApplyBrush() BrushUserToolState<TBrushTarget>.ApplyToSingleCell(int, int2, int, TBrushTarget, int) BrushUserToolState<TBrushTarget>.ApplyBrushToAllCells(int, HexTerrainSettings, TBrushTarget, int) BrushUserToolState<TBrushTarget>.ApplyBrushToAllBrushPoints(int, int2, int, HexTerrainSettings, TBrushTarget, int) BrushUserToolState<TBrushTarget>.ApplyBrush(int, int2, int, TBrushTarget, int) BrushUserToolState<TBrushTarget>.CanBeAppliedToManyPoints(int) BrushUserToolState<TBrushTarget>.IsAppliedToEveryCellOnMap(int) BrushUserToolState<TBrushTarget>.GetBrushTarget() UserToolState.Settings UserToolState.IsSubstatesVisible UserToolState.SubStateMachine UserToolState.UserToolType UserToolState.UserToolAPI UserToolState.HasSubtools UserToolState.IsChangeViewMode UserToolState.RequiredViewMode UserToolState.OriginalViewMode UserToolState.ShowSettingsScreen<TViewData, TScreen>(TViewData) UserToolState.GetUIScreen<TScreen>() UserToolState.HideSettingsScreen<TScreen>() UserToolState.SetupPlanetCursor(bool, int) UserToolState.SetupPlanetCursor(bool, int, Color32) UserToolState.SetupPlanetCursor(bool, int, Color32, bool) UserToolState.SetupPlanetCursor(bool) UserToolState.TrySetViewMode() UserToolState.TryRestoreViewMode() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States Assembly: fwt.hexterrains.dll Syntax public abstract class StampSurfaceHeightUserToolStateBase<TBrushTarget> : StampUserToolStateBase<TBrushTarget, byte>, ISmState where TBrushTarget : HexSurfaceData Type Parameters Name Description TBrushTarget Constructors StampSurfaceHeightUserToolStateBase(IUserToolAPI) Declaration protected StampSurfaceHeightUserToolStateBase(IUserToolAPI userToolAPI) Parameters Type Name Description IUserToolAPI userToolAPI Methods ReadOriginCellData(int, out byte) Declaration public override bool ReadOriginCellData(int cellIndex, out byte cellData) Parameters Type Name Description int cellIndex byte cellData Returns Type Description bool Overrides StampUserToolStateBase<TBrushTarget, byte>.ReadOriginCellData(int, out byte) SetCellDataToTarget(int, byte) Declaration public override bool SetCellDataToTarget(int cellIndex, byte cellData) Parameters Type Name Description int cellIndex byte cellData Returns Type Description bool Overrides StampUserToolStateBase<TBrushTarget, byte>.SetCellDataToTarget(int, byte) Implements ISmState Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.StampUserToolStateBase-2.html": {
    "href": "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.StampUserToolStateBase-2.html",
    "title": "Class StampUserToolStateBase<TBrushTarget, TCellData> | Hex Terrains",
    "summary": "Class StampUserToolStateBase<TBrushTarget, TCellData> Inheritance object SmState UserToolState BrushUserToolState<TBrushTarget> BrushUserToolState<TBrushTarget, UserToolSettingsDataSource> BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen> StampUserToolStateBase<TBrushTarget, TCellData> StampAreaUserToolStateBase<TBrushTarget> StampCellEntitiesUserToolStateBase<TBrushTarget> StampCellItemsToolStateBase<TBrushTarget> StampSurfaceBiomeUserToolStateBase<TBrushTarget> StampSurfaceHeightUserToolStateBase<TBrushTarget> Implements ISmState Inherited Members BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen>.SettingsScreen BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen>.PrepareToRun() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen>.PrepareToStop() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen>.GetSettingsScreen() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen>.UpdateSettingsScreen() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.DataSource BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.SettingsPlayerPrefsKeyName BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.PrepareToRun() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.InitSettings() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.InitDefaultSettings() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.PrepareToStop() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.LoadSettings() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.SaveSettings() BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.SaveSettingsValue<TValue>(string, TValue) BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.LoadSettingsValue<TValue>(string, TValue) BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.TryLoadSettingsValue<TValue>(string, out TValue) BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.LoadSettingsValueOrDefault<TValue>(string, TValue) BrushUserToolState<TBrushTarget>.PrevChangeTimeStamp BrushUserToolState<TBrushTarget>.TimeTreshold BrushUserToolState<TBrushTarget>.CanChangeBrushSize BrushUserToolState<TBrushTarget>.AllowRightMouseButton BrushUserToolState<TBrushTarget>.CursorColor BrushUserToolState<TBrushTarget>.ChangeModeKey BrushUserToolState<TBrushTarget>.ChangeBrushSizeKey BrushUserToolState<TBrushTarget>.IncreaseBrushSizeKey BrushUserToolState<TBrushTarget>.IncreaseBrushSizeKey2 BrushUserToolState<TBrushTarget>.DecreaseBrushSizeKey BrushUserToolState<TBrushTarget>.DecreaseBrushSizeKey2 BrushUserToolState<TBrushTarget>.ChangeOpacityKey BrushUserToolState<TBrushTarget>.IsTimeTresholdPassed BrushUserToolState<TBrushTarget>.BrushSize BrushUserToolState<TBrushTarget>.BrushOpacity BrushUserToolState<TBrushTarget>.ChangeOpacityMultiplier BrushUserToolState<TBrushTarget>.SetNewTimestamp() BrushUserToolState<TBrushTarget>.PrepareToStop() BrushUserToolState<TBrushTarget>.Tick() BrushUserToolState<TBrushTarget>.TryApplyBrush() BrushUserToolState<TBrushTarget>.ApplyToSingleCell(int, int2, int, TBrushTarget, int) BrushUserToolState<TBrushTarget>.ApplyBrushToAllCells(int, HexTerrainSettings, TBrushTarget, int) BrushUserToolState<TBrushTarget>.ApplyBrushToAllBrushPoints(int, int2, int, HexTerrainSettings, TBrushTarget, int) BrushUserToolState<TBrushTarget>.CanBeAppliedToManyPoints(int) BrushUserToolState<TBrushTarget>.IsAppliedToEveryCellOnMap(int) BrushUserToolState<TBrushTarget>.GetBrushTarget() UserToolState.Settings UserToolState.IsSubstatesVisible UserToolState.SubStateMachine UserToolState.UserToolType UserToolState.UserToolAPI UserToolState.HasSubtools UserToolState.IsChangeViewMode UserToolState.RequiredViewMode UserToolState.OriginalViewMode UserToolState.ShowSettingsScreen<TViewData, TScreen>(TViewData) UserToolState.GetUIScreen<TScreen>() UserToolState.HideSettingsScreen<TScreen>() UserToolState.SetupPlanetCursor(bool, int) UserToolState.SetupPlanetCursor(bool, int, Color32) UserToolState.SetupPlanetCursor(bool, int, Color32, bool) UserToolState.SetupPlanetCursor(bool) UserToolState.TrySetViewMode() UserToolState.TryRestoreViewMode() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States Assembly: fwt.hexterrains.dll Syntax public abstract class StampUserToolStateBase<TBrushTarget, TCellData> : BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen>, ISmState where TBrushTarget : class Type Parameters Name Description TBrushTarget TCellData Constructors StampUserToolStateBase(IUserToolAPI) Declaration protected StampUserToolStateBase(IUserToolAPI userToolAPI) Parameters Type Name Description IUserToolAPI userToolAPI Fields ReadCellKey Declaration public KeyCode ReadCellKey Field Value Type Description KeyCode StartPaintCellCoord Declaration protected int2? StartPaintCellCoord Field Value Type Description int2? Properties OriginCellIndex Declaration public int? OriginCellIndex { get; } Property Value Type Description int? OriginCoordinate Declaration public int2 OriginCoordinate { get; set; } Property Value Type Description int2 OriginXCoord Declaration public int OriginXCoord { get; set; } Property Value Type Description int OriginYCoord Declaration public int OriginYCoord { get; set; } Property Value Type Description int Methods ApplyBrush(int, int2, int, TBrushTarget, int) Applies brush to the brushView. Returns true if changes were applied Declaration public override bool ApplyBrush(int brushMode, int2 cellCoord, int cellIndex, TBrushTarget brushTarget, int mouseButton) Parameters Type Name Description int brushMode int2 cellCoord int cellIndex TBrushTarget brushTarget int mouseButton Returns Type Description bool Overrides BrushUserToolState<TBrushTarget>.ApplyBrush(int, int2, int, TBrushTarget, int) InitDefaultSettings() Declaration protected override void InitDefaultSettings() Overrides BrushUserToolState<TBrushTarget, UserToolSettingsDataSource>.InitDefaultSettings() PrepareToRun() Declaration public override void PrepareToRun() Overrides BrushUserToolState<TBrushTarget, UserToolSettingsDataSource, UniversalToolSettingsScreen>.PrepareToRun() ReadOriginCellData(int, out TCellData) Declaration public abstract bool ReadOriginCellData(int cellIndex, out TCellData cellData) Parameters Type Name Description int cellIndex TCellData cellData Returns Type Description bool SetCellDataToTarget(int, TCellData) Declaration public abstract bool SetCellDataToTarget(int cellIndex, TCellData cellData) Parameters Type Name Description int cellIndex TCellData cellData Returns Type Description bool UpdateBrush() Declaration protected override void UpdateBrush() Overrides BrushUserToolState<TBrushTarget>.UpdateBrush() Implements ISmState Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.StampWaterBiomeUserToolState.html": {
    "href": "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.StampWaterBiomeUserToolState.html",
    "title": "Class StampWaterBiomeUserToolState | Hex Terrains",
    "summary": "Class StampWaterBiomeUserToolState Inheritance object SmState UserToolState BrushUserToolState<HexWaterData> BrushUserToolState<HexWaterData, UserToolSettingsDataSource> BrushUserToolState<HexWaterData, UserToolSettingsDataSource, UniversalToolSettingsScreen> StampUserToolStateBase<HexWaterData, byte> StampSurfaceBiomeUserToolStateBase<HexWaterData> StampWaterBiomeUserToolState Implements ISmState Inherited Members StampSurfaceBiomeUserToolStateBase<HexWaterData>.ReadOriginCellData(int, out byte) StampSurfaceBiomeUserToolStateBase<HexWaterData>.SetCellDataToTarget(int, byte) StampUserToolStateBase<HexWaterData, byte>.OriginXCoord StampUserToolStateBase<HexWaterData, byte>.OriginYCoord StampUserToolStateBase<HexWaterData, byte>.OriginCoordinate StampUserToolStateBase<HexWaterData, byte>.OriginCellIndex StampUserToolStateBase<HexWaterData, byte>.ReadCellKey StampUserToolStateBase<HexWaterData, byte>.StartPaintCellCoord StampUserToolStateBase<HexWaterData, byte>.PrepareToRun() StampUserToolStateBase<HexWaterData, byte>.InitDefaultSettings() StampUserToolStateBase<HexWaterData, byte>.UpdateBrush() StampUserToolStateBase<HexWaterData, byte>.ApplyBrush(int, int2, int, HexWaterData, int) StampUserToolStateBase<HexWaterData, byte>.ReadOriginCellData(int, out byte) StampUserToolStateBase<HexWaterData, byte>.SetCellDataToTarget(int, byte) BrushUserToolState<HexWaterData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.SettingsScreen BrushUserToolState<HexWaterData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.PrepareToRun() BrushUserToolState<HexWaterData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.PrepareToStop() BrushUserToolState<HexWaterData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.GetSettingsScreen() BrushUserToolState<HexWaterData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.UpdateSettingsScreen() BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.DataSource BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.SettingsPlayerPrefsKeyName BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.PrepareToRun() BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.InitSettings() BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.InitDefaultSettings() BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.PrepareToStop() BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.LoadSettings() BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.SaveSettings() BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.SaveSettingsValue<TValue>(string, TValue) BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.LoadSettingsValue<TValue>(string, TValue) BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.TryLoadSettingsValue<TValue>(string, out TValue) BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.LoadSettingsValueOrDefault<TValue>(string, TValue) BrushUserToolState<HexWaterData>.PrevChangeTimeStamp BrushUserToolState<HexWaterData>.TimeTreshold BrushUserToolState<HexWaterData>.CanChangeBrushSize BrushUserToolState<HexWaterData>.AllowRightMouseButton BrushUserToolState<HexWaterData>.CursorColor BrushUserToolState<HexWaterData>.ChangeModeKey BrushUserToolState<HexWaterData>.ChangeBrushSizeKey BrushUserToolState<HexWaterData>.IncreaseBrushSizeKey BrushUserToolState<HexWaterData>.IncreaseBrushSizeKey2 BrushUserToolState<HexWaterData>.DecreaseBrushSizeKey BrushUserToolState<HexWaterData>.DecreaseBrushSizeKey2 BrushUserToolState<HexWaterData>.ChangeOpacityKey BrushUserToolState<HexWaterData>.IsTimeTresholdPassed BrushUserToolState<HexWaterData>.BrushSize BrushUserToolState<HexWaterData>.BrushOpacity BrushUserToolState<HexWaterData>.ChangeOpacityMultiplier BrushUserToolState<HexWaterData>.SetNewTimestamp() BrushUserToolState<HexWaterData>.PrepareToRun() BrushUserToolState<HexWaterData>.PrepareToStop() BrushUserToolState<HexWaterData>.Tick() BrushUserToolState<HexWaterData>.UpdateBrush() BrushUserToolState<HexWaterData>.TryApplyBrush() BrushUserToolState<HexWaterData>.ApplyToSingleCell(int, int2, int, HexWaterData, int) BrushUserToolState<HexWaterData>.ApplyBrushToAllCells(int, HexTerrainSettings, HexWaterData, int) BrushUserToolState<HexWaterData>.ApplyBrushToAllBrushPoints(int, int2, int, HexTerrainSettings, HexWaterData, int) BrushUserToolState<HexWaterData>.ApplyBrush(int, int2, int, HexWaterData, int) BrushUserToolState<HexWaterData>.CanBeAppliedToManyPoints(int) BrushUserToolState<HexWaterData>.IsAppliedToEveryCellOnMap(int) BrushUserToolState<HexWaterData>.GetBrushTarget() UserToolState.Settings UserToolState.IsSubstatesVisible UserToolState.SubStateMachine UserToolState.UserToolAPI UserToolState.HasSubtools UserToolState.IsChangeViewMode UserToolState.RequiredViewMode UserToolState.OriginalViewMode UserToolState.ShowSettingsScreen<TViewData, TScreen>(TViewData) UserToolState.GetUIScreen<TScreen>() UserToolState.HideSettingsScreen<TScreen>() UserToolState.SetupPlanetCursor(bool, int) UserToolState.SetupPlanetCursor(bool, int, Color32) UserToolState.SetupPlanetCursor(bool, int, Color32, bool) UserToolState.SetupPlanetCursor(bool) UserToolState.TrySetViewMode() UserToolState.TryRestoreViewMode() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States Assembly: fwt.hexterrains.dll Syntax public class StampWaterBiomeUserToolState : StampSurfaceBiomeUserToolStateBase<HexWaterData>, ISmState Constructors StampWaterBiomeUserToolState(IUserToolAPI) Declaration public StampWaterBiomeUserToolState(IUserToolAPI userToolAPI) Parameters Type Name Description IUserToolAPI userToolAPI Properties UserToolType Declaration public override int UserToolType { get; } Property Value Type Description int Overrides UserToolState.UserToolType Methods InitDefaultSettings() Declaration protected override void InitDefaultSettings() Overrides StampUserToolStateBase<HexWaterData, byte>.InitDefaultSettings() Implements ISmState Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.StampWaterHeightUserToolState.html": {
    "href": "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.StampWaterHeightUserToolState.html",
    "title": "Class StampWaterHeightUserToolState | Hex Terrains",
    "summary": "Class StampWaterHeightUserToolState Inheritance object SmState UserToolState BrushUserToolState<HexWaterData> BrushUserToolState<HexWaterData, UserToolSettingsDataSource> BrushUserToolState<HexWaterData, UserToolSettingsDataSource, UniversalToolSettingsScreen> StampUserToolStateBase<HexWaterData, byte> StampSurfaceHeightUserToolStateBase<HexWaterData> StampWaterHeightUserToolState Implements ISmState Inherited Members StampSurfaceHeightUserToolStateBase<HexWaterData>.ReadOriginCellData(int, out byte) StampSurfaceHeightUserToolStateBase<HexWaterData>.SetCellDataToTarget(int, byte) StampUserToolStateBase<HexWaterData, byte>.OriginXCoord StampUserToolStateBase<HexWaterData, byte>.OriginYCoord StampUserToolStateBase<HexWaterData, byte>.OriginCoordinate StampUserToolStateBase<HexWaterData, byte>.OriginCellIndex StampUserToolStateBase<HexWaterData, byte>.ReadCellKey StampUserToolStateBase<HexWaterData, byte>.StartPaintCellCoord StampUserToolStateBase<HexWaterData, byte>.PrepareToRun() StampUserToolStateBase<HexWaterData, byte>.InitDefaultSettings() StampUserToolStateBase<HexWaterData, byte>.UpdateBrush() StampUserToolStateBase<HexWaterData, byte>.ApplyBrush(int, int2, int, HexWaterData, int) StampUserToolStateBase<HexWaterData, byte>.ReadOriginCellData(int, out byte) StampUserToolStateBase<HexWaterData, byte>.SetCellDataToTarget(int, byte) BrushUserToolState<HexWaterData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.SettingsScreen BrushUserToolState<HexWaterData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.PrepareToRun() BrushUserToolState<HexWaterData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.PrepareToStop() BrushUserToolState<HexWaterData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.GetSettingsScreen() BrushUserToolState<HexWaterData, UserToolSettingsDataSource, UniversalToolSettingsScreen>.UpdateSettingsScreen() BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.DataSource BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.SettingsPlayerPrefsKeyName BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.PrepareToRun() BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.InitSettings() BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.InitDefaultSettings() BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.PrepareToStop() BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.LoadSettings() BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.SaveSettings() BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.SaveSettingsValue<TValue>(string, TValue) BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.LoadSettingsValue<TValue>(string, TValue) BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.TryLoadSettingsValue<TValue>(string, out TValue) BrushUserToolState<HexWaterData, UserToolSettingsDataSource>.LoadSettingsValueOrDefault<TValue>(string, TValue) BrushUserToolState<HexWaterData>.PrevChangeTimeStamp BrushUserToolState<HexWaterData>.TimeTreshold BrushUserToolState<HexWaterData>.CanChangeBrushSize BrushUserToolState<HexWaterData>.AllowRightMouseButton BrushUserToolState<HexWaterData>.CursorColor BrushUserToolState<HexWaterData>.ChangeModeKey BrushUserToolState<HexWaterData>.ChangeBrushSizeKey BrushUserToolState<HexWaterData>.IncreaseBrushSizeKey BrushUserToolState<HexWaterData>.IncreaseBrushSizeKey2 BrushUserToolState<HexWaterData>.DecreaseBrushSizeKey BrushUserToolState<HexWaterData>.DecreaseBrushSizeKey2 BrushUserToolState<HexWaterData>.ChangeOpacityKey BrushUserToolState<HexWaterData>.IsTimeTresholdPassed BrushUserToolState<HexWaterData>.BrushSize BrushUserToolState<HexWaterData>.BrushOpacity BrushUserToolState<HexWaterData>.ChangeOpacityMultiplier BrushUserToolState<HexWaterData>.SetNewTimestamp() BrushUserToolState<HexWaterData>.PrepareToRun() BrushUserToolState<HexWaterData>.PrepareToStop() BrushUserToolState<HexWaterData>.Tick() BrushUserToolState<HexWaterData>.UpdateBrush() BrushUserToolState<HexWaterData>.TryApplyBrush() BrushUserToolState<HexWaterData>.ApplyToSingleCell(int, int2, int, HexWaterData, int) BrushUserToolState<HexWaterData>.ApplyBrushToAllCells(int, HexTerrainSettings, HexWaterData, int) BrushUserToolState<HexWaterData>.ApplyBrushToAllBrushPoints(int, int2, int, HexTerrainSettings, HexWaterData, int) BrushUserToolState<HexWaterData>.ApplyBrush(int, int2, int, HexWaterData, int) BrushUserToolState<HexWaterData>.CanBeAppliedToManyPoints(int) BrushUserToolState<HexWaterData>.IsAppliedToEveryCellOnMap(int) BrushUserToolState<HexWaterData>.GetBrushTarget() UserToolState.Settings UserToolState.IsSubstatesVisible UserToolState.SubStateMachine UserToolState.UserToolAPI UserToolState.HasSubtools UserToolState.IsChangeViewMode UserToolState.RequiredViewMode UserToolState.OriginalViewMode UserToolState.ShowSettingsScreen<TViewData, TScreen>(TViewData) UserToolState.GetUIScreen<TScreen>() UserToolState.HideSettingsScreen<TScreen>() UserToolState.SetupPlanetCursor(bool, int) UserToolState.SetupPlanetCursor(bool, int, Color32) UserToolState.SetupPlanetCursor(bool, int, Color32, bool) UserToolState.SetupPlanetCursor(bool) UserToolState.TrySetViewMode() UserToolState.TryRestoreViewMode() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States Assembly: fwt.hexterrains.dll Syntax public class StampWaterHeightUserToolState : StampSurfaceHeightUserToolStateBase<HexWaterData>, ISmState Constructors StampWaterHeightUserToolState(IUserToolAPI) Declaration public StampWaterHeightUserToolState(IUserToolAPI userToolAPI) Parameters Type Name Description IUserToolAPI userToolAPI Properties UserToolType Declaration public override int UserToolType { get; } Property Value Type Description int Overrides UserToolState.UserToolType Methods InitDefaultSettings() Declaration protected override void InitDefaultSettings() Overrides StampUserToolStateBase<HexWaterData, byte>.InitDefaultSettings() Implements ISmState Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.html": {
    "href": "api/Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States.html",
    "title": "Namespace Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States | Hex Terrains",
    "summary": "Namespace Fwt.HexTerrains.TerrainEditors.UserTools.StateMachines.States Classes AddGroundNoiseUserToolState AddNoiseUserToolState<TBrushTarget> AddWaterNoiseUserToolState ApplyGroundHeightmapUserToolState ApplyHeightmapUserToolState<TBrushTarget> ApplyWaterHeightmapUserToolState AutoPaintGroundUserToolState AutoPaintUserToolState<TBrushTarget> AutoPaintWaterUserToolState CreateNewTerrainUserToolStateBase<TScreen, TCallback> DeformGroundUserToolState DeformHeightUserToolState<TBrushTarget> DeformWaterUserToolState LevelGroundUserToolState LevelTerrainUserToolState<TBrushTarget> LevelWaterUserToolState LoadTerrainUserToolStateBase<TScreen, TCallback> PaintAreasUserToolState<TBrushTarget> PaintCellEntitiesUserToolState<TBrushTarget, THexSurface> PaintCellEntityPropsToolState PaintCellItemPropsUserToolState PaintCellItemsUserToolState<TBrushTarget, THexSurface> PaintCountriesUserToolState PaintGroundBiomesUserToolState PaintProvincesUserToolState PaintTerrainUserToolState<TBrushTarget> PaintWaterBiomesUserToolState PointerUserToolState ResizeTerrainUserToolStateBase<TScreen, TCallback> SaveTerrainUserToolStateBase<TScreen, TCallback> SmoothGroundUserToolState SmoothTerrainUserToolState<TBrushTarget> SmoothWaterUserToolState StampAreaUserToolStateBase<TBrushTarget> StampCellEntitiesUserToolStateBase<TBrushTarget> StampCellEntityPropsUserToolState StampCellItemPropsUserToolState StampCellItemsToolStateBase<TBrushTarget> StampCountriesUserToolState StampGroundBiomeUserToolState StampGroundHeightUserToolState StampProvincesUserToolState StampSurfaceBiomeUserToolStateBase<TBrushTarget> StampSurfaceHeightUserToolStateBase<TBrushTarget> StampUserToolStateBase<TBrushTarget, TCellData> StampWaterBiomeUserToolState StampWaterHeightUserToolState"
  },
  "api/Fwt.HexTerrains.TerrainEditors.UserTools.Systems.CreateUserToolsDataSystem-2.html": {
    "href": "api/Fwt.HexTerrains.TerrainEditors.UserTools.Systems.CreateUserToolsDataSystem-2.html",
    "title": "Class CreateUserToolsDataSystem<TUserToolsData, TRequest> | Hex Terrains",
    "summary": "Class CreateUserToolsDataSystem<TUserToolsData, TRequest> Inheritance object ComponentSystemBase SystemBase CreateUserToolsDataSystem<TUserToolsData, TRequest> CreateSamplesUserToolsDataSystem Inherited Members SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.OnUpdate() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.TerrainEditors.UserTools.Systems Assembly: fwt.hexterrains.dll Syntax public abstract class CreateUserToolsDataSystem<TUserToolsData, TRequest> : SystemBase where TUserToolsData : UserToolsData Type Parameters Name Description TUserToolsData TRequest Methods CreateData(Entity, Entity, Entity, TRequest, EntityCommandBuffer) Declaration protected virtual TUserToolsData CreateData(Entity userToolsEntity, Entity terrainEntity, Entity terrainPrefab, TRequest request, EntityCommandBuffer ecb) Parameters Type Name Description Entity userToolsEntity Entity terrainEntity Entity terrainPrefab TRequest request EntityCommandBuffer ecb Returns Type Description TUserToolsData CreateUISystemAPI(Entity, TRequest) Declaration protected abstract IUISystemAPI CreateUISystemAPI(Entity terrainEntity, TRequest request) Parameters Type Name Description Entity terrainEntity TRequest request Returns Type Description IUISystemAPI CreateUserToolAPI(Entity, TRequest) Declaration protected virtual IUserToolAPI CreateUserToolAPI(Entity terrainEntity, TRequest request) Parameters Type Name Description Entity terrainEntity TRequest request Returns Type Description IUserToolAPI CreateUserToolsData(Entity, TRequest) Declaration protected abstract TUserToolsData CreateUserToolsData(Entity terrainEntity, TRequest request) Parameters Type Name Description Entity terrainEntity TRequest request Returns Type Description TUserToolsData Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.TerrainEditors.UserTools.Systems.UpdateUserToolsStateMachineSystem-1.html": {
    "href": "api/Fwt.HexTerrains.TerrainEditors.UserTools.Systems.UpdateUserToolsStateMachineSystem-1.html",
    "title": "Class UpdateUserToolsStateMachineSystem<TUserToolsData> | Hex Terrains",
    "summary": "Class UpdateUserToolsStateMachineSystem<TUserToolsData> Inheritance object ComponentSystemBase SystemBase UpdateUserToolsStateMachineSystem<TUserToolsData> UpdateSamplesUserToolsStateMachineSystem Inherited Members SystemBase.Dependency SystemBase.CheckedStateRef SystemBase.CompleteDependency() SystemBase.Entities SystemBase.Job SystemBase.Update() SystemBase.OnUpdate() SystemBase.GetComponent<T>(Entity) SystemBase.SetComponent<T>(Entity, T) SystemBase.HasComponent<T>(Entity) SystemBase.HasBuffer<T>(Entity) SystemBase.GetComponentLookup<T>(bool) SystemBase.GetComponentDataFromEntity<T>(bool) SystemBase.GetBuffer<T>(Entity, bool) SystemBase.GetBufferLookup<T>(bool) SystemBase.GetBufferFromEntity<T>(bool) SystemBase.GetEntityStorageInfoLookup() SystemBase.GetStorageInfoFromEntity() SystemBase.Exists(Entity) ComponentSystemBase.Enabled ComponentSystemBase.EntityQueries ComponentSystemBase.GlobalSystemVersion ComponentSystemBase.LastSystemVersion ComponentSystemBase.EntityManager ComponentSystemBase.World ComponentSystemBase.SystemHandle ComponentSystemBase.SystemHandleUntyped ComponentSystemBase.Time ComponentSystemBase.WorldUpdateAllocator ComponentSystemBase.OnCreate() ComponentSystemBase.OnStartRunning() ComponentSystemBase.OnStopRunning() ComponentSystemBase.OnDestroy() ComponentSystemBase.ShouldRunSystem() ComponentSystemBase.GetComponentTypeHandle<T>(bool) ComponentSystemBase.GetDynamicComponentTypeHandle(ComponentType) ComponentSystemBase.GetBufferTypeHandle<T>(bool) ComponentSystemBase.GetSharedComponentTypeHandle<T>() ComponentSystemBase.GetDynamicSharedComponentTypeHandle(ComponentType) ComponentSystemBase.GetEntityTypeHandle() ComponentSystemBase.RequireForUpdate(EntityQuery) ComponentSystemBase.RequireAnyForUpdate(params EntityQuery[]) ComponentSystemBase.RequireAnyForUpdate(NativeArray<EntityQuery>) ComponentSystemBase.RequireForUpdate<T>() ComponentSystemBase.RequireSingletonForUpdate<T>() ComponentSystemBase.HasSingleton<T>() ComponentSystemBase.GetSingleton<T>() ComponentSystemBase.GetSingletonRW<T>() ComponentSystemBase.GetSingletonBuffer<T>(bool) ComponentSystemBase.TryGetSingleton<T>(out T) ComponentSystemBase.TryGetSingletonBuffer<T>(out DynamicBuffer<T>) ComponentSystemBase.SetSingleton<T>(T) ComponentSystemBase.GetSingletonEntity<T>() ComponentSystemBase.TryGetSingletonEntity<T>(out Entity) ComponentSystemBase.GetEntityQuery(params ComponentType[]) ComponentSystemBase.GetEntityQuery(NativeArray<ComponentType>) ComponentSystemBase.GetEntityQuery(params EntityQueryDesc[]) ComponentSystemBase.GetEntityQuery(in EntityQueryBuilder) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.TerrainEditors.UserTools.Systems Assembly: fwt.hexterrains.dll Syntax public abstract class UpdateUserToolsStateMachineSystem<TUserToolsData> : SystemBase where TUserToolsData : UserToolsData Type Parameters Name Description TUserToolsData Methods UpdateData(TUserToolsData) Declaration protected virtual void UpdateData(TUserToolsData data) Parameters Type Name Description TUserToolsData data Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.TerrainEditors.UserTools.Systems.html": {
    "href": "api/Fwt.HexTerrains.TerrainEditors.UserTools.Systems.html",
    "title": "Namespace Fwt.HexTerrains.TerrainEditors.UserTools.Systems | Hex Terrains",
    "summary": "Namespace Fwt.HexTerrains.TerrainEditors.UserTools.Systems Classes CreateUserToolsDataSystem<TUserToolsData, TRequest> UpdateUserToolsStateMachineSystem<TUserToolsData>"
  },
  "api/Fwt.HexTerrains.TerrainEditors.UserTools.UI.ToolSettingsScreen-1.html": {
    "href": "api/Fwt.HexTerrains.TerrainEditors.UserTools.UI.ToolSettingsScreen-1.html",
    "title": "Class ToolSettingsScreen<TSettings> | Hex Terrains",
    "summary": "Class ToolSettingsScreen<TSettings> Inheritance object Object Component Behaviour MonoBehaviour UIView UIDocumentView UIScreen ToolSettingsScreen ToolSettingsScreen<TSettings> UniversalToolSettingsScreen Implements IViewDataReceiver<TSettings> Inherited Members UIScreen.Name UIScreen.Show() UIScreen.Hide() UIDocumentView.UIDocument UIDocumentView.Start() UIDocumentView.OnValidate() UIDocumentView.OnEnable() UIDocumentView.OnDisable() UIDocumentView.TryGetRootElement(out VisualElement) UIDocumentView.FindUIDocument() UIDocumentView.DisposeUI() UIDocumentView.AssignButtonClickEvent(VisualElement, string, Action) UIDocumentView.InitIntegerField(VisualElement, string, EventCallback<ChangeEvent<int>>, int) UIDocumentView.InitFloatField(VisualElement, string, EventCallback<ChangeEvent<float>>, float) UIDocumentView.InitTextField(VisualElement, string, EventCallback<ChangeEvent<string>>, string) UIDocumentView.InitSlider(VisualElement, string, EventCallback<ChangeEvent<int>>, int) UIDocumentView.InitSlider(VisualElement, string, EventCallback<ChangeEvent<float>>, int) UIDocumentView.InitVector2Field(VisualElement, string, EventCallback<ChangeEvent<Vector2>>, Vector2) UIDocumentView.InitVector2IntField(VisualElement, string, EventCallback<ChangeEvent<Vector2Int>>, Vector2Int) UIView.Transform UIView.RectTransform UIView.Awake() UIView.OnDestroy() MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.TerrainEditors.UserTools.UI Assembly: fwt.hexterrains.dll Syntax public abstract class ToolSettingsScreen<TSettings> : ToolSettingsScreen, IViewDataReceiver<TSettings> Type Parameters Name Description TSettings Properties ViewData Declaration public TSettings ViewData { get; } Property Value Type Description TSettings Methods InitUI() Declaration protected override void InitUI() Overrides UIDocumentView.InitUI() SetViewData(TSettings) Declaration public virtual void SetViewData(TSettings viewData) Parameters Type Name Description TSettings viewData Implements IViewDataReceiver<TViewData> Extension Methods Extensions_UnityObject.SmartDestroy<TObject>(TObject) Extensions_UnityObject.SmartDisableGameObject<TObject>(TObject) Extensions_UnityObject.SmartEnableGameObject<TObject>(TObject) HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.TerrainEditors.UserTools.UI.ToolSettingsScreen.html": {
    "href": "api/Fwt.HexTerrains.TerrainEditors.UserTools.UI.ToolSettingsScreen.html",
    "title": "Class ToolSettingsScreen | Hex Terrains",
    "summary": "Class ToolSettingsScreen Inheritance object Object Component Behaviour MonoBehaviour UIView UIDocumentView UIScreen ToolSettingsScreen ToolSettingsScreen<TSettings> Inherited Members UIScreen.Name UIScreen.Show() UIScreen.Hide() UIDocumentView.UIDocument UIDocumentView.Start() UIDocumentView.OnValidate() UIDocumentView.OnEnable() UIDocumentView.OnDisable() UIDocumentView.TryGetRootElement(out VisualElement) UIDocumentView.FindUIDocument() UIDocumentView.InitUI() UIDocumentView.DisposeUI() UIDocumentView.AssignButtonClickEvent(VisualElement, string, Action) UIDocumentView.InitIntegerField(VisualElement, string, EventCallback<ChangeEvent<int>>, int) UIDocumentView.InitFloatField(VisualElement, string, EventCallback<ChangeEvent<float>>, float) UIDocumentView.InitTextField(VisualElement, string, EventCallback<ChangeEvent<string>>, string) UIDocumentView.InitSlider(VisualElement, string, EventCallback<ChangeEvent<int>>, int) UIDocumentView.InitSlider(VisualElement, string, EventCallback<ChangeEvent<float>>, int) UIDocumentView.InitVector2Field(VisualElement, string, EventCallback<ChangeEvent<Vector2>>, Vector2) UIDocumentView.InitVector2IntField(VisualElement, string, EventCallback<ChangeEvent<Vector2Int>>, Vector2Int) UIView.Transform UIView.RectTransform UIView.Awake() UIView.OnDestroy() MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.TerrainEditors.UserTools.UI Assembly: fwt.hexterrains.dll Syntax public abstract class ToolSettingsScreen : UIScreen Extension Methods Extensions_UnityObject.SmartDestroy<TObject>(TObject) Extensions_UnityObject.SmartDisableGameObject<TObject>(TObject) Extensions_UnityObject.SmartEnableGameObject<TObject>(TObject) HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.TerrainEditors.UserTools.UI.UniversalToolSettingsScreen.html": {
    "href": "api/Fwt.HexTerrains.TerrainEditors.UserTools.UI.UniversalToolSettingsScreen.html",
    "title": "Class UniversalToolSettingsScreen | Hex Terrains",
    "summary": "Class UniversalToolSettingsScreen Inheritance object Object Component Behaviour MonoBehaviour UIView UIDocumentView UIScreen ToolSettingsScreen ToolSettingsScreen<UserToolSettingsDataSource> UniversalToolSettingsScreen Implements IViewDataReceiver<UserToolSettingsDataSource> Inherited Members ToolSettingsScreen<UserToolSettingsDataSource>.ViewData ToolSettingsScreen<UserToolSettingsDataSource>.InitUI() ToolSettingsScreen<UserToolSettingsDataSource>.SetViewData(UserToolSettingsDataSource) UIScreen.Name UIScreen.Show() UIScreen.Hide() UIDocumentView.UIDocument UIDocumentView.Start() UIDocumentView.OnValidate() UIDocumentView.OnEnable() UIDocumentView.OnDisable() UIDocumentView.TryGetRootElement(out VisualElement) UIDocumentView.FindUIDocument() UIDocumentView.DisposeUI() UIDocumentView.AssignButtonClickEvent(VisualElement, string, Action) UIDocumentView.InitIntegerField(VisualElement, string, EventCallback<ChangeEvent<int>>, int) UIDocumentView.InitFloatField(VisualElement, string, EventCallback<ChangeEvent<float>>, float) UIDocumentView.InitTextField(VisualElement, string, EventCallback<ChangeEvent<string>>, string) UIDocumentView.InitSlider(VisualElement, string, EventCallback<ChangeEvent<int>>, int) UIDocumentView.InitSlider(VisualElement, string, EventCallback<ChangeEvent<float>>, int) UIDocumentView.InitVector2Field(VisualElement, string, EventCallback<ChangeEvent<Vector2>>, Vector2) UIDocumentView.InitVector2IntField(VisualElement, string, EventCallback<ChangeEvent<Vector2Int>>, Vector2Int) UIView.Transform UIView.RectTransform UIView.Awake() UIView.OnDestroy() MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.TerrainEditors.UserTools.UI Assembly: fwt.hexterrains.dll Syntax public class UniversalToolSettingsScreen : ToolSettingsScreen<UserToolSettingsDataSource>, IViewDataReceiver<UserToolSettingsDataSource> Implements IViewDataReceiver<TViewData> Extension Methods Extensions_UnityObject.SmartDestroy<TObject>(TObject) Extensions_UnityObject.SmartDisableGameObject<TObject>(TObject) Extensions_UnityObject.SmartEnableGameObject<TObject>(TObject) HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.TerrainEditors.UserTools.UI.UserToolsScreen.html": {
    "href": "api/Fwt.HexTerrains.TerrainEditors.UserTools.UI.UserToolsScreen.html",
    "title": "Class UserToolsScreen | Hex Terrains",
    "summary": "Class UserToolsScreen Inheritance object Object Component Behaviour MonoBehaviour UIView UIDocumentView UIScreen UIScreen<UserToolsPanelDataSource> UserToolsScreen Implements IViewDataReceiver<UserToolsScreenCallbacks> Inherited Members UIScreen<UserToolsPanelDataSource>.ViewData UIScreen<UserToolsPanelDataSource>.InitUI() UIScreen<UserToolsPanelDataSource>.SetViewData(UserToolsPanelDataSource) UIScreen<UserToolsPanelDataSource>.SetUIDocumentViewData(UserToolsPanelDataSource) UIScreen.Name UIScreen.Show() UIScreen.Hide() UIDocumentView.UIDocument UIDocumentView.Start() UIDocumentView.OnValidate() UIDocumentView.OnEnable() UIDocumentView.OnDisable() UIDocumentView.TryGetRootElement(out VisualElement) UIDocumentView.FindUIDocument() UIDocumentView.DisposeUI() UIDocumentView.AssignButtonClickEvent(VisualElement, string, Action) UIDocumentView.InitIntegerField(VisualElement, string, EventCallback<ChangeEvent<int>>, int) UIDocumentView.InitFloatField(VisualElement, string, EventCallback<ChangeEvent<float>>, float) UIDocumentView.InitTextField(VisualElement, string, EventCallback<ChangeEvent<string>>, string) UIDocumentView.InitSlider(VisualElement, string, EventCallback<ChangeEvent<int>>, int) UIDocumentView.InitSlider(VisualElement, string, EventCallback<ChangeEvent<float>>, int) UIDocumentView.InitVector2Field(VisualElement, string, EventCallback<ChangeEvent<Vector2>>, Vector2) UIDocumentView.InitVector2IntField(VisualElement, string, EventCallback<ChangeEvent<Vector2Int>>, Vector2Int) UIView.Transform UIView.RectTransform UIView.OnDestroy() MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.TerrainEditors.UserTools.UI Assembly: fwt.hexterrains.dll Syntax public class UserToolsScreen : UIScreen<UserToolsPanelDataSource>, IViewDataReceiver<UserToolsScreenCallbacks> Fields Callbacks Declaration protected UserToolsScreenCallbacks Callbacks Field Value Type Description UserToolsScreenCallbacks DataSource Declaration public UserToolsPanelDataSource DataSource Field Value Type Description UserToolsPanelDataSource UserToolAuthoring Declaration public UserToolDataSourceAutoring UserToolAuthoring Field Value Type Description UserToolDataSourceAutoring Methods Awake() Declaration protected override void Awake() Overrides UIView.Awake() InitDataSource() Declaration protected virtual void InitDataSource() OnUserToolSelected(int) Declaration protected virtual void OnUserToolSelected(int userToolType) Parameters Type Name Description int userToolType SetViewData(UserToolsScreenCallbacks) Sets the callbacks for the screen (for example, OnUserToolSelected) Declaration public virtual void SetViewData(UserToolsScreenCallbacks callbacks) Parameters Type Name Description UserToolsScreenCallbacks callbacks Implements IViewDataReceiver<TViewData> Extension Methods Extensions_UnityObject.SmartDestroy<TObject>(TObject) Extensions_UnityObject.SmartDisableGameObject<TObject>(TObject) Extensions_UnityObject.SmartEnableGameObject<TObject>(TObject) HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.TerrainEditors.UserTools.UI.UserToolsScreenCallbacks.html": {
    "href": "api/Fwt.HexTerrains.TerrainEditors.UserTools.UI.UserToolsScreenCallbacks.html",
    "title": "Struct UserToolsScreenCallbacks | Hex Terrains",
    "summary": "Struct UserToolsScreenCallbacks Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.TerrainEditors.UserTools.UI Assembly: fwt.hexterrains.dll Syntax public struct UserToolsScreenCallbacks Fields OnUserToolSelected Declaration public Func<int, UserToolState> OnUserToolSelected Field Value Type Description Func<int, UserToolState> Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.TerrainEditors.UserTools.UI.html": {
    "href": "api/Fwt.HexTerrains.TerrainEditors.UserTools.UI.html",
    "title": "Namespace Fwt.HexTerrains.TerrainEditors.UserTools.UI | Hex Terrains",
    "summary": "Namespace Fwt.HexTerrains.TerrainEditors.UserTools.UI Classes ToolSettingsScreen ToolSettingsScreen<TSettings> UniversalToolSettingsScreen UserToolsScreen Structs UserToolsScreenCallbacks"
  },
  "api/Fwt.HexTerrains.TerrainEditors.UserTools.UserToolDataAuthoring.html": {
    "href": "api/Fwt.HexTerrains.TerrainEditors.UserTools.UserToolDataAuthoring.html",
    "title": "Class UserToolDataAuthoring | Hex Terrains",
    "summary": "Class UserToolDataAuthoring Inheritance object Object Component Behaviour MonoBehaviour UserToolDataAuthoring SamplesUserToolDataAuthoring Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.TerrainEditors.UserTools Assembly: fwt.hexterrains.dll Syntax public abstract class UserToolDataAuthoring : MonoBehaviour Extension Methods Extensions_UnityObject.SmartDestroy<TObject>(TObject) Extensions_UnityObject.SmartDisableGameObject<TObject>(TObject) Extensions_UnityObject.SmartEnableGameObject<TObject>(TObject) HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.TerrainEditors.UserTools.UserToolDataBaker-2.html": {
    "href": "api/Fwt.HexTerrains.TerrainEditors.UserTools.UserToolDataBaker-2.html",
    "title": "Class UserToolDataBaker<TAuthoring, TRequest> | Hex Terrains",
    "summary": "Class UserToolDataBaker<TAuthoring, TRequest> Inheritance object IBaker Baker<TAuthoring> UserToolDataBaker<TAuthoring, TRequest> SamplesUserToolDataBaker Inherited Members IBaker.GetSceneGUID() IBaker.GetComponent<T>() IBaker.GetComponent<T>(Component) IBaker.GetComponent<T>(GameObject) IBaker.GetComponents<T>(List<T>) IBaker.GetComponents<T>(Component, List<T>) IBaker.GetComponents<T>(GameObject, List<T>) IBaker.GetComponents<T>() IBaker.GetComponents<T>(Component) IBaker.GetComponents<T>(GameObject) IBaker.GetComponentInParent<T>() IBaker.GetComponentInParent<T>(Component) IBaker.GetComponentInParent<T>(GameObject) IBaker.GetComponentsInParent<T>(List<T>) IBaker.GetComponentsInParent<T>(Component, List<T>) IBaker.GetComponentsInParent<T>(GameObject, List<T>) IBaker.GetComponentsInParent<T>() IBaker.GetComponentsInParent<T>(Component) IBaker.GetComponentsInParent<T>(GameObject) IBaker.GetComponentInChildren<T>() IBaker.GetComponentInChildren<T>(Component) IBaker.GetComponentInChildren<T>(GameObject) IBaker.GetComponentsInChildren<T>(List<T>) IBaker.GetComponentsInChildren<T>(Component, List<T>) IBaker.GetComponentsInChildren<T>(GameObject, List<T>) IBaker.GetComponentsInChildren<T>() IBaker.GetComponentsInChildren<T>(Component) IBaker.GetComponentsInChildren<T>(GameObject) IBaker.GetParent() IBaker.GetParent(Component) IBaker.GetParent(GameObject) IBaker.GetParents() IBaker.GetParents(Component) IBaker.GetParents(GameObject) IBaker.GetParents(List<GameObject>) IBaker.GetParents(Component, List<GameObject>) IBaker.GetParents(GameObject, List<GameObject>) IBaker.GetChild(int) IBaker.GetChild(Component, int) IBaker.GetChild(GameObject, int) IBaker.GetChildren(bool) IBaker.GetChildren(Component, bool) IBaker.GetChildren(GameObject, bool) IBaker.GetChildren(List<GameObject>, bool) IBaker.GetChildren(Component, List<GameObject>, bool) IBaker.GetChildren(GameObject, List<GameObject>, bool) IBaker.GetChildCount() IBaker.GetChildCount(Component) IBaker.GetChildCount(GameObject) IBaker.GetName() IBaker.GetName(Component) IBaker.GetName(GameObject) IBaker.GetLayer() IBaker.GetLayer(Component) IBaker.GetLayer(GameObject) IBaker.GetTag() IBaker.GetTag(Component) IBaker.GetTag(GameObject) IBaker.GetEntity() IBaker.GetEntity(GameObject) IBaker.GetEntity(Component) IBaker.GetEntity(TransformUsageFlags) IBaker.GetEntity(GameObject, TransformUsageFlags) IBaker.GetEntity(Component, TransformUsageFlags) IBaker.GetEntityWithoutDependency() IBaker.IsActive() IBaker.IsActive(Component) IBaker.IsActive(GameObject) IBaker.IsActiveAndEnabled() IBaker.IsActiveAndEnabled(Component) IBaker.IsStatic() IBaker.IsStatic(Component) IBaker.IsStatic(GameObject) IBaker.IsClient() IBaker.IsServer() IBaker.DependsOn<T>(T) IBaker.DependsOnComponentInParent<T>() IBaker.DependsOnComponentInParent<T>(Component) IBaker.DependsOnComponentInParent<T>(GameObject) IBaker.DependsOnComponentsInParent<T>() IBaker.DependsOnComponentsInParent<T>(Component) IBaker.DependsOnComponentsInParent<T>(GameObject) IBaker.DependsOnComponentInChildren<T>() IBaker.DependsOnComponentInChildren<T>(Component) IBaker.DependsOnComponentInChildren<T>(GameObject) IBaker.DependsOnComponentsInChildren<T>() IBaker.DependsOnComponentsInChildren<T>(GameObject) IBaker.DependsOnComponentsInChildren<T>(Component) IBaker.DependsOnLightBaking() IBaker.AddBlobAsset<T>(ref BlobAssetReference<T>, out Hash128) IBaker.AddBlobAssetWithCustomHash<T>(ref BlobAssetReference<T>, Hash128) IBaker.TryGetBlobAssetReference<T>(Hash128, out BlobAssetReference<T>) IBaker.AddComponent<T>() IBaker.AddComponent<T>(in T) IBaker.AddComponent<T>(Entity) IBaker.AddComponent<T>(Entity, in T) IBaker.AddComponent(ComponentType) IBaker.AddComponent(Entity, ComponentType) IBaker.AddComponent(in ComponentTypeSet) IBaker.AddComponent(Entity, in ComponentTypeSet) IBaker.AddComponentObject<T>(T) IBaker.AddComponentObject<T>(Entity, T) IBaker.AddSharedComponentManaged<T>(T) IBaker.AddSharedComponentManaged<T>(Entity, T) IBaker.AddSharedComponent<T>(T) IBaker.AddSharedComponent<T>(Entity, T) IBaker.AddBuffer<T>() IBaker.AddBuffer<T>(Entity) IBaker.SetComponent<T>(Entity, in T) IBaker.SetComponentEnabled<T>(Entity, bool) IBaker.SetComponentEnabled<T>(bool) IBaker.SetSharedComponentManaged<T>(Entity, in T) IBaker.SetSharedComponent<T>(Entity, in T) IBaker.SetBuffer<T>() IBaker.SetBuffer<T>(Entity) IBaker.AppendToBuffer<T>(T) IBaker.AppendToBuffer<T>(Entity, T) IBaker.CreateAdditionalEntity() IBaker.CreateAdditionalEntity(TransformUsageFlags, bool, string) IBaker.CreateAdditionalEntities(NativeArray<Entity>, TransformUsageFlags, bool) IBaker.RegisterPrefabForBaking(GameObject) IBaker.AddTransformUsageFlags(TransformUsageFlags) IBaker.AddTransformUsageFlags(Entity, TransformUsageFlags) IBaker.IsBakingForEditor() IBaker.GetDotsSettings() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.TerrainEditors.UserTools Assembly: fwt.hexterrains.dll Syntax public abstract class UserToolDataBaker<TAuthoring, TRequest> : Baker<TAuthoring> where TAuthoring : UserToolDataAuthoring where TRequest : unmanaged, IComponentData Type Parameters Name Description TAuthoring TRequest Methods Bake(TAuthoring) Called in the baking process to bake the authoring component Declaration public override void Bake(TAuthoring authoring) Parameters Type Name Description TAuthoring authoring The authoring component to bake Overrides Unity.Entities.Baker<TAuthoring>.Bake(TAuthoring) Remarks This method will be called for every instance of TAuthoringType in order to bake that instance. GetCreateUserToolDataRequest(TAuthoring) Declaration protected abstract TRequest GetCreateUserToolDataRequest(TAuthoring authoring) Parameters Type Name Description TAuthoring authoring Returns Type Description TRequest Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.TerrainEditors.UserTools.UserToolDataSourceAutoring.html": {
    "href": "api/Fwt.HexTerrains.TerrainEditors.UserTools.UserToolDataSourceAutoring.html",
    "title": "Class UserToolDataSourceAutoring | Hex Terrains",
    "summary": "Class UserToolDataSourceAutoring Inheritance object Object Component Behaviour MonoBehaviour UserToolDataSourceAutoring Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.TerrainEditors.UserTools Assembly: fwt.hexterrains.dll Syntax public class UserToolDataSourceAutoring : MonoBehaviour Fields CustomUserToolType Declaration public int CustomUserToolType Field Value Type Description int Settings Declaration public UserToolSettings Settings Field Value Type Description UserToolSettings Subtools Declaration public List<UserToolDataSourceAutoring> Subtools Field Value Type Description List<UserToolDataSourceAutoring> UserToolType Declaration public UserToolTypes UserToolType Field Value Type Description UserToolTypes Methods CreateDataSource() Declaration public UserToolPanelItemDataSource CreateDataSource() Returns Type Description UserToolPanelItemDataSource Extension Methods Extensions_UnityObject.SmartDestroy<TObject>(TObject) Extensions_UnityObject.SmartDisableGameObject<TObject>(TObject) Extensions_UnityObject.SmartEnableGameObject<TObject>(TObject) HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.TerrainEditors.UserTools.UserToolPanelItemDataSource.html": {
    "href": "api/Fwt.HexTerrains.TerrainEditors.UserTools.UserToolPanelItemDataSource.html",
    "title": "Class UserToolPanelItemDataSource | Hex Terrains",
    "summary": "Class UserToolPanelItemDataSource Inheritance object UIDataSource UserToolPanelItemDataSource Implements IDataSourceViewHashProvider ICommitChanges Inherited Members UIDataSource.Version UIDataSource.MarkDirty() UIDataSource.GetViewHashCode() UIDataSource.CommitChanges() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.TerrainEditors.UserTools Assembly: fwt.hexterrains.dll Syntax public class UserToolPanelItemDataSource : UIDataSource, IDataSourceViewHashProvider, ICommitChanges Constructors UserToolPanelItemDataSource() Declaration public UserToolPanelItemDataSource() Fields AreSubtoolsVisible Declaration public bool AreSubtoolsVisible Field Value Type Description bool OnClick Declaration public Action OnClick Field Value Type Description Action SelectedSubtoolIndex Declaration public int SelectedSubtoolIndex Field Value Type Description int Settings Declaration public UserToolSettings Settings Field Value Type Description UserToolSettings SourceDataVersion Declaration public long SourceDataVersion Field Value Type Description long Subtools Declaration public List<UserToolPanelItemDataSource> Subtools Field Value Type Description List<UserToolPanelItemDataSource> UserToolType Declaration public int UserToolType Field Value Type Description int _isSelected Declaration protected bool _isSelected Field Value Type Description bool Properties IconImage Declaration [CreateProperty] public Background IconImage { get; } Property Value Type Description Background IsSelected Declaration public bool IsSelected { get; set; } Property Value Type Description bool IsSelectedDisplayStyle Declaration [CreateProperty] public DisplayStyle IsSelectedDisplayStyle { get; } Property Value Type Description DisplayStyle SelectedSubtool returns the clickedSubtool of index SelectedSubtoolIndex (if any) Declaration [CreateProperty] public UserToolPanelItemDataSource SelectedSubtool { get; } Property Value Type Description UserToolPanelItemDataSource SelectedSubtoolSubtools returns the subtools of the selected clickedSubtool (if any) Declaration [CreateProperty] public List<UserToolPanelItemDataSource> SelectedSubtoolSubtools { get; } Property Value Type Description List<UserToolPanelItemDataSource> Methods Init(UserToolsPanelDataSource, Action<UserToolPanelItemDataSource>) Declaration public void Init(UserToolsPanelDataSource userToolsRoot, Action<UserToolPanelItemDataSource> onClickCallback) Parameters Type Name Description UserToolsPanelDataSource userToolsRoot Action<UserToolPanelItemDataSource> onClickCallback OnIsSelectedChanged() Declaration protected virtual void OnIsSelectedChanged() OnSubtoolClick(UserToolPanelItemDataSource) Declaration public void OnSubtoolClick(UserToolPanelItemDataSource clickedSubtool) Parameters Type Name Description UserToolPanelItemDataSource clickedSubtool Implements UnityEngine.UIElements.IDataSourceViewHashProvider ICommitChanges Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.TerrainEditors.UserTools.UserToolParameterDataSource-1.html": {
    "href": "api/Fwt.HexTerrains.TerrainEditors.UserTools.UserToolParameterDataSource-1.html",
    "title": "Class UserToolParameterDataSource<TValue> | Hex Terrains",
    "summary": "Class UserToolParameterDataSource<TValue> Inheritance object UIDataSource ValueEditorDataSource ValueEditorDataSource<TValue> ValueEditorDataSourceMinMax<TValue> UserToolParameterDataSource<TValue> Implements IDataSourceViewHashProvider ICommitChanges Inherited Members ValueEditorDataSourceMinMax<TValue>.MinValue ValueEditorDataSourceMinMax<TValue>.MaxValue ValueEditorDataSourceMinMax<TValue>.ClampValue(TValue, TValue, TValue) ValueEditorDataSourceMinMax<TValue>.CommitChanges() ValueEditorDataSource<TValue>._value ValueEditorDataSource<TValue>.Value ValueEditorDataSource<TValue>.ValueType ValueEditorDataSource.Name ValueEditorDataSource.ValueChanged ValueEditorDataSource.IsClampValue ValueEditorDataSource.IsVisible ValueEditorDataSource.DisplayStyle ValueEditorDataSource.ClampValue<TValue>(TValue, TValue, TValue) ValueEditorDataSource.TryGetValue<TValue>(out TValue) ValueEditorDataSource.GetValueOrDefault<TValue>(TValue) ValueEditorDataSource.SetValue<TValue>(TValue) UIDataSource.Version UIDataSource.MarkDirty() UIDataSource.GetViewHashCode() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.TerrainEditors.UserTools Assembly: fwt.hexterrains.dll Syntax [Serializable] public class UserToolParameterDataSource<TValue> : ValueEditorDataSourceMinMax<TValue>, IDataSourceViewHashProvider, ICommitChanges Type Parameters Name Description TValue Implements UnityEngine.UIElements.IDataSourceViewHashProvider ICommitChanges Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.TerrainEditors.UserTools.UserToolSettings.html": {
    "href": "api/Fwt.HexTerrains.TerrainEditors.UserTools.UserToolSettings.html",
    "title": "Struct UserToolSettings | Hex Terrains",
    "summary": "Struct UserToolSettings Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.TerrainEditors.UserTools Assembly: fwt.hexterrains.dll Syntax [Serializable] public struct UserToolSettings Fields Description Declaration public string Description Field Value Type Description string IconColor Declaration public Color IconColor Field Value Type Description Color IconSprite Declaration public Sprite IconSprite Field Value Type Description Sprite IconTexture Declaration public Texture2D IconTexture Field Value Type Description Texture2D IsSelectable Declaration public bool IsSelectable Field Value Type Description bool Name Declaration public string Name Field Value Type Description string Properties Default Declaration public static UserToolSettings Default { get; } Property Value Type Description UserToolSettings Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.TerrainEditors.UserTools.UserToolSettingsDataSource.html": {
    "href": "api/Fwt.HexTerrains.TerrainEditors.UserTools.UserToolSettingsDataSource.html",
    "title": "Class UserToolSettingsDataSource | Hex Terrains",
    "summary": "Class UserToolSettingsDataSource Inheritance object UIDataSource UserToolSettingsDataSource Implements IDataSourceViewHashProvider ICommitChanges Inherited Members UIDataSource.Version UIDataSource.MarkDirty() UIDataSource.GetViewHashCode() UIDataSource.CommitChanges() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.TerrainEditors.UserTools Assembly: fwt.hexterrains.dll Syntax public class UserToolSettingsDataSource : UIDataSource, IDataSourceViewHashProvider, ICommitChanges Fields Name Declaration public string Name Field Value Type Description string Values Declaration public List<ValueEditorDataSource> Values Field Value Type Description List<ValueEditorDataSource> Methods AddValue(ValueEditorDataSource) Declaration public bool AddValue(ValueEditorDataSource value) Parameters Type Name Description ValueEditorDataSource value Returns Type Description bool ClearValues() Declaration public void ClearValues() GetValue<TValue>(int) Declaration public TValue GetValue<TValue>(int valueIndex) Parameters Type Name Description int valueIndex Returns Type Description TValue Type Parameters Name Description TValue HasValue(int) Declaration public bool HasValue(int valueIndex) Parameters Type Name Description int valueIndex Returns Type Description bool RemoveValue(ValueEditorDataSource) Declaration public bool RemoveValue(ValueEditorDataSource value) Parameters Type Name Description ValueEditorDataSource value Returns Type Description bool SetValue<TValue>(int, TValue) Declaration public bool SetValue<TValue>(int valueIndex, TValue value) Parameters Type Name Description int valueIndex TValue value Returns Type Description bool Type Parameters Name Description TValue Implements UnityEngine.UIElements.IDataSourceViewHashProvider ICommitChanges Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.TerrainEditors.UserTools.UserToolTypes.html": {
    "href": "api/Fwt.HexTerrains.TerrainEditors.UserTools.UserToolTypes.html",
    "title": "Enum UserToolTypes | Hex Terrains",
    "summary": "Enum UserToolTypes Namespace: Fwt.HexTerrains.TerrainEditors.UserTools Assembly: fwt.hexterrains.dll Syntax public enum UserToolTypes Fields Name Description CellEntityPropsPainting CellEntityPropsStamping CellItemPropsPainting CellItemPropsStamping CountriesPainting CountriesStamping CreateNewTerrain Custom GroundAutoPaint GroundBiomeStamping GroundDeformation GroundHeightStamping GroundHeightmaping GroundLeveling GroundNoising GroundPainting GroundSmoothing LoadTerrain None Pointer ProvincesPainting ProvincesStamping ResizeTerrain SaveTerrain WaterAutoPaint WaterBiomeStamping WaterDeformation WaterHeightStamping WaterHeightmaping WaterLeveling WaterNoising WaterPainting WaterSmoothing Extension Methods HashExtensions.GetHashCode_ValueType<UserToolTypes>(UserToolTypes, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.TerrainEditors.UserTools.UserToolsData.html": {
    "href": "api/Fwt.HexTerrains.TerrainEditors.UserTools.UserToolsData.html",
    "title": "Class UserToolsData | Hex Terrains",
    "summary": "Class UserToolsData Inheritance object UserToolsData SamplesUserToolsData Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.TerrainEditors.UserTools Assembly: fwt.hexterrains.dll Syntax public abstract class UserToolsData : IDisposable Fields StateMachine Declaration public UserToolStateMachine StateMachine Field Value Type Description UserToolStateMachine Methods CreateStateMachine(IUserToolAPI, Entity) Declaration protected abstract UserToolStateMachine CreateStateMachine(IUserToolAPI userToolAPI, Entity terrainPrefab) Parameters Type Name Description IUserToolAPI userToolAPI Entity terrainPrefab Returns Type Description UserToolStateMachine Dispose() Declaration public void Dispose() Init(IUserToolAPI, Entity) Declaration public virtual void Init(IUserToolAPI userToolAPI, Entity terrainPrefab) Parameters Type Name Description IUserToolAPI userToolAPI Entity terrainPrefab Implements IDisposable Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.TerrainEditors.UserTools.UserToolsPanelDataSource.html": {
    "href": "api/Fwt.HexTerrains.TerrainEditors.UserTools.UserToolsPanelDataSource.html",
    "title": "Class UserToolsPanelDataSource | Hex Terrains",
    "summary": "Class UserToolsPanelDataSource Inheritance object UIDataSource UserToolsPanelDataSource Implements IDataSourceViewHashProvider ICommitChanges Inherited Members UIDataSource.Version UIDataSource.MarkDirty() UIDataSource.GetViewHashCode() UIDataSource.CommitChanges() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.HexTerrains.TerrainEditors.UserTools Assembly: fwt.hexterrains.dll Syntax [Serializable] public class UserToolsPanelDataSource : UIDataSource, IDataSourceViewHashProvider, ICommitChanges Fields UserTools Declaration public UserToolPanelItemDataSource UserTools Field Value Type Description UserToolPanelItemDataSource _selectedUserSubtoolCache Declaration protected UserToolPanelItemDataSource _selectedUserSubtoolCache Field Value Type Description UserToolPanelItemDataSource _selectedUserToolCache Declaration protected UserToolPanelItemDataSource _selectedUserToolCache Field Value Type Description UserToolPanelItemDataSource Properties AreSubtoolsVisible Declaration public bool AreSubtoolsVisible { get; } Property Value Type Description bool SelectedSubtool Declaration [CreateProperty] public UserToolPanelItemDataSource SelectedSubtool { get; } Property Value Type Description UserToolPanelItemDataSource SelectedTool Declaration [CreateProperty] public UserToolPanelItemDataSource SelectedTool { get; } Property Value Type Description UserToolPanelItemDataSource SubtoolsPanelStyle Declaration [CreateProperty] public DisplayStyle SubtoolsPanelStyle { get; } Property Value Type Description DisplayStyle Methods Init(Action<int>) Declaration public void Init(Action<int> selectUserToolCallback) Parameters Type Name Description Action<int> selectUserToolCallback OnUserToolClick(UserToolPanelItemDataSource) Declaration public void OnUserToolClick(UserToolPanelItemDataSource userTool) Parameters Type Name Description UserToolPanelItemDataSource userTool Implements UnityEngine.UIElements.IDataSourceViewHashProvider ICommitChanges Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.TerrainEditors.UserTools.html": {
    "href": "api/Fwt.HexTerrains.TerrainEditors.UserTools.html",
    "title": "Namespace Fwt.HexTerrains.TerrainEditors.UserTools | Hex Terrains",
    "summary": "Namespace Fwt.HexTerrains.TerrainEditors.UserTools Classes CreateNewTerrainCallbackDataSource LoadTerrainCallbackDataSource ResizeTerrainCallbackDataSource SaveTerrainCallbackDataSource UserToolDataAuthoring UserToolDataBaker<TAuthoring, TRequest> UserToolDataSourceAutoring UserToolPanelItemDataSource UserToolParameterDataSource<TValue> UserToolSettingsDataSource UserToolsData UserToolsPanelDataSource Structs UserToolSettings Enums UserToolTypes"
  },
  "api/Fwt.HexTerrains.TerrainEditors.html": {
    "href": "api/Fwt.HexTerrains.TerrainEditors.html",
    "title": "Namespace Fwt.HexTerrains.TerrainEditors | Hex Terrains",
    "summary": "Namespace Fwt.HexTerrains.TerrainEditors Classes HexTerrainEditorAuthoring HexTerrainEditorBaker"
  },
  "api/Fwt.HexTerrains.UI.CreateNewTerrainScreenBase.html": {
    "href": "api/Fwt.HexTerrains.UI.CreateNewTerrainScreenBase.html",
    "title": "Class CreateNewTerrainScreenBase | Hex Terrains",
    "summary": "Class CreateNewTerrainScreenBase Base class for UI screens that show user a dialog with options to create a new terrain. Inheritance object Object Component Behaviour MonoBehaviour UIView UIDocumentView UIScreen UIScreen<CreateNewTerrainDataSource> CreateNewTerrainScreenBase CreateNewTerrainScreen Inherited Members UIScreen<CreateNewTerrainDataSource>.ViewData UIScreen<CreateNewTerrainDataSource>.InitUI() UIScreen<CreateNewTerrainDataSource>.SetViewData(CreateNewTerrainDataSource) UIScreen<CreateNewTerrainDataSource>.SetUIDocumentViewData(CreateNewTerrainDataSource) UIScreen.Name UIScreen.Show() UIScreen.Hide() UIDocumentView.UIDocument UIDocumentView.Start() UIDocumentView.OnValidate() UIDocumentView.OnEnable() UIDocumentView.OnDisable() UIDocumentView.TryGetRootElement(out VisualElement) UIDocumentView.FindUIDocument() UIDocumentView.DisposeUI() UIDocumentView.AssignButtonClickEvent(VisualElement, string, Action) UIDocumentView.InitIntegerField(VisualElement, string, EventCallback<ChangeEvent<int>>, int) UIDocumentView.InitFloatField(VisualElement, string, EventCallback<ChangeEvent<float>>, float) UIDocumentView.InitTextField(VisualElement, string, EventCallback<ChangeEvent<string>>, string) UIDocumentView.InitSlider(VisualElement, string, EventCallback<ChangeEvent<int>>, int) UIDocumentView.InitSlider(VisualElement, string, EventCallback<ChangeEvent<float>>, int) UIDocumentView.InitVector2Field(VisualElement, string, EventCallback<ChangeEvent<Vector2>>, Vector2) UIDocumentView.InitVector2IntField(VisualElement, string, EventCallback<ChangeEvent<Vector2Int>>, Vector2Int) UIView.Transform UIView.RectTransform UIView.Awake() UIView.OnDestroy() MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.UI Assembly: fwt.hexterrains.dll Syntax public abstract class CreateNewTerrainScreenBase : UIScreen<CreateNewTerrainDataSource> Methods Cancel() Cancels the creation of a new terrain and closes the screen. Declaration public virtual void Cancel() Create() Creates a new terrain. Declaration public abstract void Create() Extension Methods Extensions_UnityObject.SmartDestroy<TObject>(TObject) Extensions_UnityObject.SmartDisableGameObject<TObject>(TObject) Extensions_UnityObject.SmartEnableGameObject<TObject>(TObject) HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.UI.IMinimapScreen.html": {
    "href": "api/Fwt.HexTerrains.UI.IMinimapScreen.html",
    "title": "Interface IMinimapScreen | Hex Terrains",
    "summary": "Interface IMinimapScreen Interface for the minimap UI screen. When creating a new minimap screen, implement this interface to allow HexTerrains to interact with it. Namespace: Fwt.HexTerrains.UI Assembly: fwt.hexterrains.dll Syntax public interface IMinimapScreen Properties TexturesVersion Cached version of the color textures. If it is different from the version of Color Textures data, the screen will be updated with a new data. Declaration long TexturesVersion { get; } Property Value Type Description long ViewModeVersion Cached version of the view mode. If it is different from the version of View Mode data, the screen will be updated with a new data. Declaration long ViewModeVersion { get; } Property Value Type Description long Methods SetCameraControllerData(CameraControllerTarget, HexTerrainSettings) Set the camera controller data for the minimap. Called from system so UI screen can update its data. Declaration void SetCameraControllerData(CameraControllerTarget target, HexTerrainSettings terrainSettings) Parameters Type Name Description CameraControllerTarget target Target of the camera, the object that camera calculates a position relative too and looks at. HexTerrainSettings terrainSettings Settings of the terrain. Allows to calculate the area that HexTerrain is covered. Needed so camera teleports from side to side if Terrain has connected edges, otherwise prevents camera to move outside the terrain bounds SetColorTextures(NativeArray<ColorMapTexture>, long) Set the color textures for the minimap. Called from system so UI screen can update its data. Declaration void SetColorTextures(NativeArray<ColorMapTexture> textures, long texturesVersion) Parameters Type Name Description NativeArray<ColorMapTexture> textures new set of textures long texturesVersion version of textures provided SetViewMode(int, long) Set the view mode for the minimap. Called from system so UI screen can update its data. Declaration void SetViewMode(int viewMode, long version) Parameters Type Name Description int viewMode long version Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.UI.LoadFileScreenBase.html": {
    "href": "api/Fwt.HexTerrains.UI.LoadFileScreenBase.html",
    "title": "Class LoadFileScreenBase | Hex Terrains",
    "summary": "Class LoadFileScreenBase Base class for UI Screens that allows user to choose a file to load a saved terrain from. Inheritance object Object Component Behaviour MonoBehaviour UIView UIDocumentView UIScreen UIScreen<SaveFilesDataSource> LoadFileScreenBase LoadGameScreen Inherited Members UIScreen<SaveFilesDataSource>.ViewData UIScreen<SaveFilesDataSource>.InitUI() UIScreen<SaveFilesDataSource>.SetViewData(SaveFilesDataSource) UIScreen<SaveFilesDataSource>.SetUIDocumentViewData(SaveFilesDataSource) UIScreen.Name UIScreen.Show() UIScreen.Hide() UIDocumentView.UIDocument UIDocumentView.Start() UIDocumentView.OnValidate() UIDocumentView.OnDisable() UIDocumentView.TryGetRootElement(out VisualElement) UIDocumentView.FindUIDocument() UIDocumentView.DisposeUI() UIDocumentView.AssignButtonClickEvent(VisualElement, string, Action) UIDocumentView.InitIntegerField(VisualElement, string, EventCallback<ChangeEvent<int>>, int) UIDocumentView.InitFloatField(VisualElement, string, EventCallback<ChangeEvent<float>>, float) UIDocumentView.InitTextField(VisualElement, string, EventCallback<ChangeEvent<string>>, string) UIDocumentView.InitSlider(VisualElement, string, EventCallback<ChangeEvent<int>>, int) UIDocumentView.InitSlider(VisualElement, string, EventCallback<ChangeEvent<float>>, int) UIDocumentView.InitVector2Field(VisualElement, string, EventCallback<ChangeEvent<Vector2>>, Vector2) UIDocumentView.InitVector2IntField(VisualElement, string, EventCallback<ChangeEvent<Vector2Int>>, Vector2Int) UIView.Transform UIView.RectTransform UIView.Awake() UIView.OnDestroy() MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.UI Assembly: fwt.hexterrains.dll Syntax public abstract class LoadFileScreenBase : UIScreen<SaveFilesDataSource> Properties DefaultFileName The default file name to be used when no file is selected. Declaration public abstract string DefaultFileName { get; } Property Value Type Description string FileExtension The file extension for the files to be shown in a screen. Declaration public abstract string FileExtension { get; } Property Value Type Description string FilesDirectory The directory where the files are stored. Declaration public abstract string FilesDirectory { get; } Property Value Type Description string Methods Cancel() Cancels the loading process and hides the screen. Declaration public virtual void Cancel() CreateSaveFileData(string, string, string) Creates a new SaveFileData object with the specified parameters. This object is used in binding to a UI. Declaration public SaveFileData CreateSaveFileData(string name, string fileName, string description) Parameters Type Name Description string name Entry name (to show on UI) string fileName file name (without path) string description additional data about file to show on UI Returns Type Description SaveFileData Delete() Deletes the selected file. Declaration public virtual void Delete() GetSelectedFileFullName() Gets the full name of the selected file. Declaration public virtual string GetSelectedFileFullName() Returns Type Description string full file path Load() Loads the selected file. Declaration public virtual void Load() Load(string) Loads the file with the specified path. Declaration public abstract void Load(string fileName) Parameters Type Name Description string fileName OnDataChanged() Called when the data in the SaveFileData object changes. Increases the ViewData.Version, so UI will be updated. Declaration protected virtual void OnDataChanged() OnEnable() Called when the screen is enabled. Declaration protected override void OnEnable() Overrides UIDocumentView.OnEnable() RefreshDataSource() Refreshes the data source with the list of available save files. Declaration protected virtual void RefreshDataSource() Extension Methods Extensions_UnityObject.SmartDestroy<TObject>(TObject) Extensions_UnityObject.SmartDisableGameObject<TObject>(TObject) Extensions_UnityObject.SmartEnableGameObject<TObject>(TObject) HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.UI.MinimapScreen.ViewModeSettings.html": {
    "href": "api/Fwt.HexTerrains.UI.MinimapScreen.ViewModeSettings.html",
    "title": "Struct MinimapScreen.ViewModeSettings | Hex Terrains",
    "summary": "Struct MinimapScreen.ViewModeSettings Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.UI Assembly: fwt.hexterrains.dll Syntax [Serializable] public struct MinimapScreen.ViewModeSettings Fields VisibleTextureIndexes Declaration public List<int> VisibleTextureIndexes Field Value Type Description List<int> Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.UI.MinimapScreen.html": {
    "href": "api/Fwt.HexTerrains.UI.MinimapScreen.html",
    "title": "Class MinimapScreen | Hex Terrains",
    "summary": "Class MinimapScreen Inheritance object Object Component Behaviour MonoBehaviour UIView UIDocumentView UIScreen UIScreen<MinimapScreenDataSource> MinimapScreen SamplesMinimapScreen Implements IMinimapScreen Inherited Members UIScreen<MinimapScreenDataSource>.ViewData UIScreen<MinimapScreenDataSource>.InitUI() UIScreen<MinimapScreenDataSource>.SetViewData(MinimapScreenDataSource) UIScreen<MinimapScreenDataSource>.SetUIDocumentViewData(MinimapScreenDataSource) UIScreen.Name UIScreen.Show() UIScreen.Hide() UIDocumentView.UIDocument UIDocumentView.OnValidate() UIDocumentView.OnEnable() UIDocumentView.OnDisable() UIDocumentView.TryGetRootElement(out VisualElement) UIDocumentView.FindUIDocument() UIDocumentView.DisposeUI() UIDocumentView.AssignButtonClickEvent(VisualElement, string, Action) UIDocumentView.InitIntegerField(VisualElement, string, EventCallback<ChangeEvent<int>>, int) UIDocumentView.InitFloatField(VisualElement, string, EventCallback<ChangeEvent<float>>, float) UIDocumentView.InitTextField(VisualElement, string, EventCallback<ChangeEvent<string>>, string) UIDocumentView.InitSlider(VisualElement, string, EventCallback<ChangeEvent<int>>, int) UIDocumentView.InitSlider(VisualElement, string, EventCallback<ChangeEvent<float>>, int) UIDocumentView.InitVector2Field(VisualElement, string, EventCallback<ChangeEvent<Vector2>>, Vector2) UIDocumentView.InitVector2IntField(VisualElement, string, EventCallback<ChangeEvent<Vector2Int>>, Vector2Int) UIView.Transform UIView.RectTransform UIView.Awake() UIView.OnDestroy() MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.UI Assembly: fwt.hexterrains.dll Syntax public abstract class MinimapScreen : UIScreen<MinimapScreenDataSource>, IMinimapScreen Fields TexturesSource Declaration public ColorMapTexturesSource TexturesSource Field Value Type Description ColorMapTexturesSource ViewMode Declaration public int ViewMode Field Value Type Description int ViewModes Declaration public List<MinimapScreen.ViewModeSettings> ViewModes Field Value Type Description List<MinimapScreen.ViewModeSettings> _entityManager Declaration protected EntityManager _entityManager Field Value Type Description EntityManager _terrainsQuery Declaration protected EntityQuery _terrainsQuery Field Value Type Description EntityQuery _world Declaration protected World _world Field Value Type Description World Properties TexturesVersion Cached version of the color textures. If it is different from the version of Color Textures data, the screen will be updated with a new data. Declaration public long TexturesVersion { get; set; } Property Value Type Description long ViewModeVersion Cached version of the view mode. If it is different from the version of View Mode data, the screen will be updated with a new data. Declaration public long ViewModeVersion { get; set; } Property Value Type Description long Methods SetCameraControllerData(CameraControllerTarget, HexTerrainSettings) Set the camera controller data for the minimap. Called from system so UI screen can update its data. Declaration public virtual void SetCameraControllerData(CameraControllerTarget target, HexTerrainSettings terrainSettings) Parameters Type Name Description CameraControllerTarget target Target of the camera, the object that camera calculates a position relative too and looks at. HexTerrainSettings terrainSettings Settings of the terrain. Allows to calculate the area that HexTerrain is covered. Needed so camera teleports from side to side if Terrain has connected edges, otherwise prevents camera to move outside the terrain bounds SetColorTextures(NativeArray<ColorMapTexture>, long) Set the color textures for the minimap. Called from system so UI screen can update its data. Declaration public virtual void SetColorTextures(NativeArray<ColorMapTexture> textures, long texturesVersion) Parameters Type Name Description NativeArray<ColorMapTexture> textures new set of textures long texturesVersion version of textures provided SetViewMode(int) Declaration public virtual void SetViewMode(int viewMode) Parameters Type Name Description int viewMode SetViewMode(int, long) Set the view mode for the minimap. Called from system so UI screen can update its data. Declaration public virtual void SetViewMode(int viewMode, long version) Parameters Type Name Description int viewMode long version Start() Declaration protected override void Start() Overrides UIDocumentView.Start() Implements IMinimapScreen Extension Methods Extensions_UnityObject.SmartDestroy<TObject>(TObject) Extensions_UnityObject.SmartDisableGameObject<TObject>(TObject) Extensions_UnityObject.SmartEnableGameObject<TObject>(TObject) HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.UI.MinimapScreenBase.ViewModeSettings.html": {
    "href": "api/Fwt.HexTerrains.UI.MinimapScreenBase.ViewModeSettings.html",
    "title": "Struct MinimapScreenBase.ViewModeSettings | Hex Terrains",
    "summary": "Struct MinimapScreenBase.ViewModeSettings Configuration of the view mode. Tells which Color Textures to show in the minimap. Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.UI Assembly: fwt.hexterrains.dll Syntax [Serializable] public struct MinimapScreenBase.ViewModeSettings Fields VisibleTextureIndexes Declaration public List<int> VisibleTextureIndexes Field Value Type Description List<int> Extension Methods HashExtensions.GetHashCode_ValueType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.UI.MinimapScreenBase.html": {
    "href": "api/Fwt.HexTerrains.UI.MinimapScreenBase.html",
    "title": "Class MinimapScreenBase | Hex Terrains",
    "summary": "Class MinimapScreenBase Base class for the minimap UI screen. Inherit from this class to create a new minimap screen (optional). In reality you have to implement IMinimapScreen interface to allow HexTerrains to interact with your screen. Inheritance object Object Component Behaviour MonoBehaviour UIView UIDocumentView UIScreen UIScreen<MinimapScreenDataSource> MinimapScreenBase SamplesMinimapScreen Implements IMinimapScreen Inherited Members UIScreen<MinimapScreenDataSource>.ViewData UIScreen<MinimapScreenDataSource>.InitUI() UIScreen<MinimapScreenDataSource>.SetViewData(MinimapScreenDataSource) UIScreen<MinimapScreenDataSource>.SetUIDocumentViewData(MinimapScreenDataSource) UIScreen.Name UIScreen.Show() UIScreen.Hide() UIDocumentView.UIDocument UIDocumentView.OnValidate() UIDocumentView.OnEnable() UIDocumentView.OnDisable() UIDocumentView.TryGetRootElement(out VisualElement) UIDocumentView.FindUIDocument() UIDocumentView.DisposeUI() UIDocumentView.AssignButtonClickEvent(VisualElement, string, Action) UIDocumentView.InitIntegerField(VisualElement, string, EventCallback<ChangeEvent<int>>, int) UIDocumentView.InitFloatField(VisualElement, string, EventCallback<ChangeEvent<float>>, float) UIDocumentView.InitTextField(VisualElement, string, EventCallback<ChangeEvent<string>>, string) UIDocumentView.InitSlider(VisualElement, string, EventCallback<ChangeEvent<int>>, int) UIDocumentView.InitSlider(VisualElement, string, EventCallback<ChangeEvent<float>>, int) UIDocumentView.InitVector2Field(VisualElement, string, EventCallback<ChangeEvent<Vector2>>, Vector2) UIDocumentView.InitVector2IntField(VisualElement, string, EventCallback<ChangeEvent<Vector2Int>>, Vector2Int) UIView.Transform UIView.RectTransform UIView.Awake() UIView.OnDestroy() MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.UI Assembly: fwt.hexterrains.dll Syntax public abstract class MinimapScreenBase : UIScreen<MinimapScreenDataSource>, IMinimapScreen Fields TexturesSource Scriptable object with color map textures. Declaration public ColorMapTexturesSource TexturesSource Field Value Type Description ColorMapTexturesSource ViewMode Current view mode of the minimap. Declaration public int ViewMode Field Value Type Description int ViewModes Array of settigs for each view mode. Index in this list = view mode. Declaration public List<MinimapScreenBase.ViewModeSettings> ViewModes Field Value Type Description List<MinimapScreenBase.ViewModeSettings> _entityManager Cached EntityManager of the World with terrains. Declaration protected EntityManager _entityManager Field Value Type Description EntityManager _terrainsQuery Cached query to all the terrains in the world. Declaration protected EntityQuery _terrainsQuery Field Value Type Description EntityQuery _world Cached Entity World with terrains. Declaration protected World _world Field Value Type Description World Properties TexturesVersion Cached version of the color textures. If it is different from the version of Color Textures data, the screen will be updated with a new data. Declaration public long TexturesVersion { get; set; } Property Value Type Description long ViewModeVersion Cached version of the view mode. If it is different from the version of View Mode data, the screen will be updated with a new data. Declaration public long ViewModeVersion { get; set; } Property Value Type Description long Methods OnViewModeChanged() Called when the view mode is changed. Declaration protected virtual void OnViewModeChanged() SetCameraControllerData(CameraControllerTarget, HexTerrainSettings) Set the camera controller data for the minimap. Called from system so UI screen can update its data. Declaration public virtual void SetCameraControllerData(CameraControllerTarget target, HexTerrainSettings terrainSettings) Parameters Type Name Description CameraControllerTarget target Target of the camera, the object that camera calculates a position relative too and looks at. HexTerrainSettings terrainSettings Settings of the terrain. Allows to calculate the area that HexTerrain is covered. Needed so camera teleports from side to side if Terrain has connected edges, otherwise prevents camera to move outside the terrain bounds SetColorTextures(NativeArray<ColorMapTexture>, long) Set the color textures for the minimap. Called from system so UI screen can update its data. Declaration public virtual void SetColorTextures(NativeArray<ColorMapTexture> textures, long texturesVersion) Parameters Type Name Description NativeArray<ColorMapTexture> textures new set of textures long texturesVersion version of textures provided SetViewMode(int) Set the view mode for the minimap. Called from system so UI screen can update its data. Declaration public virtual void SetViewMode(int viewMode) Parameters Type Name Description int viewMode SetViewMode(int, long) Set the view mode for the minimap. Called from system so UI screen can update its data. Declaration public virtual void SetViewMode(int viewMode, long version) Parameters Type Name Description int viewMode long version Start() Declaration protected override void Start() Overrides UIDocumentView.Start() Implements IMinimapScreen Extension Methods Extensions_UnityObject.SmartDestroy<TObject>(TObject) Extensions_UnityObject.SmartDisableGameObject<TObject>(TObject) Extensions_UnityObject.SmartEnableGameObject<TObject>(TObject) HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.UI.ResizeTerrainScreenBase.html": {
    "href": "api/Fwt.HexTerrains.UI.ResizeTerrainScreenBase.html",
    "title": "Class ResizeTerrainScreenBase | Hex Terrains",
    "summary": "Class ResizeTerrainScreenBase Base class for the resize terrain screen. Inherit this class to create a custom resize terrain screen. Inheritance object Object Component Behaviour MonoBehaviour UIView UIDocumentView UIScreen UIScreen<ResizeTerrainDataSource> ResizeTerrainScreenBase ResizeTerrainScreen Inherited Members UIScreen<ResizeTerrainDataSource>.ViewData UIScreen<ResizeTerrainDataSource>.InitUI() UIScreen<ResizeTerrainDataSource>.SetViewData(ResizeTerrainDataSource) UIScreen<ResizeTerrainDataSource>.SetUIDocumentViewData(ResizeTerrainDataSource) UIScreen.Name UIScreen.Show() UIScreen.Hide() UIDocumentView.UIDocument UIDocumentView.Start() UIDocumentView.OnValidate() UIDocumentView.OnEnable() UIDocumentView.OnDisable() UIDocumentView.TryGetRootElement(out VisualElement) UIDocumentView.FindUIDocument() UIDocumentView.DisposeUI() UIDocumentView.AssignButtonClickEvent(VisualElement, string, Action) UIDocumentView.InitIntegerField(VisualElement, string, EventCallback<ChangeEvent<int>>, int) UIDocumentView.InitFloatField(VisualElement, string, EventCallback<ChangeEvent<float>>, float) UIDocumentView.InitTextField(VisualElement, string, EventCallback<ChangeEvent<string>>, string) UIDocumentView.InitSlider(VisualElement, string, EventCallback<ChangeEvent<int>>, int) UIDocumentView.InitSlider(VisualElement, string, EventCallback<ChangeEvent<float>>, int) UIDocumentView.InitVector2Field(VisualElement, string, EventCallback<ChangeEvent<Vector2>>, Vector2) UIDocumentView.InitVector2IntField(VisualElement, string, EventCallback<ChangeEvent<Vector2Int>>, Vector2Int) UIView.Transform UIView.RectTransform UIView.Awake() UIView.OnDestroy() MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.UI Assembly: fwt.hexterrains.dll Syntax public abstract class ResizeTerrainScreenBase : UIScreen<ResizeTerrainDataSource> Methods Cancel() Called from UI. Cancels resizing the terrain and hides the screen. Declaration public virtual void Cancel() Resize() Called from UI. Calls the Resuze(terrainSize) internally. Declaration public virtual void Resize() Resize(int2) Resizes the terrain. Implement your resize logic here (e.g. call your API). Declaration public abstract void Resize(int2 terrainSize) Parameters Type Name Description int2 terrainSize new size of the terrain Extension Methods Extensions_UnityObject.SmartDestroy<TObject>(TObject) Extensions_UnityObject.SmartDisableGameObject<TObject>(TObject) Extensions_UnityObject.SmartEnableGameObject<TObject>(TObject) HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.UI.SaveFileScreenBase.html": {
    "href": "api/Fwt.HexTerrains.UI.SaveFileScreenBase.html",
    "title": "Class SaveFileScreenBase | Hex Terrains",
    "summary": "Class SaveFileScreenBase Base class for UI Screen that allows user to choose a save file. Inheritance object Object Component Behaviour MonoBehaviour UIView UIDocumentView UIScreen UIScreen<SaveFilesDataSource> SaveFileScreenBase SaveGameScreen Inherited Members UIScreen<SaveFilesDataSource>.ViewData UIScreen<SaveFilesDataSource>.InitUI() UIScreen<SaveFilesDataSource>.SetViewData(SaveFilesDataSource) UIScreen<SaveFilesDataSource>.SetUIDocumentViewData(SaveFilesDataSource) UIScreen.Name UIScreen.Show() UIScreen.Hide() UIDocumentView.UIDocument UIDocumentView.Start() UIDocumentView.OnValidate() UIDocumentView.OnDisable() UIDocumentView.TryGetRootElement(out VisualElement) UIDocumentView.FindUIDocument() UIDocumentView.DisposeUI() UIDocumentView.AssignButtonClickEvent(VisualElement, string, Action) UIDocumentView.InitIntegerField(VisualElement, string, EventCallback<ChangeEvent<int>>, int) UIDocumentView.InitFloatField(VisualElement, string, EventCallback<ChangeEvent<float>>, float) UIDocumentView.InitTextField(VisualElement, string, EventCallback<ChangeEvent<string>>, string) UIDocumentView.InitSlider(VisualElement, string, EventCallback<ChangeEvent<int>>, int) UIDocumentView.InitSlider(VisualElement, string, EventCallback<ChangeEvent<float>>, int) UIDocumentView.InitVector2Field(VisualElement, string, EventCallback<ChangeEvent<Vector2>>, Vector2) UIDocumentView.InitVector2IntField(VisualElement, string, EventCallback<ChangeEvent<Vector2Int>>, Vector2Int) UIView.Transform UIView.RectTransform UIView.Awake() UIView.OnDestroy() MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.didStart MonoBehaviour.didAwake MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.CompareTag(TagHandle) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Fwt.HexTerrains.UI Assembly: fwt.hexterrains.dll Syntax public abstract class SaveFileScreenBase : UIScreen<SaveFilesDataSource> Properties DefaultFileName The default file name to use when saving a new file. Declaration public abstract string DefaultFileName { get; } Property Value Type Description string FileExtension The file extension for the save files. Declaration public abstract string FileExtension { get; } Property Value Type Description string FilesDirectory The directory where save files are stored. Declaration public abstract string FilesDirectory { get; } Property Value Type Description string Methods Cancel() Cancels saving the file and hides the screen. Declaration public virtual void Cancel() CreateSaveFileData(string, string, string) Creates a new SaveFileData object from the given parameters. Declaration public virtual SaveFileData CreateSaveFileData(string name, string fileName, string description) Parameters Type Name Description string name name of entry to display on UI string fileName File Name string description Additional data about file to display on UI Returns Type Description SaveFileData Delete() Deletes the selected file. Declaration public virtual void Delete() GetSelectedFileFullName() Gets the full name of the selected file. Declaration public virtual string GetSelectedFileFullName() Returns Type Description string full file path OnDataChanged() Called when the data in the SaveFileData changes, updates the ViewData so UI reflects the changes. Declaration protected virtual void OnDataChanged() OnEnable() Called when the screen is enabled. Declaration protected override void OnEnable() Overrides UIDocumentView.OnEnable() RefreshDataSource() Refreshes the data source with the list of save files, so UI reflects the changes. Declaration protected virtual void RefreshDataSource() Save() Called from UI to save the selected file. Calls Save(fileName) with the selected file name. Declaration public virtual void Save() Save(string) Saves the file with the specified name. Implement your saving logic here, e.g. calling your API. Declaration public abstract void Save(string fileName) Parameters Type Name Description string fileName Extension Methods Extensions_UnityObject.SmartDestroy<TObject>(TObject) Extensions_UnityObject.SmartDisableGameObject<TObject>(TObject) Extensions_UnityObject.SmartEnableGameObject<TObject>(TObject) HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.HexTerrains.UI.html": {
    "href": "api/Fwt.HexTerrains.UI.html",
    "title": "Namespace Fwt.HexTerrains.UI | Hex Terrains",
    "summary": "Namespace Fwt.HexTerrains.UI Classes CreateNewTerrainScreenBase Base class for UI screens that show user a dialog with options to create a new terrain. LoadFileScreenBase Base class for UI Screens that allows user to choose a file to load a saved terrain from. MinimapScreenBase Base class for the minimap UI screen. Inherit from this class to create a new minimap screen (optional). In reality you have to implement IMinimapScreen interface to allow HexTerrains to interact with your screen. ResizeTerrainScreenBase Base class for the resize terrain screen. Inherit this class to create a custom resize terrain screen. SaveFileScreenBase Base class for UI Screen that allows user to choose a save file. Structs MinimapScreenBase.ViewModeSettings Configuration of the view mode. Tells which Color Textures to show in the minimap. Interfaces IMinimapScreen Interface for the minimap UI screen. When creating a new minimap screen, implement this interface to allow HexTerrains to interact with it."
  },
  "api/Fwt.HexTerrains.html": {
    "href": "api/Fwt.HexTerrains.html",
    "title": "Namespace Fwt.HexTerrains | Hex Terrains",
    "summary": "Namespace Fwt.HexTerrains Classes ChunksGridDataAuthoring Authoring component for ChunksGridData. This class is used to create chunks grid data in the Unity Editor. ChunksGridDataBaker Baker for ChunksGridData. This class is used to convert the ChunksGridDataAuthoring component into a ChunksGridData component at runtime. CreateHexTerrainsGroup System group where all the creation systems for HexTerrains are executed. HexGroundDataAuthoring Authoring component for HexGroundData. This class is used to create hex ground data in the Unity Editor. HexGroundDataBaker Baker for HexGroundData. This class is used to convert the HexGroundDataAuthoring component into a HexGroundData component at runtime. HexGroundRenderDataAuthoring Authoring component for Ground HexRenderData. HexSurfaceDataAuthoring Base class for authoring components that create hex surface data. HexSurfaceDataBaker<TAuthoring, TRequest> Base class for baker components that create hex surface data. HexSurfaceRenderDataAuthoring Base class for authoring components that create hex surface render data. HexSurfaceRenderDataBaker<TAuthoring, TRequest, TRenderConfig> Base class for baker components that create hex surface render data. HexTerrainAuthoring Authoring component for the HexTerrain. This component is used to create a HexTerrain entity in the ECS world. HexTerrainBaker Baker for the HexTerrainAuthoring component. This class is used to convert the authoring component into an entity with the appropriate components. HexTerrainRenderDataBaker Baker for Ground HexRenderData. HexTerrainSerializer HexTerrainSerializer is a static class that provides methods to serialize and deserialize HexTerrain data entity. HexTerrainsCleanupBarrier Buffer system for the HexTerrains cleanup systems (executes the last of all cleanup systems). HexTerrainsCleanupGroup System group for the HexTerrains cleanup systems. This systems usually reset the dirty flags. This system group is executed at the very beginning of the frame HexTerrainsCreateAllBarrier Buffer system for the HexTerrains creation systems (executes the last of all creation systems). HexTerrainsFinishPreRenderBarrier Barrier system for the HexTerrains finish pre-render systems (executes the last of all Finish Pre Render Systems). HexTerrainsFinishPreRenderGroup System group for the HexTerrains finish pre-render systems HexTerrainsInitializationBuffer Buffer system for the HexTerrains initialization systems (executes the last of all initialization systems). HexTerrainsInitializationGroup System Group where all HexTerrains initialization systems are executed. HexTerrainsRenderBuffer Buffer system for the HexTerrains render systems (executes the last of all Render Systems). HexTerrainsRenderGroup System Group where HexTerrains are rendered. HexTerrainsStartPreRenderBarrier Buffer system for the HexTerrains start pre-render systems (executes the last of all Start Pre Render Systems). HexTerrainsStartPreRenderGroup System Group where the HexTerrains start pre-render systems are executed. HexWaterDataAuthoring Authoring component for hex water data. HexWaterDataBaker Baker class for hex water data. HexWaterRenderDataAuthoring Authoring component for hex water render data. HexWaterRenderDataBaker Baker for hex water render data. Delegates HexTerrainSerializer.CustomDeserializerCallback If you want to deserialize a custom component or implement a custom deserialization logic for standard components, provide this callback to the serializer. Deserializer will call this callback and if the callback returns true, serializer will not try to deserialize a component by itself, assuming you have already done it. HexTerrainSerializer.CustomSerializerCallback If you want to serialize a custom component or implement a custom serialization logic for standard components, provide this callback to the serializer. Serializer will call this callback and if the callback returns true, serializer will not try to serialize a component by itself, assuming you have already done it."
  },
  "api/Fwt.UIToolkit.ClickAreaElement.UxmlSerializedData.html": {
    "href": "api/Fwt.UIToolkit.ClickAreaElement.UxmlSerializedData.html",
    "title": "Class ClickAreaElement.UxmlSerializedData | Hex Terrains",
    "summary": "Class ClickAreaElement.UxmlSerializedData Inheritance object UxmlSerializedData VisualElement.UxmlSerializedData ClickAreaElement.UxmlSerializedData Inherited Members UxmlSerializedData.ShouldWriteAttributeValue(UxmlSerializedData.UxmlAttributeFlags) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.UIToolkit Assembly: fwt.uitoolkit.dll Syntax [Serializable] public class ClickAreaElement.UxmlSerializedData : VisualElement.UxmlSerializedData Methods CreateInstance() <p> Returns an instance of the declaring element. Declaration public override object CreateInstance() Returns Type Description object The new instance of the declaring element. Overrides UnityEngine.UIElements.VisualElement.UxmlSerializedData.CreateInstance() Deserialize(object) <p> Applies serialized field values to a compatible visual element. Declaration public override void Deserialize(object obj) Parameters Type Name Description object obj The element to have the serialized data applied to. Overrides VisualElement.UxmlSerializedData.Deserialize(object) Register() Declaration [RegisterUxmlCache] [Conditional(\"UNITY_EDITOR\")] public static void Register() Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.UIToolkit.ClickAreaElement.html": {
    "href": "api/Fwt.UIToolkit.ClickAreaElement.html",
    "title": "Class ClickAreaElement | Hex Terrains",
    "summary": "Class ClickAreaElement Inheritance object CallbackEventHandler Focusable VisualElement ClickAreaElement Implements IEventHandler IResolvedStyle ITransform ITransitionAnimations IExperimentalFeatures IVisualElementScheduler Inherited Members VisualElement.disabledUssClassName VisualElement.Focus() VisualElement.SendEvent(EventBase) VisualElement.SetEnabledFromHierarchy(bool) VisualElement.SetEnabled(bool) VisualElement.MarkDirtyRepaint() VisualElement.ContainsPoint(Vector2) VisualElement.Overlaps(Rect) VisualElement.DoMeasure(float, VisualElement.MeasureMode, float, VisualElement.MeasureMode) VisualElement.ToString() VisualElement.GetClasses() VisualElement.ClearClassList() VisualElement.AddToClassList(string) VisualElement.RemoveFromClassList(string) VisualElement.ToggleInClassList(string) VisualElement.EnableInClassList(string, bool) VisualElement.ClassListContains(string) VisualElement.FindAncestorUserData() VisualElement.SetBinding(BindingId, Binding) VisualElement.GetBinding(BindingId) VisualElement.TryGetBinding(BindingId, out Binding) VisualElement.GetBindingInfos() VisualElement.HasBinding(BindingId) VisualElement.ClearBinding(BindingId) VisualElement.ClearBindings() VisualElement.GetHierarchicalDataSourceContext() VisualElement.GetDataSourceContext(BindingId) VisualElement.TryGetDataSourceContext(BindingId, out DataSourceContext) VisualElement.TryGetLastBindingToUIResult(in BindingId, out BindingResult) VisualElement.TryGetLastBindingToSourceResult(in BindingId, out BindingResult) VisualElement.Add(VisualElement) VisualElement.Insert(int, VisualElement) VisualElement.Remove(VisualElement) VisualElement.RemoveAt(int) VisualElement.Clear() VisualElement.ElementAt(int) VisualElement.IndexOf(VisualElement) VisualElement.Children() VisualElement.Sort(Comparison<VisualElement>) VisualElement.BringToFront() VisualElement.SendToBack() VisualElement.PlaceBehind(VisualElement) VisualElement.PlaceInFront(VisualElement) VisualElement.RemoveFromHierarchy() VisualElement.GetFirstOfType<T>() VisualElement.GetFirstAncestorOfType<T>() VisualElement.Contains(VisualElement) VisualElement.FindCommonAncestor(VisualElement) VisualElement.viewDataKey VisualElement.userData VisualElement.canGrabFocus VisualElement.focusController VisualElement.disablePlayModeTint VisualElement.usageHints VisualElement.transform VisualElement.scaledPixelsPerPoint VisualElement.layout VisualElement.contentRect VisualElement.paddingRect VisualElement.worldBound VisualElement.localBound VisualElement.worldTransform VisualElement.pickingMode VisualElement.name VisualElement.enabledInHierarchy VisualElement.enabledSelf VisualElement.languageDirection VisualElement.visible VisualElement.generateVisualContent VisualElement.dataSource VisualElement.dataSourcePath VisualElement.dataSourceType VisualElement.experimental VisualElement.hierarchy VisualElement.cacheAsBitmap VisualElement.parent VisualElement.panel VisualElement.contentContainer VisualElement.visualTreeAssetSource VisualElement.this[int] VisualElement.childCount VisualElement.schedule VisualElement.style VisualElement.resolvedStyle VisualElement.customStyle VisualElement.styleSheets VisualElement.tooltip Focusable.Blur() Focusable.focusable Focusable.tabIndex Focusable.delegatesFocus CallbackEventHandler.RegisterCallback<TEventType>(EventCallback<TEventType>, TrickleDown) CallbackEventHandler.RegisterCallbackOnce<TEventType>(EventCallback<TEventType>, TrickleDown) CallbackEventHandler.RegisterCallback<TEventType, TUserArgsType>(EventCallback<TEventType, TUserArgsType>, TUserArgsType, TrickleDown) CallbackEventHandler.RegisterCallbackOnce<TEventType, TUserArgsType>(EventCallback<TEventType, TUserArgsType>, TUserArgsType, TrickleDown) CallbackEventHandler.UnregisterCallback<TEventType>(EventCallback<TEventType>, TrickleDown) CallbackEventHandler.UnregisterCallback<TEventType, TUserArgsType>(EventCallback<TEventType, TUserArgsType>, TrickleDown) CallbackEventHandler.HasTrickleDownHandlers() CallbackEventHandler.HasBubbleUpHandlers() CallbackEventHandler.ExecuteDefaultActionAtTarget(EventBase) CallbackEventHandler.HandleEventBubbleUp(EventBase) CallbackEventHandler.HandleEventTrickleDown(EventBase) CallbackEventHandler.ExecuteDefaultAction(EventBase) CallbackEventHandler.NotifyPropertyChanged(in BindingId) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Fwt.UIToolkit Assembly: fwt.uitoolkit.dll Syntax [UxmlElement] public class ClickAreaElement : VisualElement, IEventHandler, IResolvedStyle, ITransform, ITransitionAnimations, IExperimentalFeatures, IVisualElementScheduler Constructors ClickAreaElement() Declaration public ClickAreaElement() Properties OnClick Declaration [CreateProperty] public object OnClick { get; set; } Property Value Type Description object OnClickPath Declaration [CreateProperty] public string OnClickPath { get; set; } Property Value Type Description string Implements UnityEngine.UIElements.IEventHandler UnityEngine.UIElements.IResolvedStyle UnityEngine.UIElements.ITransform UnityEngine.UIElements.Experimental.ITransitionAnimations UnityEngine.UIElements.IExperimentalFeatures UnityEngine.UIElements.IVisualElementScheduler Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.UIToolkit.DataConverters.html": {
    "href": "api/Fwt.UIToolkit.DataConverters.html",
    "title": "Class DataConverters | Hex Terrains",
    "summary": "Class DataConverters Inheritance object DataConverters Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.UIToolkit Assembly: fwt.uitoolkit.dll Syntax public static class DataConverters"
  },
  "api/Fwt.UIToolkit.DataSources.UIButtonDataSource.html": {
    "href": "api/Fwt.UIToolkit.DataSources.UIButtonDataSource.html",
    "title": "Class UIButtonDataSource | Hex Terrains",
    "summary": "Class UIButtonDataSource Inheritance object UIDataSource UIButtonDataSource UIButtonDataSourceUEvent Implements IDataSourceViewHashProvider ICommitChanges Inherited Members UIDataSource.Version UIDataSource.MarkDirty() UIDataSource.GetViewHashCode() UIDataSource.CommitChanges() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.UIToolkit.DataSources Assembly: fwt.uitoolkit.dll Syntax [Serializable] public class UIButtonDataSource : UIDataSource, IDataSourceViewHashProvider, ICommitChanges Properties OnClick Declaration [CreateProperty] public virtual Action OnClick { get; set; } Property Value Type Description Action Text Declaration [CreateProperty] public string Text { get; set; } Property Value Type Description string Implements UnityEngine.UIElements.IDataSourceViewHashProvider ICommitChanges Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.UIToolkit.DataSources.UIButtonDataSourceUEvent.html": {
    "href": "api/Fwt.UIToolkit.DataSources.UIButtonDataSourceUEvent.html",
    "title": "Class UIButtonDataSourceUEvent | Hex Terrains",
    "summary": "Class UIButtonDataSourceUEvent Inheritance object UIDataSource UIButtonDataSource UIButtonDataSourceUEvent Implements IDataSourceViewHashProvider ICommitChanges Inherited Members UIButtonDataSource.Text UIDataSource.Version UIDataSource.MarkDirty() UIDataSource.GetViewHashCode() UIDataSource.CommitChanges() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.UIToolkit.DataSources Assembly: fwt.uitoolkit.dll Syntax [Serializable] public class UIButtonDataSourceUEvent : UIButtonDataSource, IDataSourceViewHashProvider, ICommitChanges Fields OnClickEvent Declaration public UnityEvent OnClickEvent Field Value Type Description UnityEvent Properties OnClick Declaration public override Action OnClick { get; set; } Property Value Type Description Action Overrides UIButtonDataSource.OnClick Methods OnClicked() Declaration protected virtual void OnClicked() Implements UnityEngine.UIElements.IDataSourceViewHashProvider ICommitChanges Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.UIToolkit.DataSources.UIDataSource.html": {
    "href": "api/Fwt.UIToolkit.DataSources.UIDataSource.html",
    "title": "Class UIDataSource | Hex Terrains",
    "summary": "Class UIDataSource Inheritance object UIDataSource CreateNewTerrainDataSource MinimapScreenDataSource ResizeTerrainDataSource CreateNewTerrainCallbackDataSource LoadTerrainCallbackDataSource ResizeTerrainCallbackDataSource SaveTerrainCallbackDataSource UserToolPanelItemDataSource UserToolSettingsDataSource UserToolsPanelDataSource UIButtonDataSource ValueEditorDataSource Implements IDataSourceViewHashProvider ICommitChanges Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.UIToolkit.DataSources Assembly: fwt.uitoolkit.dll Syntax public abstract class UIDataSource : IDataSourceViewHashProvider, ICommitChanges Fields Version Declaration public long Version Field Value Type Description long Methods CommitChanges() Declaration public virtual void CommitChanges() GetViewHashCode() <p> Returns the hash code of the view, which can be used to notify the data binding system to refresh. Declaration public virtual long GetViewHashCode() Returns Type Description long The hash code of the view. MarkDirty() Declaration public virtual void MarkDirty() Implements UnityEngine.UIElements.IDataSourceViewHashProvider ICommitChanges Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.UIToolkit.DataSources.html": {
    "href": "api/Fwt.UIToolkit.DataSources.html",
    "title": "Namespace Fwt.UIToolkit.DataSources | Hex Terrains",
    "summary": "Namespace Fwt.UIToolkit.DataSources Classes UIButtonDataSource UIButtonDataSourceUEvent UIDataSource"
  },
  "api/Fwt.UIToolkit.DataTemplates.DataTemplateConfig.UxmlSerializedData.html": {
    "href": "api/Fwt.UIToolkit.DataTemplates.DataTemplateConfig.UxmlSerializedData.html",
    "title": "Class DataTemplateConfig.UxmlSerializedData | Hex Terrains",
    "summary": "Class DataTemplateConfig.UxmlSerializedData Inheritance object UxmlSerializedData DataTemplateConfig.UxmlSerializedData Inherited Members UxmlSerializedData.ShouldWriteAttributeValue(UxmlSerializedData.UxmlAttributeFlags) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.UIToolkit.DataTemplates Assembly: fwt.uitoolkit.dll Syntax [Serializable] public class DataTemplateConfig.UxmlSerializedData : UxmlSerializedData Methods CreateInstance() <p> Returns an instance of the declaring element. Declaration public override object CreateInstance() Returns Type Description object The new instance of the declaring element. Overrides UnityEngine.UIElements.UxmlSerializedData.CreateInstance() Deserialize(object) <p> Applies serialized field values to a compatible visual element. Declaration public override void Deserialize(object obj) Parameters Type Name Description object obj The element to have the serialized data applied to. Overrides UxmlSerializedData.Deserialize(object) Register() Declaration [RegisterUxmlCache] [Conditional(\"UNITY_EDITOR\")] public static void Register() Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.UIToolkit.DataTemplates.DataTemplateConfig.html": {
    "href": "api/Fwt.UIToolkit.DataTemplates.DataTemplateConfig.html",
    "title": "Class DataTemplateConfig | Hex Terrains",
    "summary": "Class DataTemplateConfig Inheritance object DataTemplateConfig Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.UIToolkit.DataTemplates Assembly: fwt.uitoolkit.dll Syntax [Serializable] [UxmlObject] public class DataTemplateConfig Fields Template Declaration [UxmlAttribute] public VisualTreeAsset Template Field Value Type Description VisualTreeAsset TypeName Declaration [UxmlAttribute] public string TypeName Field Value Type Description string Properties Type Declaration public Type Type { get; set; } Property Value Type Description Type Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.UIToolkit.DataTemplates.TemplateSelectorConfig.html": {
    "href": "api/Fwt.UIToolkit.DataTemplates.TemplateSelectorConfig.html",
    "title": "Class TemplateSelectorConfig | Hex Terrains",
    "summary": "Class TemplateSelectorConfig Inheritance object TemplateSelectorConfig TemplateSelectorConfigByType Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.UIToolkit.DataTemplates Assembly: fwt.uitoolkit.dll Syntax public abstract class TemplateSelectorConfig Properties DefaultTemplate Declaration [CreateProperty] public VisualTreeAsset DefaultTemplate { get; set; } Property Value Type Description VisualTreeAsset Methods GetTemplateForData<TData>(TData) Declaration public virtual VisualTreeAsset GetTemplateForData<TData>(TData data) Parameters Type Name Description TData data Returns Type Description VisualTreeAsset Type Parameters Name Description TData GetTemplateForType(Type) Declaration public virtual VisualTreeAsset GetTemplateForType(Type type) Parameters Type Name Description Type type Returns Type Description VisualTreeAsset Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.UIToolkit.DataTemplates.TemplateSelectorConfigAsset.html": {
    "href": "api/Fwt.UIToolkit.DataTemplates.TemplateSelectorConfigAsset.html",
    "title": "Class TemplateSelectorConfigAsset | Hex Terrains",
    "summary": "Class TemplateSelectorConfigAsset Inheritance object Object ScriptableObject TemplateSelectorConfigAsset TemplateSelectorConfigByTypeAsset ValueEditorTemplateSelectorConfigAsset Inherited Members ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Fwt.UIToolkit.DataTemplates Assembly: fwt.uitoolkit.dll Syntax public abstract class TemplateSelectorConfigAsset : ScriptableObject Properties TemplateSelector Declaration public abstract TemplateSelectorConfig TemplateSelector { get; } Property Value Type Description TemplateSelectorConfig Extension Methods Extensions_UnityObject.SmartDestroy<TObject>(TObject) Extensions_UnityObject.SmartDisableGameObject<TObject>(TObject) Extensions_UnityObject.SmartEnableGameObject<TObject>(TObject) HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.UIToolkit.DataTemplates.TemplateSelectorConfigByType.html": {
    "href": "api/Fwt.UIToolkit.DataTemplates.TemplateSelectorConfigByType.html",
    "title": "Class TemplateSelectorConfigByType | Hex Terrains",
    "summary": "Class TemplateSelectorConfigByType Inheritance object TemplateSelectorConfig TemplateSelectorConfigByType ValueEditorTemplateSelectorConfig Inherited Members TemplateSelectorConfig.DefaultTemplate object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.UIToolkit.DataTemplates Assembly: fwt.uitoolkit.dll Syntax [Serializable] public class TemplateSelectorConfigByType : TemplateSelectorConfig Fields Configs Declaration public List<DataTemplateConfig> Configs Field Value Type Description List<DataTemplateConfig> Properties IsDirty Declaration public bool IsDirty { get; } Property Value Type Description bool Methods GetTemplateForData<TData>(TData) Declaration public override VisualTreeAsset GetTemplateForData<TData>(TData data) Parameters Type Name Description TData data Returns Type Description VisualTreeAsset Type Parameters Name Description TData Overrides TemplateSelectorConfig.GetTemplateForData<TData>(TData) GetTemplateForType(Type) Declaration public override VisualTreeAsset GetTemplateForType(Type type) Parameters Type Name Description Type type Returns Type Description VisualTreeAsset Overrides TemplateSelectorConfig.GetTemplateForType(Type) MarkDirty() Declaration public void MarkDirty() UpdateCache() Declaration public void UpdateCache() UpdateCacheIfNeeded() Declaration public void UpdateCacheIfNeeded() Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.UIToolkit.DataTemplates.TemplateSelectorConfigByTypeAsset.html": {
    "href": "api/Fwt.UIToolkit.DataTemplates.TemplateSelectorConfigByTypeAsset.html",
    "title": "Class TemplateSelectorConfigByTypeAsset | Hex Terrains",
    "summary": "Class TemplateSelectorConfigByTypeAsset Inheritance object Object ScriptableObject TemplateSelectorConfigAsset TemplateSelectorConfigByTypeAsset Inherited Members ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Fwt.UIToolkit.DataTemplates Assembly: fwt.uitoolkit.dll Syntax [CreateAssetMenu(menuName = \"Fwt/Incorporations/Template Selector Config\")] public class TemplateSelectorConfigByTypeAsset : TemplateSelectorConfigAsset Fields Config Declaration public TemplateSelectorConfigByType Config Field Value Type Description TemplateSelectorConfigByType Properties TemplateSelector Declaration public override TemplateSelectorConfig TemplateSelector { get; } Property Value Type Description TemplateSelectorConfig Overrides TemplateSelectorConfigAsset.TemplateSelector Extension Methods Extensions_UnityObject.SmartDestroy<TObject>(TObject) Extensions_UnityObject.SmartDisableGameObject<TObject>(TObject) Extensions_UnityObject.SmartEnableGameObject<TObject>(TObject) HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.UIToolkit.DataTemplates.TemplateSelectorElement.UxmlSerializedData.html": {
    "href": "api/Fwt.UIToolkit.DataTemplates.TemplateSelectorElement.UxmlSerializedData.html",
    "title": "Class TemplateSelectorElement.UxmlSerializedData | Hex Terrains",
    "summary": "Class TemplateSelectorElement.UxmlSerializedData Inheritance object UxmlSerializedData VisualElement.UxmlSerializedData TemplateSelectorElement.UxmlSerializedData UserToolParameterElement.UxmlSerializedData Inherited Members VisualElement.UxmlSerializedData.CreateInstance() UxmlSerializedData.ShouldWriteAttributeValue(UxmlSerializedData.UxmlAttributeFlags) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.UIToolkit.DataTemplates Assembly: fwt.uitoolkit.dll Syntax [Serializable] public abstract class TemplateSelectorElement.UxmlSerializedData : VisualElement.UxmlSerializedData Methods Deserialize(object) <p> Applies serialized field values to a compatible visual element. Declaration public override void Deserialize(object obj) Parameters Type Name Description object obj The element to have the serialized data applied to. Overrides VisualElement.UxmlSerializedData.Deserialize(object) Register() Declaration [RegisterUxmlCache] [Conditional(\"UNITY_EDITOR\")] public static void Register() Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.UIToolkit.DataTemplates.TemplateSelectorElement.html": {
    "href": "api/Fwt.UIToolkit.DataTemplates.TemplateSelectorElement.html",
    "title": "Class TemplateSelectorElement | Hex Terrains",
    "summary": "Class TemplateSelectorElement Inheritance object CallbackEventHandler Focusable VisualElement TemplateSelectorElement UserToolParameterElement Implements IEventHandler IResolvedStyle ITransform ITransitionAnimations IExperimentalFeatures IVisualElementScheduler IRefreshableView ICommitChanges Inherited Members VisualElement.disabledUssClassName VisualElement.Focus() VisualElement.SendEvent(EventBase) VisualElement.SetEnabledFromHierarchy(bool) VisualElement.SetEnabled(bool) VisualElement.MarkDirtyRepaint() VisualElement.ContainsPoint(Vector2) VisualElement.Overlaps(Rect) VisualElement.DoMeasure(float, VisualElement.MeasureMode, float, VisualElement.MeasureMode) VisualElement.ToString() VisualElement.GetClasses() VisualElement.ClearClassList() VisualElement.AddToClassList(string) VisualElement.RemoveFromClassList(string) VisualElement.ToggleInClassList(string) VisualElement.EnableInClassList(string, bool) VisualElement.ClassListContains(string) VisualElement.FindAncestorUserData() VisualElement.SetBinding(BindingId, Binding) VisualElement.GetBinding(BindingId) VisualElement.TryGetBinding(BindingId, out Binding) VisualElement.GetBindingInfos() VisualElement.HasBinding(BindingId) VisualElement.ClearBinding(BindingId) VisualElement.ClearBindings() VisualElement.GetHierarchicalDataSourceContext() VisualElement.GetDataSourceContext(BindingId) VisualElement.TryGetDataSourceContext(BindingId, out DataSourceContext) VisualElement.TryGetLastBindingToUIResult(in BindingId, out BindingResult) VisualElement.TryGetLastBindingToSourceResult(in BindingId, out BindingResult) VisualElement.Add(VisualElement) VisualElement.Insert(int, VisualElement) VisualElement.Remove(VisualElement) VisualElement.RemoveAt(int) VisualElement.Clear() VisualElement.ElementAt(int) VisualElement.IndexOf(VisualElement) VisualElement.Children() VisualElement.Sort(Comparison<VisualElement>) VisualElement.BringToFront() VisualElement.SendToBack() VisualElement.PlaceBehind(VisualElement) VisualElement.PlaceInFront(VisualElement) VisualElement.RemoveFromHierarchy() VisualElement.GetFirstOfType<T>() VisualElement.GetFirstAncestorOfType<T>() VisualElement.Contains(VisualElement) VisualElement.FindCommonAncestor(VisualElement) VisualElement.viewDataKey VisualElement.userData VisualElement.canGrabFocus VisualElement.focusController VisualElement.disablePlayModeTint VisualElement.usageHints VisualElement.transform VisualElement.scaledPixelsPerPoint VisualElement.layout VisualElement.contentRect VisualElement.paddingRect VisualElement.worldBound VisualElement.localBound VisualElement.worldTransform VisualElement.pickingMode VisualElement.name VisualElement.enabledInHierarchy VisualElement.enabledSelf VisualElement.languageDirection VisualElement.visible VisualElement.generateVisualContent VisualElement.dataSource VisualElement.dataSourcePath VisualElement.dataSourceType VisualElement.experimental VisualElement.hierarchy VisualElement.cacheAsBitmap VisualElement.parent VisualElement.panel VisualElement.contentContainer VisualElement.visualTreeAssetSource VisualElement.this[int] VisualElement.childCount VisualElement.schedule VisualElement.style VisualElement.resolvedStyle VisualElement.customStyle VisualElement.styleSheets VisualElement.tooltip Focusable.Blur() Focusable.focusable Focusable.tabIndex Focusable.delegatesFocus CallbackEventHandler.RegisterCallback<TEventType>(EventCallback<TEventType>, TrickleDown) CallbackEventHandler.RegisterCallbackOnce<TEventType>(EventCallback<TEventType>, TrickleDown) CallbackEventHandler.RegisterCallback<TEventType, TUserArgsType>(EventCallback<TEventType, TUserArgsType>, TUserArgsType, TrickleDown) CallbackEventHandler.RegisterCallbackOnce<TEventType, TUserArgsType>(EventCallback<TEventType, TUserArgsType>, TUserArgsType, TrickleDown) CallbackEventHandler.UnregisterCallback<TEventType>(EventCallback<TEventType>, TrickleDown) CallbackEventHandler.UnregisterCallback<TEventType, TUserArgsType>(EventCallback<TEventType, TUserArgsType>, TrickleDown) CallbackEventHandler.HasTrickleDownHandlers() CallbackEventHandler.HasBubbleUpHandlers() CallbackEventHandler.ExecuteDefaultActionAtTarget(EventBase) CallbackEventHandler.HandleEventBubbleUp(EventBase) CallbackEventHandler.HandleEventTrickleDown(EventBase) CallbackEventHandler.ExecuteDefaultAction(EventBase) CallbackEventHandler.NotifyPropertyChanged(in BindingId) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Fwt.UIToolkit.DataTemplates Assembly: fwt.uitoolkit.dll Syntax [UxmlElement] public abstract class TemplateSelectorElement : VisualElement, IEventHandler, IResolvedStyle, ITransform, ITransitionAnimations, IExperimentalFeatures, IVisualElementScheduler, IRefreshableView, ICommitChanges Constructors TemplateSelectorElement() Declaration public TemplateSelectorElement() Fields _templateSelector Declaration protected TemplateSelectorConfig _templateSelector Field Value Type Description TemplateSelectorConfig _templateSelectorAsset Declaration [UxmlAttribute(name = \"TemplateSelectorAsset\")] protected TemplateSelectorConfigAsset _templateSelectorAsset Field Value Type Description TemplateSelectorConfigAsset _view Actual data view is displayed Declaration protected VisualElement _view Field Value Type Description VisualElement _viewTemplate Actual data view is instantiated from this prefab Declaration protected VisualTreeAsset _viewTemplate Field Value Type Description VisualTreeAsset Properties TemplateSelector Declaration [CreateProperty] public virtual TemplateSelectorConfig TemplateSelector { get; set; } Property Value Type Description TemplateSelectorConfig TemplateSelectorAsset Declaration [CreateProperty] public virtual TemplateSelectorConfigAsset TemplateSelectorAsset { get; set; } Property Value Type Description TemplateSelectorConfigAsset Methods CommitChanges() Declaration public virtual void CommitChanges() CreateView(VisualTreeAsset) Declaration protected virtual void CreateView(VisualTreeAsset template) Parameters Type Name Description VisualTreeAsset template DestroyView() Declaration protected virtual void DestroyView() GetDataSource() Declaration protected virtual object GetDataSource() Returns Type Description object GetDataTemplate(object) Declaration protected virtual VisualTreeAsset GetDataTemplate(object data) Parameters Type Name Description object data Returns Type Description VisualTreeAsset GetTemplateSelector() Declaration protected virtual TemplateSelectorConfig GetTemplateSelector() Returns Type Description TemplateSelectorConfig OnAttachToPanel(AttachToPanelEvent) Declaration protected virtual void OnAttachToPanel(AttachToPanelEvent evt) Parameters Type Name Description AttachToPanelEvent evt OnTemplateSelectorAssetChange() Declaration protected virtual void OnTemplateSelectorAssetChange() OnTemplateSelectorChange() Declaration protected virtual void OnTemplateSelectorChange() RefreshView() Declaration public virtual void RefreshView() UpdateViewData(object) Declaration protected virtual void UpdateViewData(object data) Parameters Type Name Description object data ValidateView(object) Declaration protected virtual void ValidateView(object data) Parameters Type Name Description object data Implements UnityEngine.UIElements.IEventHandler UnityEngine.UIElements.IResolvedStyle UnityEngine.UIElements.ITransform UnityEngine.UIElements.Experimental.ITransitionAnimations UnityEngine.UIElements.IExperimentalFeatures UnityEngine.UIElements.IVisualElementScheduler IRefreshableView ICommitChanges Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.UIToolkit.DataTemplates.html": {
    "href": "api/Fwt.UIToolkit.DataTemplates.html",
    "title": "Namespace Fwt.UIToolkit.DataTemplates | Hex Terrains",
    "summary": "Namespace Fwt.UIToolkit.DataTemplates Classes DataTemplateConfig DataTemplateConfig.UxmlSerializedData TemplateSelectorConfig TemplateSelectorConfigAsset TemplateSelectorConfigByType TemplateSelectorConfigByTypeAsset TemplateSelectorElement TemplateSelectorElement.UxmlSerializedData"
  },
  "api/Fwt.UIToolkit.SimpleListView.UxmlSerializedData.html": {
    "href": "api/Fwt.UIToolkit.SimpleListView.UxmlSerializedData.html",
    "title": "Class SimpleListView.UxmlSerializedData | Hex Terrains",
    "summary": "Class SimpleListView.UxmlSerializedData Inheritance object UxmlSerializedData VisualElement.UxmlSerializedData SimpleListView.UxmlSerializedData Inherited Members UxmlSerializedData.ShouldWriteAttributeValue(UxmlSerializedData.UxmlAttributeFlags) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.UIToolkit Assembly: fwt.uitoolkit.dll Syntax [Serializable] public class SimpleListView.UxmlSerializedData : VisualElement.UxmlSerializedData Methods CreateInstance() <p> Returns an instance of the declaring element. Declaration public override object CreateInstance() Returns Type Description object The new instance of the declaring element. Overrides UnityEngine.UIElements.VisualElement.UxmlSerializedData.CreateInstance() Deserialize(object) <p> Applies serialized field values to a compatible visual element. Declaration public override void Deserialize(object obj) Parameters Type Name Description object obj The element to have the serialized data applied to. Overrides VisualElement.UxmlSerializedData.Deserialize(object) Register() Declaration [RegisterUxmlCache] [Conditional(\"UNITY_EDITOR\")] public static void Register() Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.UIToolkit.SimpleListView.html": {
    "href": "api/Fwt.UIToolkit.SimpleListView.html",
    "title": "Class SimpleListView | Hex Terrains",
    "summary": "Class SimpleListView Inheritance object CallbackEventHandler Focusable VisualElement SimpleListView Implements IEventHandler IResolvedStyle ITransform ITransitionAnimations IExperimentalFeatures IVisualElementScheduler Inherited Members VisualElement.disabledUssClassName VisualElement.Focus() VisualElement.SendEvent(EventBase) VisualElement.SetEnabledFromHierarchy(bool) VisualElement.SetEnabled(bool) VisualElement.MarkDirtyRepaint() VisualElement.ContainsPoint(Vector2) VisualElement.Overlaps(Rect) VisualElement.DoMeasure(float, VisualElement.MeasureMode, float, VisualElement.MeasureMode) VisualElement.ToString() VisualElement.GetClasses() VisualElement.ClearClassList() VisualElement.AddToClassList(string) VisualElement.RemoveFromClassList(string) VisualElement.ToggleInClassList(string) VisualElement.EnableInClassList(string, bool) VisualElement.ClassListContains(string) VisualElement.FindAncestorUserData() VisualElement.SetBinding(BindingId, Binding) VisualElement.GetBinding(BindingId) VisualElement.TryGetBinding(BindingId, out Binding) VisualElement.GetBindingInfos() VisualElement.HasBinding(BindingId) VisualElement.ClearBinding(BindingId) VisualElement.ClearBindings() VisualElement.GetHierarchicalDataSourceContext() VisualElement.GetDataSourceContext(BindingId) VisualElement.TryGetDataSourceContext(BindingId, out DataSourceContext) VisualElement.TryGetLastBindingToUIResult(in BindingId, out BindingResult) VisualElement.TryGetLastBindingToSourceResult(in BindingId, out BindingResult) VisualElement.Add(VisualElement) VisualElement.Insert(int, VisualElement) VisualElement.Remove(VisualElement) VisualElement.RemoveAt(int) VisualElement.Clear() VisualElement.ElementAt(int) VisualElement.IndexOf(VisualElement) VisualElement.Children() VisualElement.Sort(Comparison<VisualElement>) VisualElement.BringToFront() VisualElement.SendToBack() VisualElement.PlaceBehind(VisualElement) VisualElement.PlaceInFront(VisualElement) VisualElement.RemoveFromHierarchy() VisualElement.GetFirstOfType<T>() VisualElement.GetFirstAncestorOfType<T>() VisualElement.Contains(VisualElement) VisualElement.FindCommonAncestor(VisualElement) VisualElement.viewDataKey VisualElement.userData VisualElement.canGrabFocus VisualElement.focusController VisualElement.disablePlayModeTint VisualElement.usageHints VisualElement.transform VisualElement.scaledPixelsPerPoint VisualElement.layout VisualElement.contentRect VisualElement.paddingRect VisualElement.worldBound VisualElement.localBound VisualElement.worldTransform VisualElement.pickingMode VisualElement.name VisualElement.enabledInHierarchy VisualElement.enabledSelf VisualElement.languageDirection VisualElement.visible VisualElement.generateVisualContent VisualElement.dataSource VisualElement.dataSourcePath VisualElement.dataSourceType VisualElement.experimental VisualElement.hierarchy VisualElement.cacheAsBitmap VisualElement.parent VisualElement.panel VisualElement.contentContainer VisualElement.visualTreeAssetSource VisualElement.this[int] VisualElement.childCount VisualElement.schedule VisualElement.style VisualElement.resolvedStyle VisualElement.customStyle VisualElement.styleSheets VisualElement.tooltip Focusable.Blur() Focusable.focusable Focusable.tabIndex Focusable.delegatesFocus CallbackEventHandler.RegisterCallback<TEventType>(EventCallback<TEventType>, TrickleDown) CallbackEventHandler.RegisterCallbackOnce<TEventType>(EventCallback<TEventType>, TrickleDown) CallbackEventHandler.RegisterCallback<TEventType, TUserArgsType>(EventCallback<TEventType, TUserArgsType>, TUserArgsType, TrickleDown) CallbackEventHandler.RegisterCallbackOnce<TEventType, TUserArgsType>(EventCallback<TEventType, TUserArgsType>, TUserArgsType, TrickleDown) CallbackEventHandler.UnregisterCallback<TEventType>(EventCallback<TEventType>, TrickleDown) CallbackEventHandler.UnregisterCallback<TEventType, TUserArgsType>(EventCallback<TEventType, TUserArgsType>, TrickleDown) CallbackEventHandler.HasTrickleDownHandlers() CallbackEventHandler.HasBubbleUpHandlers() CallbackEventHandler.ExecuteDefaultActionAtTarget(EventBase) CallbackEventHandler.HandleEventBubbleUp(EventBase) CallbackEventHandler.HandleEventTrickleDown(EventBase) CallbackEventHandler.ExecuteDefaultAction(EventBase) CallbackEventHandler.NotifyPropertyChanged(in BindingId) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Fwt.UIToolkit Assembly: fwt.uitoolkit.dll Syntax [UxmlElement] public class SimpleListView : VisualElement, IEventHandler, IResolvedStyle, ITransform, ITransitionAnimations, IExperimentalFeatures, IVisualElementScheduler Constructors SimpleListView() Declaration public SimpleListView() Properties ItemTemplate Declaration [CreateProperty] public VisualTreeAsset ItemTemplate { get; set; } Property Value Type Description VisualTreeAsset itemsSource Declaration [CreateProperty] public IList itemsSource { get; set; } Property Value Type Description IList Methods ClearItemViews() Declaration protected virtual void ClearItemViews() OnAttachToPanel(AttachToPanelEvent) Declaration protected virtual void OnAttachToPanel(AttachToPanelEvent evt) Parameters Type Name Description AttachToPanelEvent evt OnItemTemplateChanged() Declaration protected virtual void OnItemTemplateChanged() OnItemsChanged() Declaration protected virtual void OnItemsChanged() RefreshItemViews() Declaration protected virtual void RefreshItemViews() SetItemsViewsDataSource() Declaration protected virtual void SetItemsViewsDataSource() UpdateItemsViewsCount() Declaration protected virtual void UpdateItemsViewsCount() Implements UnityEngine.UIElements.IEventHandler UnityEngine.UIElements.IResolvedStyle UnityEngine.UIElements.ITransform UnityEngine.UIElements.Experimental.ITransitionAnimations UnityEngine.UIElements.IExperimentalFeatures UnityEngine.UIElements.IVisualElementScheduler Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.UIToolkit.UIButton.UxmlSerializedData.html": {
    "href": "api/Fwt.UIToolkit.UIButton.UxmlSerializedData.html",
    "title": "Class UIButton.UxmlSerializedData | Hex Terrains",
    "summary": "Class UIButton.UxmlSerializedData Inheritance object UxmlSerializedData VisualElement.UxmlSerializedData BindableElement.UxmlSerializedData TextElement.UxmlSerializedData Button.UxmlSerializedData UIButton.UxmlSerializedData Inherited Members UxmlSerializedData.ShouldWriteAttributeValue(UxmlSerializedData.UxmlAttributeFlags) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.UIToolkit Assembly: fwt.uitoolkit.dll Syntax [Serializable] public class UIButton.UxmlSerializedData : Button.UxmlSerializedData Methods CreateInstance() <p> Returns an instance of the declaring element. Declaration public override object CreateInstance() Returns Type Description object The new instance of the declaring element. Overrides UnityEngine.UIElements.Button.UxmlSerializedData.CreateInstance() Deserialize(object) <p> Applies serialized field values to a compatible visual element. Declaration public override void Deserialize(object obj) Parameters Type Name Description object obj The element to have the serialized data applied to. Overrides Button.UxmlSerializedData.Deserialize(object) Register() Declaration [RegisterUxmlCache] [Conditional(\"UNITY_EDITOR\")] public static void Register() Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.UIToolkit.UIButton.html": {
    "href": "api/Fwt.UIToolkit.UIButton.html",
    "title": "Class UIButton | Hex Terrains",
    "summary": "Class UIButton Inheritance object CallbackEventHandler Focusable VisualElement BindableElement TextElement Button UIButton Implements IEventHandler IResolvedStyle ITransform ITransitionAnimations IVisualElementScheduler IBindable INotifyValueChanged<string> ITextEdition ITextElementExperimentalFeatures IExperimentalFeatures ITextSelection Inherited Members Button.ussClassName Button.iconUssClassName Button.iconOnlyUssClassName Button.imageUSSClassName Button.DoMeasure(float, VisualElement.MeasureMode, float, VisualElement.MeasureMode) Button.clickable Button.iconImage Button.text Button.onClick Button.clicked TextElement.selectableUssClassName TextElement.MeasureTextSize(string, float, VisualElement.MeasureMode, float, VisualElement.MeasureMode) TextElement.HandleEventBubbleUp(EventBase) TextElement.enableRichText TextElement.emojiFallbackSupport TextElement.parseEscapeSequences TextElement.displayTooltipWhenElided TextElement.isElided TextElement.experimental TextElement.selection BindableElement.binding BindableElement.bindingPath VisualElement.disabledUssClassName VisualElement.Focus() VisualElement.SendEvent(EventBase) VisualElement.SetEnabledFromHierarchy(bool) VisualElement.SetEnabled(bool) VisualElement.MarkDirtyRepaint() VisualElement.ContainsPoint(Vector2) VisualElement.Overlaps(Rect) VisualElement.ToString() VisualElement.GetClasses() VisualElement.ClearClassList() VisualElement.AddToClassList(string) VisualElement.RemoveFromClassList(string) VisualElement.ToggleInClassList(string) VisualElement.EnableInClassList(string, bool) VisualElement.ClassListContains(string) VisualElement.FindAncestorUserData() VisualElement.SetBinding(BindingId, Binding) VisualElement.GetBinding(BindingId) VisualElement.TryGetBinding(BindingId, out Binding) VisualElement.GetBindingInfos() VisualElement.HasBinding(BindingId) VisualElement.ClearBinding(BindingId) VisualElement.ClearBindings() VisualElement.GetHierarchicalDataSourceContext() VisualElement.GetDataSourceContext(BindingId) VisualElement.TryGetDataSourceContext(BindingId, out DataSourceContext) VisualElement.TryGetLastBindingToUIResult(in BindingId, out BindingResult) VisualElement.TryGetLastBindingToSourceResult(in BindingId, out BindingResult) VisualElement.Add(VisualElement) VisualElement.Insert(int, VisualElement) VisualElement.Remove(VisualElement) VisualElement.RemoveAt(int) VisualElement.Clear() VisualElement.ElementAt(int) VisualElement.IndexOf(VisualElement) VisualElement.Children() VisualElement.Sort(Comparison<VisualElement>) VisualElement.BringToFront() VisualElement.SendToBack() VisualElement.PlaceBehind(VisualElement) VisualElement.PlaceInFront(VisualElement) VisualElement.RemoveFromHierarchy() VisualElement.GetFirstOfType<T>() VisualElement.GetFirstAncestorOfType<T>() VisualElement.Contains(VisualElement) VisualElement.FindCommonAncestor(VisualElement) VisualElement.viewDataKey VisualElement.userData VisualElement.canGrabFocus VisualElement.focusController VisualElement.disablePlayModeTint VisualElement.usageHints VisualElement.transform VisualElement.scaledPixelsPerPoint VisualElement.layout VisualElement.contentRect VisualElement.paddingRect VisualElement.worldBound VisualElement.localBound VisualElement.worldTransform VisualElement.pickingMode VisualElement.name VisualElement.enabledInHierarchy VisualElement.enabledSelf VisualElement.languageDirection VisualElement.visible VisualElement.generateVisualContent VisualElement.dataSource VisualElement.dataSourcePath VisualElement.dataSourceType VisualElement.hierarchy VisualElement.cacheAsBitmap VisualElement.parent VisualElement.panel VisualElement.contentContainer VisualElement.visualTreeAssetSource VisualElement.this[int] VisualElement.childCount VisualElement.schedule VisualElement.style VisualElement.resolvedStyle VisualElement.customStyle VisualElement.styleSheets VisualElement.tooltip Focusable.Blur() Focusable.focusable Focusable.tabIndex Focusable.delegatesFocus CallbackEventHandler.RegisterCallback<TEventType>(EventCallback<TEventType>, TrickleDown) CallbackEventHandler.RegisterCallbackOnce<TEventType>(EventCallback<TEventType>, TrickleDown) CallbackEventHandler.RegisterCallback<TEventType, TUserArgsType>(EventCallback<TEventType, TUserArgsType>, TUserArgsType, TrickleDown) CallbackEventHandler.RegisterCallbackOnce<TEventType, TUserArgsType>(EventCallback<TEventType, TUserArgsType>, TUserArgsType, TrickleDown) CallbackEventHandler.UnregisterCallback<TEventType>(EventCallback<TEventType>, TrickleDown) CallbackEventHandler.UnregisterCallback<TEventType, TUserArgsType>(EventCallback<TEventType, TUserArgsType>, TrickleDown) CallbackEventHandler.HasTrickleDownHandlers() CallbackEventHandler.HasBubbleUpHandlers() CallbackEventHandler.ExecuteDefaultActionAtTarget(EventBase) CallbackEventHandler.HandleEventTrickleDown(EventBase) CallbackEventHandler.ExecuteDefaultAction(EventBase) CallbackEventHandler.NotifyPropertyChanged(in BindingId) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Fwt.UIToolkit Assembly: fwt.uitoolkit.dll Syntax [UxmlElement] public class UIButton : Button, IEventHandler, IResolvedStyle, ITransform, ITransitionAnimations, IVisualElementScheduler, IBindable, INotifyValueChanged<string>, ITextEdition, ITextElementExperimentalFeatures, IExperimentalFeatures, ITextSelection Constructors UIButton() Declaration public UIButton() Fields _onClickBindingId Declaration protected BindingId _onClickBindingId Field Value Type Description BindingId Properties OnClick Declaration [CreateProperty] public object OnClick { get; set; } Property Value Type Description object OnClickPath Declaration [CreateProperty] public string OnClickPath { get; set; } Property Value Type Description string Methods OnAttachToPanel(AttachToPanelEvent) Declaration protected virtual void OnAttachToPanel(AttachToPanelEvent evt) Parameters Type Name Description AttachToPanelEvent evt OnClicked(ClickEvent) Declaration protected virtual void OnClicked(ClickEvent evt) Parameters Type Name Description ClickEvent evt Implements UnityEngine.UIElements.IEventHandler UnityEngine.UIElements.IResolvedStyle UnityEngine.UIElements.ITransform UnityEngine.UIElements.Experimental.ITransitionAnimations UnityEngine.UIElements.IVisualElementScheduler UnityEngine.UIElements.IBindable UnityEngine.UIElements.INotifyValueChanged<T> UnityEngine.UIElements.ITextEdition UnityEngine.UIElements.ITextElementExperimentalFeatures UnityEngine.UIElements.IExperimentalFeatures UnityEngine.UIElements.ITextSelection Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.UIToolkit.UIListView.UxmlSerializedData.html": {
    "href": "api/Fwt.UIToolkit.UIListView.UxmlSerializedData.html",
    "title": "Class UIListView.UxmlSerializedData | Hex Terrains",
    "summary": "Class UIListView.UxmlSerializedData Inheritance object UxmlSerializedData VisualElement.UxmlSerializedData BindableElement.UxmlSerializedData BaseVerticalCollectionView.UxmlSerializedData BaseListView.UxmlSerializedData ListView.UxmlSerializedData UIListView.UxmlSerializedData Inherited Members ListView.UxmlSerializedData.Register() ListView.UxmlSerializedData.Deserialize(object) UxmlSerializedData.ShouldWriteAttributeValue(UxmlSerializedData.UxmlAttributeFlags) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.UIToolkit Assembly: fwt.uitoolkit.dll Syntax [Serializable] public class UIListView.UxmlSerializedData : ListView.UxmlSerializedData Methods CreateInstance() <p> Returns an instance of the declaring element. Declaration public override object CreateInstance() Returns Type Description object The new instance of the declaring element. Overrides UnityEngine.UIElements.ListView.UxmlSerializedData.CreateInstance() Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.UIToolkit.UIListView.html": {
    "href": "api/Fwt.UIToolkit.UIListView.html",
    "title": "Class UIListView | Hex Terrains",
    "summary": "Class UIListView Inheritance object CallbackEventHandler Focusable VisualElement BindableElement BaseVerticalCollectionView BaseListView ListView UIListView Implements IEventHandler IResolvedStyle ITransform ITransitionAnimations IExperimentalFeatures IVisualElementScheduler IBindable ISerializationCallbackReceiver Inherited Members ListView.CreateViewController() ListView.makeItem ListView.itemTemplate ListView.bindItem ListView.unbindItem ListView.destroyItem BaseListView.ussClassName BaseListView.itemUssClassName BaseListView.emptyLabelUssClassName BaseListView.overMaxMultiEditLimitClassName BaseListView.reorderableUssClassName BaseListView.reorderableItemUssClassName BaseListView.reorderableItemContainerUssClassName BaseListView.reorderableItemHandleUssClassName BaseListView.reorderableItemHandleBarUssClassName BaseListView.footerUssClassName BaseListView.foldoutHeaderUssClassName BaseListView.arraySizeFieldUssClassName BaseListView.arraySizeFieldWithHeaderUssClassName BaseListView.arraySizeFieldWithFooterUssClassName BaseListView.listViewWithHeaderUssClassName BaseListView.listViewWithFooterUssClassName BaseListView.scrollViewWithFooterUssClassName BaseListView.footerAddButtonName BaseListView.footerRemoveButtonName BaseListView.SetViewController(CollectionViewController) BaseListView.showBoundCollectionSize BaseListView.showFoldoutHeader BaseListView.headerTitle BaseListView.makeHeader BaseListView.makeFooter BaseListView.showAddRemoveFooter BaseListView.bindingSourceSelectionMode BaseListView.viewController BaseListView.reorderMode BaseListView.makeNoneElement BaseListView.allowAdd BaseListView.overridingAddButtonBehavior BaseListView.onAdd BaseListView.allowRemove BaseListView.onRemove BaseListView.itemsAdded BaseListView.itemsRemoved BaseVerticalCollectionView.borderUssClassName BaseVerticalCollectionView.dragHoverBarUssClassName BaseVerticalCollectionView.dragHoverMarkerUssClassName BaseVerticalCollectionView.itemDragHoverUssClassName BaseVerticalCollectionView.itemSelectedVariantUssClassName BaseVerticalCollectionView.itemAlternativeBackgroundUssClassName BaseVerticalCollectionView.listScrollViewUssClassName BaseVerticalCollectionView.GetRootElementForId(int) BaseVerticalCollectionView.GetRootElementForIndex(int) BaseVerticalCollectionView.RefreshItem(int) BaseVerticalCollectionView.RefreshItems() BaseVerticalCollectionView.Refresh() BaseVerticalCollectionView.Rebuild() BaseVerticalCollectionView.ScrollTo(VisualElement) BaseVerticalCollectionView.ScrollToItem(int) BaseVerticalCollectionView.ScrollToId(int) BaseVerticalCollectionView.ScrollToItemById(int) BaseVerticalCollectionView.OnKeyDown(KeyDownEvent) BaseVerticalCollectionView.AddToSelection(int) BaseVerticalCollectionView.RemoveFromSelection(int) BaseVerticalCollectionView.SetSelection(int) BaseVerticalCollectionView.SetSelection(IEnumerable<int>) BaseVerticalCollectionView.SetSelectionWithoutNotify(IEnumerable<int>) BaseVerticalCollectionView.ClearSelection() BaseVerticalCollectionView.HandleEventBubbleUp(EventBase) BaseVerticalCollectionView.ExecuteDefaultAction(EventBase) BaseVerticalCollectionView.itemsSource BaseVerticalCollectionView.contentContainer BaseVerticalCollectionView.selectionType BaseVerticalCollectionView.selectedItem BaseVerticalCollectionView.selectedItems BaseVerticalCollectionView.selectedIndex BaseVerticalCollectionView.selectedIndices BaseVerticalCollectionView.selectedIds BaseVerticalCollectionView.resolvedItemHeight BaseVerticalCollectionView.showBorder BaseVerticalCollectionView.reorderable BaseVerticalCollectionView.horizontalScrollingEnabled BaseVerticalCollectionView.showAlternatingRowBackgrounds BaseVerticalCollectionView.virtualizationMethod BaseVerticalCollectionView.itemHeight BaseVerticalCollectionView.fixedItemHeight BaseVerticalCollectionView.onItemsChosen BaseVerticalCollectionView.itemsChosen BaseVerticalCollectionView.onSelectionChange BaseVerticalCollectionView.selectionChanged BaseVerticalCollectionView.onSelectedIndicesChange BaseVerticalCollectionView.selectedIndicesChanged BaseVerticalCollectionView.itemIndexChanged BaseVerticalCollectionView.itemsSourceChanged BaseVerticalCollectionView.canStartDrag BaseVerticalCollectionView.setupDragAndDrop BaseVerticalCollectionView.dragAndDropUpdate BaseVerticalCollectionView.handleDrop BindableElement.binding BindableElement.bindingPath VisualElement.disabledUssClassName VisualElement.Focus() VisualElement.SendEvent(EventBase) VisualElement.SetEnabledFromHierarchy(bool) VisualElement.SetEnabled(bool) VisualElement.MarkDirtyRepaint() VisualElement.ContainsPoint(Vector2) VisualElement.Overlaps(Rect) VisualElement.DoMeasure(float, VisualElement.MeasureMode, float, VisualElement.MeasureMode) VisualElement.ToString() VisualElement.GetClasses() VisualElement.ClearClassList() VisualElement.AddToClassList(string) VisualElement.RemoveFromClassList(string) VisualElement.ToggleInClassList(string) VisualElement.EnableInClassList(string, bool) VisualElement.ClassListContains(string) VisualElement.FindAncestorUserData() VisualElement.SetBinding(BindingId, Binding) VisualElement.GetBinding(BindingId) VisualElement.TryGetBinding(BindingId, out Binding) VisualElement.GetBindingInfos() VisualElement.HasBinding(BindingId) VisualElement.ClearBinding(BindingId) VisualElement.ClearBindings() VisualElement.GetHierarchicalDataSourceContext() VisualElement.GetDataSourceContext(BindingId) VisualElement.TryGetDataSourceContext(BindingId, out DataSourceContext) VisualElement.TryGetLastBindingToUIResult(in BindingId, out BindingResult) VisualElement.TryGetLastBindingToSourceResult(in BindingId, out BindingResult) VisualElement.Add(VisualElement) VisualElement.Insert(int, VisualElement) VisualElement.Remove(VisualElement) VisualElement.RemoveAt(int) VisualElement.Clear() VisualElement.ElementAt(int) VisualElement.IndexOf(VisualElement) VisualElement.Children() VisualElement.Sort(Comparison<VisualElement>) VisualElement.BringToFront() VisualElement.SendToBack() VisualElement.PlaceBehind(VisualElement) VisualElement.PlaceInFront(VisualElement) VisualElement.RemoveFromHierarchy() VisualElement.GetFirstOfType<T>() VisualElement.GetFirstAncestorOfType<T>() VisualElement.Contains(VisualElement) VisualElement.FindCommonAncestor(VisualElement) VisualElement.viewDataKey VisualElement.userData VisualElement.canGrabFocus VisualElement.focusController VisualElement.disablePlayModeTint VisualElement.usageHints VisualElement.transform VisualElement.scaledPixelsPerPoint VisualElement.layout VisualElement.contentRect VisualElement.paddingRect VisualElement.worldBound VisualElement.localBound VisualElement.worldTransform VisualElement.pickingMode VisualElement.name VisualElement.enabledInHierarchy VisualElement.enabledSelf VisualElement.languageDirection VisualElement.visible VisualElement.generateVisualContent VisualElement.dataSource VisualElement.dataSourcePath VisualElement.dataSourceType VisualElement.experimental VisualElement.hierarchy VisualElement.cacheAsBitmap VisualElement.parent VisualElement.panel VisualElement.visualTreeAssetSource VisualElement.this[int] VisualElement.childCount VisualElement.schedule VisualElement.style VisualElement.resolvedStyle VisualElement.customStyle VisualElement.styleSheets VisualElement.tooltip Focusable.Blur() Focusable.focusable Focusable.tabIndex Focusable.delegatesFocus CallbackEventHandler.RegisterCallback<TEventType>(EventCallback<TEventType>, TrickleDown) CallbackEventHandler.RegisterCallbackOnce<TEventType>(EventCallback<TEventType>, TrickleDown) CallbackEventHandler.RegisterCallback<TEventType, TUserArgsType>(EventCallback<TEventType, TUserArgsType>, TUserArgsType, TrickleDown) CallbackEventHandler.RegisterCallbackOnce<TEventType, TUserArgsType>(EventCallback<TEventType, TUserArgsType>, TUserArgsType, TrickleDown) CallbackEventHandler.UnregisterCallback<TEventType>(EventCallback<TEventType>, TrickleDown) CallbackEventHandler.UnregisterCallback<TEventType, TUserArgsType>(EventCallback<TEventType, TUserArgsType>, TrickleDown) CallbackEventHandler.HasTrickleDownHandlers() CallbackEventHandler.HasBubbleUpHandlers() CallbackEventHandler.ExecuteDefaultActionAtTarget(EventBase) CallbackEventHandler.HandleEventTrickleDown(EventBase) CallbackEventHandler.NotifyPropertyChanged(in BindingId) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Fwt.UIToolkit Assembly: fwt.uitoolkit.dll Syntax [UxmlElement] public class UIListView : ListView, IEventHandler, IResolvedStyle, ITransform, ITransitionAnimations, IExperimentalFeatures, IVisualElementScheduler, IBindable, ISerializationCallbackReceiver Constructors UIListView() Declaration public UIListView() Fields OnSelectionChange Declaration public object OnSelectionChange Field Value Type Description object Implements UnityEngine.UIElements.IEventHandler UnityEngine.UIElements.IResolvedStyle UnityEngine.UIElements.ITransform UnityEngine.UIElements.Experimental.ITransitionAnimations UnityEngine.UIElements.IExperimentalFeatures UnityEngine.UIElements.IVisualElementScheduler UnityEngine.UIElements.IBindable UnityEngine.ISerializationCallbackReceiver Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.UIToolkit.ValueEditors.ValueEditorDataSource-1.html": {
    "href": "api/Fwt.UIToolkit.ValueEditors.ValueEditorDataSource-1.html",
    "title": "Class ValueEditorDataSource<TValue> | Hex Terrains",
    "summary": "Class ValueEditorDataSource<TValue> Inheritance object UIDataSource ValueEditorDataSource ValueEditorDataSource<TValue> ValueEditorDataSourceMinMax<TValue> Implements IDataSourceViewHashProvider ICommitChanges Inherited Members ValueEditorDataSource.Name ValueEditorDataSource.ValueChanged ValueEditorDataSource.IsClampValue ValueEditorDataSource.IsVisible ValueEditorDataSource.DisplayStyle ValueEditorDataSource.CommitChanges() ValueEditorDataSource.ClampValue<TValue>(TValue, TValue, TValue) ValueEditorDataSource.TryGetValue<TValue>(out TValue) ValueEditorDataSource.GetValueOrDefault<TValue>(TValue) ValueEditorDataSource.SetValue<TValue>(TValue) UIDataSource.Version UIDataSource.MarkDirty() UIDataSource.GetViewHashCode() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.UIToolkit.ValueEditors Assembly: fwt.uitoolkit.dll Syntax [Serializable] public class ValueEditorDataSource<TValue> : ValueEditorDataSource, IDataSourceViewHashProvider, ICommitChanges Type Parameters Name Description TValue Fields _value Declaration [SerializeField] protected TValue _value Field Value Type Description TValue Properties Value Declaration [CreateProperty] public TValue Value { get; set; } Property Value Type Description TValue ValueType Declaration public override Type ValueType { get; } Property Value Type Description Type Overrides ValueEditorDataSource.ValueType Implements UnityEngine.UIElements.IDataSourceViewHashProvider ICommitChanges Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.UIToolkit.ValueEditors.ValueEditorDataSource.html": {
    "href": "api/Fwt.UIToolkit.ValueEditors.ValueEditorDataSource.html",
    "title": "Class ValueEditorDataSource | Hex Terrains",
    "summary": "Class ValueEditorDataSource Inheritance object UIDataSource ValueEditorDataSource ValueEditorDataSource<TValue> Implements IDataSourceViewHashProvider ICommitChanges Inherited Members UIDataSource.Version UIDataSource.MarkDirty() UIDataSource.GetViewHashCode() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.UIToolkit.ValueEditors Assembly: fwt.uitoolkit.dll Syntax [Serializable] public abstract class ValueEditorDataSource : UIDataSource, IDataSourceViewHashProvider, ICommitChanges Fields IsClampValue Declaration public bool IsClampValue Field Value Type Description bool IsVisible Declaration public bool IsVisible Field Value Type Description bool Name Declaration public string Name Field Value Type Description string ValueChanged Declaration public Action ValueChanged Field Value Type Description Action Properties DisplayStyle Declaration [CreateProperty] public DisplayStyle DisplayStyle { get; } Property Value Type Description DisplayStyle ValueType Declaration public abstract Type ValueType { get; } Property Value Type Description Type Methods ClampValue<TValue>(TValue, TValue, TValue) Declaration public static TValue ClampValue<TValue>(TValue value, TValue minValue, TValue maxValue) Parameters Type Name Description TValue value TValue minValue TValue maxValue Returns Type Description TValue Type Parameters Name Description TValue CommitChanges() Declaration public override void CommitChanges() Overrides UIDataSource.CommitChanges() GetValueOrDefault<TValue>(TValue) Declaration public virtual TValue GetValueOrDefault<TValue>(TValue defaultValue = default) Parameters Type Name Description TValue defaultValue Returns Type Description TValue Type Parameters Name Description TValue SetValue<TValue>(TValue) Declaration public virtual bool SetValue<TValue>(TValue value) Parameters Type Name Description TValue value Returns Type Description bool Type Parameters Name Description TValue TryGetValue<TValue>(out TValue) Declaration public virtual bool TryGetValue<TValue>(out TValue value) Parameters Type Name Description TValue value Returns Type Description bool Type Parameters Name Description TValue Implements UnityEngine.UIElements.IDataSourceViewHashProvider ICommitChanges Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.UIToolkit.ValueEditors.ValueEditorDataSourceMinMax-1.html": {
    "href": "api/Fwt.UIToolkit.ValueEditors.ValueEditorDataSourceMinMax-1.html",
    "title": "Class ValueEditorDataSourceMinMax<TValue> | Hex Terrains",
    "summary": "Class ValueEditorDataSourceMinMax<TValue> Inheritance object UIDataSource ValueEditorDataSource ValueEditorDataSource<TValue> ValueEditorDataSourceMinMax<TValue> UserToolParameterDataSource<TValue> Implements IDataSourceViewHashProvider ICommitChanges Inherited Members ValueEditorDataSource<TValue>._value ValueEditorDataSource<TValue>.Value ValueEditorDataSource<TValue>.ValueType ValueEditorDataSource.Name ValueEditorDataSource.ValueChanged ValueEditorDataSource.IsClampValue ValueEditorDataSource.IsVisible ValueEditorDataSource.DisplayStyle ValueEditorDataSource.ClampValue<TValue>(TValue, TValue, TValue) ValueEditorDataSource.TryGetValue<TValue>(out TValue) ValueEditorDataSource.GetValueOrDefault<TValue>(TValue) ValueEditorDataSource.SetValue<TValue>(TValue) UIDataSource.Version UIDataSource.MarkDirty() UIDataSource.GetViewHashCode() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.UIToolkit.ValueEditors Assembly: fwt.uitoolkit.dll Syntax [Serializable] public class ValueEditorDataSourceMinMax<TValue> : ValueEditorDataSource<TValue>, IDataSourceViewHashProvider, ICommitChanges Type Parameters Name Description TValue Fields MaxValue Declaration public TValue MaxValue Field Value Type Description TValue MinValue Declaration public TValue MinValue Field Value Type Description TValue Methods ClampValue(TValue, TValue, TValue) Declaration public virtual TValue ClampValue(TValue value, TValue minValue, TValue maxValue) Parameters Type Name Description TValue value TValue minValue TValue maxValue Returns Type Description TValue CommitChanges() Declaration public override void CommitChanges() Overrides ValueEditorDataSource.CommitChanges() Implements UnityEngine.UIElements.IDataSourceViewHashProvider ICommitChanges Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.UIToolkit.ValueEditors.ValueEditorTemplateSelectorConfig.html": {
    "href": "api/Fwt.UIToolkit.ValueEditors.ValueEditorTemplateSelectorConfig.html",
    "title": "Class ValueEditorTemplateSelectorConfig | Hex Terrains",
    "summary": "Class ValueEditorTemplateSelectorConfig Inheritance object TemplateSelectorConfig TemplateSelectorConfigByType ValueEditorTemplateSelectorConfig Inherited Members TemplateSelectorConfigByType.IsDirty TemplateSelectorConfigByType.Configs TemplateSelectorConfigByType.GetTemplateForType(Type) TemplateSelectorConfigByType.UpdateCacheIfNeeded() TemplateSelectorConfigByType.UpdateCache() TemplateSelectorConfigByType.MarkDirty() TemplateSelectorConfig.DefaultTemplate object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Fwt.UIToolkit.ValueEditors Assembly: fwt.uitoolkit.dll Syntax [Serializable] public class ValueEditorTemplateSelectorConfig : TemplateSelectorConfigByType Methods GetTemplateForData<TData>(TData) Declaration public override VisualTreeAsset GetTemplateForData<TData>(TData data) Parameters Type Name Description TData data Returns Type Description VisualTreeAsset Type Parameters Name Description TData Overrides TemplateSelectorConfigByType.GetTemplateForData<TData>(TData) Extension Methods HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.UIToolkit.ValueEditors.ValueEditorTemplateSelectorConfigAsset.html": {
    "href": "api/Fwt.UIToolkit.ValueEditors.ValueEditorTemplateSelectorConfigAsset.html",
    "title": "Class ValueEditorTemplateSelectorConfigAsset | Hex Terrains",
    "summary": "Class ValueEditorTemplateSelectorConfigAsset Inheritance object Object ScriptableObject TemplateSelectorConfigAsset ValueEditorTemplateSelectorConfigAsset Inherited Members ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion, CancellationToken) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, CancellationToken) Object.InstantiateAsync<T>(T, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion, InstantiateParameters, CancellationToken) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>, InstantiateParameters, CancellationToken) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate<T>(T, InstantiateParameters) Object.Instantiate<T>(T, Vector3, Quaternion, InstantiateParameters) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Fwt.UIToolkit.ValueEditors Assembly: fwt.uitoolkit.dll Syntax [CreateAssetMenu(menuName = \"Fwt/Incorporations/Value Editor Data Template Selector Config\")] public class ValueEditorTemplateSelectorConfigAsset : TemplateSelectorConfigAsset Fields Config Declaration public ValueEditorTemplateSelectorConfig Config Field Value Type Description ValueEditorTemplateSelectorConfig Properties TemplateSelector Declaration public override TemplateSelectorConfig TemplateSelector { get; } Property Value Type Description TemplateSelectorConfig Overrides TemplateSelectorConfigAsset.TemplateSelector Extension Methods Extensions_UnityObject.SmartDestroy<TObject>(TObject) Extensions_UnityObject.SmartDisableGameObject<TObject>(TObject) Extensions_UnityObject.SmartEnableGameObject<TObject>(TObject) HashExtensions.GetHashCode_RefType<TValue>(TValue, int) Extensions_UnityObject.SmartDestroy(object) Extensions_UnityObject.SmartGetComponent<TComponent>(object) Extensions_UnityObject.SmartGetGameGameObject(object)"
  },
  "api/Fwt.UIToolkit.ValueEditors.html": {
    "href": "api/Fwt.UIToolkit.ValueEditors.html",
    "title": "Namespace Fwt.UIToolkit.ValueEditors | Hex Terrains",
    "summary": "Namespace Fwt.UIToolkit.ValueEditors Classes ValueEditorDataSource ValueEditorDataSourceMinMax<TValue> ValueEditorDataSource<TValue> ValueEditorTemplateSelectorConfig ValueEditorTemplateSelectorConfigAsset"
  },
  "api/Fwt.UIToolkit.html": {
    "href": "api/Fwt.UIToolkit.html",
    "title": "Namespace Fwt.UIToolkit | Hex Terrains",
    "summary": "Namespace Fwt.UIToolkit Classes ClickAreaElement ClickAreaElement.UxmlSerializedData DataConverters SimpleListView SimpleListView.UxmlSerializedData UIButton UIButton.UxmlSerializedData UIListView UIListView.UxmlSerializedData"
  }
}